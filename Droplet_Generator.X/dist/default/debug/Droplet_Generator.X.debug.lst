

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri May 15 17:06:59 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   103                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   114                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   115  0000                     
   116                           ; Version 2.05
   117                           ; Generated 20/12/2018 GMT
   118                           ; 
   119                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   120                           ; All rights reserved.
   121                           ; 
   122                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   123                           ; 
   124                           ; Redistribution and use in source and binary forms, with or without modification, are
   125                           ; permitted provided that the following conditions are met:
   126                           ; 
   127                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   128                           ;        conditions and the following disclaimer.
   129                           ; 
   130                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   131                           ;        of conditions and the following disclaimer in the documentation and/or other
   132                           ;        materials provided with the distribution.
   133                           ; 
   134                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   135                           ;        software without specific prior written permission.
   136                           ; 
   137                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   138                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   139                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   140                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   141                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   142                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   143                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   144                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   145                           ; 
   146                           ; 
   147                           ; Code-generator required, PIC18F25K40 Definitions
   148                           ; 
   149                           ; SFR Addresses
   150  0000                     
   151                           	psect	idataCOMRAM
   152  005A9A                     __pidataCOMRAM:
   153                           	opt callstack 0
   154                           
   155                           ;initializer for _cycle
   156  005A9A  0002               	dw	2
   157  005A9C  0000               	dw	0
   158                           
   159                           ;initializer for _temp_cycle
   160  005A9E  0002               	dw	2
   161  005AA0  0000               	dw	0
   162                           
   163                           ;initializer for _packages
   164  005AA2  0001               	dw	1
   165                           
   166                           ;initializer for _temp_packages
   167  005AA4  0001               	dw	1
   168                           
   169                           	psect	idataBANK0
   170  005B06                     __pidataBANK0:
   171                           	opt callstack 0
   172                           
   173                           ;initializer for _frequency
   174  005B06  C6C0               	dw	50880
   175  005B08  002D               	dw	45
   176                           
   177                           ;initializer for _state
   178  005B0A  0001               	dw	1
   179                           
   180                           	psect	mediumconst
   181  007D80                     __pmediumconst:
   182                           	opt callstack 0
   183  007D80  00                 	db	0
   184  007D81                     _dp_l:
   185                           	opt callstack 0
   186  007D81  0000               	dw	0
   187  007D83  0000               	dw	0
   188  007D85  CFDC               	dw	53212
   189  007D87  35D1               	dw	13777
   190  007D89                     __end_of_dp_l:
   191                           	opt callstack 0
   192  007D89                     _dp_h:
   193                           	opt callstack 0
   194  007D89  0000               	dw	0
   195  007D8B  0000               	dw	0
   196  007D8D  C000               	dw	49152
   197  007D8F  3F15               	dw	16149
   198  007D91                     __end_of_dp_h:
   199                           	opt callstack 0
   200  007D91  4260               	dw	16992
   201  007D93  0DA2               	dw	3490
   202  007D95                     __end_ofsqrtf@tiny:
   203                           	opt callstack 0
   204  007D95  A570               	dw	42352
   205  007D97  36EC               	dw	14060
   206  007D99                     __end_of_ivln2_l:
   207                           	opt callstack 0
   208  007D99  AA3B               	dw	43579
   209  007D9B  3FB8               	dw	16312
   210  007D9D                     __end_of_ivln2:
   211                           	opt callstack 0
   212  007D9D  384F               	dw	14415
   213  007D9F  3F76               	dw	16246
   214  007DA1                     __end_of_cp:
   215                           	opt callstack 0
   216  007DA1  AA3C               	dw	43580
   217  007DA3  3338               	dw	13112
   218  007DA5                     __end_of_ovt:
   219                           	opt callstack 0
   220  007DA5  BE8C               	dw	48780
   221  007DA7  35BF               	dw	13759
   222  007DA9                     __end_of_lg2_l:
   223                           	opt callstack 0
   224  007DA9  7200               	dw	29184
   225  007DAB  3F31               	dw	16177
   226  007DAD                     __end_of_lg2_h:
   227                           	opt callstack 0
   228  007DAD  7218               	dw	29208
   229  007DAF  3F31               	dw	16177
   230  007DB1                     __end_of_lg2:
   231                           	opt callstack 0
   232  007DB1  BB4C               	dw	47948
   233  007DB3  3331               	dw	13105
   234  007DB5                     __end_of_P5:
   235                           	opt callstack 0
   236  007DB5  EA0E               	dw	59918
   237  007DB7  B5DD               	dw	46557
   238  007DB9                     __end_of_P4:
   239                           	opt callstack 0
   240  007DB9  B355               	dw	45909
   241  007DBB  388A               	dw	14474
   242  007DBD                     __end_of_P3:
   243                           	opt callstack 0
   244  007DBD  0B61               	dw	2913
   245  007DBF  BB36               	dw	47926
   246  007DC1                     __end_of_P2:
   247                           	opt callstack 0
   248  007DC1  AAAB               	dw	43691
   249  007DC3  3E2A               	dw	15914
   250  007DC5                     __end_of_P1:
   251                           	opt callstack 0
   252  007DC5  F142               	dw	61762
   253  007DC7  3E53               	dw	15955
   254  007DC9                     __end_of_L6:
   255                           	opt callstack 0
   256  007DC9  3255               	dw	12885
   257  007DCB  3E6C               	dw	15980
   258  007DCD                     __end_of_L5:
   259                           	opt callstack 0
   260  007DCD  A305               	dw	41733
   261  007DCF  3E8B               	dw	16011
   262  007DD1                     __end_of_L4:
   263                           	opt callstack 0
   264  007DD1  AAAB               	dw	43691
   265  007DD3  3EAA               	dw	16042
   266  007DD5                     __end_of_L3:
   267                           	opt callstack 0
   268  007DD5  6DB7               	dw	28087
   269  007DD7  3EDB               	dw	16091
   270  007DD9                     __end_of_L2:
   271                           	opt callstack 0
   272  007DD9  999A               	dw	39322
   273  007DDB  3F19               	dw	16153
   274  007DDD                     __end_of_L1:
   275                           	opt callstack 0
   276  007DDD  4260               	dw	16992
   277  007DDF  0DA2               	dw	3490
   278  007DE1                     __end_of_tiny:
   279                           	opt callstack 0
   280  007DE1  F2CA               	dw	62154
   281  007DE3  7149               	dw	29001
   282  007DE5                     __end_of_huge:
   283                           	opt callstack 0
   284  007DE5  0000               	dw	0
   285  007DE7  4B80               	dw	19328
   286  007DE9                     __end_of_two24:
   287                           	opt callstack 0
   288  007DE9  02                 	db	2
   289  007DEA  40                 	db	64
   290  007DEB  01                 	db	1
   291  007DEC  00                 	db	0
   292  007DED                     __end_of_spi1_configuration:
   293                           	opt callstack 0
   294  007DED                     _bp:
   295                           	opt callstack 0
   296  007DED  0000               	dw	0
   297  007DEF  3F80               	dw	16256
   298  007DF1  0000               	dw	0
   299  007DF3  3FC0               	dw	16320
   300  007DF5                     __end_of_bp:
   301                           	opt callstack 0
   302  007DF5  AA00               	dw	43520
   303  007DF7  3FB8               	dw	16312
   304  007DF9                     __end_of_ivln2_h:
   305                           	opt callstack 0
   306  007DF9  23C6               	dw	9158
   307  007DFB  B8F6               	dw	47350
   308  007DFD                     __end_of_cp_l:
   309                           	opt callstack 0
   310  007DFD  4000               	dw	16384
   311  007DFF  3F76               	dw	16246
   312  007E01                     __end_of_cp_h:
   313                           	opt callstack 0
   314  007E01                     STR_12:
   315  007E01  4E                 	db	78	;'N'
   316  007E02  75                 	db	117	;'u'
   317  007E03  6D                 	db	109	;'m'
   318  007E04  62                 	db	98	;'b'
   319  007E05  65                 	db	101	;'e'
   320  007E06  72                 	db	114	;'r'
   321  007E07  20                 	db	32
   322  007E08  6F                 	db	111	;'o'
   323  007E09  66                 	db	102	;'f'
   324  007E0A  20                 	db	32
   325  007E0B  50                 	db	80	;'P'
   326  007E0C  61                 	db	97	;'a'
   327  007E0D  63                 	db	99	;'c'
   328  007E0E  6B                 	db	107	;'k'
   329  007E0F  61                 	db	97	;'a'
   330  007E10  67                 	db	103	;'g'
   331  007E11  65                 	db	101	;'e'
   332  007E12  73                 	db	115	;'s'
   333  007E13  20                 	db	32
   334  007E14  63                 	db	99	;'c'
   335  007E15  68                 	db	104	;'h'
   336  007E16  61                 	db	97	;'a'
   337  007E17  6E                 	db	110	;'n'
   338  007E18  67                 	db	103	;'g'
   339  007E19  65                 	db	101	;'e'
   340  007E1A  64                 	db	100	;'d'
   341  007E1B  20                 	db	32
   342  007E1C  74                 	db	116	;'t'
   343  007E1D  6F                 	db	111	;'o'
   344  007E1E  20                 	db	32
   345  007E1F  25                 	db	37
   346  007E20  75                 	db	117	;'u'
   347  007E21  20                 	db	32
   348  007E22  50                 	db	80	;'P'
   349  007E23  61                 	db	97	;'a'
   350  007E24  63                 	db	99	;'c'
   351  007E25  6B                 	db	107	;'k'
   352  007E26  61                 	db	97	;'a'
   353  007E27  67                 	db	103	;'g'
   354  007E28  65                 	db	101	;'e'
   355  007E29  73                 	db	115	;'s'
   356  007E2A  00                 	db	0
   357  007E2B                     STR_1:
   358  007E2B  55                 	db	85	;'U'
   359  007E2C  6E                 	db	110	;'n'
   360  007E2D  65                 	db	101	;'e'
   361  007E2E  78                 	db	120	;'x'
   362  007E2F  70                 	db	112	;'p'
   363  007E30  65                 	db	101	;'e'
   364  007E31  63                 	db	99	;'c'
   365  007E32  74                 	db	116	;'t'
   366  007E33  65                 	db	101	;'e'
   367  007E34  64                 	db	100	;'d'
   368  007E35  20                 	db	32
   369  007E36  43                 	db	67	;'C'
   370  007E37  68                 	db	104	;'h'
   371  007E38  61                 	db	97	;'a'
   372  007E39  72                 	db	114	;'r'
   373  007E3A  61                 	db	97	;'a'
   374  007E3B  63                 	db	99	;'c'
   375  007E3C  74                 	db	116	;'t'
   376  007E3D  65                 	db	101	;'e'
   377  007E3E  72                 	db	114	;'r'
   378  007E3F  20                 	db	32
   379  007E40  25                 	db	37
   380  007E41  63                 	db	99	;'c'
   381  007E42  20                 	db	32
   382  007E43  6F                 	db	111	;'o'
   383  007E44  6E                 	db	110	;'n'
   384  007E45  20                 	db	32
   385  007E46  50                 	db	80	;'P'
   386  007E47  6F                 	db	111	;'o'
   387  007E48  73                 	db	115	;'s'
   388  007E49  69                 	db	105	;'i'
   389  007E4A  74                 	db	116	;'t'
   390  007E4B  69                 	db	105	;'i'
   391  007E4C  6F                 	db	111	;'o'
   392  007E4D  6E                 	db	110	;'n'
   393  007E4E  20                 	db	32
   394  007E4F  25                 	db	37
   395  007E50  69                 	db	105	;'i'
   396  007E51  00                 	db	0
   397  007E52                     STR_8:
   398  007E52  45                 	db	69	;'E'
   399  007E53  72                 	db	114	;'r'
   400  007E54  72                 	db	114	;'r'
   401  007E55  6F                 	db	111	;'o'
   402  007E56  72                 	db	114	;'r'
   403  007E57  21                 	db	33
   404  007E58  20                 	db	32
   405  007E59  4D                 	db	77	;'M'
   406  007E5A  61                 	db	97	;'a'
   407  007E5B  78                 	db	120	;'x'
   408  007E5C  69                 	db	105	;'i'
   409  007E5D  6D                 	db	109	;'m'
   410  007E5E  75                 	db	117	;'u'
   411  007E5F  6D                 	db	109	;'m'
   412  007E60  20                 	db	32
   413  007E61  42                 	db	66	;'B'
   414  007E62  72                 	db	114	;'r'
   415  007E63  65                 	db	101	;'e'
   416  007E64  61                 	db	97	;'a'
   417  007E65  6B                 	db	107	;'k'
   418  007E66  20                 	db	32
   419  007E67  44                 	db	68	;'D'
   420  007E68  75                 	db	117	;'u'
   421  007E69  72                 	db	114	;'r'
   422  007E6A  61                 	db	97	;'a'
   423  007E6B  74                 	db	116	;'t'
   424  007E6C  69                 	db	105	;'i'
   425  007E6D  6F                 	db	111	;'o'
   426  007E6E  6E                 	db	110	;'n'
   427  007E6F  20                 	db	32
   428  007E70  32                 	db	50	;'2'
   429  007E71  35                 	db	53	;'5'
   430  007E72  36                 	db	54	;'6'
   431  007E73  20                 	db	32
   432  007E74  6D                 	db	109	;'m'
   433  007E75  73                 	db	115	;'s'
   434  007E76  00                 	db	0
   435  007E77                     STR_2:
   436  007E77  45                 	db	69	;'E'
   437  007E78  72                 	db	114	;'r'
   438  007E79  72                 	db	114	;'r'
   439  007E7A  6F                 	db	111	;'o'
   440  007E7B  72                 	db	114	;'r'
   441  007E7C  21                 	db	33
   442  007E7D  20                 	db	32
   443  007E7E  4D                 	db	77	;'M'
   444  007E7F  69                 	db	105	;'i'
   445  007E80  6E                 	db	110	;'n'
   446  007E81  69                 	db	105	;'i'
   447  007E82  6D                 	db	109	;'m'
   448  007E83  75                 	db	117	;'u'
   449  007E84  6D                 	db	109	;'m'
   450  007E85  20                 	db	32
   451  007E86  46                 	db	70	;'F'
   452  007E87  72                 	db	114	;'r'
   453  007E88  65                 	db	101	;'e'
   454  007E89  71                 	db	113	;'q'
   455  007E8A  75                 	db	117	;'u'
   456  007E8B  65                 	db	101	;'e'
   457  007E8C  6E                 	db	110	;'n'
   458  007E8D  63                 	db	99	;'c'
   459  007E8E  79                 	db	121	;'y'
   460  007E8F  20                 	db	32
   461  007E90  31                 	db	49	;'1'
   462  007E91  30                 	db	48	;'0'
   463  007E92  30                 	db	48	;'0'
   464  007E93  30                 	db	48	;'0'
   465  007E94  30                 	db	48	;'0'
   466  007E95  30                 	db	48	;'0'
   467  007E96  30                 	db	48	;'0'
   468  007E97  20                 	db	32
   469  007E98  48                 	db	72	;'H'
   470  007E99  7A                 	db	122	;'z'
   471  007E9A  00                 	db	0
   472  007E9B                     STR_3:
   473  007E9B  45                 	db	69	;'E'
   474  007E9C  72                 	db	114	;'r'
   475  007E9D  72                 	db	114	;'r'
   476  007E9E  6F                 	db	111	;'o'
   477  007E9F  72                 	db	114	;'r'
   478  007EA0  21                 	db	33
   479  007EA1  20                 	db	32
   480  007EA2  4D                 	db	77	;'M'
   481  007EA3  61                 	db	97	;'a'
   482  007EA4  78                 	db	120	;'x'
   483  007EA5  69                 	db	105	;'i'
   484  007EA6  6D                 	db	109	;'m'
   485  007EA7  75                 	db	117	;'u'
   486  007EA8  6D                 	db	109	;'m'
   487  007EA9  20                 	db	32
   488  007EAA  46                 	db	70	;'F'
   489  007EAB  72                 	db	114	;'r'
   490  007EAC  65                 	db	101	;'e'
   491  007EAD  71                 	db	113	;'q'
   492  007EAE  75                 	db	117	;'u'
   493  007EAF  65                 	db	101	;'e'
   494  007EB0  6E                 	db	110	;'n'
   495  007EB1  63                 	db	99	;'c'
   496  007EB2  79                 	db	121	;'y'
   497  007EB3  20                 	db	32
   498  007EB4  35                 	db	53	;'5'
   499  007EB5  30                 	db	48	;'0'
   500  007EB6  30                 	db	48	;'0'
   501  007EB7  30                 	db	48	;'0'
   502  007EB8  30                 	db	48	;'0'
   503  007EB9  30                 	db	48	;'0'
   504  007EBA  30                 	db	48	;'0'
   505  007EBB  20                 	db	32
   506  007EBC  48                 	db	72	;'H'
   507  007EBD  7A                 	db	122	;'z'
   508  007EBE  00                 	db	0
   509  007EBF                     STR_11:
   510  007EBF  45                 	db	69	;'E'
   511  007EC0  72                 	db	114	;'r'
   512  007EC1  72                 	db	114	;'r'
   513  007EC2  6F                 	db	111	;'o'
   514  007EC3  72                 	db	114	;'r'
   515  007EC4  21                 	db	33
   516  007EC5  20                 	db	32
   517  007EC6  4D                 	db	77	;'M'
   518  007EC7  61                 	db	97	;'a'
   519  007EC8  78                 	db	120	;'x'
   520  007EC9  69                 	db	105	;'i'
   521  007ECA  6D                 	db	109	;'m'
   522  007ECB  75                 	db	117	;'u'
   523  007ECC  6D                 	db	109	;'m'
   524  007ECD  20                 	db	32
   525  007ECE  50                 	db	80	;'P'
   526  007ECF  61                 	db	97	;'a'
   527  007ED0  63                 	db	99	;'c'
   528  007ED1  6B                 	db	107	;'k'
   529  007ED2  61                 	db	97	;'a'
   530  007ED3  67                 	db	103	;'g'
   531  007ED4  65                 	db	101	;'e'
   532  007ED5  73                 	db	115	;'s'
   533  007ED6  20                 	db	32
   534  007ED7  63                 	db	99	;'c'
   535  007ED8  6F                 	db	111	;'o'
   536  007ED9  75                 	db	117	;'u'
   537  007EDA  6E                 	db	110	;'n'
   538  007EDB  74                 	db	116	;'t'
   539  007EDC  20                 	db	32
   540  007EDD  32                 	db	50	;'2'
   541  007EDE  35                 	db	53	;'5'
   542  007EDF  36                 	db	54	;'6'
   543  007EE0  00                 	db	0
   544  007EE1                     STR_6:
   545  007EE1  45                 	db	69	;'E'
   546  007EE2  72                 	db	114	;'r'
   547  007EE3  72                 	db	114	;'r'
   548  007EE4  6F                 	db	111	;'o'
   549  007EE5  72                 	db	114	;'r'
   550  007EE6  21                 	db	33
   551  007EE7  20                 	db	32
   552  007EE8  4D                 	db	77	;'M'
   553  007EE9  61                 	db	97	;'a'
   554  007EEA  78                 	db	120	;'x'
   555  007EEB  69                 	db	105	;'i'
   556  007EEC  6D                 	db	109	;'m'
   557  007EED  75                 	db	117	;'u'
   558  007EEE  6D                 	db	109	;'m'
   559  007EEF  20                 	db	32
   560  007EF0  43                 	db	67	;'C'
   561  007EF1  79                 	db	121	;'y'
   562  007EF2  63                 	db	99	;'c'
   563  007EF3  6C                 	db	108	;'l'
   564  007EF4  65                 	db	101	;'e'
   565  007EF5  20                 	db	32
   566  007EF6  63                 	db	99	;'c'
   567  007EF7  6F                 	db	111	;'o'
   568  007EF8  75                 	db	117	;'u'
   569  007EF9  6E                 	db	110	;'n'
   570  007EFA  74                 	db	116	;'t'
   571  007EFB  20                 	db	32
   572  007EFC  33                 	db	51	;'3'
   573  007EFD  32                 	db	50	;'2'
   574  007EFE  30                 	db	48	;'0'
   575  007EFF  30                 	db	48	;'0'
   576  007F00  30                 	db	48	;'0'
   577  007F01  00                 	db	0
   578  007F02                     STR_10:
   579  007F02  45                 	db	69	;'E'
   580  007F03  72                 	db	114	;'r'
   581  007F04  72                 	db	114	;'r'
   582  007F05  6F                 	db	111	;'o'
   583  007F06  72                 	db	114	;'r'
   584  007F07  21                 	db	33
   585  007F08  20                 	db	32
   586  007F09  4D                 	db	77	;'M'
   587  007F0A  69                 	db	105	;'i'
   588  007F0B  6E                 	db	110	;'n'
   589  007F0C  69                 	db	105	;'i'
   590  007F0D  6D                 	db	109	;'m'
   591  007F0E  75                 	db	117	;'u'
   592  007F0F  6D                 	db	109	;'m'
   593  007F10  20                 	db	32
   594  007F11  50                 	db	80	;'P'
   595  007F12  61                 	db	97	;'a'
   596  007F13  63                 	db	99	;'c'
   597  007F14  6B                 	db	107	;'k'
   598  007F15  61                 	db	97	;'a'
   599  007F16  67                 	db	103	;'g'
   600  007F17  65                 	db	101	;'e'
   601  007F18  73                 	db	115	;'s'
   602  007F19  20                 	db	32
   603  007F1A  63                 	db	99	;'c'
   604  007F1B  6F                 	db	111	;'o'
   605  007F1C  75                 	db	117	;'u'
   606  007F1D  6E                 	db	110	;'n'
   607  007F1E  74                 	db	116	;'t'
   608  007F1F  20                 	db	32
   609  007F20  31                 	db	49	;'1'
   610  007F21  00                 	db	0
   611  007F22                     STR_9:
   612  007F22  42                 	db	66	;'B'
   613  007F23  72                 	db	114	;'r'
   614  007F24  65                 	db	101	;'e'
   615  007F25  61                 	db	97	;'a'
   616  007F26  6B                 	db	107	;'k'
   617  007F27  20                 	db	32
   618  007F28  44                 	db	68	;'D'
   619  007F29  75                 	db	117	;'u'
   620  007F2A  72                 	db	114	;'r'
   621  007F2B  61                 	db	97	;'a'
   622  007F2C  74                 	db	116	;'t'
   623  007F2D  69                 	db	105	;'i'
   624  007F2E  6F                 	db	111	;'o'
   625  007F2F  6E                 	db	110	;'n'
   626  007F30  20                 	db	32
   627  007F31  63                 	db	99	;'c'
   628  007F32  68                 	db	104	;'h'
   629  007F33  61                 	db	97	;'a'
   630  007F34  6E                 	db	110	;'n'
   631  007F35  67                 	db	103	;'g'
   632  007F36  65                 	db	101	;'e'
   633  007F37  64                 	db	100	;'d'
   634  007F38  20                 	db	32
   635  007F39  74                 	db	116	;'t'
   636  007F3A  6F                 	db	111	;'o'
   637  007F3B  20                 	db	32
   638  007F3C  25                 	db	37
   639  007F3D  75                 	db	117	;'u'
   640  007F3E  20                 	db	32
   641  007F3F  6D                 	db	109	;'m'
   642  007F40  73                 	db	115	;'s'
   643  007F41  00                 	db	0
   644  007F42                     STR_5:
   645  007F42  45                 	db	69	;'E'
   646  007F43  72                 	db	114	;'r'
   647  007F44  72                 	db	114	;'r'
   648  007F45  6F                 	db	111	;'o'
   649  007F46  72                 	db	114	;'r'
   650  007F47  21                 	db	33
   651  007F48  20                 	db	32
   652  007F49  4D                 	db	77	;'M'
   653  007F4A  69                 	db	105	;'i'
   654  007F4B  6E                 	db	110	;'n'
   655  007F4C  69                 	db	105	;'i'
   656  007F4D  6D                 	db	109	;'m'
   657  007F4E  75                 	db	117	;'u'
   658  007F4F  6D                 	db	109	;'m'
   659  007F50  20                 	db	32
   660  007F51  43                 	db	67	;'C'
   661  007F52  79                 	db	121	;'y'
   662  007F53  63                 	db	99	;'c'
   663  007F54  6C                 	db	108	;'l'
   664  007F55  65                 	db	101	;'e'
   665  007F56  20                 	db	32
   666  007F57  63                 	db	99	;'c'
   667  007F58  6F                 	db	111	;'o'
   668  007F59  75                 	db	117	;'u'
   669  007F5A  6E                 	db	110	;'n'
   670  007F5B  74                 	db	116	;'t'
   671  007F5C  20                 	db	32
   672  007F5D  32                 	db	50	;'2'
   673  007F5E  00                 	db	0
   674  007F5F                     STR_7:
   675  007F5F  43                 	db	67	;'C'
   676  007F60  79                 	db	121	;'y'
   677  007F61  63                 	db	99	;'c'
   678  007F62  6C                 	db	108	;'l'
   679  007F63  65                 	db	101	;'e'
   680  007F64  20                 	db	32
   681  007F65  63                 	db	99	;'c'
   682  007F66  68                 	db	104	;'h'
   683  007F67  61                 	db	97	;'a'
   684  007F68  6E                 	db	110	;'n'
   685  007F69  67                 	db	103	;'g'
   686  007F6A  65                 	db	101	;'e'
   687  007F6B  64                 	db	100	;'d'
   688  007F6C  20                 	db	32
   689  007F6D  74                 	db	116	;'t'
   690  007F6E  6F                 	db	111	;'o'
   691  007F6F  20                 	db	32
   692  007F70  25                 	db	37
   693  007F71  6C                 	db	108	;'l'
   694  007F72  64                 	db	100	;'d'
   695  007F73  20                 	db	32
   696  007F74  43                 	db	67	;'C'
   697  007F75  79                 	db	121	;'y'
   698  007F76  63                 	db	99	;'c'
   699  007F77  6C                 	db	108	;'l'
   700  007F78  65                 	db	101	;'e'
   701  007F79  73                 	db	115	;'s'
   702  007F7A  00                 	db	0
   703  007F7B                     STR_4:
   704  007F7B  46                 	db	70	;'F'
   705  007F7C  72                 	db	114	;'r'
   706  007F7D  65                 	db	101	;'e'
   707  007F7E  71                 	db	113	;'q'
   708  007F7F  75                 	db	117	;'u'
   709  007F80  65                 	db	101	;'e'
   710  007F81  6E                 	db	110	;'n'
   711  007F82  63                 	db	99	;'c'
   712  007F83  79                 	db	121	;'y'
   713  007F84  20                 	db	32
   714  007F85  63                 	db	99	;'c'
   715  007F86  68                 	db	104	;'h'
   716  007F87  61                 	db	97	;'a'
   717  007F88  6E                 	db	110	;'n'
   718  007F89  67                 	db	103	;'g'
   719  007F8A  65                 	db	101	;'e'
   720  007F8B  64                 	db	100	;'d'
   721  007F8C  20                 	db	32
   722  007F8D  74                 	db	116	;'t'
   723  007F8E  6F                 	db	111	;'o'
   724  007F8F  20                 	db	32
   725  007F90  25                 	db	37
   726  007F91  6C                 	db	108	;'l'
   727  007F92  64                 	db	100	;'d'
   728  007F93  20                 	db	32
   729  007F94  48                 	db	72	;'H'
   730  007F95  7A                 	db	122	;'z'
   731  007F96  00                 	db	0
   732  007F97                     STR_16:
   733  007F97  4E                 	db	78	;'N'
   734  007F98  75                 	db	117	;'u'
   735  007F99  6D                 	db	109	;'m'
   736  007F9A  62                 	db	98	;'b'
   737  007F9B  65                 	db	101	;'e'
   738  007F9C  72                 	db	114	;'r'
   739  007F9D  20                 	db	32
   740  007F9E  6F                 	db	111	;'o'
   741  007F9F  66                 	db	102	;'f'
   742  007FA0  20                 	db	32
   743  007FA1  50                 	db	80	;'P'
   744  007FA2  61                 	db	97	;'a'
   745  007FA3  63                 	db	99	;'c'
   746  007FA4  6B                 	db	107	;'k'
   747  007FA5  61                 	db	97	;'a'
   748  007FA6  67                 	db	103	;'g'
   749  007FA7  65                 	db	101	;'e'
   750  007FA8  73                 	db	115	;'s'
   751  007FA9  20                 	db	32
   752  007FAA  3D                 	db	61	;'='
   753  007FAB  20                 	db	32
   754  007FAC  25                 	db	37
   755  007FAD  75                 	db	117	;'u'
   756  007FAE  00                 	db	0
   757  007FAF                     STR_15:
   758  007FAF  42                 	db	66	;'B'
   759  007FB0  72                 	db	114	;'r'
   760  007FB1  65                 	db	101	;'e'
   761  007FB2  61                 	db	97	;'a'
   762  007FB3  6B                 	db	107	;'k'
   763  007FB4  20                 	db	32
   764  007FB5  44                 	db	68	;'D'
   765  007FB6  75                 	db	117	;'u'
   766  007FB7  72                 	db	114	;'r'
   767  007FB8  61                 	db	97	;'a'
   768  007FB9  74                 	db	116	;'t'
   769  007FBA  69                 	db	105	;'i'
   770  007FBB  6F                 	db	111	;'o'
   771  007FBC  6E                 	db	110	;'n'
   772  007FBD  20                 	db	32
   773  007FBE  3D                 	db	61	;'='
   774  007FBF  20                 	db	32
   775  007FC0  25                 	db	37
   776  007FC1  75                 	db	117	;'u'
   777  007FC2  20                 	db	32
   778  007FC3  6D                 	db	109	;'m'
   779  007FC4  73                 	db	115	;'s'
   780  007FC5  00                 	db	0
   781  007FC6                     STR_17:
   782  007FC6  55                 	db	85	;'U'
   783  007FC7  6E                 	db	110	;'n'
   784  007FC8  6B                 	db	107	;'k'
   785  007FC9  6E                 	db	110	;'n'
   786  007FCA  6F                 	db	111	;'o'
   787  007FCB  77                 	db	119	;'w'
   788  007FCC  6E                 	db	110	;'n'
   789  007FCD  20                 	db	32
   790  007FCE  43                 	db	67	;'C'
   791  007FCF  6F                 	db	111	;'o'
   792  007FD0  6D                 	db	109	;'m'
   793  007FD1  6D                 	db	109	;'m'
   794  007FD2  61                 	db	97	;'a'
   795  007FD3  6E                 	db	110	;'n'
   796  007FD4  64                 	db	100	;'d'
   797  007FD5  20                 	db	32
   798  007FD6  25                 	db	37
   799  007FD7  63                 	db	99	;'c'
   800  007FD8  00                 	db	0
   801  007FD9                     STR_13:
   802  007FD9  46                 	db	70	;'F'
   803  007FDA  72                 	db	114	;'r'
   804  007FDB  65                 	db	101	;'e'
   805  007FDC  71                 	db	113	;'q'
   806  007FDD  75                 	db	117	;'u'
   807  007FDE  65                 	db	101	;'e'
   808  007FDF  6E                 	db	110	;'n'
   809  007FE0  63                 	db	99	;'c'
   810  007FE1  79                 	db	121	;'y'
   811  007FE2  20                 	db	32
   812  007FE3  3D                 	db	61	;'='
   813  007FE4  20                 	db	32
   814  007FE5  25                 	db	37
   815  007FE6  6C                 	db	108	;'l'
   816  007FE7  64                 	db	100	;'d'
   817  007FE8  20                 	db	32
   818  007FE9  48                 	db	72	;'H'
   819  007FEA  7A                 	db	122	;'z'
   820  007FEB  00                 	db	0
   821  007FEC                     STR_14:
   822  007FEC  43                 	db	67	;'C'
   823  007FED  79                 	db	121	;'y'
   824  007FEE  63                 	db	99	;'c'
   825  007FEF  6C                 	db	108	;'l'
   826  007FF0  65                 	db	101	;'e'
   827  007FF1  73                 	db	115	;'s'
   828  007FF2  20                 	db	32
   829  007FF3  3D                 	db	61	;'='
   830  007FF4  20                 	db	32
   831  007FF5  25                 	db	37
   832  007FF6  6C                 	db	108	;'l'
   833  007FF7  64                 	db	100	;'d'
   834  007FF8  00                 	db	0
   835  007FF9                     STR_22:
   836  007FF9  6C                 	db	108	;'l'
   837  007FFA  69                 	db	105	;'i'
   838  007FFB  00                 	db	0
   839  007FFC                     STR_27:
   840  007FFC  6C                 	db	108	;'l'
   841  007FFD  75                 	db	117	;'u'
   842  007FFE  00                 	db	0
   843  0000                     
   844                           ; #config settings
   845  007FFF  00                 	db	0	; dummy byte at the end
   846  0000                     
   847                           	psect	nvBANK0
   848  0000EF                     __pnvBANK0:
   849                           	opt callstack 0
   850  0000EF                     _timer3ReloadVal:
   851                           	opt callstack 0
   852  0000EF                     	ds	2
   853  0000F1                     _timer1ReloadVal:
   854                           	opt callstack 0
   855  0000F1                     	ds	2
   856  0000F3                     _EUSART_TxDefaultInterruptHandler:
   857                           	opt callstack 0
   858  0000F3                     	ds	2
   859  0000F5                     _eusartTxBufferRemaining:
   860                           	opt callstack 0
   861  0000F5                     	ds	1
   862                           
   863                           	psect	nvBANK1
   864  0001F8                     __pnvBANK1:
   865                           	opt callstack 0
   866  0001F8                     _EUSART_ErrorHandler:
   867                           	opt callstack 0
   868  0001F8                     	ds	2
   869  0001FA                     _EUSART_OverrunErrorHandler:
   870                           	opt callstack 0
   871  0001FA                     	ds	2
   872  0001FC                     _EUSART_FramingErrorHandler:
   873                           	opt callstack 0
   874  0001FC                     	ds	2
   875  0001FE                     _EUSART_RxDefaultInterruptHandler:
   876                           	opt callstack 0
   877  0001FE                     	ds	2
   878                           
   879                           	psect	nvBANK2
   880  000232                     __pnvBANK2:
   881                           	opt callstack 0
   882  000232                     _timer0ReloadVal16bit:
   883                           	opt callstack 0
   884  000232                     	ds	2
   885  0000                     _SSP1DATPPS	set	3768
   886  0000                     _T0CKIPPS	set	3748
   887  0000                     _RC2PPS	set	3833
   888  0000                     _RC1PPS	set	3832
   889  0000                     _RB0PPS	set	3823
   890  0000                     _INT0PPS	set	3745
   891  0000                     _SSP1CLKPPS	set	3767
   892  0000                     _RXPPS	set	3765
   893  0000                     _PMD5	set	3814
   894  0000                     _PMD4	set	3813
   895  0000                     _PMD3	set	3812
   896  0000                     _PMD2	set	3811
   897  0000                     _PMD1	set	3810
   898  0000                     _PMD0	set	3809
   899  0000                     _OSCTUNE	set	3805
   900  0000                     _OSCFRQ	set	3806
   901  0000                     _OSCEN	set	3804
   902  0000                     _OSCCON3	set	3802
   903  0000                     _OSCCON1	set	3800
   904  0000                     _PIR3bits	set	3789
   905  0000                     _PIR4bits	set	3790
   906  0000                     _PIE4bits	set	3782
   907  0000                     _PIE0bits	set	3778
   908  0000                     _PIR0bits	set	3786
   909  0000                     _IPR3bits	set	3773
   910  0000                     _IPR4bits	set	3774
   911  0000                     _IPR0bits	set	3770
   912  0000                     _PIE3bits	set	3781
   913  0000                     _INLVLE	set	3882
   914  0000                     _INLVLC	set	3869
   915  0000                     _INLVLB	set	3861
   916  0000                     _INLVLA	set	3853
   917  0000                     _SLRCONC	set	3870
   918  0000                     _SLRCONB	set	3862
   919  0000                     _SLRCONA	set	3854
   920  0000                     _ODCONC	set	3871
   921  0000                     _ODCONB	set	3863
   922  0000                     _ODCONA	set	3855
   923  0000                     _WPUC	set	3872
   924  0000                     _WPUA	set	3856
   925  0000                     _WPUB	set	3864
   926  0000                     _WPUE	set	3885
   927  0000                     _ANSELA	set	3857
   928  0000                     _ANSELB	set	3865
   929  0000                     _ANSELC	set	3873
   930  0000                     _T3CONbits	set	4041
   931  0000                     _T3CON	set	4041
   932  0000                     _TMR3L	set	4039
   933  0000                     _TMR3H	set	4040
   934  0000                     _T3CLK	set	4044
   935  0000                     _T3GATE	set	4043
   936  0000                     _T3GCON	set	4042
   937  0000                     _T1CONbits	set	4047
   938  0000                     _T1CON	set	4047
   939  0000                     _TMR1L	set	4045
   940  0000                     _TMR1H	set	4046
   941  0000                     _T1CLK	set	4050
   942  0000                     _T1GATE	set	4049
   943  0000                     _T1GCON	set	4048
   944  0000                     _SSP1BUF	set	3986
   945  0000                     _PORTCbits	set	3983
   946  0000                     _SSP1CON1bits	set	3990
   947  0000                     _TRISCbits	set	3978
   948  0000                     _SSP1ADD	set	3987
   949  0000                     _SSP1CON1	set	3990
   950  0000                     _SSP1STAT	set	3989
   951  0000                     _T0CON0bits	set	4053
   952  0000                     _PORTAbits	set	3981
   953  0000                     _T0CON0	set	4053
   954  0000                     _TMR0L	set	4051
   955  0000                     _TMR0H	set	4052
   956  0000                     _T0CON1	set	4054
   957  0000                     _TRISC	set	3978
   958  0000                     _TRISB	set	3977
   959  0000                     _TRISA	set	3976
   960  0000                     _LATC	set	3973
   961  0000                     _LATB	set	3972
   962  0000                     _LATA	set	3971
   963  0000                     _PORTBbits	set	3982
   964  0000                     _INTCONbits	set	4082
   965  0000                     _RC1REG	set	3993
   966  0000                     _RC1STAbits	set	3997
   967  0000                     _TX1REG	set	3994
   968  0000                     _SP1BRGH	set	3996
   969  0000                     _SP1BRGL	set	3995
   970  0000                     _TX1STA	set	3998
   971  0000                     _RC1STA	set	3997
   972  0000                     _BAUD1CON	set	3999
   973                           
   974                           	psect	cinit
   975  005162                     __pcinit:
   976                           	opt callstack 0
   977  005162                     start_initialization:
   978                           	opt callstack 0
   979  005162                     __initialization:
   980                           	opt callstack 0
   981                           
   982                           ; Initialize objects allocated to BANK0 (6 bytes)
   983                           ; load TBLPTR registers with __pidataBANK0
   984  005162  0E06               	movlw	low __pidataBANK0
   985  005164  6EF6               	movwf	tblptrl,c
   986  005166  0E5B               	movlw	high __pidataBANK0
   987  005168  6EF7               	movwf	tblptrh,c
   988  00516A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   989  00516C  6EF8               	movwf	tblptru,c
   990  00516E  EE00  F0F6         	lfsr	0,__pdataBANK0
   991  005172  EE10 F006          	lfsr	1,6
   992  005176                     copy_data0:
   993  005176  0009               	tblrd		*+
   994  005178  CFF5 FFEE          	movff	tablat,postinc0
   995  00517C  50E5               	movf	postdec1,w,c
   996  00517E  50E1               	movf	fsr1l,w,c
   997  005180  E1FA               	bnz	copy_data0
   998                           
   999                           ; Initialize objects allocated to COMRAM (12 bytes)
  1000                           ; load TBLPTR registers with __pidataCOMRAM
  1001  005182  0E9A               	movlw	low __pidataCOMRAM
  1002  005184  6EF6               	movwf	tblptrl,c
  1003  005186  0E5A               	movlw	high __pidataCOMRAM
  1004  005188  6EF7               	movwf	tblptrh,c
  1005  00518A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1006  00518C  6EF8               	movwf	tblptru,c
  1007  00518E  EE00  F048         	lfsr	0,__pdataCOMRAM
  1008  005192  EE10 F00C          	lfsr	1,12
  1009  005196                     copy_data1:
  1010  005196  0009               	tblrd		*+
  1011  005198  CFF5 FFEE          	movff	tablat,postinc0
  1012  00519C  50E5               	movf	postdec1,w,c
  1013  00519E  50E1               	movf	fsr1l,w,c
  1014  0051A0  E1FA               	bnz	copy_data1
  1015                           
  1016                           ; Clear objects allocated to BANK2 (50 bytes)
  1017  0051A2  EE02  F000         	lfsr	0,__pbssBANK2
  1018  0051A6  0E32               	movlw	50
  1019  0051A8                     clear_0:
  1020  0051A8  6AEE               	clrf	postinc0,c
  1021  0051AA  06E8               	decf	wreg,f,c
  1022  0051AC  E1FD               	bnz	clear_0
  1023                           
  1024                           ; Clear objects allocated to BANK1 (60 bytes)
  1025  0051AE  EE01  F0BC         	lfsr	0,__pbssBANK1
  1026  0051B2  0E3C               	movlw	60
  1027  0051B4                     clear_1:
  1028  0051B4  6AEE               	clrf	postinc0,c
  1029  0051B6  06E8               	decf	wreg,f,c
  1030  0051B8  E1FD               	bnz	clear_1
  1031                           
  1032                           ; Clear objects allocated to BANK0 (26 bytes)
  1033  0051BA  EE00  F0D5         	lfsr	0,__pbssBANK0
  1034  0051BE  0E1A               	movlw	26
  1035  0051C0                     clear_2:
  1036  0051C0  6AEE               	clrf	postinc0,c
  1037  0051C2  06E8               	decf	wreg,f,c
  1038  0051C4  E1FD               	bnz	clear_2
  1039                           
  1040                           ; Clear objects allocated to COMRAM (12 bytes)
  1041  0051C6  EE00  F03C         	lfsr	0,__pbssCOMRAM
  1042  0051CA  0E0C               	movlw	12
  1043  0051CC                     clear_3:
  1044  0051CC  6AEE               	clrf	postinc0,c
  1045  0051CE  06E8               	decf	wreg,f,c
  1046  0051D0  E1FD               	bnz	clear_3
  1047  0051D2                     end_of_initialization:
  1048                           	opt callstack 0
  1049  0051D2                     __end_of__initialization:
  1050                           	opt callstack 0
  1051  0051D2  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1052  0051D4  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1053  0051D6  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1054  0051D8  6EF8               	movwf	tblptru,c
  1055  0051DA  0100               	movlb	0
  1056  0051DC  EF68  F029         	goto	_main	;jump to C main() function
  1057                           
  1058                           	psect	bssCOMRAM
  1059  00003C                     __pbssCOMRAM:
  1060                           	opt callstack 0
  1061  00003C                     _prec:
  1062                           	opt callstack 0
  1063  00003C                     	ds	2
  1064  00003E                     _flags:
  1065                           	opt callstack 0
  1066  00003E                     	ds	2
  1067  000040                     _break_duration:
  1068                           	opt callstack 0
  1069  000040                     	ds	2
  1070  000042                     _temp_break_duration:
  1071                           	opt callstack 0
  1072  000042                     	ds	2
  1073  000044                     _eusartRxHead:
  1074                           	opt callstack 0
  1075  000044                     	ds	1
  1076  000045                     _eusartTxTail:
  1077                           	opt callstack 0
  1078  000045                     	ds	1
  1079  000046                     _eusartTxHead:
  1080                           	opt callstack 0
  1081  000046                     	ds	1
  1082  000047                     _sec:
  1083                           	opt callstack 0
  1084  000047                     	ds	1
  1085                           
  1086                           	psect	dataCOMRAM
  1087  000048                     __pdataCOMRAM:
  1088                           	opt callstack 0
  1089  000048                     _cycle:
  1090                           	opt callstack 0
  1091  000048                     	ds	4
  1092  00004C                     _temp_cycle:
  1093                           	opt callstack 0
  1094  00004C                     	ds	4
  1095  000050                     _packages:
  1096                           	opt callstack 0
  1097  000050                     	ds	2
  1098  000052                     _temp_packages:
  1099                           	opt callstack 0
  1100  000052                     	ds	2
  1101                           
  1102                           	psect	bssBANK0
  1103  0000D5                     __pbssBANK0:
  1104                           	opt callstack 0
  1105  0000D5                     _eusartRxStatusBuffer:
  1106                           	opt callstack 0
  1107  0000D5                     	ds	8
  1108  0000DD                     fabsf@F463:
  1109                           	opt callstack 0
  1110  0000DD                     	ds	4
  1111  0000E1                     _temp_frequency:
  1112                           	opt callstack 0
  1113  0000E1                     	ds	4
  1114  0000E5                     _errno:
  1115                           	opt callstack 0
  1116  0000E5                     	ds	2
  1117  0000E7                     _nout:
  1118                           	opt callstack 0
  1119  0000E7                     	ds	2
  1120  0000E9                     _width:
  1121                           	opt callstack 0
  1122  0000E9                     	ds	2
  1123  0000EB                     _eusartRxLastError:
  1124                           	opt callstack 0
  1125  0000EB                     	ds	1
  1126  0000EC                     _eusartRxCount:
  1127                           	opt callstack 0
  1128  0000EC                     	ds	1
  1129  0000ED                     _eusartRxTail:
  1130                           	opt callstack 0
  1131  0000ED                     	ds	1
  1132  0000EE                     _rx_data_end:
  1133                           	opt callstack 0
  1134  0000EE                     	ds	1
  1135                           
  1136                           	psect	dataBANK0
  1137  0000F6                     __pdataBANK0:
  1138                           	opt callstack 0
  1139  0000F6                     _frequency:
  1140                           	opt callstack 0
  1141  0000F6                     	ds	4
  1142  0000FA                     _state:
  1143                           	opt callstack 0
  1144  0000FA                     	ds	2
  1145                           
  1146                           	psect	bssBANK1
  1147  0001BC                     __pbssBANK1:
  1148                           	opt callstack 0
  1149  0001BC                     _eusartTxBuffer:
  1150                           	opt callstack 0
  1151  0001BC                     	ds	8
  1152  0001C4                     _dbuf:
  1153                           	opt callstack 0
  1154  0001C4                     	ds	32
  1155  0001E4                     _rx_data:
  1156                           	opt callstack 0
  1157  0001E4                     	ds	20
  1158                           
  1159                           	psect	bssBANK2
  1160  000200                     __pbssBANK2:
  1161                           	opt callstack 0
  1162  000200                     _output:
  1163                           	opt callstack 0
  1164  000200                     	ds	50
  1165                           
  1166                           	psect	cstackBANK1
  1167  000100                     __pcstackBANK1:
  1168                           	opt callstack 0
  1169  000100                     _powf$2493:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x0
  1173  000100                     	ds	4
  1174  000104                     _powf$2494:
  1175                           	opt callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x4
  1178  000104                     	ds	4
  1179  000108                     _powf$2498:
  1180                           	opt callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x8
  1183  000108                     	ds	4
  1184  00010C                     _powf$2499:
  1185                           	opt callstack 0
  1186                           
  1187                           ; 4 bytes @ 0xC
  1188  00010C                     	ds	4
  1189  000110                     _powf$2500:
  1190                           	opt callstack 0
  1191                           
  1192                           ; 4 bytes @ 0x10
  1193  000110                     	ds	4
  1194  000114                     _powf$2501:
  1195                           	opt callstack 0
  1196                           
  1197                           ; 4 bytes @ 0x14
  1198  000114                     	ds	4
  1199  000118                     _powf$2502:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x18
  1203  000118                     	ds	4
  1204  00011C                     powf@t2:
  1205                           	opt callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x1C
  1208  00011C                     	ds	4
  1209  000120                     powf@z_h:
  1210                           	opt callstack 0
  1211                           
  1212                           ; 4 bytes @ 0x20
  1213  000120                     	ds	4
  1214  000124                     powf@z_l:
  1215                           	opt callstack 0
  1216                           
  1217                           ; 4 bytes @ 0x24
  1218  000124                     	ds	4
  1219  000128                     powf@y1:
  1220                           	opt callstack 0
  1221                           
  1222                           ; 4 bytes @ 0x28
  1223  000128                     	ds	4
  1224  00012C                     powf@i:
  1225                           	opt callstack 0
  1226                           
  1227                           ; 4 bytes @ 0x2C
  1228  00012C                     	ds	4
  1229  000130                     powf@s_l:
  1230                           	opt callstack 0
  1231                           
  1232                           ; 4 bytes @ 0x30
  1233  000130                     	ds	4
  1234  000134                     powf@t_l:
  1235                           	opt callstack 0
  1236                           
  1237                           ; 4 bytes @ 0x34
  1238  000134                     	ds	4
  1239  000138                     _powf$2492:
  1240                           	opt callstack 0
  1241                           
  1242                           ; 4 bytes @ 0x38
  1243  000138                     	ds	4
  1244  00013C                     _powf$2496:
  1245                           	opt callstack 0
  1246                           
  1247                           ; 4 bytes @ 0x3C
  1248  00013C                     	ds	4
  1249  000140                     _powf$2497:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 4 bytes @ 0x40
  1253  000140                     	ds	4
  1254  000144                     powf@w:
  1255                           	opt callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x44
  1258  000144                     	ds	4
  1259  000148                     _powf$2490:
  1260                           	opt callstack 0
  1261                           
  1262                           ; 4 bytes @ 0x48
  1263  000148                     	ds	4
  1264  00014C                     powf@r:
  1265                           	opt callstack 0
  1266                           
  1267                           ; 4 bytes @ 0x4C
  1268  00014C                     	ds	4
  1269  000150                     powf@yisint:
  1270                           	opt callstack 0
  1271                           
  1272                           ; 4 bytes @ 0x50
  1273  000150                     	ds	4
  1274  000154                     powf@s:
  1275                           	opt callstack 0
  1276                           
  1277                           ; 4 bytes @ 0x54
  1278  000154                     	ds	4
  1279  000158                     _powf$2489:
  1280                           	opt callstack 0
  1281                           
  1282                           ; 4 bytes @ 0x58
  1283  000158                     	ds	4
  1284  00015C                     _powf$2495:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x5C
  1288  00015C                     	ds	4
  1289  000160                     powf@hx:
  1290                           	opt callstack 0
  1291                           
  1292                           ; 4 bytes @ 0x60
  1293  000160                     	ds	4
  1294  000164                     powf@p_l:
  1295                           	opt callstack 0
  1296                           
  1297                           ; 4 bytes @ 0x64
  1298  000164                     	ds	4
  1299  000168                     powf@t_h:
  1300                           	opt callstack 0
  1301                           
  1302                           ; 4 bytes @ 0x68
  1303  000168                     	ds	4
  1304  00016C                     powf@s_h:
  1305                           	opt callstack 0
  1306                           
  1307                           ; 4 bytes @ 0x6C
  1308  00016C                     	ds	4
  1309  000170                     powf@ax:
  1310                           	opt callstack 0
  1311                           
  1312                           ; 4 bytes @ 0x70
  1313  000170                     	ds	4
  1314  000174                     powf@u:
  1315                           	opt callstack 0
  1316                           
  1317                           ; 4 bytes @ 0x74
  1318  000174                     	ds	4
  1319  000178                     powf@v:
  1320                           	opt callstack 0
  1321                           
  1322                           ; 4 bytes @ 0x78
  1323  000178                     	ds	4
  1324  00017C                     powf@hy:
  1325                           	opt callstack 0
  1326                           
  1327                           ; 4 bytes @ 0x7C
  1328  00017C                     	ds	4
  1329  000180                     powf@t1:
  1330                           	opt callstack 0
  1331                           
  1332                           ; 4 bytes @ 0x80
  1333  000180                     	ds	4
  1334  000184                     powf@sn:
  1335                           	opt callstack 0
  1336                           
  1337                           ; 4 bytes @ 0x84
  1338  000184                     	ds	4
  1339  000188                     powf@n:
  1340                           	opt callstack 0
  1341                           
  1342                           ; 4 bytes @ 0x88
  1343  000188                     	ds	4
  1344  00018C                     powf@s2:
  1345                           	opt callstack 0
  1346                           
  1347                           ; 4 bytes @ 0x8C
  1348  00018C                     	ds	4
  1349  000190                     powf@iy:
  1350                           	opt callstack 0
  1351                           
  1352                           ; 4 bytes @ 0x90
  1353  000190                     	ds	4
  1354  000194                     powf@is:
  1355                           	opt callstack 0
  1356                           
  1357                           ; 4 bytes @ 0x94
  1358  000194                     	ds	4
  1359  000198                     _powf$2491:
  1360                           	opt callstack 0
  1361                           
  1362                           ; 4 bytes @ 0x98
  1363  000198                     	ds	4
  1364  00019C                     powf@p_h:
  1365                           	opt callstack 0
  1366                           
  1367                           ; 4 bytes @ 0x9C
  1368  00019C                     	ds	4
  1369  0001A0                     powf@k:
  1370                           	opt callstack 0
  1371                           
  1372                           ; 4 bytes @ 0xA0
  1373  0001A0                     	ds	4
  1374  0001A4                     _powf$2488:
  1375                           	opt callstack 0
  1376                           
  1377                           ; 4 bytes @ 0xA4
  1378  0001A4                     	ds	4
  1379  0001A8                     powf@ix:
  1380                           	opt callstack 0
  1381                           
  1382                           ; 4 bytes @ 0xA8
  1383  0001A8                     	ds	4
  1384  0001AC                     powf@j:
  1385                           	opt callstack 0
  1386                           
  1387                           ; 4 bytes @ 0xAC
  1388  0001AC                     	ds	4
  1389  0001B0                     powf@t:
  1390                           	opt callstack 0
  1391                           
  1392                           ; 4 bytes @ 0xB0
  1393  0001B0                     	ds	4
  1394  0001B4                     powf@z:
  1395                           	opt callstack 0
  1396                           
  1397                           ; 4 bytes @ 0xB4
  1398  0001B4                     	ds	4
  1399  0001B8                     powf@__xc8_float_word:
  1400                           	opt callstack 0
  1401                           
  1402                           ; 4 bytes @ 0xB8
  1403  0001B8                     	ds	4
  1404                           
  1405                           	psect	cstackBANK0
  1406  000060                     __pcstackBANK0:
  1407                           	opt callstack 0
  1408  000060                     ??_scalbnf:
  1409  000060                     ?___flsub:
  1410                           	opt callstack 0
  1411  000060                     _dtoa$1544:
  1412                           	opt callstack 0
  1413  000060                     utoa@p:
  1414                           	opt callstack 0
  1415  000060                     ___flsub@b:
  1416                           	opt callstack 0
  1417                           
  1418                           ; 4 bytes @ 0x0
  1419  000060                     	ds	2
  1420  000062                     dtoa@p:
  1421                           	opt callstack 0
  1422  000062                     utoa@w:
  1423                           	opt callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x2
  1426  000062                     	ds	2
  1427  000064                     dtoa@w:
  1428                           	opt callstack 0
  1429  000064                     ___flsub@a:
  1430                           	opt callstack 0
  1431  000064                     scalbnf@u:
  1432                           	opt callstack 0
  1433  000064                     utoa@n:
  1434                           	opt callstack 0
  1435                           
  1436                           ; 8 bytes @ 0x4
  1437  000064                     	ds	2
  1438  000066                     dtoa@s:
  1439                           	opt callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x6
  1442  000066                     	ds	2
  1443  000068                     ?___fldiv:
  1444                           	opt callstack 0
  1445  000068                     ___flge@ff1:
  1446                           	opt callstack 0
  1447  000068                     ___fldiv@b:
  1448                           	opt callstack 0
  1449  000068                     scalbnf@y:
  1450                           	opt callstack 0
  1451  000068                     dtoa@n:
  1452                           	opt callstack 0
  1453                           
  1454                           ; 8 bytes @ 0x8
  1455  000068                     	ds	4
  1456  00006C                     utoa@i:
  1457                           	opt callstack 0
  1458  00006C                     ___flge@ff2:
  1459                           	opt callstack 0
  1460  00006C                     ___fldiv@a:
  1461                           	opt callstack 0
  1462                           
  1463                           ; 4 bytes @ 0xC
  1464  00006C                     	ds	4
  1465  000070                     ?_sqrtf:
  1466                           	opt callstack 0
  1467  000070                     dtoa@i:
  1468                           	opt callstack 0
  1469  000070                     ___fldiv@rem:
  1470                           	opt callstack 0
  1471  000070                     sqrtf@x:
  1472                           	opt callstack 0
  1473                           
  1474                           ; 4 bytes @ 0x10
  1475  000070                     	ds	2
  1476  000072                     ?_vfpfcnvrt:
  1477                           	opt callstack 0
  1478  000072                     vfpfcnvrt@fp:
  1479                           	opt callstack 0
  1480                           
  1481                           ; 2 bytes @ 0x12
  1482  000072                     	ds	2
  1483  000074                     ??_sqrtf:
  1484  000074                     ___fldiv@sign:
  1485                           	opt callstack 0
  1486  000074                     vfpfcnvrt@fmt:
  1487                           	opt callstack 0
  1488                           
  1489                           ; 2 bytes @ 0x14
  1490  000074                     	ds	1
  1491  000075                     ___fldiv@new_exp:
  1492                           	opt callstack 0
  1493                           
  1494                           ; 2 bytes @ 0x15
  1495  000075                     	ds	1
  1496  000076                     vfpfcnvrt@ap:
  1497                           	opt callstack 0
  1498                           
  1499                           ; 2 bytes @ 0x16
  1500  000076                     	ds	1
  1501  000077                     ___fldiv@grs:
  1502                           	opt callstack 0
  1503                           
  1504                           ; 4 bytes @ 0x17
  1505  000077                     	ds	1
  1506  000078                     ??_vfpfcnvrt:
  1507                           
  1508                           ; 1 bytes @ 0x18
  1509  000078                     	ds	3
  1510  00007B                     ___fldiv@bexp:
  1511                           	opt callstack 0
  1512                           
  1513                           ; 1 bytes @ 0x1B
  1514  00007B                     	ds	1
  1515  00007C                     ___fldiv@aexp:
  1516                           	opt callstack 0
  1517                           
  1518                           ; 1 bytes @ 0x1C
  1519  00007C                     	ds	1
  1520  00007D                     sqrtf@s:
  1521                           	opt callstack 0
  1522                           
  1523                           ; 4 bytes @ 0x1D
  1524  00007D                     	ds	4
  1525  000081                     sqrtf@i:
  1526                           	opt callstack 0
  1527                           
  1528                           ; 4 bytes @ 0x21
  1529  000081                     	ds	4
  1530  000085                     sqrtf@__xc8_float_word:
  1531                           	opt callstack 0
  1532                           
  1533                           ; 4 bytes @ 0x25
  1534  000085                     	ds	1
  1535  000086                     vfpfcnvrt@c:
  1536                           	opt callstack 0
  1537                           
  1538                           ; 1 bytes @ 0x26
  1539  000086                     	ds	1
  1540  000087                     vfpfcnvrt@ll:
  1541                           	opt callstack 0
  1542                           
  1543                           ; 8 bytes @ 0x27
  1544  000087                     	ds	2
  1545  000089                     sqrtf@q:
  1546                           	opt callstack 0
  1547                           
  1548                           ; 4 bytes @ 0x29
  1549  000089                     	ds	4
  1550  00008D                     sqrtf@t:
  1551                           	opt callstack 0
  1552                           
  1553                           ; 4 bytes @ 0x2D
  1554  00008D                     	ds	2
  1555  00008F                     vfpfcnvrt@llu:
  1556                           	opt callstack 0
  1557                           
  1558                           ; 8 bytes @ 0x2F
  1559  00008F                     	ds	2
  1560  000091                     sqrtf@z:
  1561                           	opt callstack 0
  1562                           
  1563                           ; 4 bytes @ 0x31
  1564  000091                     	ds	4
  1565  000095                     sqrtf@m:
  1566                           	opt callstack 0
  1567                           
  1568                           ; 4 bytes @ 0x35
  1569  000095                     	ds	2
  1570  000097                     ?_vfprintf:
  1571                           	opt callstack 0
  1572  000097                     vfprintf@fp:
  1573                           	opt callstack 0
  1574                           
  1575                           ; 2 bytes @ 0x37
  1576  000097                     	ds	2
  1577  000099                     vfprintf@fmt:
  1578                           	opt callstack 0
  1579  000099                     sqrtf@r:
  1580                           	opt callstack 0
  1581                           
  1582                           ; 4 bytes @ 0x39
  1583  000099                     	ds	2
  1584  00009B                     vfprintf@ap:
  1585                           	opt callstack 0
  1586                           
  1587                           ; 2 bytes @ 0x3B
  1588  00009B                     	ds	2
  1589  00009D                     ?_sprintf:
  1590                           	opt callstack 0
  1591  00009D                     sprintf@s:
  1592                           	opt callstack 0
  1593  00009D                     sqrtf@ix:
  1594                           	opt callstack 0
  1595                           
  1596                           ; 4 bytes @ 0x3D
  1597  00009D                     	ds	2
  1598  00009F                     sprintf@fmt:
  1599                           	opt callstack 0
  1600                           
  1601                           ; 2 bytes @ 0x3F
  1602  00009F                     	ds	2
  1603  0000A1                     ?_powf:
  1604                           	opt callstack 0
  1605  0000A1                     powf@x:
  1606                           	opt callstack 0
  1607                           
  1608                           ; 4 bytes @ 0x41
  1609  0000A1                     	ds	4
  1610  0000A5                     powf@y:
  1611                           	opt callstack 0
  1612                           
  1613                           ; 4 bytes @ 0x45
  1614  0000A5                     	ds	2
  1615  0000A7                     sprintf@ap:
  1616                           	opt callstack 0
  1617                           
  1618                           ; 2 bytes @ 0x47
  1619  0000A7                     	ds	2
  1620  0000A9                     ??_powf:
  1621  0000A9                     sprintf@f:
  1622                           	opt callstack 0
  1623                           
  1624                           ; 6 bytes @ 0x49
  1625  0000A9                     	ds	9
  1626  0000B2                     ?___fltol:
  1627                           	opt callstack 0
  1628  0000B2                     ___fltol@f1:
  1629                           	opt callstack 0
  1630                           
  1631                           ; 4 bytes @ 0x52
  1632  0000B2                     	ds	4
  1633  0000B6                     ??___fltol:
  1634                           
  1635                           ; 1 bytes @ 0x56
  1636  0000B6                     	ds	4
  1637  0000BA                     ___fltol@sign1:
  1638                           	opt callstack 0
  1639                           
  1640                           ; 1 bytes @ 0x5A
  1641  0000BA                     	ds	1
  1642  0000BB                     ___fltol@exp1:
  1643                           	opt callstack 0
  1644                           
  1645                           ; 1 bytes @ 0x5B
  1646  0000BB                     	ds	1
  1647  0000BC                     AD9833_SetFrequency@frequency:
  1648                           	opt callstack 0
  1649                           
  1650                           ; 4 bytes @ 0x5C
  1651  0000BC                     	ds	4
  1652  0000C0                     ??_AD9833_SetFrequency:
  1653                           
  1654                           ; 1 bytes @ 0x60
  1655  0000C0                     	ds	5
  1656  0000C5                     _AD9833_SetFrequency$2487:
  1657                           	opt callstack 0
  1658                           
  1659                           ; 4 bytes @ 0x65
  1660  0000C5                     	ds	4
  1661  0000C9                     AD9833_SetFrequency@MSB:
  1662                           	opt callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x69
  1665  0000C9                     	ds	2
  1666  0000CB                     AD9833_SetFrequency@LSB:
  1667                           	opt callstack 0
  1668                           
  1669                           ; 2 bytes @ 0x6B
  1670  0000CB                     	ds	2
  1671  0000CD                     AD9833_SetFrequency@freq:
  1672                           	opt callstack 0
  1673                           
  1674                           ; 4 bytes @ 0x6D
  1675  0000CD                     	ds	4
  1676  0000D1                     ??_AD9833_Init:
  1677  0000D1                     Parse_Data@i:
  1678                           	opt callstack 0
  1679                           
  1680                           ; 2 bytes @ 0x71
  1681  0000D1                     	ds	2
  1682  0000D3                     ??_main:
  1683                           
  1684                           ; 1 bytes @ 0x73
  1685  0000D3                     	ds	2
  1686                           
  1687                           	psect	cstackCOMRAM
  1688  000001                     __pcstackCOMRAM:
  1689                           	opt callstack 0
  1690  000001                     i2TMR0_WriteTimer@timerVal:
  1691                           	opt callstack 0
  1692  000001                     i2TMR3_WriteTimer@timerVal:
  1693                           	opt callstack 0
  1694                           
  1695                           ; 2 bytes @ 0x0
  1696  000001                     	ds	2
  1697  000003                     TMR0_WriteTimer@timerVal:
  1698                           	opt callstack 0
  1699  000003                     TMR1_WriteTimer@timerVal:
  1700                           	opt callstack 0
  1701  000003                     TMR3_WriteTimer@timerVal:
  1702                           	opt callstack 0
  1703                           
  1704                           ; 2 bytes @ 0x2
  1705  000003                     	ds	2
  1706  000005                     ??_INTERRUPT_InterruptManagerLow:
  1707  000005                     
  1708                           ; 1 bytes @ 0x4
  1709  000005                     	ds	7
  1710  00000C                     ??_TMR3_Initialize:
  1711  00000C                     ??_TMR1_Initialize:
  1712  00000C                     ??_TMR0_Initialize:
  1713  00000C                     ?_strlen:
  1714                           	opt callstack 0
  1715  00000C                     ?_strncmp:
  1716                           	opt callstack 0
  1717  00000C                     ?_isspace:
  1718                           	opt callstack 0
  1719  00000C                     ?_isdigit:
  1720                           	opt callstack 0
  1721  00000C                     ?___wmul:
  1722                           	opt callstack 0
  1723  00000C                     ?___fladd:
  1724                           	opt callstack 0
  1725  00000C                     ?_fabsf:
  1726                           	opt callstack 0
  1727  00000C                     ?_nanf:
  1728                           	opt callstack 0
  1729  00000C                     ?___lmul:
  1730                           	opt callstack 0
  1731  00000C                     ?___flneg:
  1732                           	opt callstack 0
  1733  00000C                     ?___xxtofl:
  1734                           	opt callstack 0
  1735  00000C                     ?___aodiv:
  1736                           	opt callstack 0
  1737  00000C                     ?___aomod:
  1738                           	opt callstack 0
  1739  00000C                     ?___lodiv:
  1740                           	opt callstack 0
  1741  00000C                     ?___lomod:
  1742                           	opt callstack 0
  1743  00000C                     EUSART_Write@txData:
  1744                           	opt callstack 0
  1745  00000C                     EUSART_SetFramingErrorHandler@interruptHandler:
  1746                           	opt callstack 0
  1747  00000C                     EUSART_SetOverrunErrorHandler@interruptHandler:
  1748                           	opt callstack 0
  1749  00000C                     EUSART_SetErrorHandler@interruptHandler:
  1750                           	opt callstack 0
  1751  00000C                     EUSART_SetTxInterruptHandler@interruptHandler:
  1752                           	opt callstack 0
  1753  00000C                     EUSART_SetRxInterruptHandler@interruptHandler:
  1754                           	opt callstack 0
  1755  00000C                     SPI1_WriteWord@word:
  1756                           	opt callstack 0
  1757  00000C                     ___wmul@multiplier:
  1758                           	opt callstack 0
  1759  00000C                     isdigit@c:
  1760                           	opt callstack 0
  1761  00000C                     isspace@c:
  1762                           	opt callstack 0
  1763  00000C                     fputc@c:
  1764                           	opt callstack 0
  1765  00000C                     strlen@s:
  1766                           	opt callstack 0
  1767  00000C                     strncmp@_l:
  1768                           	opt callstack 0
  1769  00000C                     nanf@s:
  1770                           	opt callstack 0
  1771  00000C                     ___lmul@multiplier:
  1772                           	opt callstack 0
  1773  00000C                     ___flneg@f1:
  1774                           	opt callstack 0
  1775  00000C                     ___fladd@b:
  1776                           	opt callstack 0
  1777  00000C                     ___xxtofl@val:
  1778                           	opt callstack 0
  1779  00000C                     fabsf@x:
  1780                           	opt callstack 0
  1781  00000C                     ___aodiv@dividend:
  1782                           	opt callstack 0
  1783  00000C                     ___aomod@dividend:
  1784                           	opt callstack 0
  1785  00000C                     ___lodiv@dividend:
  1786                           	opt callstack 0
  1787  00000C                     ___lomod@dividend:
  1788                           	opt callstack 0
  1789                           
  1790                           ; 8 bytes @ 0xB
  1791  00000C                     	ds	1
  1792  00000D                     EUSART_Write_String@data:
  1793                           	opt callstack 0
  1794                           
  1795                           ; 2 bytes @ 0xC
  1796  00000D                     	ds	1
  1797  00000E                     ??_isspace:
  1798  00000E                     ??_isdigit:
  1799  00000E                     SPI1_WriteWord@bytel:
  1800                           	opt callstack 0
  1801  00000E                     ___wmul@multiplicand:
  1802                           	opt callstack 0
  1803  00000E                     fputc@fp:
  1804                           	opt callstack 0
  1805  00000E                     strlen@a:
  1806                           	opt callstack 0
  1807  00000E                     strncmp@_r:
  1808                           	opt callstack 0
  1809                           
  1810                           ; 2 bytes @ 0xD
  1811  00000E                     	ds	1
  1812  00000F                     EUSART_Write_String@i:
  1813                           	opt callstack 0
  1814  00000F                     SPI1_WriteWord@byteh:
  1815                           	opt callstack 0
  1816                           
  1817                           ; 1 bytes @ 0xE
  1818  00000F                     	ds	1
  1819  000010                     ??_fputc:
  1820  000010                     ??___xxtofl:
  1821  000010                     ___wmul@product:
  1822                           	opt callstack 0
  1823  000010                     strncmp@n:
  1824                           	opt callstack 0
  1825  000010                     ___lmul@multiplicand:
  1826                           	opt callstack 0
  1827  000010                     ___fladd@a:
  1828                           	opt callstack 0
  1829  000010                     fabsf@u:
  1830                           	opt callstack 0
  1831  000010                     nanf@u:
  1832                           	opt callstack 0
  1833                           
  1834                           ; 4 bytes @ 0xF
  1835  000010                     	ds	2
  1836  000012                     ??_strncmp:
  1837  000012                     _isspace$2068:
  1838                           	opt callstack 0
  1839                           
  1840                           ; 1 bytes @ 0x11
  1841  000012                     	ds	1
  1842  000013                     ?_atoi:
  1843                           	opt callstack 0
  1844  000013                     atoi@s:
  1845                           	opt callstack 0
  1846  000013                     strncmp@l:
  1847                           	opt callstack 0
  1848                           
  1849                           ; 2 bytes @ 0x12
  1850  000013                     	ds	1
  1851  000014                     ??___fladd:
  1852  000014                     ___xxtofl@sign:
  1853                           	opt callstack 0
  1854  000014                     ___lmul@product:
  1855                           	opt callstack 0
  1856  000014                     ___aodiv@divisor:
  1857                           	opt callstack 0
  1858  000014                     ___aomod@divisor:
  1859                           	opt callstack 0
  1860  000014                     ___lodiv@divisor:
  1861                           	opt callstack 0
  1862  000014                     ___lomod@divisor:
  1863                           	opt callstack 0
  1864                           
  1865                           ; 8 bytes @ 0x13
  1866  000014                     	ds	1
  1867  000015                     ??_atoi:
  1868  000015                     ___xxtofl@exp:
  1869                           	opt callstack 0
  1870  000015                     fputs@s:
  1871                           	opt callstack 0
  1872  000015                     strncmp@r:
  1873                           	opt callstack 0
  1874                           
  1875                           ; 2 bytes @ 0x14
  1876  000015                     	ds	1
  1877  000016                     ___xxtofl@arg:
  1878                           	opt callstack 0
  1879                           
  1880                           ; 4 bytes @ 0x15
  1881  000016                     	ds	1
  1882  000017                     fputs@fp:
  1883                           	opt callstack 0
  1884                           
  1885                           ; 2 bytes @ 0x16
  1886  000017                     	ds	1
  1887  000018                     ?_atol:
  1888                           	opt callstack 0
  1889  000018                     ___fladd@signs:
  1890                           	opt callstack 0
  1891  000018                     atol@s:
  1892                           	opt callstack 0
  1893                           
  1894                           ; 2 bytes @ 0x17
  1895  000018                     	ds	1
  1896  000019                     ___fladd@aexp:
  1897                           	opt callstack 0
  1898  000019                     fputs@c:
  1899                           	opt callstack 0
  1900  000019                     atoi@neg:
  1901                           	opt callstack 0
  1902                           
  1903                           ; 2 bytes @ 0x18
  1904  000019                     	ds	1
  1905  00001A                     ___fladd@bexp:
  1906                           	opt callstack 0
  1907  00001A                     fputs@i:
  1908                           	opt callstack 0
  1909                           
  1910                           ; 2 bytes @ 0x19
  1911  00001A                     	ds	1
  1912  00001B                     ___fladd@grs:
  1913                           	opt callstack 0
  1914  00001B                     _atoi$2041:
  1915                           	opt callstack 0
  1916                           
  1917                           ; 2 bytes @ 0x1A
  1918  00001B                     	ds	1
  1919  00001C                     ??_atol:
  1920  00001C                     ?_pad:
  1921                           	opt callstack 0
  1922  00001C                     ?___flmul:
  1923                           	opt callstack 0
  1924  00001C                     ___aodiv@counter:
  1925                           	opt callstack 0
  1926  00001C                     ___aomod@counter:
  1927                           	opt callstack 0
  1928  00001C                     ___lomod@counter:
  1929                           	opt callstack 0
  1930  00001C                     pad@fp:
  1931                           	opt callstack 0
  1932  00001C                     ___flmul@b:
  1933                           	opt callstack 0
  1934  00001C                     ___lodiv@quotient:
  1935                           	opt callstack 0
  1936                           
  1937                           ; 8 bytes @ 0x1B
  1938  00001C                     	ds	1
  1939  00001D                     ___aodiv@sign:
  1940                           	opt callstack 0
  1941  00001D                     ___aomod@sign:
  1942                           	opt callstack 0
  1943  00001D                     _atoi$2043:
  1944                           	opt callstack 0
  1945                           
  1946                           ; 2 bytes @ 0x1C
  1947  00001D                     	ds	1
  1948  00001E                     ?_abs:
  1949                           	opt callstack 0
  1950  00001E                     pad@buf:
  1951                           	opt callstack 0
  1952  00001E                     abs@a:
  1953                           	opt callstack 0
  1954  00001E                     ___aodiv@quotient:
  1955                           	opt callstack 0
  1956                           
  1957                           ; 8 bytes @ 0x1D
  1958  00001E                     	ds	1
  1959  00001F                     _atoi$2042:
  1960                           	opt callstack 0
  1961                           
  1962                           ; 1 bytes @ 0x1E
  1963  00001F                     	ds	1
  1964  000020                     ??_abs:
  1965  000020                     pad@p:
  1966                           	opt callstack 0
  1967  000020                     atoi@n:
  1968                           	opt callstack 0
  1969  000020                     ___flmul@a:
  1970                           	opt callstack 0
  1971                           
  1972                           ; 4 bytes @ 0x1F
  1973  000020                     	ds	1
  1974  000021                     atol@neg:
  1975                           	opt callstack 0
  1976                           
  1977                           ; 2 bytes @ 0x20
  1978  000021                     	ds	1
  1979  000022                     ??_pad:
  1980                           
  1981                           ; 1 bytes @ 0x21
  1982  000022                     	ds	1
  1983  000023                     pad@i:
  1984                           	opt callstack 0
  1985  000023                     _atol$2050:
  1986                           	opt callstack 0
  1987                           
  1988                           ; 2 bytes @ 0x22
  1989  000023                     	ds	1
  1990  000024                     ??___flmul:
  1991  000024                     ___lodiv@counter:
  1992                           	opt callstack 0
  1993                           
  1994                           ; 1 bytes @ 0x23
  1995  000024                     	ds	1
  1996  000025                     pad@w:
  1997                           	opt callstack 0
  1998  000025                     _atol$2052:
  1999                           	opt callstack 0
  2000                           
  2001                           ; 2 bytes @ 0x24
  2002  000025                     	ds	2
  2003  000027                     ?_ctoa:
  2004                           	opt callstack 0
  2005  000027                     ?_dtoa:
  2006                           	opt callstack 0
  2007  000027                     ?_utoa:
  2008                           	opt callstack 0
  2009  000027                     _atol$2051:
  2010                           	opt callstack 0
  2011  000027                     ctoa@fp:
  2012                           	opt callstack 0
  2013  000027                     dtoa@fp:
  2014                           	opt callstack 0
  2015  000027                     utoa@fp:
  2016                           	opt callstack 0
  2017                           
  2018                           ; 2 bytes @ 0x26
  2019  000027                     	ds	1
  2020  000028                     ___flmul@sign:
  2021                           	opt callstack 0
  2022  000028                     atol@n:
  2023                           	opt callstack 0
  2024                           
  2025                           ; 4 bytes @ 0x27
  2026  000028                     	ds	1
  2027  000029                     ctoa@c:
  2028                           	opt callstack 0
  2029  000029                     ___flmul@grs:
  2030                           	opt callstack 0
  2031  000029                     dtoa@d:
  2032                           	opt callstack 0
  2033  000029                     utoa@d:
  2034                           	opt callstack 0
  2035                           
  2036                           ; 8 bytes @ 0x28
  2037  000029                     	ds	1
  2038  00002A                     ctoa@w:
  2039                           	opt callstack 0
  2040                           
  2041                           ; 2 bytes @ 0x29
  2042  00002A                     	ds	3
  2043  00002D                     ___flmul@aexp:
  2044                           	opt callstack 0
  2045                           
  2046                           ; 1 bytes @ 0x2C
  2047  00002D                     	ds	1
  2048  00002E                     ___flmul@bexp:
  2049                           	opt callstack 0
  2050                           
  2051                           ; 1 bytes @ 0x2D
  2052  00002E                     	ds	1
  2053  00002F                     ___flmul@prod:
  2054                           	opt callstack 0
  2055                           
  2056                           ; 4 bytes @ 0x2E
  2057  00002F                     	ds	2
  2058  000031                     ??_dtoa:
  2059  000031                     ??_utoa:
  2060                           
  2061                           ; 1 bytes @ 0x30
  2062  000031                     	ds	2
  2063  000033                     ___flmul@temp:
  2064                           	opt callstack 0
  2065                           
  2066                           ; 2 bytes @ 0x32
  2067  000033                     	ds	2
  2068  000035                     ??___fldiv:
  2069  000035                     ??___flge:
  2070  000035                     ?_scalbnf:
  2071                           	opt callstack 0
  2072  000035                     scalbnf@x:
  2073                           	opt callstack 0
  2074                           
  2075                           ; 4 bytes @ 0x34
  2076  000035                     	ds	4
  2077  000039                     vfprintf@cfmt:
  2078                           	opt callstack 0
  2079  000039                     scalbnf@n:
  2080                           	opt callstack 0
  2081                           
  2082                           ; 2 bytes @ 0x38
  2083  000039                     	ds	2
  2084  00003B                     ??_Parse_Data:
  2085  00003B                     
  2086                           ; 1 bytes @ 0x3A
  2087  00003B                     	ds	1
  2088                           
  2089 ;;
  2090 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2091 ;;
  2092 ;; *************** function _main *****************
  2093 ;; Defined at:
  2094 ;;		line 63 in file "main.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;		None
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;		None
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2108 ;;      Params:         0       0       0       0       0       0       0       0       0
  2109 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2110 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2111 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2112 ;;Total ram usage:        2 bytes
  2113 ;; Hardware stack levels required when called:   16
  2114 ;; This function calls:
  2115 ;;		_AD9833_Init
  2116 ;;		_Parse_Data
  2117 ;;		_SPI1_Start
  2118 ;;		_SYSTEM_Initialize
  2119 ;;		_TMR1_StopTimer
  2120 ;; This function is called by:
  2121 ;;		Startup code after reset
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text0
  2126  0052D0                     __ptext0:
  2127                           	opt callstack 0
  2128  0052D0                     _main:
  2129                           	opt callstack 15
  2130                           
  2131                           ;main.c: 66:     SYSTEM_Initialize();
  2132                           
  2133                           ;incstack = 0
  2134  0052D0  EC62  F02C         	call	_SYSTEM_Initialize	;wreg free
  2135                           
  2136                           ;main.c: 69:     PORTCbits.RC0 = 1;
  2137  0052D4  808F               	bsf	3983,0,c	;volatile
  2138                           
  2139                           ;main.c: 72:     SPI1_Start();
  2140  0052D6  EC7B  F02D         	call	_SPI1_Start	;wreg free
  2141                           
  2142                           ;main.c: 73:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2143  0052DA  0E09               	movlw	9
  2144  0052DC  0100               	movlb	0	; () banked
  2145  0052DE  6FD4               	movwf	(??_main+1)& (0+255),b
  2146  0052E0  0E1E               	movlw	30
  2147  0052E2  6FD3               	movwf	??_main& (0+255),b
  2148  0052E4  0EE4               	movlw	228
  2149  0052E6                     u10127:
  2150  0052E6  2EE8               	decfsz	wreg,f,c
  2151  0052E8  D7FE               	bra	u10127
  2152  0052EA  2FD3               	decfsz	??_main& (0+255),f,b
  2153  0052EC  D7FC               	bra	u10127
  2154  0052EE  2FD4               	decfsz	(??_main+1)& (0+255),f,b
  2155  0052F0  D7FA               	bra	u10127
  2156  0052F2  F000               	nop	
  2157                           
  2158                           ;main.c: 76:     AD9833_Init();
  2159  0052F4  ECCB  F02A         	call	_AD9833_Init	;wreg free
  2160                           
  2161                           ;main.c: 79:     PORTBbits.RB3 = 0;
  2162  0052F8  968E               	bcf	3982,3,c	;volatile
  2163                           
  2164                           ;main.c: 82:     (INTCONbits.GIEH = 1);
  2165  0052FA  8EF2               	bsf	4082,7,c	;volatile
  2166                           
  2167                           ;main.c: 85:     (INTCONbits.GIEL = 1);
  2168  0052FC  8CF2               	bsf	4082,6,c	;volatile
  2169                           
  2170                           ;main.c: 88:     (INTCONbits.PEIE = 1);
  2171  0052FE  8CF2               	bsf	4082,6,c	;volatile
  2172  005300  D009               	goto	l580
  2173  005302                     l9243:
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;main.c: 103:                 if(sec == 1)
  2177  005302  0447               	decf	_sec,w,c
  2178  005304  A4D8               	btfss	status,2,c
  2179  005306  D006               	goto	l580
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;main.c: 104:                 {;main.c: 106:                 Parse_Data();
  2183  005308  EC2D  F014         	call	_Parse_Data	;wreg free
  2184                           
  2185                           ;main.c: 109:                 TMR1_StopTimer();
  2186  00530C  EC8C  F02D         	call	_TMR1_StopTimer	;wreg free
  2187                           
  2188                           ;main.c: 110:                 sec = 0;
  2189  005310  0E00               	movlw	0
  2190  005312  6E47               	movwf	_sec,c
  2191  005314                     l580:
  2192                           
  2193                           ; BSR set to: 0
  2194  005314  C0FA  F0D3         	movff	_state,??_main	;volatile
  2195  005318  C0FB  F0D4         	movff	_state+1,??_main+1	;volatile
  2196                           
  2197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2198                           ; Switch size 1, requested type "simple"
  2199                           ; Number of cases is 1, Range of values is 0 to 0
  2200                           ; switch strategies available:
  2201                           ; Name         Instructions Cycles
  2202                           ; simple_byte            4     3 (average)
  2203                           ;	Chosen strategy is simple_byte
  2204  00531C  0100               	movlb	0	; () banked
  2205  00531E  51D4               	movf	(??_main+1)& (0+255),w,b
  2206  005320  0A00               	xorlw	0	; case 0
  2207  005322  A4D8               	btfss	status,2,c
  2208  005324  D7F7               	goto	l580
  2209                           
  2210                           ; BSR set to: 0
  2211                           ; Switch size 1, requested type "simple"
  2212                           ; Number of cases is 2, Range of values is 1 to 2
  2213                           ; switch strategies available:
  2214                           ; Name         Instructions Cycles
  2215                           ; simple_byte            7     4 (average)
  2216                           ;	Chosen strategy is simple_byte
  2217  005326  51D3               	movf	??_main& (0+255),w,b
  2218  005328  0A01               	xorlw	1	; case 1
  2219  00532A  B4D8               	btfsc	status,2,c
  2220  00532C  D7EA               	goto	l9243
  2221  00532E  0A03               	xorlw	3	; case 2
  2222  005330  D7F1               	goto	l580
  2223  005332                     __end_of_main:
  2224                           	opt callstack 0
  2225                           
  2226 ;; *************** function _TMR1_StopTimer *****************
  2227 ;; Defined at:
  2228 ;;		line 79 in file "mcc_generated_files/tmr1.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		None
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2242 ;;      Params:         0       0       0       0       0       0       0       0       0
  2243 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2244 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2245 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2246 ;;Total ram usage:        0 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    7
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_main
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text1
  2257  005B18                     __ptext1:
  2258                           	opt callstack 0
  2259  005B18                     _TMR1_StopTimer:
  2260                           	opt callstack 23
  2261                           
  2262                           ;mcc_generated_files/tmr1.c: 82:     T1CONbits.TMR1ON = 0;
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;incstack = 0
  2266  005B18  90CF               	bcf	4047,0,c	;volatile
  2267  005B1A  0012               	return		;funcret
  2268  005B1C                     __end_of_TMR1_StopTimer:
  2269                           	opt callstack 0
  2270                           
  2271 ;; *************** function _SYSTEM_Initialize *****************
  2272 ;; Defined at:
  2273 ;;		line 23 in file "mcc_generated_files/mcc.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;		None
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;		None
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  1    wreg      void 
  2280 ;; Registers used:
  2281 ;;		wreg, status,2, status,0, cstack
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2287 ;;      Params:         0       0       0       0       0       0       0       0       0
  2288 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2289 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2290 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2291 ;;Total ram usage:        0 bytes
  2292 ;; Hardware stack levels used:    1
  2293 ;; Hardware stack levels required when called:    9
  2294 ;; This function calls:
  2295 ;;		_EUSART_Initialize
  2296 ;;		_EXT_INT_Initialize
  2297 ;;		_INTERRUPT_Initialize
  2298 ;;		_OSCILLATOR_Initialize
  2299 ;;		_PIN_MANAGER_Initialize
  2300 ;;		_PMD_Initialize
  2301 ;;		_SPI1_Initialize
  2302 ;;		_TMR0_Initialize
  2303 ;;		_TMR1_Initialize
  2304 ;;		_TMR3_Initialize
  2305 ;; This function is called by:
  2306 ;;		_main
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text2
  2311  0058C4                     __ptext2:
  2312                           	opt callstack 0
  2313  0058C4                     _SYSTEM_Initialize:
  2314                           	opt callstack 21
  2315                           
  2316                           ;mcc_generated_files/mcc.c: 25:     INTERRUPT_Initialize();
  2317                           
  2318                           ;incstack = 0
  2319  0058C4  EC26  F02D         	call	_INTERRUPT_Initialize	;wreg free
  2320                           
  2321                           ;mcc_generated_files/mcc.c: 26:     PMD_Initialize();
  2322  0058C8  ECD7  F02C         	call	_PMD_Initialize	;wreg free
  2323                           
  2324                           ;mcc_generated_files/mcc.c: 27:     SPI1_Initialize();
  2325  0058CC  ECB4  F02C         	call	_SPI1_Initialize	;wreg free
  2326                           
  2327                           ;mcc_generated_files/mcc.c: 28:     PIN_MANAGER_Initialize();
  2328  0058D0  EC2E  F029         	call	_PIN_MANAGER_Initialize	;wreg free
  2329                           
  2330                           ;mcc_generated_files/mcc.c: 29:     OSCILLATOR_Initialize();
  2331  0058D4  EC0F  F02D         	call	_OSCILLATOR_Initialize	;wreg free
  2332                           
  2333                           ;mcc_generated_files/mcc.c: 30:     TMR3_Initialize();
  2334  0058D8  ECE9  F02A         	call	_TMR3_Initialize	;wreg free
  2335                           
  2336                           ;mcc_generated_files/mcc.c: 31:     EXT_INT_Initialize();
  2337  0058DC  EC53  F02D         	call	_EXT_INT_Initialize	;wreg free
  2338                           
  2339                           ;mcc_generated_files/mcc.c: 32:     TMR1_Initialize();
  2340  0058E0  EC06  F02B         	call	_TMR1_Initialize	;wreg free
  2341                           
  2342                           ;mcc_generated_files/mcc.c: 33:     TMR0_Initialize();
  2343  0058E4  ECBF  F02B         	call	_TMR0_Initialize	;wreg free
  2344                           
  2345                           ;mcc_generated_files/mcc.c: 34:     EUSART_Initialize();
  2346  0058E8  ECF0  F028         	call	_EUSART_Initialize	;wreg free
  2347  0058EC  0012               	return		;funcret
  2348  0058EE                     __end_of_SYSTEM_Initialize:
  2349                           	opt callstack 0
  2350                           
  2351 ;; *************** function _TMR3_Initialize *****************
  2352 ;; Defined at:
  2353 ;;		line 39 in file "mcc_generated_files/tmr3.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, status,2, status,0
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2367 ;;      Params:         0       0       0       0       0       0       0       0       0
  2368 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2369 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2370 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2371 ;;Total ram usage:        2 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    7
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_SYSTEM_Initialize
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text3
  2382  0055D2                     __ptext3:
  2383                           	opt callstack 0
  2384  0055D2                     _TMR3_Initialize:
  2385                           	opt callstack 22
  2386                           
  2387                           ;mcc_generated_files/tmr3.c: 44:     T3GCON = 0x00;
  2388                           
  2389                           ;incstack = 0
  2390  0055D2  0E00               	movlw	0
  2391  0055D4  6ECA               	movwf	4042,c	;volatile
  2392                           
  2393                           ;mcc_generated_files/tmr3.c: 47:     T3GATE = 0x00;
  2394  0055D6  0E00               	movlw	0
  2395  0055D8  6ECB               	movwf	4043,c	;volatile
  2396                           
  2397                           ;mcc_generated_files/tmr3.c: 50:     T3CLK = 0x02;
  2398  0055DA  0E02               	movlw	2
  2399  0055DC  6ECC               	movwf	4044,c	;volatile
  2400                           
  2401                           ;mcc_generated_files/tmr3.c: 53:     TMR3H = 0x06;
  2402  0055DE  0E06               	movlw	6
  2403  0055E0  6EC8               	movwf	4040,c	;volatile
  2404                           
  2405                           ;mcc_generated_files/tmr3.c: 56:     TMR3L = 0x00;
  2406  0055E2  0E00               	movlw	0
  2407  0055E4  6EC7               	movwf	4039,c	;volatile
  2408                           
  2409                           ;mcc_generated_files/tmr3.c: 59:     PIR4bits.TMR3IF = 0;
  2410  0055E6  010E               	movlb	14	; () banked
  2411  0055E8  95CE               	bcf	206,2,b	;volatile
  2412                           
  2413                           ; BSR set to: 14
  2414                           ;mcc_generated_files/tmr3.c: 62:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  2415  0055EA  50C7               	movf	4039,w,c	;volatile
  2416  0055EC  CFC8 F00C          	movff	4040,??_TMR3_Initialize	;volatile
  2417  0055F0  6A0D               	clrf	(??_TMR3_Initialize+1)& (0+255),c
  2418  0055F2  C00C  F00D         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  2419  0055F6  6A0C               	clrf	??_TMR3_Initialize,c
  2420  0055F8  100C               	iorwf	??_TMR3_Initialize,w,c
  2421  0055FA  0100               	movlb	0	; () banked
  2422  0055FC  6FEF               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  2423  0055FE  500D               	movf	??_TMR3_Initialize+1,w,c
  2424  005600  6FF0               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;mcc_generated_files/tmr3.c: 65:     PIE4bits.TMR3IE = 1;
  2428  005602  010E               	movlb	14	; () banked
  2429  005604  85C6               	bsf	198,2,b	;volatile
  2430                           
  2431                           ; BSR set to: 14
  2432                           ;mcc_generated_files/tmr3.c: 68:     T3CON = 0x01;
  2433  005606  0E01               	movlw	1
  2434  005608  6EC9               	movwf	4041,c	;volatile
  2435                           
  2436                           ; BSR set to: 14
  2437  00560A  0012               	return		;funcret
  2438  00560C                     __end_of_TMR3_Initialize:
  2439                           	opt callstack 0
  2440                           
  2441 ;; *************** function _TMR1_Initialize *****************
  2442 ;; Defined at:
  2443 ;;		line 40 in file "mcc_generated_files/tmr1.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2457 ;;      Params:         0       0       0       0       0       0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2459 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2460 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2461 ;;Total ram usage:        2 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; Hardware stack levels required when called:    7
  2464 ;; This function calls:
  2465 ;;		Nothing
  2466 ;; This function is called by:
  2467 ;;		_SYSTEM_Initialize
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text4
  2472  00560C                     __ptext4:
  2473                           	opt callstack 0
  2474  00560C                     _TMR1_Initialize:
  2475                           	opt callstack 22
  2476                           
  2477                           ;mcc_generated_files/tmr1.c: 45:     T1GCON = 0x00;
  2478                           
  2479                           ; BSR set to: 14
  2480                           ;incstack = 0
  2481  00560C  0E00               	movlw	0
  2482  00560E  6ED0               	movwf	4048,c	;volatile
  2483                           
  2484                           ;mcc_generated_files/tmr1.c: 48:     T1GATE = 0x00;
  2485  005610  0E00               	movlw	0
  2486  005612  6ED1               	movwf	4049,c	;volatile
  2487                           
  2488                           ;mcc_generated_files/tmr1.c: 51:     T1CLK = 0x01;
  2489  005614  0E01               	movlw	1
  2490  005616  6ED2               	movwf	4050,c	;volatile
  2491                           
  2492                           ;mcc_generated_files/tmr1.c: 54:     TMR1H = 0xC1;
  2493  005618  0EC1               	movlw	193
  2494  00561A  6ECE               	movwf	4046,c	;volatile
  2495                           
  2496                           ;mcc_generated_files/tmr1.c: 57:     TMR1L = 0x80;
  2497  00561C  0E80               	movlw	128
  2498  00561E  6ECD               	movwf	4045,c	;volatile
  2499                           
  2500                           ;mcc_generated_files/tmr1.c: 60:     PIR4bits.TMR1IF = 0;
  2501  005620  010E               	movlb	14	; () banked
  2502  005622  91CE               	bcf	206,0,b	;volatile
  2503                           
  2504                           ; BSR set to: 14
  2505                           ;mcc_generated_files/tmr1.c: 63:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2506  005624  50CD               	movf	4045,w,c	;volatile
  2507  005626  CFCE F00C          	movff	4046,??_TMR1_Initialize	;volatile
  2508  00562A  6A0D               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  2509  00562C  C00C  F00D         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  2510  005630  6A0C               	clrf	??_TMR1_Initialize,c
  2511  005632  100C               	iorwf	??_TMR1_Initialize,w,c
  2512  005634  0100               	movlb	0	; () banked
  2513  005636  6FF1               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  2514  005638  500D               	movf	??_TMR1_Initialize+1,w,c
  2515  00563A  6FF2               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  2516                           
  2517                           ; BSR set to: 0
  2518                           ;mcc_generated_files/tmr1.c: 66:     PIE4bits.TMR1IE = 1;
  2519  00563C  010E               	movlb	14	; () banked
  2520  00563E  81C6               	bsf	198,0,b	;volatile
  2521                           
  2522                           ; BSR set to: 14
  2523                           ;mcc_generated_files/tmr1.c: 70:     T1CON = 0x11;
  2524  005640  0E11               	movlw	17
  2525  005642  6ECF               	movwf	4047,c	;volatile
  2526                           
  2527                           ; BSR set to: 14
  2528  005644  0012               	return		;funcret
  2529  005646                     __end_of_TMR1_Initialize:
  2530                           	opt callstack 0
  2531                           
  2532 ;; *************** function _TMR0_Initialize *****************
  2533 ;; Defined at:
  2534 ;;		line 41 in file "mcc_generated_files/tmr0.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;		None
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2548 ;;      Params:         0       0       0       0       0       0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2550 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2551 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2552 ;;Total ram usage:        2 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; Hardware stack levels required when called:    7
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_SYSTEM_Initialize
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text5
  2563  00577E                     __ptext5:
  2564                           	opt callstack 0
  2565  00577E                     _TMR0_Initialize:
  2566                           	opt callstack 22
  2567                           
  2568                           ;mcc_generated_files/tmr0.c: 45:     T0CON1 = 0x10;
  2569                           
  2570                           ; BSR set to: 14
  2571                           ;incstack = 0
  2572  00577E  0E10               	movlw	16
  2573  005780  6ED6               	movwf	4054,c	;volatile
  2574                           
  2575                           ;mcc_generated_files/tmr0.c: 48:     TMR0H = 0xFE;
  2576  005782  0EFE               	movlw	254
  2577  005784  6ED4               	movwf	4052,c	;volatile
  2578                           
  2579                           ;mcc_generated_files/tmr0.c: 51:     TMR0L = 0x00;
  2580  005786  0E00               	movlw	0
  2581  005788  6ED3               	movwf	4051,c	;volatile
  2582                           
  2583                           ;mcc_generated_files/tmr0.c: 54:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  2584  00578A  50D3               	movf	4051,w,c	;volatile
  2585  00578C  CFD4 F00C          	movff	4052,??_TMR0_Initialize	;volatile
  2586  005790  6A0D               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  2587  005792  C00C  F00D         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  2588  005796  6A0C               	clrf	??_TMR0_Initialize,c
  2589  005798  100C               	iorwf	??_TMR0_Initialize,w,c
  2590  00579A  0102               	movlb	2	; () banked
  2591  00579C  6F32               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
  2592  00579E  500D               	movf	??_TMR0_Initialize+1,w,c
  2593  0057A0  6F33               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
  2594                           
  2595                           ; BSR set to: 2
  2596                           ;mcc_generated_files/tmr0.c: 57:     PIR0bits.TMR0IF = 0;
  2597  0057A2  010E               	movlb	14	; () banked
  2598  0057A4  9BCA               	bcf	202,5,b	;volatile
  2599                           
  2600                           ; BSR set to: 14
  2601                           ;mcc_generated_files/tmr0.c: 60:     PIE0bits.TMR0IE = 1;
  2602  0057A6  8BC2               	bsf	194,5,b	;volatile
  2603                           
  2604                           ; BSR set to: 14
  2605                           ;mcc_generated_files/tmr0.c: 64:     T0CON0 = 0x90;
  2606  0057A8  0E90               	movlw	144
  2607  0057AA  6ED5               	movwf	4053,c	;volatile
  2608                           
  2609                           ; BSR set to: 14
  2610  0057AC  0012               	return		;funcret
  2611  0057AE                     __end_of_TMR0_Initialize:
  2612                           	opt callstack 0
  2613                           
  2614 ;; *************** function _SPI1_Initialize *****************
  2615 ;; Defined at:
  2616 ;;		line 35 in file "mcc_generated_files/spi1.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;		None
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;		None
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  1    wreg      void 
  2623 ;; Registers used:
  2624 ;;		wreg, status,2
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2630 ;;      Params:         0       0       0       0       0       0       0       0       0
  2631 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2632 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2633 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2634 ;;Total ram usage:        0 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    7
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		_SYSTEM_Initialize
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text6
  2645  005968                     __ptext6:
  2646                           	opt callstack 0
  2647  005968                     _SPI1_Initialize:
  2648                           	opt callstack 22
  2649                           
  2650                           ;mcc_generated_files/spi1.c: 38:     SSP1CLKPPS = 17;
  2651                           
  2652                           ; BSR set to: 14
  2653                           ;incstack = 0
  2654  005968  0E11               	movlw	17
  2655  00596A  010E               	movlb	14	; () banked
  2656  00596C  6FB7               	movwf	183,b	;volatile
  2657                           
  2658                           ;mcc_generated_files/spi1.c: 39:     SSP1DATPPS = 23;
  2659  00596E  0E17               	movlw	23
  2660  005970  6FB8               	movwf	184,b	;volatile
  2661                           
  2662                           ;mcc_generated_files/spi1.c: 40:     RC1PPS = 13;
  2663  005972  0E0D               	movlw	13
  2664  005974  6FF8               	movwf	248,b	;volatile
  2665                           
  2666                           ;mcc_generated_files/spi1.c: 41:     RC2PPS = 14;
  2667  005976  0E0E               	movlw	14
  2668  005978  6FF9               	movwf	249,b	;volatile
  2669                           
  2670                           ;mcc_generated_files/spi1.c: 45:     SSP1STAT = 0x40;
  2671  00597A  0E40               	movlw	64
  2672  00597C  6E95               	movwf	3989,c	;volatile
  2673                           
  2674                           ;mcc_generated_files/spi1.c: 47:     SSP1CON1 = 0x12;
  2675  00597E  0E12               	movlw	18
  2676  005980  6E96               	movwf	3990,c	;volatile
  2677                           
  2678                           ;mcc_generated_files/spi1.c: 48:     SSP1ADD = 0x01;
  2679  005982  0E01               	movlw	1
  2680  005984  6E93               	movwf	3987,c	;volatile
  2681                           
  2682                           ; BSR set to: 14
  2683                           ;mcc_generated_files/spi1.c: 49:     TRISCbits.TRISC1 = 0;
  2684  005986  928A               	bcf	3978,1,c	;volatile
  2685                           
  2686                           ; BSR set to: 14
  2687                           ;mcc_generated_files/spi1.c: 50:     SSP1CON1bits.SSPEN = 0;
  2688  005988  9A96               	bcf	3990,5,c	;volatile
  2689                           
  2690                           ; BSR set to: 14
  2691  00598A  0012               	return		;funcret
  2692  00598C                     __end_of_SPI1_Initialize:
  2693                           	opt callstack 0
  2694                           
  2695 ;; *************** function _PMD_Initialize *****************
  2696 ;; Defined at:
  2697 ;;		line 51 in file "mcc_generated_files/mcc.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2711 ;;      Params:         0       0       0       0       0       0       0       0       0
  2712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2714 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2715 ;;Total ram usage:        0 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    7
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_SYSTEM_Initialize
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text7
  2726  0059AE                     __ptext7:
  2727                           	opt callstack 0
  2728  0059AE                     _PMD_Initialize:
  2729                           	opt callstack 22
  2730                           
  2731                           ;mcc_generated_files/mcc.c: 54:     PMD0 = 0x00;
  2732                           
  2733                           ; BSR set to: 14
  2734                           ;incstack = 0
  2735  0059AE  0E00               	movlw	0
  2736  0059B0  010E               	movlb	14	; () banked
  2737  0059B2  6FE1               	movwf	225,b	;volatile
  2738                           
  2739                           ;mcc_generated_files/mcc.c: 56:     PMD1 = 0x00;
  2740  0059B4  0E00               	movlw	0
  2741  0059B6  6FE2               	movwf	226,b	;volatile
  2742                           
  2743                           ;mcc_generated_files/mcc.c: 58:     PMD2 = 0x00;
  2744  0059B8  0E00               	movlw	0
  2745  0059BA  6FE3               	movwf	227,b	;volatile
  2746                           
  2747                           ;mcc_generated_files/mcc.c: 60:     PMD3 = 0x00;
  2748  0059BC  0E00               	movlw	0
  2749  0059BE  6FE4               	movwf	228,b	;volatile
  2750                           
  2751                           ;mcc_generated_files/mcc.c: 62:     PMD4 = 0x00;
  2752  0059C0  0E00               	movlw	0
  2753  0059C2  6FE5               	movwf	229,b	;volatile
  2754                           
  2755                           ;mcc_generated_files/mcc.c: 64:     PMD5 = 0x00;
  2756  0059C4  0E00               	movlw	0
  2757  0059C6  6FE6               	movwf	230,b	;volatile
  2758                           
  2759                           ; BSR set to: 14
  2760  0059C8  0012               	return		;funcret
  2761  0059CA                     __end_of_PMD_Initialize:
  2762                           	opt callstack 0
  2763                           
  2764 ;; *************** function _PIN_MANAGER_Initialize *****************
  2765 ;; Defined at:
  2766 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;		None
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      void 
  2773 ;; Registers used:
  2774 ;;		wreg, status,2
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2780 ;;      Params:         0       0       0       0       0       0       0       0       0
  2781 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2782 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2783 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2784 ;;Total ram usage:        0 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; Hardware stack levels required when called:    7
  2787 ;; This function calls:
  2788 ;;		Nothing
  2789 ;; This function is called by:
  2790 ;;		_SYSTEM_Initialize
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text8
  2795  00525C                     __ptext8:
  2796                           	opt callstack 0
  2797  00525C                     _PIN_MANAGER_Initialize:
  2798                           	opt callstack 22
  2799                           
  2800                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2801                           
  2802                           ; BSR set to: 14
  2803                           ;incstack = 0
  2804  00525C  0E00               	movlw	0
  2805  00525E  6E83               	movwf	3971,c	;volatile
  2806                           
  2807                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2808  005260  0E00               	movlw	0
  2809  005262  6E84               	movwf	3972,c	;volatile
  2810                           
  2811                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2812  005264  0E00               	movlw	0
  2813  005266  6E85               	movwf	3973,c	;volatile
  2814                           
  2815                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  2816  005268  6888               	setf	3976,c	;volatile
  2817                           
  2818                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF6;
  2819  00526A  0EF6               	movlw	246
  2820  00526C  6E89               	movwf	3977,c	;volatile
  2821                           
  2822                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xF8;
  2823  00526E  0EF8               	movlw	248
  2824  005270  6E8A               	movwf	3978,c	;volatile
  2825                           
  2826                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x78;
  2827  005272  0E78               	movlw	120
  2828  005274  010F               	movlb	15	; () banked
  2829  005276  6F21               	movwf	33,b	;volatile
  2830                           
  2831                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xF5;
  2832  005278  0EF5               	movlw	245
  2833  00527A  6F19               	movwf	25,b	;volatile
  2834                           
  2835                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x4F;
  2836  00527C  0E4F               	movlw	79
  2837  00527E  6F11               	movwf	17,b	;volatile
  2838                           
  2839                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  2840  005280  0E00               	movlw	0
  2841  005282  6F2D               	movwf	45,b	;volatile
  2842                           
  2843                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  2844  005284  0E00               	movlw	0
  2845  005286  6F18               	movwf	24,b	;volatile
  2846                           
  2847                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  2848  005288  0E00               	movlw	0
  2849  00528A  6F10               	movwf	16,b	;volatile
  2850                           
  2851                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  2852  00528C  0E00               	movlw	0
  2853  00528E  6F20               	movwf	32,b	;volatile
  2854                           
  2855                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  2856  005290  0E00               	movlw	0
  2857  005292  6F0F               	movwf	15,b	;volatile
  2858                           
  2859                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  2860  005294  0E00               	movlw	0
  2861  005296  6F17               	movwf	23,b	;volatile
  2862                           
  2863                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  2864  005298  0E00               	movlw	0
  2865  00529A  6F1F               	movwf	31,b	;volatile
  2866                           
  2867                           ; BSR set to: 15
  2868                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  2869  00529C  690E               	setf	14,b	;volatile
  2870                           
  2871                           ; BSR set to: 15
  2872                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  2873  00529E  6916               	setf	22,b	;volatile
  2874                           
  2875                           ; BSR set to: 15
  2876                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  2877  0052A0  691E               	setf	30,b	;volatile
  2878                           
  2879                           ; BSR set to: 15
  2880                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  2881  0052A2  690D               	setf	13,b	;volatile
  2882                           
  2883                           ; BSR set to: 15
  2884                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  2885  0052A4  6915               	setf	21,b	;volatile
  2886                           
  2887                           ; BSR set to: 15
  2888                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  2889  0052A6  691D               	setf	29,b	;volatile
  2890                           
  2891                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
  2892  0052A8  0E08               	movlw	8
  2893  0052AA  6F2A               	movwf	42,b	;volatile
  2894                           
  2895                           ;mcc_generated_files/pin_manager.c: 115:     RXPPS = 0x09;
  2896  0052AC  0E09               	movlw	9
  2897  0052AE  010E               	movlb	14	; () banked
  2898  0052B0  6FB5               	movwf	181,b	;volatile
  2899                           
  2900                           ;mcc_generated_files/pin_manager.c: 116:     SSP1CLKPPS = 0x11;
  2901  0052B2  0E11               	movlw	17
  2902  0052B4  6FB7               	movwf	183,b	;volatile
  2903                           
  2904                           ;mcc_generated_files/pin_manager.c: 117:     INT0PPS = 0x04;
  2905  0052B6  0E04               	movlw	4
  2906  0052B8  6FA1               	movwf	161,b	;volatile
  2907                           
  2908                           ;mcc_generated_files/pin_manager.c: 118:     RB0PPS = 0x09;
  2909  0052BA  0E09               	movlw	9
  2910  0052BC  6FEF               	movwf	239,b	;volatile
  2911                           
  2912                           ;mcc_generated_files/pin_manager.c: 119:     RC1PPS = 0x0D;
  2913  0052BE  0E0D               	movlw	13
  2914  0052C0  6FF8               	movwf	248,b	;volatile
  2915                           
  2916                           ;mcc_generated_files/pin_manager.c: 120:     RC2PPS = 0x0E;
  2917  0052C2  0E0E               	movlw	14
  2918  0052C4  6FF9               	movwf	249,b	;volatile
  2919                           
  2920                           ;mcc_generated_files/pin_manager.c: 121:     T0CKIPPS = 0x05;
  2921  0052C6  0E05               	movlw	5
  2922  0052C8  6FA4               	movwf	164,b	;volatile
  2923                           
  2924                           ;mcc_generated_files/pin_manager.c: 122:     SSP1DATPPS = 0x17;
  2925  0052CA  0E17               	movlw	23
  2926  0052CC  6FB8               	movwf	184,b	;volatile
  2927                           
  2928                           ; BSR set to: 14
  2929  0052CE  0012               	return		;funcret
  2930  0052D0                     __end_of_PIN_MANAGER_Initialize:
  2931                           	opt callstack 0
  2932                           
  2933 ;; *************** function _OSCILLATOR_Initialize *****************
  2934 ;; Defined at:
  2935 ;;		line 37 in file "mcc_generated_files/mcc.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;		None
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2949 ;;      Params:         0       0       0       0       0       0       0       0       0
  2950 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2951 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2952 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2953 ;;Total ram usage:        0 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    7
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_SYSTEM_Initialize
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text9
  2964  005A1E                     __ptext9:
  2965                           	opt callstack 0
  2966  005A1E                     _OSCILLATOR_Initialize:
  2967                           	opt callstack 22
  2968                           
  2969                           ;mcc_generated_files/mcc.c: 40:     OSCCON1 = 0x60;
  2970                           
  2971                           ; BSR set to: 14
  2972                           ;incstack = 0
  2973  005A1E  0E60               	movlw	96
  2974  005A20  010E               	movlb	14	; () banked
  2975  005A22  6FD8               	movwf	216,b	;volatile
  2976                           
  2977                           ;mcc_generated_files/mcc.c: 42:     OSCCON3 = 0x00;
  2978  005A24  0E00               	movlw	0
  2979  005A26  6FDA               	movwf	218,b	;volatile
  2980                           
  2981                           ;mcc_generated_files/mcc.c: 44:     OSCEN = 0x00;
  2982  005A28  0E00               	movlw	0
  2983  005A2A  6FDC               	movwf	220,b	;volatile
  2984                           
  2985                           ;mcc_generated_files/mcc.c: 46:     OSCFRQ = 0x08;
  2986  005A2C  0E08               	movlw	8
  2987  005A2E  6FDE               	movwf	222,b	;volatile
  2988                           
  2989                           ;mcc_generated_files/mcc.c: 48:     OSCTUNE = 0x00;
  2990  005A30  0E00               	movlw	0
  2991  005A32  6FDD               	movwf	221,b	;volatile
  2992                           
  2993                           ; BSR set to: 14
  2994  005A34  0012               	return		;funcret
  2995  005A36                     __end_of_OSCILLATOR_Initialize:
  2996                           	opt callstack 0
  2997                           
  2998 ;; *************** function _INTERRUPT_Initialize *****************
  2999 ;; Defined at:
  3000 ;;		line 34 in file "mcc_generated_files/interrupt_manager.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		None
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3014 ;;      Params:         0       0       0       0       0       0       0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3017 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3018 ;;Total ram usage:        0 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; Hardware stack levels required when called:    7
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_SYSTEM_Initialize
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text10
  3029  005A4C                     __ptext10:
  3030                           	opt callstack 0
  3031  005A4C                     _INTERRUPT_Initialize:
  3032                           	opt callstack 22
  3033                           
  3034                           ;mcc_generated_files/interrupt_manager.c: 37:     INTCONbits.IPEN = 1;
  3035                           
  3036                           ; BSR set to: 14
  3037                           ;incstack = 0
  3038  005A4C  8AF2               	bsf	4082,5,c	;volatile
  3039                           
  3040                           ;mcc_generated_files/interrupt_manager.c: 42:     IPR0bits.TMR0IP = 1;
  3041  005A4E  010E               	movlb	14	; () banked
  3042  005A50  8BBA               	bsf	186,5,b	;volatile
  3043                           
  3044                           ;mcc_generated_files/interrupt_manager.c: 45:     IPR0bits.INT0IP = 0;
  3045  005A52  91BA               	bcf	186,0,b	;volatile
  3046                           
  3047                           ;mcc_generated_files/interrupt_manager.c: 48:     IPR4bits.TMR1IP = 0;
  3048  005A54  91BE               	bcf	190,0,b	;volatile
  3049                           
  3050                           ;mcc_generated_files/interrupt_manager.c: 51:     IPR3bits.TXIP = 0;
  3051  005A56  99BD               	bcf	189,4,b	;volatile
  3052                           
  3053                           ;mcc_generated_files/interrupt_manager.c: 54:     IPR3bits.RCIP = 0;
  3054  005A58  9BBD               	bcf	189,5,b	;volatile
  3055                           
  3056                           ;mcc_generated_files/interrupt_manager.c: 57:     IPR4bits.TMR3IP = 0;
  3057  005A5A  95BE               	bcf	190,2,b	;volatile
  3058                           
  3059                           ; BSR set to: 14
  3060  005A5C  0012               	return		;funcret
  3061  005A5E                     __end_of_INTERRUPT_Initialize:
  3062                           	opt callstack 0
  3063                           
  3064 ;; *************** function _EXT_INT_Initialize *****************
  3065 ;; Defined at:
  3066 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;		None
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;		None
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      void 
  3073 ;; Registers used:
  3074 ;;		None
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3080 ;;      Params:         0       0       0       0       0       0       0       0       0
  3081 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3083 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3084 ;;Total ram usage:        0 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    7
  3087 ;; This function calls:
  3088 ;;		Nothing
  3089 ;; This function is called by:
  3090 ;;		_SYSTEM_Initialize
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text11
  3095  005AA6                     __ptext11:
  3096                           	opt callstack 0
  3097  005AA6                     _EXT_INT_Initialize:
  3098                           	opt callstack 22
  3099                           
  3100                           ;mcc_generated_files/ext_int.c: 63:     (PIR0bits.INT0IF = 0);
  3101                           
  3102                           ; BSR set to: 14
  3103                           ;incstack = 0
  3104  005AA6  010E               	movlb	14	; () banked
  3105  005AA8  91CA               	bcf	202,0,b	;volatile
  3106                           
  3107                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INT0EDG = 1);
  3108  005AAA  80F2               	bsf	4082,0,c	;volatile
  3109                           
  3110                           ;mcc_generated_files/ext_int.c: 67:     (PIE0bits.INT0IE = 1);
  3111  005AAC  81C2               	bsf	194,0,b	;volatile
  3112                           
  3113                           ; BSR set to: 14
  3114  005AAE  0012               	return		;funcret
  3115  005AB0                     __end_of_EXT_INT_Initialize:
  3116                           	opt callstack 0
  3117                           
  3118 ;; *************** function _EUSART_Initialize *****************
  3119 ;; Defined at:
  3120 ;;		line 71 in file "mcc_generated_files/eusart.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;		None
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;		None
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3134 ;;      Params:         0       0       0       0       0       0       0       0       0
  3135 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3137 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3138 ;;Total ram usage:        0 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:    8
  3141 ;; This function calls:
  3142 ;;		_EUSART_SetErrorHandler
  3143 ;;		_EUSART_SetFramingErrorHandler
  3144 ;;		_EUSART_SetOverrunErrorHandler
  3145 ;;		_EUSART_SetRxInterruptHandler
  3146 ;;		_EUSART_SetTxInterruptHandler
  3147 ;; This function is called by:
  3148 ;;		_SYSTEM_Initialize
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           	psect	text12
  3153  0051E0                     __ptext12:
  3154                           	opt callstack 0
  3155  0051E0                     _EUSART_Initialize:
  3156                           	opt callstack 21
  3157                           
  3158                           ;mcc_generated_files/eusart.c: 74:     PIE3bits.RCIE = 0;
  3159                           
  3160                           ; BSR set to: 14
  3161                           ;incstack = 0
  3162  0051E0  010E               	movlb	14	; () banked
  3163  0051E2  9BC5               	bcf	197,5,b	;volatile
  3164                           
  3165                           ; BSR set to: 14
  3166                           ;mcc_generated_files/eusart.c: 75:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3167  0051E4  0E22               	movlw	low _EUSART_Receive_ISR
  3168  0051E6  6E0C               	movwf	EUSART_SetRxInterruptHandler@interruptHandler,c
  3169  0051E8  0E4E               	movlw	high _EUSART_Receive_ISR
  3170  0051EA  6E0D               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1,c
  3171  0051EC  EC5D  F02D         	call	_EUSART_SetRxInterruptHandler	;wreg free
  3172                           
  3173                           ;mcc_generated_files/eusart.c: 76:     PIE3bits.TXIE = 0;
  3174  0051F0  010E               	movlb	14	; () banked
  3175  0051F2  99C5               	bcf	197,4,b	;volatile
  3176                           
  3177                           ;mcc_generated_files/eusart.c: 77:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3178  0051F4  0E68               	movlw	low _EUSART_Transmit_ISR
  3179  0051F6  6E0C               	movwf	EUSART_SetTxInterruptHandler@interruptHandler,c
  3180  0051F8  0E58               	movlw	high _EUSART_Transmit_ISR
  3181  0051FA  6E0D               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1,c
  3182  0051FC  EC58  F02D         	call	_EUSART_SetTxInterruptHandler	;wreg free
  3183                           
  3184                           ;mcc_generated_files/eusart.c: 81:     BAUD1CON = 0x08;
  3185  005200  0E08               	movlw	8
  3186  005202  6E9F               	movwf	3999,c	;volatile
  3187                           
  3188                           ;mcc_generated_files/eusart.c: 84:     RC1STA = 0x90;
  3189  005204  0E90               	movlw	144
  3190  005206  6E9D               	movwf	3997,c	;volatile
  3191                           
  3192                           ;mcc_generated_files/eusart.c: 87:     TX1STA = 0x24;
  3193  005208  0E24               	movlw	36
  3194  00520A  6E9E               	movwf	3998,c	;volatile
  3195                           
  3196                           ;mcc_generated_files/eusart.c: 90:     SP1BRGL = 0x82;
  3197  00520C  0E82               	movlw	130
  3198  00520E  6E9B               	movwf	3995,c	;volatile
  3199                           
  3200                           ;mcc_generated_files/eusart.c: 93:     SP1BRGH = 0x06;
  3201  005210  0E06               	movlw	6
  3202  005212  6E9C               	movwf	3996,c	;volatile
  3203                           
  3204                           ;mcc_generated_files/eusart.c: 96:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  3205  005214  0E32               	movlw	low _EUSART_DefaultFramingErrorHandler
  3206  005216  6E0C               	movwf	EUSART_SetFramingErrorHandler@interruptHandler,c
  3207  005218  0E5B               	movlw	high _EUSART_DefaultFramingErrorHandler
  3208  00521A  6E0D               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1,c
  3209  00521C  EC67  F02D         	call	_EUSART_SetFramingErrorHandler	;wreg free
  3210                           
  3211                           ;mcc_generated_files/eusart.c: 97:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  3212  005220  0E0C               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3213  005222  6E0C               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler,c
  3214  005224  0E5B               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3215  005226  6E0D               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1,c
  3216  005228  EC62  F02D         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  3217                           
  3218                           ;mcc_generated_files/eusart.c: 98:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  3219  00522C  0E12               	movlw	low _EUSART_DefaultErrorHandler
  3220  00522E  6E0C               	movwf	EUSART_SetErrorHandler@interruptHandler,c
  3221  005230  0E5B               	movlw	high _EUSART_DefaultErrorHandler
  3222  005232  6E0D               	movwf	EUSART_SetErrorHandler@interruptHandler+1,c
  3223  005234  EC6C  F02D         	call	_EUSART_SetErrorHandler	;wreg free
  3224                           
  3225                           ;mcc_generated_files/eusart.c: 101:     eusartRxLastError.status = 0;
  3226  005238  0E00               	movlw	0
  3227  00523A  0100               	movlb	0	; () banked
  3228  00523C  6FEB               	movwf	_eusartRxLastError& (0+255),b	;volatile
  3229                           
  3230                           ;mcc_generated_files/eusart.c: 104:     eusartTxHead = 0;
  3231  00523E  0E00               	movlw	0
  3232  005240  6E46               	movwf	_eusartTxHead,c	;volatile
  3233                           
  3234                           ;mcc_generated_files/eusart.c: 105:     eusartTxTail = 0;
  3235  005242  0E00               	movlw	0
  3236  005244  6E45               	movwf	_eusartTxTail,c	;volatile
  3237                           
  3238                           ;mcc_generated_files/eusart.c: 106:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  3239  005246  0E08               	movlw	8
  3240  005248  6FF5               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
  3241                           
  3242                           ;mcc_generated_files/eusart.c: 108:     eusartRxHead = 0;
  3243  00524A  0E00               	movlw	0
  3244  00524C  6E44               	movwf	_eusartRxHead,c	;volatile
  3245                           
  3246                           ;mcc_generated_files/eusart.c: 109:     eusartRxTail = 0;
  3247  00524E  0E00               	movlw	0
  3248  005250  6FED               	movwf	_eusartRxTail& (0+255),b	;volatile
  3249                           
  3250                           ;mcc_generated_files/eusart.c: 110:     eusartRxCount = 0;
  3251  005252  0E00               	movlw	0
  3252  005254  6FEC               	movwf	_eusartRxCount& (0+255),b	;volatile
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;mcc_generated_files/eusart.c: 113:     PIE3bits.RCIE = 1;
  3256  005256  010E               	movlb	14	; () banked
  3257  005258  8BC5               	bsf	197,5,b	;volatile
  3258                           
  3259                           ; BSR set to: 14
  3260  00525A  0012               	return		;funcret
  3261  00525C                     __end_of_EUSART_Initialize:
  3262                           	opt callstack 0
  3263                           
  3264 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3265 ;; Defined at:
  3266 ;;		line 253 in file "mcc_generated_files/eusart.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  3269 ;;		 -> EUSART_Transmit_ISR(1), 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;		None
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  1    wreg      void 
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3281 ;;      Params:         2       0       0       0       0       0       0       0       0
  3282 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3284 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3285 ;;Total ram usage:        2 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    7
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_EUSART_Initialize
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text13
  3296  005AB0                     __ptext13:
  3297                           	opt callstack 0
  3298  005AB0                     _EUSART_SetTxInterruptHandler:
  3299                           	opt callstack 21
  3300                           
  3301                           ;mcc_generated_files/eusart.c: 254:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3302                           
  3303                           ; BSR set to: 14
  3304                           ;incstack = 0
  3305  005AB0  C00C  F0F3         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  3306  005AB4  C00D  F0F4         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  3307  005AB8  0012               	return		;funcret
  3308  005ABA                     __end_of_EUSART_SetTxInterruptHandler:
  3309                           	opt callstack 0
  3310                           
  3311 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3312 ;; Defined at:
  3313 ;;		line 257 in file "mcc_generated_files/eusart.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  3316 ;;		 -> EUSART_Receive_ISR(1), 
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;		None
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      void 
  3321 ;; Registers used:
  3322 ;;		wreg, status,2, status,0
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3328 ;;      Params:         2       0       0       0       0       0       0       0       0
  3329 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3330 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3331 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3332 ;;Total ram usage:        2 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:    7
  3335 ;; This function calls:
  3336 ;;		Nothing
  3337 ;; This function is called by:
  3338 ;;		_EUSART_Initialize
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text14
  3343  005ABA                     __ptext14:
  3344                           	opt callstack 0
  3345  005ABA                     _EUSART_SetRxInterruptHandler:
  3346                           	opt callstack 21
  3347                           
  3348                           ;mcc_generated_files/eusart.c: 258:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3349                           
  3350                           ;incstack = 0
  3351  005ABA  C00C  F1FE         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  3352  005ABE  C00D  F1FF         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  3353  005AC2  0012               	return		;funcret
  3354  005AC4                     __end_of_EUSART_SetRxInterruptHandler:
  3355                           	opt callstack 0
  3356                           
  3357 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3358 ;; Defined at:
  3359 ;;		line 245 in file "mcc_generated_files/eusart.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  3362 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;		None
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, status,2, status,0
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3374 ;;      Params:         2       0       0       0       0       0       0       0       0
  3375 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3377 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3378 ;;Total ram usage:        2 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; Hardware stack levels required when called:    7
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_EUSART_Initialize
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           	psect	text15
  3389  005AC4                     __ptext15:
  3390                           	opt callstack 0
  3391  005AC4                     _EUSART_SetOverrunErrorHandler:
  3392                           	opt callstack 21
  3393                           
  3394                           ;mcc_generated_files/eusart.c: 246:     EUSART_OverrunErrorHandler = interruptHandler;
  3395                           
  3396                           ;incstack = 0
  3397  005AC4  C00C  F1FA         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  3398  005AC8  C00D  F1FB         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  3399  005ACC  0012               	return		;funcret
  3400  005ACE                     __end_of_EUSART_SetOverrunErrorHandler:
  3401                           	opt callstack 0
  3402                           
  3403 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3404 ;; Defined at:
  3405 ;;		line 241 in file "mcc_generated_files/eusart.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  3408 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;		None
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  1    wreg      void 
  3413 ;; Registers used:
  3414 ;;		wreg, status,2, status,0
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3420 ;;      Params:         2       0       0       0       0       0       0       0       0
  3421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3423 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3424 ;;Total ram usage:        2 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; Hardware stack levels required when called:    7
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_EUSART_Initialize
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text16
  3435  005ACE                     __ptext16:
  3436                           	opt callstack 0
  3437  005ACE                     _EUSART_SetFramingErrorHandler:
  3438                           	opt callstack 21
  3439                           
  3440                           ;mcc_generated_files/eusart.c: 242:     EUSART_FramingErrorHandler = interruptHandler;
  3441                           
  3442                           ;incstack = 0
  3443  005ACE  C00C  F1FC         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  3444  005AD2  C00D  F1FD         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  3445  005AD6  0012               	return		;funcret
  3446  005AD8                     __end_of_EUSART_SetFramingErrorHandler:
  3447                           	opt callstack 0
  3448                           
  3449 ;; *************** function _EUSART_SetErrorHandler *****************
  3450 ;; Defined at:
  3451 ;;		line 249 in file "mcc_generated_files/eusart.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  3454 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;		None
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2, status,0
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3466 ;;      Params:         2       0       0       0       0       0       0       0       0
  3467 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3469 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3470 ;;Total ram usage:        2 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; Hardware stack levels required when called:    7
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		_EUSART_Initialize
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text17
  3481  005AD8                     __ptext17:
  3482                           	opt callstack 0
  3483  005AD8                     _EUSART_SetErrorHandler:
  3484                           	opt callstack 21
  3485                           
  3486                           ;mcc_generated_files/eusart.c: 250:     EUSART_ErrorHandler = interruptHandler;
  3487                           
  3488                           ;incstack = 0
  3489  005AD8  C00C  F1F8         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  3490  005ADC  C00D  F1F9         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  3491  005AE0  0012               	return		;funcret
  3492  005AE2                     __end_of_EUSART_SetErrorHandler:
  3493                           	opt callstack 0
  3494                           
  3495 ;; *************** function _SPI1_Start *****************
  3496 ;; Defined at:
  3497 ;;		line 53 in file "mcc_generated_files/spi1.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;		None
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;		None
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      void 
  3504 ;; Registers used:
  3505 ;;		None
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3511 ;;      Params:         0       0       0       0       0       0       0       0       0
  3512 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3514 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3515 ;;Total ram usage:        0 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    7
  3518 ;; This function calls:
  3519 ;;		Nothing
  3520 ;; This function is called by:
  3521 ;;		_main
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text18
  3526  005AF6                     __ptext18:
  3527                           	opt callstack 0
  3528  005AF6                     _SPI1_Start:
  3529                           	opt callstack 23
  3530                           
  3531                           ;mcc_generated_files/spi1.c: 56:     if(!SSP1CON1bits.SSPEN)
  3532                           
  3533                           ;incstack = 0
  3534  005AF6  BA96               	btfsc	3990,5,c	;volatile
  3535  005AF8  0012               	return	
  3536                           
  3537                           ;mcc_generated_files/spi1.c: 57:     {;mcc_generated_files/spi1.c: 59:         SSP1CON1b
      +                          its.SSPEN = 1;
  3538  005AFA  8A96               	bsf	3990,5,c	;volatile
  3539  005AFC  0012               	return		;funcret
  3540  005AFE                     __end_of_SPI1_Start:
  3541                           	opt callstack 0
  3542                           
  3543 ;; *************** function _Parse_Data *****************
  3544 ;; Defined at:
  3545 ;;		line 47 in file "parse.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;		None
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  i               2  113[BANK0 ] int 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      void 
  3552 ;; Registers used:
  3553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3559 ;;      Params:         0       0       0       0       0       0       0       0       0
  3560 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3561 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3562 ;;      Totals:         1       2       0       0       0       0       0       0       0
  3563 ;;Total ram usage:        3 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:   15
  3566 ;; This function calls:
  3567 ;;		_AD9833_SetFrequency
  3568 ;;		_EUSART_Write_String
  3569 ;;		_atoi
  3570 ;;		_atol
  3571 ;;		_sprintf
  3572 ;; This function is called by:
  3573 ;;		_main
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text19
  3578  00285A                     __ptext19:
  3579                           	opt callstack 0
  3580  00285A                     _Parse_Data:
  3581                           	opt callstack 15
  3582                           
  3583                           ;parse.c: 50:     EUSART_Write_String(rx_data);
  3584                           
  3585                           ;incstack = 0
  3586  00285A  0EE4               	movlw	low _rx_data
  3587  00285C  6E0D               	movwf	EUSART_Write_String@data,c
  3588  00285E  0E01               	movlw	high _rx_data
  3589  002860  6E0E               	movwf	EUSART_Write_String@data+1,c
  3590  002862  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  3591                           
  3592                           ;parse.c: 53:     for(int i = 1; rx_data[i] != '\0'; i++)
  3593  002866  0E00               	movlw	0
  3594  002868  0100               	movlb	0	; () banked
  3595  00286A  6FD2               	movwf	(Parse_Data@i+1)& (0+255),b
  3596  00286C  0E01               	movlw	1
  3597  00286E  6FD1               	movwf	Parse_Data@i& (0+255),b
  3598  002870  D04E               	goto	l9059
  3599  002872                     l9039:
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;parse.c: 54:     {;parse.c: 55:         if((rx_data[i] < '0' && rx_data[i] > ' ') || rx
      +                          _data[i] > '9' || rx_data[i] < ' ')
  3603  002872  0EE4               	movlw	low _rx_data
  3604  002874  25D1               	addwf	Parse_Data@i& (0+255),w,b
  3605  002876  6ED9               	movwf	fsr2l,c
  3606  002878  0E01               	movlw	high _rx_data
  3607  00287A  21D2               	addwfc	(Parse_Data@i+1)& (0+255),w,b
  3608  00287C  6EDA               	movwf	fsr2h,c
  3609  00287E  0E30               	movlw	48
  3610  002880  60DF               	cpfslt	indf2,c
  3611  002882  D009               	goto	u9900
  3612                           
  3613                           ; BSR set to: 0
  3614  002884  0EE4               	movlw	low _rx_data
  3615  002886  25D1               	addwf	Parse_Data@i& (0+255),w,b
  3616  002888  6ED9               	movwf	fsr2l,c
  3617  00288A  0E01               	movlw	high _rx_data
  3618  00288C  21D2               	addwfc	(Parse_Data@i+1)& (0+255),w,b
  3619  00288E  6EDA               	movwf	fsr2h,c
  3620  002890  0E21               	movlw	33
  3621  002892  60DF               	cpfslt	indf2,c
  3622  002894  D012               	goto	u9920
  3623  002896                     u9900:
  3624                           
  3625                           ; BSR set to: 0
  3626  002896  0EE4               	movlw	low _rx_data
  3627  002898  25D1               	addwf	Parse_Data@i& (0+255),w,b
  3628  00289A  6ED9               	movwf	fsr2l,c
  3629  00289C  0E01               	movlw	high _rx_data
  3630  00289E  21D2               	addwfc	(Parse_Data@i+1)& (0+255),w,b
  3631  0028A0  6EDA               	movwf	fsr2h,c
  3632  0028A2  0E3A               	movlw	58
  3633  0028A4  60DF               	cpfslt	indf2,c
  3634  0028A6  D009               	goto	u9920
  3635                           
  3636                           ; BSR set to: 0
  3637  0028A8  0EE4               	movlw	low _rx_data
  3638  0028AA  25D1               	addwf	Parse_Data@i& (0+255),w,b
  3639  0028AC  6ED9               	movwf	fsr2l,c
  3640  0028AE  0E01               	movlw	high _rx_data
  3641  0028B0  21D2               	addwfc	(Parse_Data@i+1)& (0+255),w,b
  3642  0028B2  6EDA               	movwf	fsr2h,c
  3643  0028B4  0E20               	movlw	32
  3644  0028B6  60DF               	cpfslt	indf2,c
  3645  0028B8  D028               	goto	l9057
  3646  0028BA                     u9920:
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;parse.c: 56:         {;parse.c: 58:             sprintf(output, "Unexpected Character %
      +                          c on Position %i", rx_data[i], i+1);
  3650  0028BA  0E00               	movlw	low _output
  3651  0028BC  6F9D               	movwf	sprintf@s& (0+255),b
  3652  0028BE  0E02               	movlw	high _output
  3653  0028C0  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  3654  0028C2  0E2B               	movlw	low STR_1
  3655  0028C4  6F9F               	movwf	sprintf@fmt& (0+255),b
  3656  0028C6  0E7E               	movlw	high STR_1
  3657  0028C8  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  3658  0028CA  0EE4               	movlw	low _rx_data
  3659  0028CC  25D1               	addwf	Parse_Data@i& (0+255),w,b
  3660  0028CE  6ED9               	movwf	fsr2l,c
  3661  0028D0  0E01               	movlw	high _rx_data
  3662  0028D2  21D2               	addwfc	(Parse_Data@i+1)& (0+255),w,b
  3663  0028D4  6EDA               	movwf	fsr2h,c
  3664  0028D6  50DF               	movf	indf2,w,c
  3665  0028D8  6E3B               	movwf	??_Parse_Data& (0+255),c
  3666  0028DA  503B               	movf	??_Parse_Data,w,c
  3667  0028DC  6FA1               	movwf	(?_sprintf+4)& (0+255),b
  3668  0028DE  6BA2               	clrf	(?_sprintf+5)& (0+255),b
  3669  0028E0  0E01               	movlw	1
  3670  0028E2  25D1               	addwf	Parse_Data@i& (0+255),w,b
  3671  0028E4  6FA3               	movwf	(?_sprintf+6)& (0+255),b
  3672  0028E6  0E00               	movlw	0
  3673  0028E8  21D2               	addwfc	(Parse_Data@i+1)& (0+255),w,b
  3674  0028EA  6FA4               	movwf	(?_sprintf+7)& (0+255),b
  3675  0028EC  ECEF  F029         	call	_sprintf	;wreg free
  3676                           
  3677                           ;parse.c: 59:             EUSART_Write_String(output);
  3678  0028F0  0E00               	movlw	low _output
  3679  0028F2  6E0D               	movwf	EUSART_Write_String@data,c
  3680  0028F4  0E02               	movlw	high _output
  3681  0028F6  6E0E               	movwf	EUSART_Write_String@data+1,c
  3682  0028F8  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  3683  0028FC                     l9051:
  3684                           
  3685                           ;parse.c: 60:             output[0] = '\0';
  3686  0028FC  0E00               	movlw	0
  3687  0028FE  0102               	movlb	2	; () banked
  3688  002900  6F00               	movwf	_output& (0+255),b	;volatile
  3689                           
  3690                           ; BSR set to: 2
  3691                           ;parse.c: 61:             rx_data_end = 0;
  3692  002902  0E00               	movlw	0
  3693  002904  0100               	movlb	0	; () banked
  3694  002906  6FEE               	movwf	_rx_data_end& (0+255),b	;volatile
  3695  002908  0012               	return	
  3696  00290A                     l9057:
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;parse.c: 64:     }
  3700  00290A  4BD1               	infsnz	Parse_Data@i& (0+255),f,b
  3701  00290C  2BD2               	incf	(Parse_Data@i+1)& (0+255),f,b
  3702  00290E                     l9059:
  3703                           
  3704                           ; BSR set to: 0
  3705  00290E  0EE4               	movlw	low _rx_data
  3706  002910  25D1               	addwf	Parse_Data@i& (0+255),w,b
  3707  002912  6ED9               	movwf	fsr2l,c
  3708  002914  0E01               	movlw	high _rx_data
  3709  002916  21D2               	addwfc	(Parse_Data@i+1)& (0+255),w,b
  3710  002918  6EDA               	movwf	fsr2h,c
  3711  00291A  50DF               	movf	indf2,w,c
  3712  00291C  A4D8               	btfss	status,2,c
  3713  00291E  D7A9               	goto	l9039
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;parse.c: 67:     if(rx_data[0] == 'f' || rx_data[0] == 'F')
  3717  002920  0E66               	movlw	102
  3718  002922  0101               	movlb	1	; () banked
  3719  002924  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  3720  002926  B4D8               	btfsc	status,2,c
  3721  002928  D004               	goto	u9950
  3722                           
  3723                           ; BSR set to: 1
  3724  00292A  0E46               	movlw	70
  3725  00292C  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  3726  00292E  A4D8               	btfss	status,2,c
  3727  002930  D077               	goto	l9099
  3728  002932                     u9950:
  3729                           
  3730                           ; BSR set to: 1
  3731                           ;parse.c: 68:     {;parse.c: 70:         rx_data[0] = ' ';
  3732  002932  0E20               	movlw	32
  3733  002934  6FE4               	movwf	_rx_data& (0+255),b	;volatile
  3734                           
  3735                           ; BSR set to: 1
  3736                           ;parse.c: 73:         temp_frequency = atol(rx_data);
  3737  002936  0EE4               	movlw	low _rx_data
  3738  002938  6E18               	movwf	atol@s,c
  3739  00293A  0E01               	movlw	high _rx_data
  3740  00293C  6E19               	movwf	atol@s+1,c
  3741  00293E  EC0C  F022         	call	_atol	;wreg free
  3742  002942  C018  F0E1         	movff	?_atol,_temp_frequency
  3743  002946  C019  F0E2         	movff	?_atol+1,_temp_frequency+1
  3744  00294A  C01A  F0E3         	movff	?_atol+2,_temp_frequency+2
  3745  00294E  C01B  F0E4         	movff	?_atol+3,_temp_frequency+3
  3746                           
  3747                           ;parse.c: 76:         if(temp_frequency < 1000000)
  3748  002952  0100               	movlb	0	; () banked
  3749  002954  BFE4               	btfsc	(_temp_frequency+3)& (0+255),7,b
  3750  002956  D00A               	goto	u9960
  3751  002958  51E4               	movf	(_temp_frequency+3)& (0+255),w,b
  3752  00295A  E119               	bnz	l9079
  3753  00295C  0E40               	movlw	64
  3754  00295E  5DE1               	subwf	_temp_frequency& (0+255),w,b
  3755  002960  0E42               	movlw	66
  3756  002962  59E2               	subwfb	(_temp_frequency+1)& (0+255),w,b
  3757  002964  0E0F               	movlw	15
  3758  002966  59E3               	subwfb	(_temp_frequency+2)& (0+255),w,b
  3759  002968  B0D8               	btfsc	status,0,c
  3760  00296A  D011               	goto	l9079
  3761  00296C                     u9960:
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;parse.c: 77:         {;parse.c: 79:             sprintf(output, "Error! Minimum Frequen
      +                          cy 1000000 Hz");
  3765  00296C  0E00               	movlw	low _output
  3766  00296E  6F9D               	movwf	sprintf@s& (0+255),b
  3767  002970  0E02               	movlw	high _output
  3768  002972  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  3769  002974  0E77               	movlw	low STR_2
  3770  002976  6F9F               	movwf	sprintf@fmt& (0+255),b
  3771  002978  0E7E               	movlw	high STR_2
  3772  00297A  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  3773  00297C  ECEF  F029         	call	_sprintf	;wreg free
  3774                           
  3775                           ;parse.c: 80:             EUSART_Write_String(output);
  3776  002980  0E00               	movlw	low _output
  3777  002982  6E0D               	movwf	EUSART_Write_String@data,c
  3778  002984  0E02               	movlw	high _output
  3779  002986  6E0E               	movwf	EUSART_Write_String@data+1,c
  3780  002988  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  3781  00298C  D7B7               	goto	l9051
  3782  00298E                     l9079:
  3783                           
  3784                           ; BSR set to: 0
  3785  00298E  BFE4               	btfsc	(_temp_frequency+3)& (0+255),7,b
  3786  002990  D01B               	goto	l636
  3787  002992  51E4               	movf	(_temp_frequency+3)& (0+255),w,b
  3788  002994  E108               	bnz	u9970
  3789  002996  0E41               	movlw	65
  3790  002998  5DE1               	subwf	_temp_frequency& (0+255),w,b
  3791  00299A  0E4B               	movlw	75
  3792  00299C  59E2               	subwfb	(_temp_frequency+1)& (0+255),w,b
  3793  00299E  0E4C               	movlw	76
  3794  0029A0  59E3               	subwfb	(_temp_frequency+2)& (0+255),w,b
  3795  0029A2  A0D8               	btfss	status,0,c
  3796  0029A4  D011               	goto	l636
  3797  0029A6                     u9970:
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;parse.c: 86:         {;parse.c: 88:             sprintf(output, "Error! Maximum Frequen
      +                          cy 5000000 Hz");
  3801  0029A6  0E00               	movlw	low _output
  3802  0029A8  6F9D               	movwf	sprintf@s& (0+255),b
  3803  0029AA  0E02               	movlw	high _output
  3804  0029AC  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  3805  0029AE  0E9B               	movlw	low STR_3
  3806  0029B0  6F9F               	movwf	sprintf@fmt& (0+255),b
  3807  0029B2  0E7E               	movlw	high STR_3
  3808  0029B4  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  3809  0029B6  ECEF  F029         	call	_sprintf	;wreg free
  3810                           
  3811                           ;parse.c: 89:             EUSART_Write_String(output);
  3812  0029BA  0E00               	movlw	low _output
  3813  0029BC  6E0D               	movwf	EUSART_Write_String@data,c
  3814  0029BE  0E02               	movlw	high _output
  3815  0029C0  6E0E               	movwf	EUSART_Write_String@data+1,c
  3816  0029C2  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  3817  0029C6  D79A               	goto	l9051
  3818  0029C8                     l636:
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;parse.c: 93:         {;parse.c: 95:             frequency = temp_frequency;
  3822  0029C8  C0E1  F0F6         	movff	_temp_frequency,_frequency
  3823  0029CC  C0E2  F0F7         	movff	_temp_frequency+1,_frequency+1
  3824  0029D0  C0E3  F0F8         	movff	_temp_frequency+2,_frequency+2
  3825  0029D4  C0E4  F0F9         	movff	_temp_frequency+3,_frequency+3
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;parse.c: 97:             AD9833_SetFrequency(frequency);
  3829  0029D8  C0F6  F0BC         	movff	_frequency,AD9833_SetFrequency@frequency
  3830  0029DC  C0F7  F0BD         	movff	_frequency+1,AD9833_SetFrequency@frequency+1
  3831  0029E0  C0F8  F0BE         	movff	_frequency+2,AD9833_SetFrequency@frequency+2
  3832  0029E4  C0F9  F0BF         	movff	_frequency+3,AD9833_SetFrequency@frequency+3
  3833  0029E8  EC74  F023         	call	_AD9833_SetFrequency	;wreg free
  3834                           
  3835                           ;parse.c: 100:             sprintf(output, "Frequency changed to %ld Hz", frequency);
  3836  0029EC  0E00               	movlw	low _output
  3837  0029EE  0100               	movlb	0	; () banked
  3838  0029F0  6F9D               	movwf	sprintf@s& (0+255),b
  3839  0029F2  0E02               	movlw	high _output
  3840  0029F4  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  3841  0029F6  0E7B               	movlw	low STR_4
  3842  0029F8  6F9F               	movwf	sprintf@fmt& (0+255),b
  3843  0029FA  0E7F               	movlw	high STR_4
  3844  0029FC  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  3845  0029FE  C0F6  F0A1         	movff	_frequency,?_sprintf+4
  3846  002A02  C0F7  F0A2         	movff	_frequency+1,?_sprintf+5
  3847  002A06  C0F8  F0A3         	movff	_frequency+2,?_sprintf+6
  3848  002A0A  C0F9  F0A4         	movff	_frequency+3,?_sprintf+7
  3849  002A0E  ECEF  F029         	call	_sprintf	;wreg free
  3850                           
  3851                           ;parse.c: 101:             EUSART_Write_String(output);
  3852  002A12  0E00               	movlw	low _output
  3853  002A14  6E0D               	movwf	EUSART_Write_String@data,c
  3854  002A16  0E02               	movlw	high _output
  3855  002A18  6E0E               	movwf	EUSART_Write_String@data+1,c
  3856  002A1A  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  3857  002A1E  D76E               	goto	l9051
  3858  002A20                     l9099:
  3859                           
  3860                           ; BSR set to: 1
  3861  002A20  0E63               	movlw	99
  3862  002A22  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  3863  002A24  B4D8               	btfsc	status,2,c
  3864  002A26  D004               	goto	u9990
  3865                           
  3866                           ; BSR set to: 1
  3867  002A28  0E43               	movlw	67
  3868  002A2A  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  3869  002A2C  A4D8               	btfss	status,2,c
  3870  002A2E  D06A               	goto	l9135
  3871  002A30                     u9990:
  3872                           
  3873                           ; BSR set to: 1
  3874                           ;parse.c: 108:     {;parse.c: 110:         rx_data[0] = ' ';
  3875  002A30  0E20               	movlw	32
  3876  002A32  6FE4               	movwf	_rx_data& (0+255),b	;volatile
  3877                           
  3878                           ; BSR set to: 1
  3879                           ;parse.c: 113:         temp_cycle = atol(rx_data);
  3880  002A34  0EE4               	movlw	low _rx_data
  3881  002A36  6E18               	movwf	atol@s,c
  3882  002A38  0E01               	movlw	high _rx_data
  3883  002A3A  6E19               	movwf	atol@s+1,c
  3884  002A3C  EC0C  F022         	call	_atol	;wreg free
  3885  002A40  C018  F04C         	movff	?_atol,_temp_cycle	;volatile
  3886  002A44  C019  F04D         	movff	?_atol+1,_temp_cycle+1	;volatile
  3887  002A48  C01A  F04E         	movff	?_atol+2,_temp_cycle+2	;volatile
  3888  002A4C  C01B  F04F         	movff	?_atol+3,_temp_cycle+3	;volatile
  3889                           
  3890                           ;parse.c: 116:         if(temp_cycle < 2)
  3891  002A50  BE4F               	btfsc	_temp_cycle+3,7,c	;volatile
  3892  002A52  D008               	goto	u10000
  3893  002A54  504F               	movf	_temp_cycle+3,w,c	;volatile
  3894  002A56  104E               	iorwf	_temp_cycle+2,w,c	;volatile
  3895  002A58  104D               	iorwf	_temp_cycle+1,w,c	;volatile
  3896  002A5A  E116               	bnz	l9117
  3897  002A5C  0E02               	movlw	2
  3898  002A5E  5C4C               	subwf	_temp_cycle,w,c	;volatile
  3899  002A60  B0D8               	btfsc	status,0,c
  3900  002A62  D012               	goto	l9117
  3901  002A64                     u10000:
  3902                           
  3903                           ;parse.c: 117:         {;parse.c: 119:             sprintf(output, "Error! Minimum Cycle
      +                           count 2");
  3904  002A64  0E00               	movlw	low _output
  3905  002A66  0100               	movlb	0	; () banked
  3906  002A68  6F9D               	movwf	sprintf@s& (0+255),b
  3907  002A6A  0E02               	movlw	high _output
  3908  002A6C  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  3909  002A6E  0E42               	movlw	low STR_5
  3910  002A70  6F9F               	movwf	sprintf@fmt& (0+255),b
  3911  002A72  0E7F               	movlw	high STR_5
  3912  002A74  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  3913  002A76  ECEF  F029         	call	_sprintf	;wreg free
  3914                           
  3915                           ;parse.c: 120:             EUSART_Write_String(output);
  3916  002A7A  0E00               	movlw	low _output
  3917  002A7C  6E0D               	movwf	EUSART_Write_String@data,c
  3918  002A7E  0E02               	movlw	high _output
  3919  002A80  6E0E               	movwf	EUSART_Write_String@data+1,c
  3920  002A82  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  3921  002A86  D73A               	goto	l9051
  3922  002A88                     l9117:
  3923  002A88  BE4F               	btfsc	_temp_cycle+3,7,c	;volatile
  3924  002A8A  D01A               	goto	l644
  3925  002A8C  504F               	movf	_temp_cycle+3,w,c	;volatile
  3926  002A8E  104E               	iorwf	_temp_cycle+2,w,c	;volatile
  3927  002A90  E105               	bnz	u10010
  3928  002A92  044C               	decf	_temp_cycle,w,c	;volatile
  3929  002A94  0E7D               	movlw	125
  3930  002A96  584D               	subwfb	_temp_cycle+1,w,c	;volatile
  3931  002A98  A0D8               	btfss	status,0,c
  3932  002A9A  D012               	goto	l644
  3933  002A9C                     u10010:
  3934                           
  3935                           ;parse.c: 126:         {;parse.c: 128:             sprintf(output, "Error! Maximum Cycle
      +                           count 32000");
  3936  002A9C  0E00               	movlw	low _output
  3937  002A9E  0100               	movlb	0	; () banked
  3938  002AA0  6F9D               	movwf	sprintf@s& (0+255),b
  3939  002AA2  0E02               	movlw	high _output
  3940  002AA4  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  3941  002AA6  0EE1               	movlw	low STR_6
  3942  002AA8  6F9F               	movwf	sprintf@fmt& (0+255),b
  3943  002AAA  0E7E               	movlw	high STR_6
  3944  002AAC  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  3945  002AAE  ECEF  F029         	call	_sprintf	;wreg free
  3946                           
  3947                           ;parse.c: 129:             EUSART_Write_String(output);
  3948  002AB2  0E00               	movlw	low _output
  3949  002AB4  6E0D               	movwf	EUSART_Write_String@data,c
  3950  002AB6  0E02               	movlw	high _output
  3951  002AB8  6E0E               	movwf	EUSART_Write_String@data+1,c
  3952  002ABA  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  3953  002ABE  D71E               	goto	l9051
  3954  002AC0                     l644:
  3955                           
  3956                           ;parse.c: 133:         {;parse.c: 135:             cycle = temp_cycle;
  3957  002AC0  C04C  F048         	movff	_temp_cycle,_cycle	;volatile
  3958  002AC4  C04D  F049         	movff	_temp_cycle+1,_cycle+1	;volatile
  3959  002AC8  C04E  F04A         	movff	_temp_cycle+2,_cycle+2	;volatile
  3960  002ACC  C04F  F04B         	movff	_temp_cycle+3,_cycle+3	;volatile
  3961                           
  3962                           ;parse.c: 138:             sprintf(output, "Cycle changed to %ld Cycles", cycle);
  3963  002AD0  0E00               	movlw	low _output
  3964  002AD2  0100               	movlb	0	; () banked
  3965  002AD4  6F9D               	movwf	sprintf@s& (0+255),b
  3966  002AD6  0E02               	movlw	high _output
  3967  002AD8  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  3968  002ADA  0E5F               	movlw	low STR_7
  3969  002ADC  6F9F               	movwf	sprintf@fmt& (0+255),b
  3970  002ADE  0E7F               	movlw	high STR_7
  3971  002AE0  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  3972  002AE2  C048  F0A1         	movff	_cycle,?_sprintf+4	;volatile
  3973  002AE6  C049  F0A2         	movff	_cycle+1,?_sprintf+5	;volatile
  3974  002AEA  C04A  F0A3         	movff	_cycle+2,?_sprintf+6	;volatile
  3975  002AEE  C04B  F0A4         	movff	_cycle+3,?_sprintf+7	;volatile
  3976  002AF2  ECEF  F029         	call	_sprintf	;wreg free
  3977                           
  3978                           ;parse.c: 139:             EUSART_Write_String(output);
  3979  002AF6  0E00               	movlw	low _output
  3980  002AF8  6E0D               	movwf	EUSART_Write_String@data,c
  3981  002AFA  0E02               	movlw	high _output
  3982  002AFC  6E0E               	movwf	EUSART_Write_String@data+1,c
  3983  002AFE  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  3984  002B02  D6FC               	goto	l9051
  3985  002B04                     l9135:
  3986                           
  3987                           ; BSR set to: 1
  3988  002B04  0E42               	movlw	66
  3989  002B06  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  3990  002B08  B4D8               	btfsc	status,2,c
  3991  002B0A  D004               	goto	u10030
  3992                           
  3993                           ; BSR set to: 1
  3994  002B0C  0E62               	movlw	98
  3995  002B0E  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  3996  002B10  A4D8               	btfss	status,2,c
  3997  002B12  D03D               	goto	l9161
  3998  002B14                     u10030:
  3999                           
  4000                           ; BSR set to: 1
  4001                           ;parse.c: 146:     {;parse.c: 148:         rx_data[0] = ' ';
  4002  002B14  0E20               	movlw	32
  4003  002B16  6FE4               	movwf	_rx_data& (0+255),b	;volatile
  4004                           
  4005                           ; BSR set to: 1
  4006                           ;parse.c: 151:         temp_break_duration = atoi(rx_data);
  4007  002B18  0EE4               	movlw	low _rx_data
  4008  002B1A  6E13               	movwf	atoi@s,c
  4009  002B1C  0E01               	movlw	high _rx_data
  4010  002B1E  6E14               	movwf	atoi@s+1,c
  4011  002B20  ECB4  F024         	call	_atoi	;wreg free
  4012  002B24  C013  F042         	movff	?_atoi,_temp_break_duration	;volatile
  4013  002B28  C014  F043         	movff	?_atoi+1,_temp_break_duration+1	;volatile
  4014                           
  4015                           ;parse.c: 154:         if(temp_break_duration > 256)
  4016  002B2C  0442               	decf	_temp_break_duration,w,c	;volatile
  4017  002B2E  0E01               	movlw	1
  4018  002B30  5843               	subwfb	_temp_break_duration+1,w,c	;volatile
  4019  002B32  A0D8               	btfss	status,0,c
  4020  002B34  D012               	goto	l650
  4021                           
  4022                           ;parse.c: 155:         {;parse.c: 157:             sprintf(output, "Error! Maximum Break
      +                           Duration 256 ms");
  4023  002B36  0E00               	movlw	low _output
  4024  002B38  0100               	movlb	0	; () banked
  4025  002B3A  6F9D               	movwf	sprintf@s& (0+255),b
  4026  002B3C  0E02               	movlw	high _output
  4027  002B3E  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4028  002B40  0E52               	movlw	low STR_8
  4029  002B42  6F9F               	movwf	sprintf@fmt& (0+255),b
  4030  002B44  0E7E               	movlw	high STR_8
  4031  002B46  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4032  002B48  ECEF  F029         	call	_sprintf	;wreg free
  4033                           
  4034                           ;parse.c: 158:             EUSART_Write_String(output);
  4035  002B4C  0E00               	movlw	low _output
  4036  002B4E  6E0D               	movwf	EUSART_Write_String@data,c
  4037  002B50  0E02               	movlw	high _output
  4038  002B52  6E0E               	movwf	EUSART_Write_String@data+1,c
  4039  002B54  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  4040  002B58  D6D1               	goto	l9051
  4041  002B5A                     l650:
  4042                           
  4043                           ;parse.c: 162:         {;parse.c: 164:             break_duration = temp_break_duration;
  4044  002B5A  C042  F040         	movff	_temp_break_duration,_break_duration	;volatile
  4045  002B5E  C043  F041         	movff	_temp_break_duration+1,_break_duration+1	;volatile
  4046                           
  4047                           ;parse.c: 167:             sprintf(output, "Break Duration changed to %u ms", break_dura
      +                          tion);
  4048  002B62  0E00               	movlw	low _output
  4049  002B64  0100               	movlb	0	; () banked
  4050  002B66  6F9D               	movwf	sprintf@s& (0+255),b
  4051  002B68  0E02               	movlw	high _output
  4052  002B6A  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4053  002B6C  0E22               	movlw	low STR_9
  4054  002B6E  6F9F               	movwf	sprintf@fmt& (0+255),b
  4055  002B70  0E7F               	movlw	high STR_9
  4056  002B72  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4057  002B74  C040  F0A1         	movff	_break_duration,?_sprintf+4	;volatile
  4058  002B78  C041  F0A2         	movff	_break_duration+1,?_sprintf+5	;volatile
  4059  002B7C  ECEF  F029         	call	_sprintf	;wreg free
  4060                           
  4061                           ;parse.c: 168:             EUSART_Write_String(output);
  4062  002B80  0E00               	movlw	low _output
  4063  002B82  6E0D               	movwf	EUSART_Write_String@data,c
  4064  002B84  0E02               	movlw	high _output
  4065  002B86  6E0E               	movwf	EUSART_Write_String@data+1,c
  4066  002B88  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  4067  002B8C  D6B7               	goto	l9051
  4068  002B8E                     l9161:
  4069                           
  4070                           ; BSR set to: 1
  4071  002B8E  0E4E               	movlw	78
  4072  002B90  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  4073  002B92  B4D8               	btfsc	status,2,c
  4074  002B94  D004               	goto	u10060
  4075                           
  4076                           ; BSR set to: 1
  4077  002B96  0E6E               	movlw	110
  4078  002B98  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  4079  002B9A  A4D8               	btfss	status,2,c
  4080  002B9C  D053               	goto	l9197
  4081  002B9E                     u10060:
  4082                           
  4083                           ; BSR set to: 1
  4084                           ;parse.c: 175:     {;parse.c: 177:         rx_data[0] = ' ';
  4085  002B9E  0E20               	movlw	32
  4086  002BA0  6FE4               	movwf	_rx_data& (0+255),b	;volatile
  4087                           
  4088                           ; BSR set to: 1
  4089                           ;parse.c: 180:         temp_packages = atoi(rx_data);
  4090  002BA2  0EE4               	movlw	low _rx_data
  4091  002BA4  6E13               	movwf	atoi@s,c
  4092  002BA6  0E01               	movlw	high _rx_data
  4093  002BA8  6E14               	movwf	atoi@s+1,c
  4094  002BAA  ECB4  F024         	call	_atoi	;wreg free
  4095  002BAE  C013  F052         	movff	?_atoi,_temp_packages	;volatile
  4096  002BB2  C014  F053         	movff	?_atoi+1,_temp_packages+1	;volatile
  4097                           
  4098                           ;parse.c: 183:         if(temp_packages < 1)
  4099  002BB6  5052               	movf	_temp_packages,w,c	;volatile
  4100  002BB8  1053               	iorwf	_temp_packages+1,w,c	;volatile
  4101  002BBA  A4D8               	btfss	status,2,c
  4102  002BBC  D012               	goto	l9179
  4103                           
  4104                           ;parse.c: 184:         {;parse.c: 186:             sprintf(output, "Error! Minimum Packa
      +                          ges count 1");
  4105  002BBE  0E00               	movlw	low _output
  4106  002BC0  0100               	movlb	0	; () banked
  4107  002BC2  6F9D               	movwf	sprintf@s& (0+255),b
  4108  002BC4  0E02               	movlw	high _output
  4109  002BC6  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4110  002BC8  0E02               	movlw	low STR_10
  4111  002BCA  6F9F               	movwf	sprintf@fmt& (0+255),b
  4112  002BCC  0E7F               	movlw	high STR_10
  4113  002BCE  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4114  002BD0  ECEF  F029         	call	_sprintf	;wreg free
  4115                           
  4116                           ;parse.c: 187:             EUSART_Write_String(output);
  4117  002BD4  0E00               	movlw	low _output
  4118  002BD6  6E0D               	movwf	EUSART_Write_String@data,c
  4119  002BD8  0E02               	movlw	high _output
  4120  002BDA  6E0E               	movwf	EUSART_Write_String@data+1,c
  4121  002BDC  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  4122  002BE0  D68D               	goto	l9051
  4123  002BE2                     l9179:
  4124  002BE2  0452               	decf	_temp_packages,w,c	;volatile
  4125  002BE4  0E01               	movlw	1
  4126  002BE6  5853               	subwfb	_temp_packages+1,w,c	;volatile
  4127  002BE8  A0D8               	btfss	status,0,c
  4128  002BEA  D012               	goto	l658
  4129                           
  4130                           ;parse.c: 193:         {;parse.c: 195:             sprintf(output, "Error! Maximum Packa
      +                          ges count 256");
  4131  002BEC  0E00               	movlw	low _output
  4132  002BEE  0100               	movlb	0	; () banked
  4133  002BF0  6F9D               	movwf	sprintf@s& (0+255),b
  4134  002BF2  0E02               	movlw	high _output
  4135  002BF4  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4136  002BF6  0EBF               	movlw	low STR_11
  4137  002BF8  6F9F               	movwf	sprintf@fmt& (0+255),b
  4138  002BFA  0E7E               	movlw	high STR_11
  4139  002BFC  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4140  002BFE  ECEF  F029         	call	_sprintf	;wreg free
  4141                           
  4142                           ;parse.c: 196:             EUSART_Write_String(output);
  4143  002C02  0E00               	movlw	low _output
  4144  002C04  6E0D               	movwf	EUSART_Write_String@data,c
  4145  002C06  0E02               	movlw	high _output
  4146  002C08  6E0E               	movwf	EUSART_Write_String@data+1,c
  4147  002C0A  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  4148  002C0E  D676               	goto	l9051
  4149  002C10                     l658:
  4150                           
  4151                           ;parse.c: 200:         {;parse.c: 202:             packages = temp_packages;
  4152  002C10  C052  F050         	movff	_temp_packages,_packages	;volatile
  4153  002C14  C053  F051         	movff	_temp_packages+1,_packages+1	;volatile
  4154                           
  4155                           ;parse.c: 205:             sprintf(output, "Number of Packages changed to %u Packages", 
      +                          packages);
  4156  002C18  0E00               	movlw	low _output
  4157  002C1A  0100               	movlb	0	; () banked
  4158  002C1C  6F9D               	movwf	sprintf@s& (0+255),b
  4159  002C1E  0E02               	movlw	high _output
  4160  002C20  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4161  002C22  0E01               	movlw	low STR_12
  4162  002C24  6F9F               	movwf	sprintf@fmt& (0+255),b
  4163  002C26  0E7E               	movlw	high STR_12
  4164  002C28  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4165  002C2A  C050  F0A1         	movff	_packages,?_sprintf+4	;volatile
  4166  002C2E  C051  F0A2         	movff	_packages+1,?_sprintf+5	;volatile
  4167  002C32  ECEF  F029         	call	_sprintf	;wreg free
  4168                           
  4169                           ;parse.c: 206:             EUSART_Write_String(output);
  4170  002C36  0E00               	movlw	low _output
  4171  002C38  6E0D               	movwf	EUSART_Write_String@data,c
  4172  002C3A  0E02               	movlw	high _output
  4173  002C3C  6E0E               	movwf	EUSART_Write_String@data+1,c
  4174  002C3E  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  4175  002C42  D65C               	goto	l9051
  4176  002C44                     l9197:
  4177                           
  4178                           ; BSR set to: 1
  4179  002C44  0E49               	movlw	73
  4180  002C46  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  4181  002C48  B4D8               	btfsc	status,2,c
  4182  002C4A  D004               	goto	u10100
  4183                           
  4184                           ; BSR set to: 1
  4185  002C4C  0E69               	movlw	105
  4186  002C4E  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  4187  002C50  A4D8               	btfss	status,2,c
  4188  002C52  D05D               	goto	l9217
  4189  002C54                     u10100:
  4190                           
  4191                           ; BSR set to: 1
  4192                           ;parse.c: 213:     {;parse.c: 215:         sprintf(output, "Frequency = %ld Hz", frequen
      +                          cy);
  4193  002C54  0E00               	movlw	low _output
  4194  002C56  0100               	movlb	0	; () banked
  4195  002C58  6F9D               	movwf	sprintf@s& (0+255),b
  4196  002C5A  0E02               	movlw	high _output
  4197  002C5C  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4198  002C5E  0ED9               	movlw	low STR_13
  4199  002C60  6F9F               	movwf	sprintf@fmt& (0+255),b
  4200  002C62  0E7F               	movlw	high STR_13
  4201  002C64  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4202  002C66  C0F6  F0A1         	movff	_frequency,?_sprintf+4
  4203  002C6A  C0F7  F0A2         	movff	_frequency+1,?_sprintf+5
  4204  002C6E  C0F8  F0A3         	movff	_frequency+2,?_sprintf+6
  4205  002C72  C0F9  F0A4         	movff	_frequency+3,?_sprintf+7
  4206  002C76  ECEF  F029         	call	_sprintf	;wreg free
  4207                           
  4208                           ;parse.c: 216:         EUSART_Write_String(output);
  4209  002C7A  0E00               	movlw	low _output
  4210  002C7C  6E0D               	movwf	EUSART_Write_String@data,c
  4211  002C7E  0E02               	movlw	high _output
  4212  002C80  6E0E               	movwf	EUSART_Write_String@data+1,c
  4213  002C82  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  4214                           
  4215                           ;parse.c: 219:         sprintf(output, "Cycles = %ld", cycle);
  4216  002C86  0E00               	movlw	low _output
  4217  002C88  0100               	movlb	0	; () banked
  4218  002C8A  6F9D               	movwf	sprintf@s& (0+255),b
  4219  002C8C  0E02               	movlw	high _output
  4220  002C8E  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4221  002C90  0EEC               	movlw	low STR_14
  4222  002C92  6F9F               	movwf	sprintf@fmt& (0+255),b
  4223  002C94  0E7F               	movlw	high STR_14
  4224  002C96  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4225  002C98  C048  F0A1         	movff	_cycle,?_sprintf+4	;volatile
  4226  002C9C  C049  F0A2         	movff	_cycle+1,?_sprintf+5	;volatile
  4227  002CA0  C04A  F0A3         	movff	_cycle+2,?_sprintf+6	;volatile
  4228  002CA4  C04B  F0A4         	movff	_cycle+3,?_sprintf+7	;volatile
  4229  002CA8  ECEF  F029         	call	_sprintf	;wreg free
  4230                           
  4231                           ;parse.c: 220:         EUSART_Write_String(output);
  4232  002CAC  0E00               	movlw	low _output
  4233  002CAE  6E0D               	movwf	EUSART_Write_String@data,c
  4234  002CB0  0E02               	movlw	high _output
  4235  002CB2  6E0E               	movwf	EUSART_Write_String@data+1,c
  4236  002CB4  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  4237                           
  4238                           ;parse.c: 223:         sprintf(output, "Break Duration = %u ms", break_duration);
  4239  002CB8  0E00               	movlw	low _output
  4240  002CBA  0100               	movlb	0	; () banked
  4241  002CBC  6F9D               	movwf	sprintf@s& (0+255),b
  4242  002CBE  0E02               	movlw	high _output
  4243  002CC0  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4244  002CC2  0EAF               	movlw	low STR_15
  4245  002CC4  6F9F               	movwf	sprintf@fmt& (0+255),b
  4246  002CC6  0E7F               	movlw	high STR_15
  4247  002CC8  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4248  002CCA  C040  F0A1         	movff	_break_duration,?_sprintf+4	;volatile
  4249  002CCE  C041  F0A2         	movff	_break_duration+1,?_sprintf+5	;volatile
  4250  002CD2  ECEF  F029         	call	_sprintf	;wreg free
  4251                           
  4252                           ;parse.c: 224:         EUSART_Write_String(output);
  4253  002CD6  0E00               	movlw	low _output
  4254  002CD8  6E0D               	movwf	EUSART_Write_String@data,c
  4255  002CDA  0E02               	movlw	high _output
  4256  002CDC  6E0E               	movwf	EUSART_Write_String@data+1,c
  4257  002CDE  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  4258                           
  4259                           ;parse.c: 227:         sprintf(output, "Number of Packages = %u", packages);
  4260  002CE2  0E00               	movlw	low _output
  4261  002CE4  0100               	movlb	0	; () banked
  4262  002CE6  6F9D               	movwf	sprintf@s& (0+255),b
  4263  002CE8  0E02               	movlw	high _output
  4264  002CEA  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4265  002CEC  0E97               	movlw	low STR_16
  4266  002CEE  6F9F               	movwf	sprintf@fmt& (0+255),b
  4267  002CF0  0E7F               	movlw	high STR_16
  4268  002CF2  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4269  002CF4  C050  F0A1         	movff	_packages,?_sprintf+4	;volatile
  4270  002CF8  C051  F0A2         	movff	_packages+1,?_sprintf+5	;volatile
  4271  002CFC  ECEF  F029         	call	_sprintf	;wreg free
  4272                           
  4273                           ;parse.c: 228:         EUSART_Write_String(output);
  4274  002D00  0E00               	movlw	low _output
  4275  002D02  6E0D               	movwf	EUSART_Write_String@data,c
  4276  002D04  0E02               	movlw	high _output
  4277  002D06  6E0E               	movwf	EUSART_Write_String@data+1,c
  4278  002D08  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  4279  002D0C  D5F7               	goto	l9051
  4280  002D0E                     l9217:
  4281                           
  4282                           ; BSR set to: 1
  4283                           ;parse.c: 234:     {;parse.c: 236:          sprintf(output, "Unknown Command %c", rx_dat
      +                          a[0]);
  4284  002D0E  0E00               	movlw	low _output
  4285  002D10  0100               	movlb	0	; () banked
  4286  002D12  6F9D               	movwf	sprintf@s& (0+255),b
  4287  002D14  0E02               	movlw	high _output
  4288  002D16  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4289  002D18  0EC6               	movlw	low STR_17
  4290  002D1A  6F9F               	movwf	sprintf@fmt& (0+255),b
  4291  002D1C  0E7F               	movlw	high STR_17
  4292  002D1E  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4293  002D20  C1E4  F0A1         	movff	_rx_data,?_sprintf+4	;volatile
  4294  002D24  6BA2               	clrf	(?_sprintf+5)& (0+255),b
  4295  002D26  ECEF  F029         	call	_sprintf	;wreg free
  4296                           
  4297                           ;parse.c: 237:          EUSART_Write_String(output);
  4298  002D2A  0E00               	movlw	low _output
  4299  002D2C  6E0D               	movwf	EUSART_Write_String@data,c
  4300  002D2E  0E02               	movlw	high _output
  4301  002D30  6E0E               	movwf	EUSART_Write_String@data+1,c
  4302  002D32  EC3F  F02B         	call	_EUSART_Write_String	;wreg free
  4303  002D36  D5E2               	goto	l9051
  4304  002D38                     __end_of_Parse_Data:
  4305                           	opt callstack 0
  4306                           
  4307 ;; *************** function _sprintf *****************
  4308 ;; Defined at:
  4309 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  s               2   61[BANK0 ] PTR unsigned char 
  4312 ;;		 -> output(50), 
  4313 ;;  fmt             2   63[BANK0 ] PTR const unsigned char 
  4314 ;;		 -> STR_17(19), STR_16(24), STR_15(23), STR_14(13), 
  4315 ;;		 -> STR_13(19), STR_12(42), STR_11(34), STR_10(32), 
  4316 ;;		 -> STR_9(32), STR_8(37), STR_7(28), STR_6(33), 
  4317 ;;		 -> STR_5(29), STR_4(28), STR_3(36), STR_2(36), 
  4318 ;;		 -> STR_1(39), 
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;  f               6   73[BANK0 ] struct _IO_FILE
  4321 ;;  ap              2   71[BANK0 ] PTR void [1]
  4322 ;;		 -> ?_sprintf(2), 
  4323 ;;  ret             2    0        int 
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  2   61[BANK0 ] int 
  4326 ;; Registers used:
  4327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4333 ;;      Params:         0       8       0       0       0       0       0       0       0
  4334 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4336 ;;      Totals:         0      18       0       0       0       0       0       0       0
  4337 ;;Total ram usage:       18 bytes
  4338 ;; Hardware stack levels used:    1
  4339 ;; Hardware stack levels required when called:   14
  4340 ;; This function calls:
  4341 ;;		_vfprintf
  4342 ;; This function is called by:
  4343 ;;		_Parse_Data
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	text20
  4348  0053DE                     __ptext20:
  4349                           	opt callstack 0
  4350  0053DE                     _sprintf:
  4351                           	opt callstack 15
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;incstack = 0
  4355  0053DE  0EA1               	movlw	low (?_sprintf+4)
  4356  0053E0  0100               	movlb	0	; () banked
  4357  0053E2  6FA7               	movwf	sprintf@ap& (0+255),b
  4358  0053E4  0E00               	movlw	high (?_sprintf+4)
  4359  0053E6  6FA8               	movwf	(sprintf@ap+1)& (0+255),b
  4360  0053E8  C09D  F0A9         	movff	sprintf@s,sprintf@f
  4361  0053EC  C09E  F0AA         	movff	sprintf@s+1,sprintf@f+1
  4362                           
  4363                           ; BSR set to: 0
  4364  0053F0  0E00               	movlw	0
  4365  0053F2  6FAC               	movwf	(sprintf@f+3)& (0+255),b
  4366  0053F4  0E00               	movlw	0
  4367  0053F6  6FAB               	movwf	(sprintf@f+2)& (0+255),b
  4368                           
  4369                           ; BSR set to: 0
  4370  0053F8  0E00               	movlw	0
  4371  0053FA  6FAE               	movwf	(sprintf@f+5)& (0+255),b
  4372  0053FC  0E00               	movlw	0
  4373  0053FE  6FAD               	movwf	(sprintf@f+4)& (0+255),b
  4374                           
  4375                           ; BSR set to: 0
  4376  005400  0EA9               	movlw	low sprintf@f
  4377  005402  6F97               	movwf	vfprintf@fp& (0+255),b
  4378  005404  0E00               	movlw	high sprintf@f
  4379  005406  6F98               	movwf	(vfprintf@fp+1)& (0+255),b
  4380  005408  C09F  F099         	movff	sprintf@fmt,vfprintf@fmt
  4381  00540C  C0A0  F09A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4382  005410  0EA7               	movlw	low sprintf@ap
  4383  005412  6F9B               	movwf	vfprintf@ap& (0+255),b
  4384  005414  0E00               	movlw	high sprintf@ap
  4385  005416  6F9C               	movwf	(vfprintf@ap+1)& (0+255),b
  4386  005418  EC99  F029         	call	_vfprintf	;wreg free
  4387  00541C  0100               	movlb	0	; () banked
  4388  00541E  51AB               	movf	(sprintf@f+2)& (0+255),w,b
  4389  005420  259D               	addwf	sprintf@s& (0+255),w,b
  4390  005422  6ED9               	movwf	fsr2l,c
  4391  005424  51AC               	movf	(sprintf@f+3)& (0+255),w,b
  4392  005426  219E               	addwfc	(sprintf@s+1)& (0+255),w,b
  4393  005428  6EDA               	movwf	fsr2h,c
  4394  00542A  0E00               	movlw	0
  4395  00542C  6EDF               	movwf	indf2,c
  4396                           
  4397                           ; BSR set to: 0
  4398  00542E  0012               	return		;funcret
  4399  005430                     __end_of_sprintf:
  4400                           	opt callstack 0
  4401                           
  4402 ;; *************** function _vfprintf *****************
  4403 ;; Defined at:
  4404 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  4407 ;;		 -> sprintf@f(6), 
  4408 ;;  fmt             2   57[BANK0 ] PTR const unsigned char 
  4409 ;;		 -> STR_17(19), STR_16(24), STR_15(23), STR_14(13), 
  4410 ;;		 -> STR_13(19), STR_12(42), STR_11(34), STR_10(32), 
  4411 ;;		 -> STR_9(32), STR_8(37), STR_7(28), STR_6(33), 
  4412 ;;		 -> STR_5(29), STR_4(28), STR_3(36), STR_2(36), 
  4413 ;;		 -> STR_1(39), 
  4414 ;;  ap              2   59[BANK0 ] PTR PTR void 
  4415 ;;		 -> sprintf@ap(2), 
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;  cfmt            2   56[COMRAM] PTR unsigned char 
  4418 ;;		 -> STR_17(19), STR_16(24), STR_15(23), STR_14(13), 
  4419 ;;		 -> STR_13(19), STR_12(42), STR_11(34), STR_10(32), 
  4420 ;;		 -> STR_9(32), STR_8(37), STR_7(28), STR_6(33), 
  4421 ;;		 -> STR_5(29), STR_4(28), STR_3(36), STR_2(36), 
  4422 ;;		 -> STR_1(39), 
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  2   55[BANK0 ] int 
  4425 ;; Registers used:
  4426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4432 ;;      Params:         0       6       0       0       0       0       0       0       0
  4433 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4434 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4435 ;;      Totals:         2       6       0       0       0       0       0       0       0
  4436 ;;Total ram usage:        8 bytes
  4437 ;; Hardware stack levels used:    1
  4438 ;; Hardware stack levels required when called:   13
  4439 ;; This function calls:
  4440 ;;		_vfpfcnvrt
  4441 ;; This function is called by:
  4442 ;;		_sprintf
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           	psect	text21
  4447  005332                     __ptext21:
  4448                           	opt callstack 0
  4449  005332                     _vfprintf:
  4450                           	opt callstack 15
  4451                           
  4452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;incstack = 0
  4456  005332  C099  F039         	movff	vfprintf@fmt,vfprintf@cfmt
  4457  005336  C09A  F03A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4458                           
  4459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4460  00533A  0E00               	movlw	0
  4461  00533C  0100               	movlb	0	; () banked
  4462  00533E  6FE8               	movwf	(_nout+1)& (0+255),b
  4463  005340  0E00               	movlw	0
  4464  005342  6FE7               	movwf	_nout& (0+255),b
  4465                           
  4466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4467  005344  D013               	goto	l5803
  4468  005346                     l5801:
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4472  005346  C097  F072         	movff	vfprintf@fp,vfpfcnvrt@fp
  4473  00534A  C098  F073         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4474  00534E  0E39               	movlw	low vfprintf@cfmt
  4475  005350  6F74               	movwf	vfpfcnvrt@fmt& (0+255),b
  4476  005352  0E00               	movlw	high vfprintf@cfmt
  4477  005354  6F75               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4478  005356  C09B  F076         	movff	vfprintf@ap,vfpfcnvrt@ap
  4479  00535A  C09C  F077         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4480  00535E  ECB2  F018         	call	_vfpfcnvrt	;wreg free
  4481  005362  0100               	movlb	0	; () banked
  4482  005364  5172               	movf	?_vfpfcnvrt& (0+255),w,b
  4483  005366  27E7               	addwf	_nout& (0+255),f,b
  4484  005368  5173               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4485  00536A  23E8               	addwfc	(_nout+1)& (0+255),f,b
  4486  00536C                     l5803:
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4490  00536C  C039  FFF6         	movff	vfprintf@cfmt,tblptrl
  4491  005370  C03A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4492  005374                     	if	0	;tblptru may be non-zero
  4493  005374                     	endif
  4494  005374                     	if	0	;tblptru may be non-zero
  4495  005374                     	endif
  4496  005374  0008               	tblrd		*
  4497  005376  50F5               	movf	tablat,w,c
  4498  005378  0900               	iorlw	0
  4499  00537A  A4D8               	btfss	status,2,c
  4500  00537C  D7E4               	goto	l5801
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4504  00537E  C0E7  F097         	movff	_nout,?_vfprintf
  4505  005382  C0E8  F098         	movff	_nout+1,?_vfprintf+1
  4506                           
  4507                           ; BSR set to: 0
  4508  005386  0012               	return		;funcret
  4509  005388                     __end_of_vfprintf:
  4510                           	opt callstack 0
  4511                           
  4512 ;; *************** function _vfpfcnvrt *****************
  4513 ;; Defined at:
  4514 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  4517 ;;		 -> sprintf@f(6), 
  4518 ;;  fmt             2   20[BANK0 ] PTR PTR unsigned char 
  4519 ;;		 -> vfprintf@cfmt(2), 
  4520 ;;  ap              2   22[BANK0 ] PTR PTR void 
  4521 ;;		 -> sprintf@ap(2), 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  llu             8   47[BANK0 ] unsigned long long 
  4524 ;;  ll              8   39[BANK0 ] long long 
  4525 ;;  f               4    0        long long 
  4526 ;;  vp              3    0        PTR void 
  4527 ;;  ct              3    0        unsigned char [3]
  4528 ;;  cp              3    0        PTR unsigned char 
  4529 ;;  i               2    0        int 
  4530 ;;  done            2    0        int 
  4531 ;;  c               1   38[BANK0 ] unsigned char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  2   18[BANK0 ] int 
  4534 ;; Registers used:
  4535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4541 ;;      Params:         0       6       0       0       0       0       0       0       0
  4542 ;;      Locals:         0      17       0       0       0       0       0       0       0
  4543 ;;      Temps:          0      14       0       0       0       0       0       0       0
  4544 ;;      Totals:         0      37       0       0       0       0       0       0       0
  4545 ;;Total ram usage:       37 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:   12
  4548 ;; This function calls:
  4549 ;;		_ctoa
  4550 ;;		_dtoa
  4551 ;;		_fputc
  4552 ;;		_strncmp
  4553 ;;		_utoa
  4554 ;; This function is called by:
  4555 ;;		_vfprintf
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           	psect	text22
  4560  003164                     __ptext22:
  4561                           	opt callstack 0
  4562  003164                     _vfpfcnvrt:
  4563                           	opt callstack 15
  4564                           
  4565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;incstack = 0
  4569  003164  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4570  003168  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4571  00316C  CFDE FFF6          	movff	postinc2,tblptrl
  4572  003170  CFDD FFF7          	movff	postdec2,tblptrh
  4573  003174                     	if	0	;tblptru may be non-zero
  4574  003174                     	endif
  4575  003174                     	if	0	;tblptru may be non-zero
  4576  003174                     	endif
  4577  003174  0008               	tblrd		*
  4578  003176  50F5               	movf	tablat,w,c
  4579  003178  0A25               	xorlw	37
  4580  00317A  A4D8               	btfss	status,2,c
  4581  00317C  D1CC               	goto	l4943
  4582                           
  4583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4584  00317E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4585  003182  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4586  003186  2ADE               	incf	postinc2,f,c
  4587  003188  0E00               	movlw	0
  4588  00318A  22DD               	addwfc	postdec2,f,c
  4589                           
  4590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4591  00318C  0E00               	movlw	0
  4592  00318E  0100               	movlb	0	; () banked
  4593  003190  6FEA               	movwf	(_width+1)& (0+255),b
  4594  003192  0E00               	movlw	0
  4595  003194  6FE9               	movwf	_width& (0+255),b
  4596  003196  C0E9  F03E         	movff	_width,_flags
  4597  00319A  C0EA  F03F         	movff	_width+1,_flags+1
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4601  00319E  683C               	setf	_prec,c
  4602  0031A0  683D               	setf	_prec+1,c
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4606  0031A2  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4607  0031A6  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4608  0031AA  CFDE FFF6          	movff	postinc2,tblptrl
  4609  0031AE  CFDD FFF7          	movff	postdec2,tblptrh
  4610  0031B2                     	if	0	;tblptru may be non-zero
  4611  0031B2                     	endif
  4612  0031B2                     	if	0	;tblptru may be non-zero
  4613  0031B2                     	endif
  4614  0031B2  0008               	tblrd		*
  4615  0031B4  50F5               	movf	tablat,w,c
  4616  0031B6  0A63               	xorlw	99
  4617  0031B8  A4D8               	btfss	status,2,c
  4618  0031BA  D026               	goto	l4891
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4622  0031BC  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4623  0031C0  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4624  0031C4  2ADE               	incf	postinc2,f,c
  4625  0031C6  0E00               	movlw	0
  4626  0031C8  22DD               	addwfc	postdec2,f,c
  4627                           
  4628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4629  0031CA  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4630  0031CE  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4631  0031D2  CFDF F078          	movff	indf2,??_vfpfcnvrt
  4632  0031D6  0E02               	movlw	2
  4633  0031D8  26DE               	addwf	postinc2,f,c
  4634  0031DA  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  4635  0031DE  0E00               	movlw	0
  4636  0031E0  22DD               	addwfc	postdec2,f,c
  4637  0031E2  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4638  0031E6  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4639  0031EA  50DF               	movf	indf2,w,c
  4640  0031EC  6F86               	movwf	vfpfcnvrt@c& (0+255),b
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4644  0031EE  C072  F027         	movff	vfpfcnvrt@fp,ctoa@fp
  4645  0031F2  C073  F028         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4646  0031F6  C086  F029         	movff	vfpfcnvrt@c,ctoa@c
  4647  0031FA  EC41  F02A         	call	_ctoa	;wreg free
  4648  0031FE  C027  F072         	movff	?_ctoa,?_vfpfcnvrt
  4649  003202  C028  F073         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4650  003206  0012               	return	
  4651  003208                     l4891:
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4655  003208  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4656  00320C  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4657  003210  CFDE FFF6          	movff	postinc2,tblptrl
  4658  003214  CFDD FFF7          	movff	postdec2,tblptrh
  4659  003218                     	if	0	;tblptru may be non-zero
  4660  003218                     	endif
  4661  003218                     	if	0	;tblptru may be non-zero
  4662  003218                     	endif
  4663  003218  0008               	tblrd		*
  4664  00321A  50F5               	movf	tablat,w,c
  4665  00321C  0A64               	xorlw	100
  4666  00321E  B4D8               	btfsc	status,2,c
  4667  003220  D00D               	goto	u4580
  4668                           
  4669                           ; BSR set to: 0
  4670  003222  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4671  003226  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4672  00322A  CFDE FFF6          	movff	postinc2,tblptrl
  4673  00322E  CFDD FFF7          	movff	postdec2,tblptrh
  4674  003232                     	if	0	;tblptru may be non-zero
  4675  003232                     	endif
  4676  003232                     	if	0	;tblptru may be non-zero
  4677  003232                     	endif
  4678  003232  0008               	tblrd		*
  4679  003234  50F5               	movf	tablat,w,c
  4680  003236  0A69               	xorlw	105
  4681  003238  A4D8               	btfss	status,2,c
  4682  00323A  D03F               	goto	l4901
  4683  00323C                     u4580:
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4687  00323C  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4688  003240  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4689  003244  2ADE               	incf	postinc2,f,c
  4690  003246  0E00               	movlw	0
  4691  003248  22DD               	addwfc	postdec2,f,c
  4692                           
  4693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4694  00324A  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4695  00324E  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4696  003252  CFDF F078          	movff	indf2,??_vfpfcnvrt
  4697  003256  0E02               	movlw	2
  4698  003258  26DE               	addwf	postinc2,f,c
  4699  00325A  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  4700  00325E  0E00               	movlw	0
  4701  003260  22DD               	addwfc	postdec2,f,c
  4702  003262  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4703  003266  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4704  00326A  CFDE F087          	movff	postinc2,vfpfcnvrt@ll
  4705  00326E  CFDD F088          	movff	postdec2,vfpfcnvrt@ll+1
  4706  003272  0E00               	movlw	0
  4707  003274  BF88               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4708  003276  0EFF               	movlw	-1
  4709  003278  6F89               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4710  00327A  6F8A               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4711  00327C  6F8B               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4712  00327E  6F8C               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4713  003280  6F8D               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4714  003282  6F8E               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4715  003284                     l4897:
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4719  003284  C072  F027         	movff	vfpfcnvrt@fp,dtoa@fp
  4720  003288  C073  F028         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4721  00328C  C087  F029         	movff	vfpfcnvrt@ll,dtoa@d
  4722  003290  C088  F02A         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4723  003294  C089  F02B         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4724  003298  C08A  F02C         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4725  00329C  C08B  F02D         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4726  0032A0  C08C  F02E         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4727  0032A4  C08D  F02F         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4728  0032A8  C08E  F030         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4729  0032AC  EC19  F01F         	call	_dtoa	;wreg free
  4730  0032B0  C027  F072         	movff	?_dtoa,?_vfpfcnvrt
  4731  0032B4  C028  F073         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4732  0032B8  0012               	return	
  4733  0032BA                     l4901:
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
  4737  0032BA  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4738  0032BE  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4739  0032C2  CFDE F00C          	movff	postinc2,strncmp@_l
  4740  0032C6  CFDD F00D          	movff	postdec2,strncmp@_l+1
  4741  0032CA  0EF6               	movlw	low (STR_14+10)
  4742  0032CC  6E0E               	movwf	strncmp@_r,c
  4743  0032CE  0E7F               	movlw	high (STR_14+10)
  4744  0032D0  6E0F               	movwf	strncmp@_r+1,c
  4745  0032D2  0E00               	movlw	0
  4746  0032D4  6E11               	movwf	strncmp@n+1,c
  4747  0032D6  0E02               	movlw	2
  4748  0032D8  6E10               	movwf	strncmp@n,c
  4749  0032DA  ECC1  F027         	call	_strncmp	;wreg free
  4750  0032DE  500C               	movf	?_strncmp,w,c
  4751  0032E0  100D               	iorwf	?_strncmp+1,w,c
  4752  0032E2  B4D8               	btfsc	status,2,c
  4753  0032E4  D016               	goto	u4600
  4754  0032E6  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4755  0032EA  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4756  0032EE  CFDE F00C          	movff	postinc2,strncmp@_l
  4757  0032F2  CFDD F00D          	movff	postdec2,strncmp@_l+1
  4758  0032F6  0EF9               	movlw	low STR_22
  4759  0032F8  6E0E               	movwf	strncmp@_r,c
  4760  0032FA  0E7F               	movlw	high STR_22
  4761  0032FC  6E0F               	movwf	strncmp@_r+1,c
  4762  0032FE  0E00               	movlw	0
  4763  003300  6E11               	movwf	strncmp@n+1,c
  4764  003302  0E02               	movlw	2
  4765  003304  6E10               	movwf	strncmp@n,c
  4766  003306  ECC1  F027         	call	_strncmp	;wreg free
  4767  00330A  500C               	movf	?_strncmp,w,c
  4768  00330C  100D               	iorwf	?_strncmp+1,w,c
  4769  00330E  A4D8               	btfss	status,2,c
  4770  003310  D043               	goto	l4911
  4771  003312                     u4600:
  4772                           
  4773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
  4774  003312  0E02               	movlw	2
  4775  003314  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4776  003318  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4777  00331C  26DE               	addwf	postinc2,f,c
  4778  00331E  0E00               	movlw	0
  4779  003320  22DD               	addwfc	postdec2,f,c
  4780                           
  4781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  4782  003322  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4783  003326  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4784  00332A  CFDF F078          	movff	indf2,??_vfpfcnvrt
  4785  00332E  0E04               	movlw	4
  4786  003330  26DE               	addwf	postinc2,f,c
  4787  003332  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  4788  003336  0E00               	movlw	0
  4789  003338  22DD               	addwfc	postdec2,f,c
  4790  00333A  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4791  00333E  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4792  003342  CFDE F07A          	movff	postinc2,??_vfpfcnvrt+2
  4793  003346  CFDE F07B          	movff	postinc2,??_vfpfcnvrt+3
  4794  00334A  CFDE F07C          	movff	postinc2,??_vfpfcnvrt+4
  4795  00334E  CFDE F07D          	movff	postinc2,??_vfpfcnvrt+5
  4796  003352  C07A  F07E         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  4797  003356  C07B  F07F         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  4798  00335A  C07C  F080         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  4799  00335E  C07D  F081         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  4800  003362  0100               	movlb	0	; () banked
  4801  003364  6B82               	clrf	(??_vfpfcnvrt+10)& (0+255),b
  4802  003366  BF81               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,b
  4803  003368  6982               	setf	(??_vfpfcnvrt+10)& (0+255),b
  4804  00336A  C082  F083         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  4805  00336E  C082  F084         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  4806  003372  C082  F085         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  4807  003376  C07E  F087         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  4808  00337A  C07F  F088         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  4809  00337E  C080  F089         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  4810  003382  C081  F08A         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  4811  003386  C082  F08B         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  4812  00338A  C083  F08C         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  4813  00338E  C084  F08D         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  4814  003392  C085  F08E         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  4815  003396  D776               	goto	l4897
  4816  003398                     l4911:
  4817                           
  4818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  4819  003398  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4820  00339C  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4821  0033A0  CFDE FFF6          	movff	postinc2,tblptrl
  4822  0033A4  CFDD FFF7          	movff	postdec2,tblptrh
  4823  0033A8                     	if	0	;tblptru may be non-zero
  4824  0033A8                     	endif
  4825  0033A8                     	if	0	;tblptru may be non-zero
  4826  0033A8                     	endif
  4827  0033A8  0008               	tblrd		*
  4828  0033AA  50F5               	movf	tablat,w,c
  4829  0033AC  0A75               	xorlw	117
  4830  0033AE  A4D8               	btfss	status,2,c
  4831  0033B0  D041               	goto	l4919
  4832                           
  4833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  4834  0033B2  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4835  0033B6  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4836  0033BA  2ADE               	incf	postinc2,f,c
  4837  0033BC  0E00               	movlw	0
  4838  0033BE  22DD               	addwfc	postdec2,f,c
  4839                           
  4840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  4841  0033C0  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4842  0033C4  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4843  0033C8  CFDF F078          	movff	indf2,??_vfpfcnvrt
  4844  0033CC  0E02               	movlw	2
  4845  0033CE  26DE               	addwf	postinc2,f,c
  4846  0033D0  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  4847  0033D4  0E00               	movlw	0
  4848  0033D6  22DD               	addwfc	postdec2,f,c
  4849  0033D8  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4850  0033DC  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4851  0033E0  CFDE F07A          	movff	postinc2,??_vfpfcnvrt+2
  4852  0033E4  CFDD F07B          	movff	postdec2,??_vfpfcnvrt+3
  4853  0033E8  C07A  F08F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4854  0033EC  C07B  F090         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4855  0033F0  0100               	movlb	0	; () banked
  4856  0033F2  6B91               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4857  0033F4  6B92               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4858  0033F6  6B93               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4859  0033F8  6B94               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4860  0033FA  6B95               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4861  0033FC  6B96               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  4865  0033FE  C072  F027         	movff	vfpfcnvrt@fp,utoa@fp
  4866  003402  C073  F028         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4867  003406  C08F  F029         	movff	vfpfcnvrt@llu,utoa@d
  4868  00340A  C090  F02A         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4869  00340E  C091  F02B         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4870  003412  C092  F02C         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4871  003416  C093  F02D         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4872  00341A  C094  F02E         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4873  00341E  C095  F02F         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4874  003422  C096  F030         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4875  003426  EC31  F021         	call	_utoa	;wreg free
  4876  00342A  C027  F072         	movff	?_utoa,?_vfpfcnvrt
  4877  00342E  C028  F073         	movff	?_utoa+1,?_vfpfcnvrt+1
  4878  003432  0012               	return	
  4879  003434                     l4919:
  4880                           
  4881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  4882  003434  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4883  003438  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4884  00343C  CFDE F00C          	movff	postinc2,strncmp@_l
  4885  003440  CFDD F00D          	movff	postdec2,strncmp@_l+1
  4886  003444  0EFC               	movlw	low STR_27
  4887  003446  6E0E               	movwf	strncmp@_r,c
  4888  003448  0E7F               	movlw	high STR_27
  4889  00344A  6E0F               	movwf	strncmp@_r+1,c
  4890  00344C  0E00               	movlw	0
  4891  00344E  6E11               	movwf	strncmp@n+1,c
  4892  003450  0E02               	movlw	2
  4893  003452  6E10               	movwf	strncmp@n,c
  4894  003454  ECC1  F027         	call	_strncmp	;wreg free
  4895  003458  500C               	movf	?_strncmp,w,c
  4896  00345A  100D               	iorwf	?_strncmp+1,w,c
  4897  00345C  A4D8               	btfss	status,2,c
  4898  00345E  D02A               	goto	l4927
  4899                           
  4900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  4901  003460  0E02               	movlw	2
  4902  003462  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4903  003466  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4904  00346A  26DE               	addwf	postinc2,f,c
  4905  00346C  0E00               	movlw	0
  4906  00346E  22DD               	addwfc	postdec2,f,c
  4907                           
  4908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
  4909  003470  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4910  003474  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4911  003478  CFDF F078          	movff	indf2,??_vfpfcnvrt
  4912  00347C  0E04               	movlw	4
  4913  00347E  26DE               	addwf	postinc2,f,c
  4914  003480  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  4915  003484  0E00               	movlw	0
  4916  003486  22DD               	addwfc	postdec2,f,c
  4917  003488  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4918  00348C  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4919  003490  CFDE F07A          	movff	postinc2,??_vfpfcnvrt+2
  4920  003494  CFDE F07B          	movff	postinc2,??_vfpfcnvrt+3
  4921  003498  CFDE F07C          	movff	postinc2,??_vfpfcnvrt+4
  4922  00349C  CFDE F07D          	movff	postinc2,??_vfpfcnvrt+5
  4923  0034A0  0100               	movlb	0	; () banked
  4924  0034A2  517A               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  4925  0034A4  6F8F               	movwf	vfpfcnvrt@llu& (0+255),b
  4926  0034A6  517B               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4927  0034A8  6F90               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
  4928  0034AA  517C               	movf	(??_vfpfcnvrt+4)& (0+255),w,b
  4929  0034AC  6F91               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
  4930  0034AE  517D               	movf	(??_vfpfcnvrt+5)& (0+255),w,b
  4931  0034B0  6F92               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
  4932  0034B2  D7A1               	goto	L1
  4933  0034B4                     l4927:
  4934                           
  4935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4936  0034B4  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4937  0034B8  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4938  0034BC  CFDE FFF6          	movff	postinc2,tblptrl
  4939  0034C0  CFDD FFF7          	movff	postdec2,tblptrh
  4940  0034C4                     	if	0	;tblptru may be non-zero
  4941  0034C4                     	endif
  4942  0034C4                     	if	0	;tblptru may be non-zero
  4943  0034C4                     	endif
  4944  0034C4  0008               	tblrd		*
  4945  0034C6  50F5               	movf	tablat,w,c
  4946  0034C8  0A25               	xorlw	37
  4947  0034CA  A4D8               	btfss	status,2,c
  4948  0034CC  D017               	goto	l4937
  4949                           
  4950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4951  0034CE  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4952  0034D2  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4953  0034D6  2ADE               	incf	postinc2,f,c
  4954  0034D8  0E00               	movlw	0
  4955  0034DA  22DD               	addwfc	postdec2,f,c
  4956                           
  4957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4958  0034DC  0E00               	movlw	0
  4959  0034DE  6E0D               	movwf	fputc@c+1,c
  4960  0034E0  0E25               	movlw	37
  4961  0034E2  6E0C               	movwf	fputc@c,c
  4962  0034E4  C072  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  4963  0034E8  C073  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4964  0034EC  EC16  F028         	call	_fputc	;wreg free
  4965  0034F0                     l4933:
  4966                           
  4967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4968  0034F0  0E00               	movlw	0
  4969  0034F2  0100               	movlb	0	; () banked
  4970  0034F4  6F73               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4971  0034F6  0E01               	movlw	1
  4972  0034F8  6F72               	movwf	?_vfpfcnvrt& (0+255),b
  4973  0034FA  0012               	return	
  4974  0034FC                     l4937:
  4975                           
  4976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4977  0034FC  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4978  003500  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4979  003504  2ADE               	incf	postinc2,f,c
  4980  003506  0E00               	movlw	0
  4981  003508  22DD               	addwfc	postdec2,f,c
  4982                           
  4983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4984  00350A  0E00               	movlw	0
  4985  00350C  0100               	movlb	0	; () banked
  4986  00350E  6F73               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4987  003510  0E00               	movlw	0
  4988  003512  6F72               	movwf	?_vfpfcnvrt& (0+255),b
  4989  003514  0012               	return	
  4990  003516                     l4943:
  4991                           
  4992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4993  003516  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4994  00351A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4995  00351E  CFDE FFF6          	movff	postinc2,tblptrl
  4996  003522  CFDD FFF7          	movff	postdec2,tblptrh
  4997  003526                     	if	0	;tblptru may be non-zero
  4998  003526                     	endif
  4999  003526                     	if	0	;tblptru may be non-zero
  5000  003526                     	endif
  5001  003526  0008               	tblrd		*
  5002  003528  50F5               	movf	tablat,w,c
  5003  00352A  6E0C               	movwf	fputc@c,c
  5004  00352C  6A0D               	clrf	fputc@c+1,c
  5005  00352E  C072  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  5006  003532  C073  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5007  003536  EC16  F028         	call	_fputc	;wreg free
  5008                           
  5009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5010  00353A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5011  00353E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5012  003542  2ADE               	incf	postinc2,f,c
  5013  003544  0E00               	movlw	0
  5014  003546  22DD               	addwfc	postdec2,f,c
  5015  003548  D7D3               	goto	l4933
  5016  00354A                     __end_of_vfpfcnvrt:
  5017                           	opt callstack 0
  5018                           
  5019 ;; *************** function _utoa *****************
  5020 ;; Defined at:
  5021 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  5024 ;;		 -> sprintf@f(6), 
  5025 ;;  d               8   40[COMRAM] unsigned long long 
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;  n               8    4[BANK0 ] unsigned long long 
  5028 ;;  i               2   12[BANK0 ] int 
  5029 ;;  w               2    2[BANK0 ] int 
  5030 ;;  p               2    0[BANK0 ] int 
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  2   38[COMRAM] int 
  5033 ;; Registers used:
  5034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5040 ;;      Params:        10       0       0       0       0       0       0       0       0
  5041 ;;      Locals:         0      14       0       0       0       0       0       0       0
  5042 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5043 ;;      Totals:        18      14       0       0       0       0       0       0       0
  5044 ;;Total ram usage:       32 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; Hardware stack levels required when called:   11
  5047 ;; This function calls:
  5048 ;;		___lodiv
  5049 ;;		___lomod
  5050 ;;		_pad
  5051 ;; This function is called by:
  5052 ;;		_vfpfcnvrt
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text23
  5057  004262                     __ptext23:
  5058                           	opt callstack 0
  5059  004262                     _utoa:
  5060                           	opt callstack 15
  5061                           
  5062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  5063                           
  5064                           ;incstack = 0
  5065  004262  AE3D               	btfss	_prec+1,7,c
  5066                           
  5067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  5068  004264  923E               	bcf	_flags,1,c
  5069                           
  5070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  5071  004266  BE3D               	btfsc	_prec+1,7,c
  5072  004268  D005               	goto	u3810
  5073  00426A  503D               	movf	_prec+1,w,c
  5074  00426C  E109               	bnz	l750
  5075  00426E  043C               	decf	_prec,w,c
  5076  004270  B0D8               	btfsc	status,0,c
  5077  004272  D006               	goto	l750
  5078  004274                     u3810:
  5079  004274  0E00               	movlw	0
  5080  004276  0100               	movlb	0	; () banked
  5081  004278  6F61               	movwf	(utoa@p+1)& (0+255),b
  5082  00427A  0E01               	movlw	1
  5083  00427C  6F60               	movwf	utoa@p& (0+255),b
  5084  00427E  D004               	goto	l752
  5085  004280                     l750:
  5086  004280  C03C  F060         	movff	_prec,utoa@p
  5087  004284  C03D  F061         	movff	_prec+1,utoa@p+1
  5088  004288                     l752:
  5089                           
  5090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  5091  004288  C0E9  F062         	movff	_width,utoa@w
  5092  00428C  C0EA  F063         	movff	_width+1,utoa@w+1
  5093                           
  5094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  5095  004290  C029  F064         	movff	utoa@d,utoa@n
  5096  004294  C02A  F065         	movff	utoa@d+1,utoa@n+1
  5097  004298  C02B  F066         	movff	utoa@d+2,utoa@n+2
  5098  00429C  C02C  F067         	movff	utoa@d+3,utoa@n+3
  5099  0042A0  C02D  F068         	movff	utoa@d+4,utoa@n+4
  5100  0042A4  C02E  F069         	movff	utoa@d+5,utoa@n+5
  5101  0042A8  C02F  F06A         	movff	utoa@d+6,utoa@n+6
  5102  0042AC  C030  F06B         	movff	utoa@d+7,utoa@n+7
  5103                           
  5104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  5105  0042B0  0E00               	movlw	0
  5106  0042B2  0100               	movlb	0	; () banked
  5107  0042B4  6F6D               	movwf	(utoa@i+1)& (0+255),b
  5108  0042B6  0E1F               	movlw	31
  5109  0042B8  6F6C               	movwf	utoa@i& (0+255),b
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  5113  0042BA  0E00               	movlw	0
  5114  0042BC  0101               	movlb	1	; () banked
  5115  0042BE  6FE3               	movwf	(_dbuf+31)& (0+255),b
  5116                           
  5117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5118  0042C0  D077               	goto	l4481
  5119  0042C2                     l4471:
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  5123  0042C2  076C               	decf	utoa@i& (0+255),f,b
  5124  0042C4  A0D8               	btfss	status,0,c
  5125  0042C6  076D               	decf	(utoa@i+1)& (0+255),f,b
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  5129  0042C8  0EC4               	movlw	low _dbuf
  5130  0042CA  256C               	addwf	utoa@i& (0+255),w,b
  5131  0042CC  6ED9               	movwf	fsr2l,c
  5132  0042CE  0E01               	movlw	high _dbuf
  5133  0042D0  216D               	addwfc	(utoa@i+1)& (0+255),w,b
  5134  0042D2  6EDA               	movwf	fsr2h,c
  5135  0042D4  C064  F00C         	movff	utoa@n,___lomod@dividend
  5136  0042D8  C065  F00D         	movff	utoa@n+1,___lomod@dividend+1
  5137  0042DC  C066  F00E         	movff	utoa@n+2,___lomod@dividend+2
  5138  0042E0  C067  F00F         	movff	utoa@n+3,___lomod@dividend+3
  5139  0042E4  C068  F010         	movff	utoa@n+4,___lomod@dividend+4
  5140  0042E8  C069  F011         	movff	utoa@n+5,___lomod@dividend+5
  5141  0042EC  C06A  F012         	movff	utoa@n+6,___lomod@dividend+6
  5142  0042F0  C06B  F013         	movff	utoa@n+7,___lomod@dividend+7
  5143  0042F4  0E0A               	movlw	10
  5144  0042F6  6E14               	movwf	___lomod@divisor,c
  5145  0042F8  0E00               	movlw	0
  5146  0042FA  6E15               	movwf	___lomod@divisor+1,c
  5147  0042FC  0E00               	movlw	0
  5148  0042FE  6E16               	movwf	___lomod@divisor+2,c
  5149  004300  0E00               	movlw	0
  5150  004302  6E17               	movwf	___lomod@divisor+3,c
  5151  004304  0E00               	movlw	0
  5152  004306  6E18               	movwf	___lomod@divisor+4,c
  5153  004308  0E00               	movlw	0
  5154  00430A  6E19               	movwf	___lomod@divisor+5,c
  5155  00430C  0E00               	movlw	0
  5156  00430E  6E1A               	movwf	___lomod@divisor+6,c
  5157  004310  0E00               	movlw	0
  5158  004312  6E1B               	movwf	___lomod@divisor+7,c
  5159  004314  EC6A  F027         	call	___lomod	;wreg free
  5160  004318  C00C  F031         	movff	?___lomod,??_utoa
  5161  00431C  C00D  F032         	movff	?___lomod+1,??_utoa+1
  5162  004320  C00E  F033         	movff	?___lomod+2,??_utoa+2
  5163  004324  C00F  F034         	movff	?___lomod+3,??_utoa+3
  5164  004328  C010  F035         	movff	?___lomod+4,??_utoa+4
  5165  00432C  C011  F036         	movff	?___lomod+5,??_utoa+5
  5166  004330  C012  F037         	movff	?___lomod+6,??_utoa+6
  5167  004334  C013  F038         	movff	?___lomod+7,??_utoa+7
  5168  004338  5031               	movf	??_utoa,w,c
  5169  00433A  0F30               	addlw	48
  5170  00433C  6EDF               	movwf	indf2,c
  5171                           
  5172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  5173  00433E  0100               	movlb	0	; () banked
  5174  004340  0760               	decf	utoa@p& (0+255),f,b
  5175  004342  A0D8               	btfss	status,0,c
  5176  004344  0761               	decf	(utoa@p+1)& (0+255),f,b
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  5180  004346  0762               	decf	utoa@w& (0+255),f,b
  5181  004348  A0D8               	btfss	status,0,c
  5182  00434A  0763               	decf	(utoa@w+1)& (0+255),f,b
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  5186  00434C  C064  F00C         	movff	utoa@n,___lodiv@dividend
  5187  004350  C065  F00D         	movff	utoa@n+1,___lodiv@dividend+1
  5188  004354  C066  F00E         	movff	utoa@n+2,___lodiv@dividend+2
  5189  004358  C067  F00F         	movff	utoa@n+3,___lodiv@dividend+3
  5190  00435C  C068  F010         	movff	utoa@n+4,___lodiv@dividend+4
  5191  004360  C069  F011         	movff	utoa@n+5,___lodiv@dividend+5
  5192  004364  C06A  F012         	movff	utoa@n+6,___lodiv@dividend+6
  5193  004368  C06B  F013         	movff	utoa@n+7,___lodiv@dividend+7
  5194  00436C  0E0A               	movlw	10
  5195  00436E  6E14               	movwf	___lodiv@divisor,c
  5196  004370  0E00               	movlw	0
  5197  004372  6E15               	movwf	___lodiv@divisor+1,c
  5198  004374  0E00               	movlw	0
  5199  004376  6E16               	movwf	___lodiv@divisor+2,c
  5200  004378  0E00               	movlw	0
  5201  00437A  6E17               	movwf	___lodiv@divisor+3,c
  5202  00437C  0E00               	movlw	0
  5203  00437E  6E18               	movwf	___lodiv@divisor+4,c
  5204  004380  0E00               	movlw	0
  5205  004382  6E19               	movwf	___lodiv@divisor+5,c
  5206  004384  0E00               	movlw	0
  5207  004386  6E1A               	movwf	___lodiv@divisor+6,c
  5208  004388  0E00               	movlw	0
  5209  00438A  6E1B               	movwf	___lodiv@divisor+7,c
  5210  00438C  EC4C  F026         	call	___lodiv	;wreg free
  5211  004390  C00C  F064         	movff	?___lodiv,utoa@n
  5212  004394  C00D  F065         	movff	?___lodiv+1,utoa@n+1
  5213  004398  C00E  F066         	movff	?___lodiv+2,utoa@n+2
  5214  00439C  C00F  F067         	movff	?___lodiv+3,utoa@n+3
  5215  0043A0  C010  F068         	movff	?___lodiv+4,utoa@n+4
  5216  0043A4  C011  F069         	movff	?___lodiv+5,utoa@n+5
  5217  0043A8  C012  F06A         	movff	?___lodiv+6,utoa@n+6
  5218  0043AC  C013  F06B         	movff	?___lodiv+7,utoa@n+7
  5219  0043B0                     l4481:
  5220                           
  5221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5222  0043B0  0100               	movlb	0	; () banked
  5223  0043B2  516C               	movf	utoa@i& (0+255),w,b
  5224  0043B4  116D               	iorwf	(utoa@i+1)& (0+255),w,b
  5225  0043B6  B4D8               	btfsc	status,2,c
  5226  0043B8  D01A               	goto	u3860
  5227                           
  5228                           ; BSR set to: 0
  5229  0043BA  5164               	movf	utoa@n& (0+255),w,b
  5230  0043BC  1165               	iorwf	(utoa@n+1)& (0+255),w,b
  5231  0043BE  1166               	iorwf	(utoa@n+2)& (0+255),w,b
  5232  0043C0  1167               	iorwf	(utoa@n+3)& (0+255),w,b
  5233  0043C2  1168               	iorwf	(utoa@n+4)& (0+255),w,b
  5234  0043C4  1169               	iorwf	(utoa@n+5)& (0+255),w,b
  5235  0043C6  116A               	iorwf	(utoa@n+6)& (0+255),w,b
  5236  0043C8  116B               	iorwf	(utoa@n+7)& (0+255),w,b
  5237  0043CA  A4D8               	btfss	status,2,c
  5238  0043CC  D77A               	goto	l4471
  5239                           
  5240                           ; BSR set to: 0
  5241  0043CE  BF61               	btfsc	(utoa@p+1)& (0+255),7,b
  5242  0043D0  D005               	goto	u3840
  5243  0043D2  5161               	movf	(utoa@p+1)& (0+255),w,b
  5244  0043D4  E102               	bnz	u3841
  5245  0043D6  0560               	decf	utoa@p& (0+255),w,b
  5246  0043D8  B0D8               	btfsc	status,0,c
  5247  0043DA                     u3841:
  5248  0043DA  D773               	goto	l4471
  5249  0043DC                     u3840:
  5250                           
  5251                           ; BSR set to: 0
  5252  0043DC  BF63               	btfsc	(utoa@w+1)& (0+255),7,b
  5253  0043DE  D007               	goto	u3860
  5254  0043E0  5163               	movf	(utoa@w+1)& (0+255),w,b
  5255  0043E2  E103               	bnz	u3850
  5256  0043E4  0562               	decf	utoa@w& (0+255),w,b
  5257  0043E6  A0D8               	btfss	status,0,c
  5258  0043E8  D002               	goto	u3860
  5259  0043EA                     u3850:
  5260                           
  5261                           ; BSR set to: 0
  5262  0043EA  B23E               	btfsc	_flags,1,c
  5263  0043EC  D76A               	goto	l4471
  5264  0043EE                     u3860:
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  5268  0043EE  C027  F01C         	movff	utoa@fp,pad@fp
  5269  0043F2  C028  F01D         	movff	utoa@fp+1,pad@fp+1
  5270  0043F6  0EC4               	movlw	low _dbuf
  5271  0043F8  256C               	addwf	utoa@i& (0+255),w,b
  5272  0043FA  6E1E               	movwf	pad@buf,c
  5273  0043FC  0E01               	movlw	high _dbuf
  5274  0043FE  216D               	addwfc	(utoa@i+1)& (0+255),w,b
  5275  004400  6E1F               	movwf	pad@buf+1,c
  5276  004402  C062  F020         	movff	utoa@w,pad@p
  5277  004406  C063  F021         	movff	utoa@w+1,pad@p+1
  5278  00440A  EC66  F028         	call	_pad	;wreg free
  5279  00440E  C01C  F027         	movff	?_pad,?_utoa
  5280  004412  C01D  F028         	movff	?_pad+1,?_utoa+1
  5281  004416  0012               	return		;funcret
  5282  004418                     __end_of_utoa:
  5283                           	opt callstack 0
  5284                           
  5285 ;; *************** function ___lomod *****************
  5286 ;; Defined at:
  5287 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;  dividend        8   11[COMRAM] unsigned long long 
  5290 ;;  divisor         8   19[COMRAM] unsigned long long 
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;  counter         1   27[COMRAM] unsigned char 
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  8   11[COMRAM] unsigned long long 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5302 ;;      Params:        16       0       0       0       0       0       0       0       0
  5303 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5305 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5306 ;;Total ram usage:       17 bytes
  5307 ;; Hardware stack levels used:    1
  5308 ;; Hardware stack levels required when called:    7
  5309 ;; This function calls:
  5310 ;;		Nothing
  5311 ;; This function is called by:
  5312 ;;		_utoa
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           	psect	text24
  5317  004ED4                     __ptext24:
  5318                           	opt callstack 0
  5319  004ED4                     ___lomod:
  5320                           	opt callstack 18
  5321                           
  5322                           ;incstack = 0
  5323  004ED4  5014               	movf	___lomod@divisor,w,c
  5324  004ED6  1015               	iorwf	___lomod@divisor+1,w,c
  5325  004ED8  1016               	iorwf	___lomod@divisor+2,w,c
  5326  004EDA  1017               	iorwf	___lomod@divisor+3,w,c
  5327  004EDC  1018               	iorwf	___lomod@divisor+4,w,c
  5328  004EDE  1019               	iorwf	___lomod@divisor+5,w,c
  5329  004EE0  101A               	iorwf	___lomod@divisor+6,w,c
  5330  004EE2  101B               	iorwf	___lomod@divisor+7,w,c
  5331  004EE4  B4D8               	btfsc	status,2,c
  5332  004EE6  D03C               	goto	l1231
  5333  004EE8  0E01               	movlw	1
  5334  004EEA  6E1C               	movwf	___lomod@counter,c
  5335  004EEC  D00A               	goto	l4373
  5336  004EEE                     l4371:
  5337  004EEE  90D8               	bcf	status,0,c
  5338  004EF0  3614               	rlcf	___lomod@divisor,f,c
  5339  004EF2  3615               	rlcf	___lomod@divisor+1,f,c
  5340  004EF4  3616               	rlcf	___lomod@divisor+2,f,c
  5341  004EF6  3617               	rlcf	___lomod@divisor+3,f,c
  5342  004EF8  3618               	rlcf	___lomod@divisor+4,f,c
  5343  004EFA  3619               	rlcf	___lomod@divisor+5,f,c
  5344  004EFC  361A               	rlcf	___lomod@divisor+6,f,c
  5345  004EFE  361B               	rlcf	___lomod@divisor+7,f,c
  5346  004F00  2A1C               	incf	___lomod@counter,f,c
  5347  004F02                     l4373:
  5348  004F02  AE1B               	btfss	___lomod@divisor+7,7,c
  5349  004F04  D7F4               	goto	l4371
  5350  004F06                     u3620:
  5351  004F06  5014               	movf	___lomod@divisor,w,c
  5352  004F08  5C0C               	subwf	___lomod@dividend,w,c
  5353  004F0A  5015               	movf	___lomod@divisor+1,w,c
  5354  004F0C  580D               	subwfb	___lomod@dividend+1,w,c
  5355  004F0E  5016               	movf	___lomod@divisor+2,w,c
  5356  004F10  580E               	subwfb	___lomod@dividend+2,w,c
  5357  004F12  5017               	movf	___lomod@divisor+3,w,c
  5358  004F14  580F               	subwfb	___lomod@dividend+3,w,c
  5359  004F16  5018               	movf	___lomod@divisor+4,w,c
  5360  004F18  5810               	subwfb	___lomod@dividend+4,w,c
  5361  004F1A  5019               	movf	___lomod@divisor+5,w,c
  5362  004F1C  5811               	subwfb	___lomod@dividend+5,w,c
  5363  004F1E  501A               	movf	___lomod@divisor+6,w,c
  5364  004F20  5812               	subwfb	___lomod@dividend+6,w,c
  5365  004F22  501B               	movf	___lomod@divisor+7,w,c
  5366  004F24  5813               	subwfb	___lomod@dividend+7,w,c
  5367  004F26  A0D8               	btfss	status,0,c
  5368  004F28  D010               	goto	l4379
  5369  004F2A  5014               	movf	___lomod@divisor,w,c
  5370  004F2C  5E0C               	subwf	___lomod@dividend,f,c
  5371  004F2E  5015               	movf	___lomod@divisor+1,w,c
  5372  004F30  5A0D               	subwfb	___lomod@dividend+1,f,c
  5373  004F32  5016               	movf	___lomod@divisor+2,w,c
  5374  004F34  5A0E               	subwfb	___lomod@dividend+2,f,c
  5375  004F36  5017               	movf	___lomod@divisor+3,w,c
  5376  004F38  5A0F               	subwfb	___lomod@dividend+3,f,c
  5377  004F3A  5018               	movf	___lomod@divisor+4,w,c
  5378  004F3C  5A10               	subwfb	___lomod@dividend+4,f,c
  5379  004F3E  5019               	movf	___lomod@divisor+5,w,c
  5380  004F40  5A11               	subwfb	___lomod@dividend+5,f,c
  5381  004F42  501A               	movf	___lomod@divisor+6,w,c
  5382  004F44  5A12               	subwfb	___lomod@dividend+6,f,c
  5383  004F46  501B               	movf	___lomod@divisor+7,w,c
  5384  004F48  5A13               	subwfb	___lomod@dividend+7,f,c
  5385  004F4A                     l4379:
  5386  004F4A  90D8               	bcf	status,0,c
  5387  004F4C  321B               	rrcf	___lomod@divisor+7,f,c
  5388  004F4E  321A               	rrcf	___lomod@divisor+6,f,c
  5389  004F50  3219               	rrcf	___lomod@divisor+5,f,c
  5390  004F52  3218               	rrcf	___lomod@divisor+4,f,c
  5391  004F54  3217               	rrcf	___lomod@divisor+3,f,c
  5392  004F56  3216               	rrcf	___lomod@divisor+2,f,c
  5393  004F58  3215               	rrcf	___lomod@divisor+1,f,c
  5394  004F5A  3214               	rrcf	___lomod@divisor,f,c
  5395  004F5C  2E1C               	decfsz	___lomod@counter,f,c
  5396  004F5E  D7D3               	goto	u3620
  5397  004F60                     l1231:
  5398  004F60  C00C  F00C         	movff	___lomod@dividend,?___lomod
  5399  004F64  C00D  F00D         	movff	___lomod@dividend+1,?___lomod+1
  5400  004F68  C00E  F00E         	movff	___lomod@dividend+2,?___lomod+2
  5401  004F6C  C00F  F00F         	movff	___lomod@dividend+3,?___lomod+3
  5402  004F70  C010  F010         	movff	___lomod@dividend+4,?___lomod+4
  5403  004F74  C011  F011         	movff	___lomod@dividend+5,?___lomod+5
  5404  004F78  C012  F012         	movff	___lomod@dividend+6,?___lomod+6
  5405  004F7C  C013  F013         	movff	___lomod@dividend+7,?___lomod+7
  5406  004F80  0012               	return		;funcret
  5407  004F82                     __end_of___lomod:
  5408                           	opt callstack 0
  5409                           
  5410 ;; *************** function ___lodiv *****************
  5411 ;; Defined at:
  5412 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  dividend        8   11[COMRAM] unsigned long long 
  5415 ;;  divisor         8   19[COMRAM] unsigned long long 
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;  quotient        8   27[COMRAM] unsigned long long 
  5418 ;;  counter         1   35[COMRAM] unsigned char 
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  8   11[COMRAM] unsigned long long 
  5421 ;; Registers used:
  5422 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5428 ;;      Params:        16       0       0       0       0       0       0       0       0
  5429 ;;      Locals:         9       0       0       0       0       0       0       0       0
  5430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5431 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5432 ;;Total ram usage:       25 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; Hardware stack levels required when called:    7
  5435 ;; This function calls:
  5436 ;;		Nothing
  5437 ;; This function is called by:
  5438 ;;		_utoa
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text25
  5443  004C98                     __ptext25:
  5444                           	opt callstack 0
  5445  004C98                     ___lodiv:
  5446                           	opt callstack 18
  5447                           
  5448                           ;incstack = 0
  5449  004C98  EE20  F01C         	lfsr	2,___lodiv@quotient
  5450  004C9C  0E07               	movlw	7
  5451  004C9E                     u3571:
  5452  004C9E  6ADE               	clrf	postinc2,c
  5453  004CA0  06E8               	decf	wreg,f,c
  5454  004CA2  E2FD               	bc	u3571
  5455  004CA4  5014               	movf	___lodiv@divisor,w,c
  5456  004CA6  1015               	iorwf	___lodiv@divisor+1,w,c
  5457  004CA8  1016               	iorwf	___lodiv@divisor+2,w,c
  5458  004CAA  1017               	iorwf	___lodiv@divisor+3,w,c
  5459  004CAC  1018               	iorwf	___lodiv@divisor+4,w,c
  5460  004CAE  1019               	iorwf	___lodiv@divisor+5,w,c
  5461  004CB0  101A               	iorwf	___lodiv@divisor+6,w,c
  5462  004CB2  101B               	iorwf	___lodiv@divisor+7,w,c
  5463  004CB4  B4D8               	btfsc	status,2,c
  5464  004CB6  D046               	goto	l1221
  5465  004CB8  0E01               	movlw	1
  5466  004CBA  6E24               	movwf	___lodiv@counter,c
  5467  004CBC  D00A               	goto	l4353
  5468  004CBE                     l4351:
  5469  004CBE  90D8               	bcf	status,0,c
  5470  004CC0  3614               	rlcf	___lodiv@divisor,f,c
  5471  004CC2  3615               	rlcf	___lodiv@divisor+1,f,c
  5472  004CC4  3616               	rlcf	___lodiv@divisor+2,f,c
  5473  004CC6  3617               	rlcf	___lodiv@divisor+3,f,c
  5474  004CC8  3618               	rlcf	___lodiv@divisor+4,f,c
  5475  004CCA  3619               	rlcf	___lodiv@divisor+5,f,c
  5476  004CCC  361A               	rlcf	___lodiv@divisor+6,f,c
  5477  004CCE  361B               	rlcf	___lodiv@divisor+7,f,c
  5478  004CD0  2A24               	incf	___lodiv@counter,f,c
  5479  004CD2                     l4353:
  5480  004CD2  AE1B               	btfss	___lodiv@divisor+7,7,c
  5481  004CD4  D7F4               	goto	l4351
  5482  004CD6                     u3590:
  5483  004CD6  90D8               	bcf	status,0,c
  5484  004CD8  361C               	rlcf	___lodiv@quotient,f,c
  5485  004CDA  361D               	rlcf	___lodiv@quotient+1,f,c
  5486  004CDC  361E               	rlcf	___lodiv@quotient+2,f,c
  5487  004CDE  361F               	rlcf	___lodiv@quotient+3,f,c
  5488  004CE0  3620               	rlcf	___lodiv@quotient+4,f,c
  5489  004CE2  3621               	rlcf	___lodiv@quotient+5,f,c
  5490  004CE4  3622               	rlcf	___lodiv@quotient+6,f,c
  5491  004CE6  3623               	rlcf	___lodiv@quotient+7,f,c
  5492  004CE8  5014               	movf	___lodiv@divisor,w,c
  5493  004CEA  5C0C               	subwf	___lodiv@dividend,w,c
  5494  004CEC  5015               	movf	___lodiv@divisor+1,w,c
  5495  004CEE  580D               	subwfb	___lodiv@dividend+1,w,c
  5496  004CF0  5016               	movf	___lodiv@divisor+2,w,c
  5497  004CF2  580E               	subwfb	___lodiv@dividend+2,w,c
  5498  004CF4  5017               	movf	___lodiv@divisor+3,w,c
  5499  004CF6  580F               	subwfb	___lodiv@dividend+3,w,c
  5500  004CF8  5018               	movf	___lodiv@divisor+4,w,c
  5501  004CFA  5810               	subwfb	___lodiv@dividend+4,w,c
  5502  004CFC  5019               	movf	___lodiv@divisor+5,w,c
  5503  004CFE  5811               	subwfb	___lodiv@dividend+5,w,c
  5504  004D00  501A               	movf	___lodiv@divisor+6,w,c
  5505  004D02  5812               	subwfb	___lodiv@dividend+6,w,c
  5506  004D04  501B               	movf	___lodiv@divisor+7,w,c
  5507  004D06  5813               	subwfb	___lodiv@dividend+7,w,c
  5508  004D08  A0D8               	btfss	status,0,c
  5509  004D0A  D011               	goto	l4363
  5510  004D0C  5014               	movf	___lodiv@divisor,w,c
  5511  004D0E  5E0C               	subwf	___lodiv@dividend,f,c
  5512  004D10  5015               	movf	___lodiv@divisor+1,w,c
  5513  004D12  5A0D               	subwfb	___lodiv@dividend+1,f,c
  5514  004D14  5016               	movf	___lodiv@divisor+2,w,c
  5515  004D16  5A0E               	subwfb	___lodiv@dividend+2,f,c
  5516  004D18  5017               	movf	___lodiv@divisor+3,w,c
  5517  004D1A  5A0F               	subwfb	___lodiv@dividend+3,f,c
  5518  004D1C  5018               	movf	___lodiv@divisor+4,w,c
  5519  004D1E  5A10               	subwfb	___lodiv@dividend+4,f,c
  5520  004D20  5019               	movf	___lodiv@divisor+5,w,c
  5521  004D22  5A11               	subwfb	___lodiv@dividend+5,f,c
  5522  004D24  501A               	movf	___lodiv@divisor+6,w,c
  5523  004D26  5A12               	subwfb	___lodiv@dividend+6,f,c
  5524  004D28  501B               	movf	___lodiv@divisor+7,w,c
  5525  004D2A  5A13               	subwfb	___lodiv@dividend+7,f,c
  5526  004D2C  801C               	bsf	___lodiv@quotient,0,c
  5527  004D2E                     l4363:
  5528  004D2E  90D8               	bcf	status,0,c
  5529  004D30  321B               	rrcf	___lodiv@divisor+7,f,c
  5530  004D32  321A               	rrcf	___lodiv@divisor+6,f,c
  5531  004D34  3219               	rrcf	___lodiv@divisor+5,f,c
  5532  004D36  3218               	rrcf	___lodiv@divisor+4,f,c
  5533  004D38  3217               	rrcf	___lodiv@divisor+3,f,c
  5534  004D3A  3216               	rrcf	___lodiv@divisor+2,f,c
  5535  004D3C  3215               	rrcf	___lodiv@divisor+1,f,c
  5536  004D3E  3214               	rrcf	___lodiv@divisor,f,c
  5537  004D40  2E24               	decfsz	___lodiv@counter,f,c
  5538  004D42  D7C9               	goto	u3590
  5539  004D44                     l1221:
  5540  004D44  C01C  F00C         	movff	___lodiv@quotient,?___lodiv
  5541  004D48  C01D  F00D         	movff	___lodiv@quotient+1,?___lodiv+1
  5542  004D4C  C01E  F00E         	movff	___lodiv@quotient+2,?___lodiv+2
  5543  004D50  C01F  F00F         	movff	___lodiv@quotient+3,?___lodiv+3
  5544  004D54  C020  F010         	movff	___lodiv@quotient+4,?___lodiv+4
  5545  004D58  C021  F011         	movff	___lodiv@quotient+5,?___lodiv+5
  5546  004D5C  C022  F012         	movff	___lodiv@quotient+6,?___lodiv+6
  5547  004D60  C023  F013         	movff	___lodiv@quotient+7,?___lodiv+7
  5548  004D64  0012               	return		;funcret
  5549  004D66                     __end_of___lodiv:
  5550                           	opt callstack 0
  5551                           
  5552 ;; *************** function _strncmp *****************
  5553 ;; Defined at:
  5554 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;  _l              2   11[COMRAM] PTR const unsigned char 
  5557 ;;		 -> STR_17(19), STR_16(24), STR_15(23), STR_14(13), 
  5558 ;;		 -> STR_13(19), STR_12(42), STR_11(34), STR_10(32), 
  5559 ;;		 -> STR_9(32), STR_8(37), STR_7(28), STR_6(33), 
  5560 ;;		 -> STR_5(29), STR_4(28), STR_3(36), STR_2(36), 
  5561 ;;		 -> STR_1(39), 
  5562 ;;  _r              2   13[COMRAM] PTR const unsigned char 
  5563 ;;		 -> STR_29(3), STR_24(3), STR_20(3), 
  5564 ;;  n               2   15[COMRAM] unsigned int 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  r               2   20[COMRAM] PTR const unsigned char 
  5567 ;;		 -> STR_29(3), STR_24(3), STR_20(3), 
  5568 ;;  l               2   18[COMRAM] PTR const unsigned char 
  5569 ;;		 -> STR_17(19), STR_16(24), STR_15(23), STR_14(13), 
  5570 ;;		 -> STR_13(19), STR_12(42), STR_11(34), STR_10(32), 
  5571 ;;		 -> STR_9(32), STR_8(37), STR_7(28), STR_6(33), 
  5572 ;;		 -> STR_5(29), STR_4(28), STR_3(36), STR_2(36), 
  5573 ;;		 -> STR_1(39), 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  2   11[COMRAM] int 
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5583 ;;      Params:         6       0       0       0       0       0       0       0       0
  5584 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5585 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5586 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5587 ;;Total ram usage:       11 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:    7
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_vfpfcnvrt
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           	psect	text26
  5598  004F82                     __ptext26:
  5599                           	opt callstack 0
  5600  004F82                     _strncmp:
  5601                           	opt callstack 19
  5602                           
  5603                           ;incstack = 0
  5604  004F82  C00C  F013         	movff	strncmp@_l,strncmp@l
  5605  004F86  C00D  F014         	movff	strncmp@_l+1,strncmp@l+1
  5606  004F8A  C00E  F015         	movff	strncmp@_r,strncmp@r
  5607  004F8E  C00F  F016         	movff	strncmp@_r+1,strncmp@r+1
  5608  004F92  0610               	decf	strncmp@n,f,c
  5609  004F94  A0D8               	btfss	status,0,c
  5610  004F96  0611               	decf	strncmp@n+1,f,c
  5611  004F98  2810               	incf	strncmp@n,w,c
  5612  004F9A  E10F               	bnz	l4503
  5613  004F9C  2811               	incf	strncmp@n+1,w,c
  5614  004F9E  A4D8               	btfss	status,2,c
  5615  004FA0  D00C               	goto	l4503
  5616  004FA2  0E00               	movlw	0
  5617  004FA4  6E0D               	movwf	?_strncmp+1,c
  5618  004FA6  0E00               	movlw	0
  5619  004FA8  6E0C               	movwf	?_strncmp,c
  5620  004FAA  0012               	return	
  5621  004FAC                     l4501:
  5622  004FAC  4A13               	infsnz	strncmp@l,f,c
  5623  004FAE  2A14               	incf	strncmp@l+1,f,c
  5624  004FB0  4A15               	infsnz	strncmp@r,f,c
  5625  004FB2  2A16               	incf	strncmp@r+1,f,c
  5626  004FB4  0610               	decf	strncmp@n,f,c
  5627  004FB6  A0D8               	btfss	status,0,c
  5628  004FB8  0611               	decf	strncmp@n+1,f,c
  5629  004FBA                     l4503:
  5630  004FBA  C013  FFF6         	movff	strncmp@l,tblptrl
  5631  004FBE  C014  FFF7         	movff	strncmp@l+1,tblptrh
  5632  004FC2                     	if	0	;tblptru may be non-zero
  5633  004FC2                     	endif
  5634  004FC2                     	if	0	;tblptru may be non-zero
  5635  004FC2                     	endif
  5636  004FC2  0008               	tblrd		*
  5637  004FC4  50F5               	movf	tablat,w,c
  5638  004FC6  0900               	iorlw	0
  5639  004FC8  B4D8               	btfsc	status,2,c
  5640  004FCA  D01D               	goto	u3910
  5641  004FCC  C015  FFF6         	movff	strncmp@r,tblptrl
  5642  004FD0  C016  FFF7         	movff	strncmp@r+1,tblptrh
  5643  004FD4                     	if	0	;tblptru may be non-zero
  5644  004FD4                     	endif
  5645  004FD4                     	if	0	;tblptru may be non-zero
  5646  004FD4                     	endif
  5647  004FD4  0008               	tblrd		*
  5648  004FD6  50F5               	movf	tablat,w,c
  5649  004FD8  0900               	iorlw	0
  5650  004FDA  B4D8               	btfsc	status,2,c
  5651  004FDC  D014               	goto	u3910
  5652  004FDE  5010               	movf	strncmp@n,w,c
  5653  004FE0  1011               	iorwf	strncmp@n+1,w,c
  5654  004FE2  B4D8               	btfsc	status,2,c
  5655  004FE4  D010               	goto	u3910
  5656  004FE6  C013  FFF6         	movff	strncmp@l,tblptrl
  5657  004FEA  C014  FFF7         	movff	strncmp@l+1,tblptrh
  5658  004FEE                     	if	0	;tblptru may be non-zero
  5659  004FEE                     	endif
  5660  004FEE                     	if	0	;tblptru may be non-zero
  5661  004FEE                     	endif
  5662  004FEE  0008               	tblrd		*
  5663  004FF0  CFF5 F012          	movff	tablat,??_strncmp
  5664  004FF4  C015  FFF6         	movff	strncmp@r,tblptrl
  5665  004FF8  C016  FFF7         	movff	strncmp@r+1,tblptrh
  5666  004FFC                     	if	0	;tblptru may be non-zero
  5667  004FFC                     	endif
  5668  004FFC                     	if	0	;tblptru may be non-zero
  5669  004FFC                     	endif
  5670  004FFC  0008               	tblrd		*
  5671  004FFE  50F5               	movf	tablat,w,c
  5672  005000  1812               	xorwf	??_strncmp,w,c
  5673  005002  B4D8               	btfsc	status,2,c
  5674  005004  D7D3               	goto	l4501
  5675  005006                     u3910:
  5676  005006  C013  FFF6         	movff	strncmp@l,tblptrl
  5677  00500A  C014  FFF7         	movff	strncmp@l+1,tblptrh
  5678  00500E                     	if	0	;tblptru may be non-zero
  5679  00500E                     	endif
  5680  00500E                     	if	0	;tblptru may be non-zero
  5681  00500E                     	endif
  5682  00500E  0008               	tblrd		*
  5683  005010  CFF5 F012          	movff	tablat,??_strncmp
  5684  005014  C015  FFF6         	movff	strncmp@r,tblptrl
  5685  005018  C016  FFF7         	movff	strncmp@r+1,tblptrh
  5686  00501C                     	if	0	;tblptru may be non-zero
  5687  00501C                     	endif
  5688  00501C                     	if	0	;tblptru may be non-zero
  5689  00501C                     	endif
  5690  00501C  0008               	tblrd		*
  5691  00501E  50F5               	movf	tablat,w,c
  5692  005020  5C12               	subwf	??_strncmp,w,c
  5693  005022  6E0C               	movwf	?_strncmp,c
  5694  005024  6A0D               	clrf	?_strncmp+1,c
  5695  005026  A0D8               	btfss	status,0,c
  5696  005028  060D               	decf	?_strncmp+1,f,c
  5697  00502A  0012               	return		;funcret
  5698  00502C                     __end_of_strncmp:
  5699                           	opt callstack 0
  5700                           
  5701 ;; *************** function _dtoa *****************
  5702 ;; Defined at:
  5703 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  5706 ;;		 -> sprintf@f(6), 
  5707 ;;  d               8   40[COMRAM] long long 
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;  n               8    8[BANK0 ] long long 
  5710 ;;  i               2   16[BANK0 ] int 
  5711 ;;  s               2    6[BANK0 ] int 
  5712 ;;  w               2    4[BANK0 ] int 
  5713 ;;  p               2    2[BANK0 ] int 
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  2   38[COMRAM] int 
  5716 ;; Registers used:
  5717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5723 ;;      Params:        10       0       0       0       0       0       0       0       0
  5724 ;;      Locals:         0      18       0       0       0       0       0       0       0
  5725 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5726 ;;      Totals:        18      18       0       0       0       0       0       0       0
  5727 ;;Total ram usage:       36 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:   11
  5730 ;; This function calls:
  5731 ;;		___aodiv
  5732 ;;		___aomod
  5733 ;;		_abs
  5734 ;;		_pad
  5735 ;; This function is called by:
  5736 ;;		_vfpfcnvrt
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text27
  5741  003E32                     __ptext27:
  5742                           	opt callstack 0
  5743  003E32                     _dtoa:
  5744                           	opt callstack 15
  5745                           
  5746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5747                           
  5748                           ;incstack = 0
  5749  003E32  C029  F068         	movff	dtoa@d,dtoa@n
  5750  003E36  C02A  F069         	movff	dtoa@d+1,dtoa@n+1
  5751  003E3A  C02B  F06A         	movff	dtoa@d+2,dtoa@n+2
  5752  003E3E  C02C  F06B         	movff	dtoa@d+3,dtoa@n+3
  5753  003E42  C02D  F06C         	movff	dtoa@d+4,dtoa@n+4
  5754  003E46  C02E  F06D         	movff	dtoa@d+5,dtoa@n+5
  5755  003E4A  C02F  F06E         	movff	dtoa@d+6,dtoa@n+6
  5756  003E4E  C030  F06F         	movff	dtoa@d+7,dtoa@n+7
  5757                           
  5758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5759  003E52  0100               	movlb	0	; () banked
  5760  003E54  AF6F               	btfss	(dtoa@n+7)& (0+255),7,b
  5761  003E56  D002               	goto	u3650
  5762  003E58  0E01               	movlw	1
  5763  003E5A  D001               	goto	u3660
  5764  003E5C                     u3650:
  5765  003E5C  0E00               	movlw	0
  5766  003E5E                     u3660:
  5767  003E5E  6F66               	movwf	dtoa@s& (0+255),b
  5768  003E60  6B67               	clrf	(dtoa@s+1)& (0+255),b
  5769                           
  5770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5771  003E62  5166               	movf	dtoa@s& (0+255),w,b
  5772  003E64  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  5773  003E66  B4D8               	btfsc	status,2,c
  5774  003E68  D010               	goto	l4403
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5778  003E6A  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
  5779  003E6C  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
  5780  003E6E  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
  5781  003E70  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
  5782  003E72  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
  5783  003E74  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
  5784  003E76  1F69               	comf	(dtoa@n+1)& (0+255),f,b
  5785  003E78  6D68               	negf	dtoa@n& (0+255),b
  5786  003E7A  0E00               	movlw	0
  5787  003E7C  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
  5788  003E7E  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
  5789  003E80  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
  5790  003E82  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
  5791  003E84  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
  5792  003E86  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
  5793  003E88  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
  5794  003E8A                     l4403:
  5795                           
  5796                           ; BSR set to: 0
  5797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5798  003E8A  AE3D               	btfss	_prec+1,7,c
  5799                           
  5800                           ; BSR set to: 0
  5801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5802  003E8C  923E               	bcf	_flags,1,c
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5806  003E8E  BE3D               	btfsc	_prec+1,7,c
  5807  003E90  D005               	goto	u3690
  5808  003E92  503D               	movf	_prec+1,w,c
  5809  003E94  E108               	bnz	l725
  5810  003E96  043C               	decf	_prec,w,c
  5811  003E98  B0D8               	btfsc	status,0,c
  5812  003E9A  D005               	goto	l725
  5813  003E9C                     u3690:
  5814                           
  5815                           ; BSR set to: 0
  5816  003E9C  0E00               	movlw	0
  5817  003E9E  6F63               	movwf	(dtoa@p+1)& (0+255),b
  5818  003EA0  0E01               	movlw	1
  5819  003EA2  6F62               	movwf	dtoa@p& (0+255),b
  5820  003EA4  D004               	goto	l727
  5821  003EA6                     l725:
  5822                           
  5823                           ; BSR set to: 0
  5824  003EA6  C03C  F062         	movff	_prec,dtoa@p
  5825  003EAA  C03D  F063         	movff	_prec+1,dtoa@p+1
  5826  003EAE                     l727:
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5830  003EAE  C0E9  F064         	movff	_width,dtoa@w
  5831  003EB2  C0EA  F065         	movff	_width+1,dtoa@w+1
  5832                           
  5833                           ; BSR set to: 0
  5834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5835  003EB6  5166               	movf	dtoa@s& (0+255),w,b
  5836  003EB8  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  5837  003EBA  A4D8               	btfss	status,2,c
  5838  003EBC  D002               	goto	u3710
  5839                           
  5840                           ; BSR set to: 0
  5841  003EBE  A43E               	btfss	_flags,2,c
  5842  003EC0  D003               	goto	l4417
  5843  003EC2                     u3710:
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5847  003EC2  0764               	decf	dtoa@w& (0+255),f,b
  5848  003EC4  A0D8               	btfss	status,0,c
  5849  003EC6  0765               	decf	(dtoa@w+1)& (0+255),f,b
  5850  003EC8                     l4417:
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5854  003EC8  0E00               	movlw	0
  5855  003ECA  6F71               	movwf	(dtoa@i+1)& (0+255),b
  5856  003ECC  0E1F               	movlw	31
  5857  003ECE  6F70               	movwf	dtoa@i& (0+255),b
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5861  003ED0  0E00               	movlw	0
  5862  003ED2  0101               	movlb	1	; () banked
  5863  003ED4  6FE3               	movwf	(_dbuf+31)& (0+255),b
  5864                           
  5865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5866  003ED6  D07D               	goto	l4431
  5867  003ED8                     l4421:
  5868                           
  5869                           ; BSR set to: 0
  5870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5871  003ED8  0770               	decf	dtoa@i& (0+255),f,b
  5872  003EDA  A0D8               	btfss	status,0,c
  5873  003EDC  0771               	decf	(dtoa@i+1)& (0+255),f,b
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5877  003EDE  0EC4               	movlw	low _dbuf
  5878  003EE0  2570               	addwf	dtoa@i& (0+255),w,b
  5879  003EE2  6ED9               	movwf	fsr2l,c
  5880  003EE4  0E01               	movlw	high _dbuf
  5881  003EE6  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  5882  003EE8  6EDA               	movwf	fsr2h,c
  5883  003EEA  C068  F00C         	movff	dtoa@n,___aomod@dividend
  5884  003EEE  C069  F00D         	movff	dtoa@n+1,___aomod@dividend+1
  5885  003EF2  C06A  F00E         	movff	dtoa@n+2,___aomod@dividend+2
  5886  003EF6  C06B  F00F         	movff	dtoa@n+3,___aomod@dividend+3
  5887  003EFA  C06C  F010         	movff	dtoa@n+4,___aomod@dividend+4
  5888  003EFE  C06D  F011         	movff	dtoa@n+5,___aomod@dividend+5
  5889  003F02  C06E  F012         	movff	dtoa@n+6,___aomod@dividend+6
  5890  003F06  C06F  F013         	movff	dtoa@n+7,___aomod@dividend+7
  5891  003F0A  0E0A               	movlw	10
  5892  003F0C  6E14               	movwf	___aomod@divisor,c
  5893  003F0E  0E00               	movlw	0
  5894  003F10  6E15               	movwf	___aomod@divisor+1,c
  5895  003F12  0E00               	movlw	0
  5896  003F14  6E16               	movwf	___aomod@divisor+2,c
  5897  003F16  0E00               	movlw	0
  5898  003F18  6E17               	movwf	___aomod@divisor+3,c
  5899  003F1A  0E00               	movlw	0
  5900  003F1C  6E18               	movwf	___aomod@divisor+4,c
  5901  003F1E  0E00               	movlw	0
  5902  003F20  6E19               	movwf	___aomod@divisor+5,c
  5903  003F22  0E00               	movlw	0
  5904  003F24  6E1A               	movwf	___aomod@divisor+6,c
  5905  003F26  0E00               	movlw	0
  5906  003F28  6E1B               	movwf	___aomod@divisor+7,c
  5907  003F2A  EC51  F025         	call	___aomod	;wreg free
  5908  003F2E  C00C  F031         	movff	?___aomod,??_dtoa
  5909  003F32  C00D  F032         	movff	?___aomod+1,??_dtoa+1
  5910  003F36  C00E  F033         	movff	?___aomod+2,??_dtoa+2
  5911  003F3A  C00F  F034         	movff	?___aomod+3,??_dtoa+3
  5912  003F3E  C010  F035         	movff	?___aomod+4,??_dtoa+4
  5913  003F42  C011  F036         	movff	?___aomod+5,??_dtoa+5
  5914  003F46  C012  F037         	movff	?___aomod+6,??_dtoa+6
  5915  003F4A  C013  F038         	movff	?___aomod+7,??_dtoa+7
  5916  003F4E  C031  F01E         	movff	??_dtoa,abs@a
  5917  003F52  C033  F01F         	movff	??_dtoa+2,abs@a+1
  5918  003F56  EC8D  F02B         	call	_abs	;wreg free
  5919  003F5A  501E               	movf	?_abs,w,c
  5920  003F5C  0F30               	addlw	48
  5921  003F5E  6EDF               	movwf	indf2,c
  5922                           
  5923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5924  003F60  0100               	movlb	0	; () banked
  5925  003F62  0762               	decf	dtoa@p& (0+255),f,b
  5926  003F64  A0D8               	btfss	status,0,c
  5927  003F66  0763               	decf	(dtoa@p+1)& (0+255),f,b
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5931  003F68  0764               	decf	dtoa@w& (0+255),f,b
  5932  003F6A  A0D8               	btfss	status,0,c
  5933  003F6C  0765               	decf	(dtoa@w+1)& (0+255),f,b
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5937  003F6E  C068  F00C         	movff	dtoa@n,___aodiv@dividend
  5938  003F72  C069  F00D         	movff	dtoa@n+1,___aodiv@dividend+1
  5939  003F76  C06A  F00E         	movff	dtoa@n+2,___aodiv@dividend+2
  5940  003F7A  C06B  F00F         	movff	dtoa@n+3,___aodiv@dividend+3
  5941  003F7E  C06C  F010         	movff	dtoa@n+4,___aodiv@dividend+4
  5942  003F82  C06D  F011         	movff	dtoa@n+5,___aodiv@dividend+5
  5943  003F86  C06E  F012         	movff	dtoa@n+6,___aodiv@dividend+6
  5944  003F8A  C06F  F013         	movff	dtoa@n+7,___aodiv@dividend+7
  5945  003F8E  0E0A               	movlw	10
  5946  003F90  6E14               	movwf	___aodiv@divisor,c
  5947  003F92  0E00               	movlw	0
  5948  003F94  6E15               	movwf	___aodiv@divisor+1,c
  5949  003F96  0E00               	movlw	0
  5950  003F98  6E16               	movwf	___aodiv@divisor+2,c
  5951  003F9A  0E00               	movlw	0
  5952  003F9C  6E17               	movwf	___aodiv@divisor+3,c
  5953  003F9E  0E00               	movlw	0
  5954  003FA0  6E18               	movwf	___aodiv@divisor+4,c
  5955  003FA2  0E00               	movlw	0
  5956  003FA4  6E19               	movwf	___aodiv@divisor+5,c
  5957  003FA6  0E00               	movlw	0
  5958  003FA8  6E1A               	movwf	___aodiv@divisor+6,c
  5959  003FAA  0E00               	movlw	0
  5960  003FAC  6E1B               	movwf	___aodiv@divisor+7,c
  5961  003FAE  ECD0  F022         	call	___aodiv	;wreg free
  5962  003FB2  C00C  F068         	movff	?___aodiv,dtoa@n
  5963  003FB6  C00D  F069         	movff	?___aodiv+1,dtoa@n+1
  5964  003FBA  C00E  F06A         	movff	?___aodiv+2,dtoa@n+2
  5965  003FBE  C00F  F06B         	movff	?___aodiv+3,dtoa@n+3
  5966  003FC2  C010  F06C         	movff	?___aodiv+4,dtoa@n+4
  5967  003FC6  C011  F06D         	movff	?___aodiv+5,dtoa@n+5
  5968  003FCA  C012  F06E         	movff	?___aodiv+6,dtoa@n+6
  5969  003FCE  C013  F06F         	movff	?___aodiv+7,dtoa@n+7
  5970  003FD2                     l4431:
  5971                           
  5972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5973  003FD2  0100               	movlb	0	; () banked
  5974  003FD4  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
  5975  003FD6  D01F               	goto	u3760
  5976  003FD8  5171               	movf	(dtoa@i+1)& (0+255),w,b
  5977  003FDA  E103               	bnz	u3720
  5978  003FDC  0570               	decf	dtoa@i& (0+255),w,b
  5979  003FDE  A0D8               	btfss	status,0,c
  5980  003FE0  D01A               	goto	u3760
  5981  003FE2                     u3720:
  5982                           
  5983                           ; BSR set to: 0
  5984  003FE2  5168               	movf	dtoa@n& (0+255),w,b
  5985  003FE4  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
  5986  003FE6  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
  5987  003FE8  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
  5988  003FEA  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
  5989  003FEC  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
  5990  003FEE  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
  5991  003FF0  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
  5992  003FF2  A4D8               	btfss	status,2,c
  5993  003FF4  D771               	goto	l4421
  5994                           
  5995                           ; BSR set to: 0
  5996  003FF6  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  5997  003FF8  D005               	goto	u3740
  5998  003FFA  5163               	movf	(dtoa@p+1)& (0+255),w,b
  5999  003FFC  E102               	bnz	u3741
  6000  003FFE  0562               	decf	dtoa@p& (0+255),w,b
  6001  004000  B0D8               	btfsc	status,0,c
  6002  004002                     u3741:
  6003  004002  D76A               	goto	l4421
  6004  004004                     u3740:
  6005                           
  6006                           ; BSR set to: 0
  6007  004004  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
  6008  004006  D007               	goto	u3760
  6009  004008  5165               	movf	(dtoa@w+1)& (0+255),w,b
  6010  00400A  E103               	bnz	u3750
  6011  00400C  0564               	decf	dtoa@w& (0+255),w,b
  6012  00400E  A0D8               	btfss	status,0,c
  6013  004010  D002               	goto	u3760
  6014  004012                     u3750:
  6015                           
  6016                           ; BSR set to: 0
  6017  004012  B23E               	btfsc	_flags,1,c
  6018  004014  D761               	goto	l4421
  6019  004016                     u3760:
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6023  004016  5166               	movf	dtoa@s& (0+255),w,b
  6024  004018  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  6025  00401A  A4D8               	btfss	status,2,c
  6026  00401C  D002               	goto	u3780
  6027                           
  6028                           ; BSR set to: 0
  6029  00401E  A43E               	btfss	_flags,2,c
  6030  004020  D017               	goto	l4455
  6031  004022                     u3780:
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6035  004022  0770               	decf	dtoa@i& (0+255),f,b
  6036  004024  A0D8               	btfss	status,0,c
  6037  004026  0771               	decf	(dtoa@i+1)& (0+255),f,b
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6041  004028  5166               	movf	dtoa@s& (0+255),w,b
  6042  00402A  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  6043  00402C  A4D8               	btfss	status,2,c
  6044  00402E  D004               	goto	l4451
  6045                           
  6046                           ; BSR set to: 0
  6047  004030  0E00               	movlw	0
  6048  004032  6F61               	movwf	(_dtoa$1544+1)& (0+255),b
  6049  004034  0E2B               	movlw	43
  6050  004036  D003               	goto	L2
  6051  004038                     l4451:
  6052                           
  6053                           ; BSR set to: 0
  6054  004038  0E00               	movlw	0
  6055  00403A  6F61               	movwf	(_dtoa$1544+1)& (0+255),b
  6056  00403C  0E2D               	movlw	45
  6057  00403E                     L2:
  6058  00403E  6F60               	movwf	_dtoa$1544& (0+255),b
  6059                           
  6060                           ; BSR set to: 0
  6061  004040  0EC4               	movlw	low _dbuf
  6062  004042  2570               	addwf	dtoa@i& (0+255),w,b
  6063  004044  6ED9               	movwf	fsr2l,c
  6064  004046  0E01               	movlw	high _dbuf
  6065  004048  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  6066  00404A  6EDA               	movwf	fsr2h,c
  6067  00404C  C060  FFDF         	movff	_dtoa$1544,indf2
  6068  004050                     l4455:
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6072  004050  C027  F01C         	movff	dtoa@fp,pad@fp
  6073  004054  C028  F01D         	movff	dtoa@fp+1,pad@fp+1
  6074  004058  0EC4               	movlw	low _dbuf
  6075  00405A  2570               	addwf	dtoa@i& (0+255),w,b
  6076  00405C  6E1E               	movwf	pad@buf,c
  6077  00405E  0E01               	movlw	high _dbuf
  6078  004060  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  6079  004062  6E1F               	movwf	pad@buf+1,c
  6080  004064  C064  F020         	movff	dtoa@w,pad@p
  6081  004068  C065  F021         	movff	dtoa@w+1,pad@p+1
  6082  00406C  EC66  F028         	call	_pad	;wreg free
  6083  004070  C01C  F027         	movff	?_pad,?_dtoa
  6084  004074  C01D  F028         	movff	?_pad+1,?_dtoa+1
  6085  004078  0012               	return		;funcret
  6086  00407A                     __end_of_dtoa:
  6087                           	opt callstack 0
  6088                           
  6089 ;; *************** function _abs *****************
  6090 ;; Defined at:
  6091 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;  a               2   29[COMRAM] int 
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;		None
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  2   29[COMRAM] int 
  6098 ;; Registers used:
  6099 ;;		wreg, status,2, status,0
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6105 ;;      Params:         2       0       0       0       0       0       0       0       0
  6106 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6107 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6108 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6109 ;;Total ram usage:        4 bytes
  6110 ;; Hardware stack levels used:    1
  6111 ;; Hardware stack levels required when called:    7
  6112 ;; This function calls:
  6113 ;;		Nothing
  6114 ;; This function is called by:
  6115 ;;		_dtoa
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118                           
  6119                           	psect	text28
  6120  00571A                     __ptext28:
  6121                           	opt callstack 0
  6122  00571A                     _abs:
  6123                           	opt callstack 18
  6124                           
  6125                           ;incstack = 0
  6126  00571A  BE1F               	btfsc	abs@a+1,7,c
  6127  00571C  D005               	goto	u3430
  6128  00571E  501F               	movf	abs@a+1,w,c
  6129  005720  E110               	bnz	l1458
  6130  005722  041E               	decf	abs@a,w,c
  6131  005724  B0D8               	btfsc	status,0,c
  6132  005726  D00D               	goto	l1458
  6133  005728                     u3430:
  6134  005728  C01E  F020         	movff	abs@a,??_abs
  6135  00572C  C01F  F021         	movff	abs@a+1,??_abs+1
  6136  005730  1E20               	comf	??_abs,f,c
  6137  005732  1E21               	comf	??_abs+1,f,c
  6138  005734  4A20               	infsnz	??_abs,f,c
  6139  005736  2A21               	incf	??_abs+1,f,c
  6140  005738  C020  F01E         	movff	??_abs,?_abs
  6141  00573C  C021  F01F         	movff	??_abs+1,?_abs+1
  6142  005740  0012               	return	
  6143  005742                     l1458:
  6144  005742  C01E  F01E         	movff	abs@a,?_abs
  6145  005746  C01F  F01F         	movff	abs@a+1,?_abs+1
  6146  00574A  0012               	return		;funcret
  6147  00574C                     __end_of_abs:
  6148                           	opt callstack 0
  6149                           
  6150 ;; *************** function ___aomod *****************
  6151 ;; Defined at:
  6152 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;  dividend        8   11[COMRAM] long long 
  6155 ;;  divisor         8   19[COMRAM] long long 
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;  sign            1   28[COMRAM] unsigned char 
  6158 ;;  counter         1   27[COMRAM] unsigned char 
  6159 ;; Return value:  Size  Location     Type
  6160 ;;                  8   11[COMRAM] long long 
  6161 ;; Registers used:
  6162 ;;		wreg, status,2, status,0
  6163 ;; Tracked objects:
  6164 ;;		On entry : 0/0
  6165 ;;		On exit  : 0/0
  6166 ;;		Unchanged: 0/0
  6167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6168 ;;      Params:        16       0       0       0       0       0       0       0       0
  6169 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6171 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6172 ;;Total ram usage:       18 bytes
  6173 ;; Hardware stack levels used:    1
  6174 ;; Hardware stack levels required when called:    7
  6175 ;; This function calls:
  6176 ;;		Nothing
  6177 ;; This function is called by:
  6178 ;;		_dtoa
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text29
  6183  004AA2                     __ptext29:
  6184                           	opt callstack 0
  6185  004AA2                     ___aomod:
  6186                           	opt callstack 18
  6187                           
  6188                           ;incstack = 0
  6189  004AA2  0E00               	movlw	0
  6190  004AA4  6E1D               	movwf	___aomod@sign,c
  6191  004AA6  AE13               	btfss	___aomod@dividend+7,7,c
  6192  004AA8  D012               	goto	l4317
  6193  004AAA  1E13               	comf	___aomod@dividend+7,f,c
  6194  004AAC  1E12               	comf	___aomod@dividend+6,f,c
  6195  004AAE  1E11               	comf	___aomod@dividend+5,f,c
  6196  004AB0  1E10               	comf	___aomod@dividend+4,f,c
  6197  004AB2  1E0F               	comf	___aomod@dividend+3,f,c
  6198  004AB4  1E0E               	comf	___aomod@dividend+2,f,c
  6199  004AB6  1E0D               	comf	___aomod@dividend+1,f,c
  6200  004AB8  6C0C               	negf	___aomod@dividend,c
  6201  004ABA  0E00               	movlw	0
  6202  004ABC  220D               	addwfc	___aomod@dividend+1,f,c
  6203  004ABE  220E               	addwfc	___aomod@dividend+2,f,c
  6204  004AC0  220F               	addwfc	___aomod@dividend+3,f,c
  6205  004AC2  2210               	addwfc	___aomod@dividend+4,f,c
  6206  004AC4  2211               	addwfc	___aomod@dividend+5,f,c
  6207  004AC6  2212               	addwfc	___aomod@dividend+6,f,c
  6208  004AC8  2213               	addwfc	___aomod@dividend+7,f,c
  6209  004ACA  0E01               	movlw	1
  6210  004ACC  6E1D               	movwf	___aomod@sign,c
  6211  004ACE                     l4317:
  6212  004ACE  AE1B               	btfss	___aomod@divisor+7,7,c
  6213  004AD0  D010               	goto	l4321
  6214  004AD2  1E1B               	comf	___aomod@divisor+7,f,c
  6215  004AD4  1E1A               	comf	___aomod@divisor+6,f,c
  6216  004AD6  1E19               	comf	___aomod@divisor+5,f,c
  6217  004AD8  1E18               	comf	___aomod@divisor+4,f,c
  6218  004ADA  1E17               	comf	___aomod@divisor+3,f,c
  6219  004ADC  1E16               	comf	___aomod@divisor+2,f,c
  6220  004ADE  1E15               	comf	___aomod@divisor+1,f,c
  6221  004AE0  6C14               	negf	___aomod@divisor,c
  6222  004AE2  0E00               	movlw	0
  6223  004AE4  2215               	addwfc	___aomod@divisor+1,f,c
  6224  004AE6  2216               	addwfc	___aomod@divisor+2,f,c
  6225  004AE8  2217               	addwfc	___aomod@divisor+3,f,c
  6226  004AEA  2218               	addwfc	___aomod@divisor+4,f,c
  6227  004AEC  2219               	addwfc	___aomod@divisor+5,f,c
  6228  004AEE  221A               	addwfc	___aomod@divisor+6,f,c
  6229  004AF0  221B               	addwfc	___aomod@divisor+7,f,c
  6230  004AF2                     l4321:
  6231  004AF2  5014               	movf	___aomod@divisor,w,c
  6232  004AF4  1015               	iorwf	___aomod@divisor+1,w,c
  6233  004AF6  1016               	iorwf	___aomod@divisor+2,w,c
  6234  004AF8  1017               	iorwf	___aomod@divisor+3,w,c
  6235  004AFA  1018               	iorwf	___aomod@divisor+4,w,c
  6236  004AFC  1019               	iorwf	___aomod@divisor+5,w,c
  6237  004AFE  101A               	iorwf	___aomod@divisor+6,w,c
  6238  004B00  101B               	iorwf	___aomod@divisor+7,w,c
  6239  004B02  B4D8               	btfsc	status,2,c
  6240  004B04  D03C               	goto	l4337
  6241  004B06  0E01               	movlw	1
  6242  004B08  6E1C               	movwf	___aomod@counter,c
  6243  004B0A  D00A               	goto	l4327
  6244  004B0C                     l4325:
  6245  004B0C  90D8               	bcf	status,0,c
  6246  004B0E  3614               	rlcf	___aomod@divisor,f,c
  6247  004B10  3615               	rlcf	___aomod@divisor+1,f,c
  6248  004B12  3616               	rlcf	___aomod@divisor+2,f,c
  6249  004B14  3617               	rlcf	___aomod@divisor+3,f,c
  6250  004B16  3618               	rlcf	___aomod@divisor+4,f,c
  6251  004B18  3619               	rlcf	___aomod@divisor+5,f,c
  6252  004B1A  361A               	rlcf	___aomod@divisor+6,f,c
  6253  004B1C  361B               	rlcf	___aomod@divisor+7,f,c
  6254  004B1E  2A1C               	incf	___aomod@counter,f,c
  6255  004B20                     l4327:
  6256  004B20  AE1B               	btfss	___aomod@divisor+7,7,c
  6257  004B22  D7F4               	goto	l4325
  6258  004B24                     u3540:
  6259  004B24  5014               	movf	___aomod@divisor,w,c
  6260  004B26  5C0C               	subwf	___aomod@dividend,w,c
  6261  004B28  5015               	movf	___aomod@divisor+1,w,c
  6262  004B2A  580D               	subwfb	___aomod@dividend+1,w,c
  6263  004B2C  5016               	movf	___aomod@divisor+2,w,c
  6264  004B2E  580E               	subwfb	___aomod@dividend+2,w,c
  6265  004B30  5017               	movf	___aomod@divisor+3,w,c
  6266  004B32  580F               	subwfb	___aomod@dividend+3,w,c
  6267  004B34  5018               	movf	___aomod@divisor+4,w,c
  6268  004B36  5810               	subwfb	___aomod@dividend+4,w,c
  6269  004B38  5019               	movf	___aomod@divisor+5,w,c
  6270  004B3A  5811               	subwfb	___aomod@dividend+5,w,c
  6271  004B3C  501A               	movf	___aomod@divisor+6,w,c
  6272  004B3E  5812               	subwfb	___aomod@dividend+6,w,c
  6273  004B40  501B               	movf	___aomod@divisor+7,w,c
  6274  004B42  5813               	subwfb	___aomod@dividend+7,w,c
  6275  004B44  A0D8               	btfss	status,0,c
  6276  004B46  D010               	goto	l4333
  6277  004B48  5014               	movf	___aomod@divisor,w,c
  6278  004B4A  5E0C               	subwf	___aomod@dividend,f,c
  6279  004B4C  5015               	movf	___aomod@divisor+1,w,c
  6280  004B4E  5A0D               	subwfb	___aomod@dividend+1,f,c
  6281  004B50  5016               	movf	___aomod@divisor+2,w,c
  6282  004B52  5A0E               	subwfb	___aomod@dividend+2,f,c
  6283  004B54  5017               	movf	___aomod@divisor+3,w,c
  6284  004B56  5A0F               	subwfb	___aomod@dividend+3,f,c
  6285  004B58  5018               	movf	___aomod@divisor+4,w,c
  6286  004B5A  5A10               	subwfb	___aomod@dividend+4,f,c
  6287  004B5C  5019               	movf	___aomod@divisor+5,w,c
  6288  004B5E  5A11               	subwfb	___aomod@dividend+5,f,c
  6289  004B60  501A               	movf	___aomod@divisor+6,w,c
  6290  004B62  5A12               	subwfb	___aomod@dividend+6,f,c
  6291  004B64  501B               	movf	___aomod@divisor+7,w,c
  6292  004B66  5A13               	subwfb	___aomod@dividend+7,f,c
  6293  004B68                     l4333:
  6294  004B68  90D8               	bcf	status,0,c
  6295  004B6A  321B               	rrcf	___aomod@divisor+7,f,c
  6296  004B6C  321A               	rrcf	___aomod@divisor+6,f,c
  6297  004B6E  3219               	rrcf	___aomod@divisor+5,f,c
  6298  004B70  3218               	rrcf	___aomod@divisor+4,f,c
  6299  004B72  3217               	rrcf	___aomod@divisor+3,f,c
  6300  004B74  3216               	rrcf	___aomod@divisor+2,f,c
  6301  004B76  3215               	rrcf	___aomod@divisor+1,f,c
  6302  004B78  3214               	rrcf	___aomod@divisor,f,c
  6303  004B7A  2E1C               	decfsz	___aomod@counter,f,c
  6304  004B7C  D7D3               	goto	u3540
  6305  004B7E                     l4337:
  6306  004B7E  501D               	movf	___aomod@sign,w,c
  6307  004B80  B4D8               	btfsc	status,2,c
  6308  004B82  D010               	goto	l4341
  6309  004B84  1E13               	comf	___aomod@dividend+7,f,c
  6310  004B86  1E12               	comf	___aomod@dividend+6,f,c
  6311  004B88  1E11               	comf	___aomod@dividend+5,f,c
  6312  004B8A  1E10               	comf	___aomod@dividend+4,f,c
  6313  004B8C  1E0F               	comf	___aomod@dividend+3,f,c
  6314  004B8E  1E0E               	comf	___aomod@dividend+2,f,c
  6315  004B90  1E0D               	comf	___aomod@dividend+1,f,c
  6316  004B92  6C0C               	negf	___aomod@dividend,c
  6317  004B94  0E00               	movlw	0
  6318  004B96  220D               	addwfc	___aomod@dividend+1,f,c
  6319  004B98  220E               	addwfc	___aomod@dividend+2,f,c
  6320  004B9A  220F               	addwfc	___aomod@dividend+3,f,c
  6321  004B9C  2210               	addwfc	___aomod@dividend+4,f,c
  6322  004B9E  2211               	addwfc	___aomod@dividend+5,f,c
  6323  004BA0  2212               	addwfc	___aomod@dividend+6,f,c
  6324  004BA2  2213               	addwfc	___aomod@dividend+7,f,c
  6325  004BA4                     l4341:
  6326  004BA4  C00C  F00C         	movff	___aomod@dividend,?___aomod
  6327  004BA8  C00D  F00D         	movff	___aomod@dividend+1,?___aomod+1
  6328  004BAC  C00E  F00E         	movff	___aomod@dividend+2,?___aomod+2
  6329  004BB0  C00F  F00F         	movff	___aomod@dividend+3,?___aomod+3
  6330  004BB4  C010  F010         	movff	___aomod@dividend+4,?___aomod+4
  6331  004BB8  C011  F011         	movff	___aomod@dividend+5,?___aomod+5
  6332  004BBC  C012  F012         	movff	___aomod@dividend+6,?___aomod+6
  6333  004BC0  C013  F013         	movff	___aomod@dividend+7,?___aomod+7
  6334  004BC4  0012               	return		;funcret
  6335  004BC6                     __end_of___aomod:
  6336                           	opt callstack 0
  6337                           
  6338 ;; *************** function ___aodiv *****************
  6339 ;; Defined at:
  6340 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;  dividend        8   11[COMRAM] long long 
  6343 ;;  divisor         8   19[COMRAM] long long 
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;  quotient        8   29[COMRAM] long long 
  6346 ;;  sign            1   28[COMRAM] unsigned char 
  6347 ;;  counter         1   27[COMRAM] unsigned char 
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  8   11[COMRAM] long long 
  6350 ;; Registers used:
  6351 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6357 ;;      Params:        16       0       0       0       0       0       0       0       0
  6358 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6360 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6361 ;;Total ram usage:       26 bytes
  6362 ;; Hardware stack levels used:    1
  6363 ;; Hardware stack levels required when called:    7
  6364 ;; This function calls:
  6365 ;;		Nothing
  6366 ;; This function is called by:
  6367 ;;		_dtoa
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text30
  6372  0045A0                     __ptext30:
  6373                           	opt callstack 0
  6374  0045A0                     ___aodiv:
  6375                           	opt callstack 18
  6376                           
  6377                           ;incstack = 0
  6378  0045A0  0E00               	movlw	0
  6379  0045A2  6E1D               	movwf	___aodiv@sign,c
  6380  0045A4  AE1B               	btfss	___aodiv@divisor+7,7,c
  6381  0045A6  D012               	goto	l4273
  6382  0045A8  1E1B               	comf	___aodiv@divisor+7,f,c
  6383  0045AA  1E1A               	comf	___aodiv@divisor+6,f,c
  6384  0045AC  1E19               	comf	___aodiv@divisor+5,f,c
  6385  0045AE  1E18               	comf	___aodiv@divisor+4,f,c
  6386  0045B0  1E17               	comf	___aodiv@divisor+3,f,c
  6387  0045B2  1E16               	comf	___aodiv@divisor+2,f,c
  6388  0045B4  1E15               	comf	___aodiv@divisor+1,f,c
  6389  0045B6  6C14               	negf	___aodiv@divisor,c
  6390  0045B8  0E00               	movlw	0
  6391  0045BA  2215               	addwfc	___aodiv@divisor+1,f,c
  6392  0045BC  2216               	addwfc	___aodiv@divisor+2,f,c
  6393  0045BE  2217               	addwfc	___aodiv@divisor+3,f,c
  6394  0045C0  2218               	addwfc	___aodiv@divisor+4,f,c
  6395  0045C2  2219               	addwfc	___aodiv@divisor+5,f,c
  6396  0045C4  221A               	addwfc	___aodiv@divisor+6,f,c
  6397  0045C6  221B               	addwfc	___aodiv@divisor+7,f,c
  6398  0045C8  0E01               	movlw	1
  6399  0045CA  6E1D               	movwf	___aodiv@sign,c
  6400  0045CC                     l4273:
  6401  0045CC  AE13               	btfss	___aodiv@dividend+7,7,c
  6402  0045CE  D012               	goto	l4279
  6403  0045D0  1E13               	comf	___aodiv@dividend+7,f,c
  6404  0045D2  1E12               	comf	___aodiv@dividend+6,f,c
  6405  0045D4  1E11               	comf	___aodiv@dividend+5,f,c
  6406  0045D6  1E10               	comf	___aodiv@dividend+4,f,c
  6407  0045D8  1E0F               	comf	___aodiv@dividend+3,f,c
  6408  0045DA  1E0E               	comf	___aodiv@dividend+2,f,c
  6409  0045DC  1E0D               	comf	___aodiv@dividend+1,f,c
  6410  0045DE  6C0C               	negf	___aodiv@dividend,c
  6411  0045E0  0E00               	movlw	0
  6412  0045E2  220D               	addwfc	___aodiv@dividend+1,f,c
  6413  0045E4  220E               	addwfc	___aodiv@dividend+2,f,c
  6414  0045E6  220F               	addwfc	___aodiv@dividend+3,f,c
  6415  0045E8  2210               	addwfc	___aodiv@dividend+4,f,c
  6416  0045EA  2211               	addwfc	___aodiv@dividend+5,f,c
  6417  0045EC  2212               	addwfc	___aodiv@dividend+6,f,c
  6418  0045EE  2213               	addwfc	___aodiv@dividend+7,f,c
  6419  0045F0  0E01               	movlw	1
  6420  0045F2  1A1D               	xorwf	___aodiv@sign,f,c
  6421  0045F4                     l4279:
  6422  0045F4  EE20  F01E         	lfsr	2,___aodiv@quotient
  6423  0045F8  0E07               	movlw	7
  6424  0045FA                     u3461:
  6425  0045FA  6ADE               	clrf	postinc2,c
  6426  0045FC  06E8               	decf	wreg,f,c
  6427  0045FE  E2FD               	bc	u3461
  6428  004600  5014               	movf	___aodiv@divisor,w,c
  6429  004602  1015               	iorwf	___aodiv@divisor+1,w,c
  6430  004604  1016               	iorwf	___aodiv@divisor+2,w,c
  6431  004606  1017               	iorwf	___aodiv@divisor+3,w,c
  6432  004608  1018               	iorwf	___aodiv@divisor+4,w,c
  6433  00460A  1019               	iorwf	___aodiv@divisor+5,w,c
  6434  00460C  101A               	iorwf	___aodiv@divisor+6,w,c
  6435  00460E  101B               	iorwf	___aodiv@divisor+7,w,c
  6436  004610  B4D8               	btfsc	status,2,c
  6437  004612  D046               	goto	l4301
  6438  004614  0E01               	movlw	1
  6439  004616  6E1C               	movwf	___aodiv@counter,c
  6440  004618  D00A               	goto	l4287
  6441  00461A                     l4285:
  6442  00461A  90D8               	bcf	status,0,c
  6443  00461C  3614               	rlcf	___aodiv@divisor,f,c
  6444  00461E  3615               	rlcf	___aodiv@divisor+1,f,c
  6445  004620  3616               	rlcf	___aodiv@divisor+2,f,c
  6446  004622  3617               	rlcf	___aodiv@divisor+3,f,c
  6447  004624  3618               	rlcf	___aodiv@divisor+4,f,c
  6448  004626  3619               	rlcf	___aodiv@divisor+5,f,c
  6449  004628  361A               	rlcf	___aodiv@divisor+6,f,c
  6450  00462A  361B               	rlcf	___aodiv@divisor+7,f,c
  6451  00462C  2A1C               	incf	___aodiv@counter,f,c
  6452  00462E                     l4287:
  6453  00462E  AE1B               	btfss	___aodiv@divisor+7,7,c
  6454  004630  D7F4               	goto	l4285
  6455  004632                     u3480:
  6456  004632  90D8               	bcf	status,0,c
  6457  004634  361E               	rlcf	___aodiv@quotient,f,c
  6458  004636  361F               	rlcf	___aodiv@quotient+1,f,c
  6459  004638  3620               	rlcf	___aodiv@quotient+2,f,c
  6460  00463A  3621               	rlcf	___aodiv@quotient+3,f,c
  6461  00463C  3622               	rlcf	___aodiv@quotient+4,f,c
  6462  00463E  3623               	rlcf	___aodiv@quotient+5,f,c
  6463  004640  3624               	rlcf	___aodiv@quotient+6,f,c
  6464  004642  3625               	rlcf	___aodiv@quotient+7,f,c
  6465  004644  5014               	movf	___aodiv@divisor,w,c
  6466  004646  5C0C               	subwf	___aodiv@dividend,w,c
  6467  004648  5015               	movf	___aodiv@divisor+1,w,c
  6468  00464A  580D               	subwfb	___aodiv@dividend+1,w,c
  6469  00464C  5016               	movf	___aodiv@divisor+2,w,c
  6470  00464E  580E               	subwfb	___aodiv@dividend+2,w,c
  6471  004650  5017               	movf	___aodiv@divisor+3,w,c
  6472  004652  580F               	subwfb	___aodiv@dividend+3,w,c
  6473  004654  5018               	movf	___aodiv@divisor+4,w,c
  6474  004656  5810               	subwfb	___aodiv@dividend+4,w,c
  6475  004658  5019               	movf	___aodiv@divisor+5,w,c
  6476  00465A  5811               	subwfb	___aodiv@dividend+5,w,c
  6477  00465C  501A               	movf	___aodiv@divisor+6,w,c
  6478  00465E  5812               	subwfb	___aodiv@dividend+6,w,c
  6479  004660  501B               	movf	___aodiv@divisor+7,w,c
  6480  004662  5813               	subwfb	___aodiv@dividend+7,w,c
  6481  004664  A0D8               	btfss	status,0,c
  6482  004666  D011               	goto	l4297
  6483  004668  5014               	movf	___aodiv@divisor,w,c
  6484  00466A  5E0C               	subwf	___aodiv@dividend,f,c
  6485  00466C  5015               	movf	___aodiv@divisor+1,w,c
  6486  00466E  5A0D               	subwfb	___aodiv@dividend+1,f,c
  6487  004670  5016               	movf	___aodiv@divisor+2,w,c
  6488  004672  5A0E               	subwfb	___aodiv@dividend+2,f,c
  6489  004674  5017               	movf	___aodiv@divisor+3,w,c
  6490  004676  5A0F               	subwfb	___aodiv@dividend+3,f,c
  6491  004678  5018               	movf	___aodiv@divisor+4,w,c
  6492  00467A  5A10               	subwfb	___aodiv@dividend+4,f,c
  6493  00467C  5019               	movf	___aodiv@divisor+5,w,c
  6494  00467E  5A11               	subwfb	___aodiv@dividend+5,f,c
  6495  004680  501A               	movf	___aodiv@divisor+6,w,c
  6496  004682  5A12               	subwfb	___aodiv@dividend+6,f,c
  6497  004684  501B               	movf	___aodiv@divisor+7,w,c
  6498  004686  5A13               	subwfb	___aodiv@dividend+7,f,c
  6499  004688  801E               	bsf	___aodiv@quotient,0,c
  6500  00468A                     l4297:
  6501  00468A  90D8               	bcf	status,0,c
  6502  00468C  321B               	rrcf	___aodiv@divisor+7,f,c
  6503  00468E  321A               	rrcf	___aodiv@divisor+6,f,c
  6504  004690  3219               	rrcf	___aodiv@divisor+5,f,c
  6505  004692  3218               	rrcf	___aodiv@divisor+4,f,c
  6506  004694  3217               	rrcf	___aodiv@divisor+3,f,c
  6507  004696  3216               	rrcf	___aodiv@divisor+2,f,c
  6508  004698  3215               	rrcf	___aodiv@divisor+1,f,c
  6509  00469A  3214               	rrcf	___aodiv@divisor,f,c
  6510  00469C  2E1C               	decfsz	___aodiv@counter,f,c
  6511  00469E  D7C9               	goto	u3480
  6512  0046A0                     l4301:
  6513  0046A0  501D               	movf	___aodiv@sign,w,c
  6514  0046A2  B4D8               	btfsc	status,2,c
  6515  0046A4  D010               	goto	l4305
  6516  0046A6  1E25               	comf	___aodiv@quotient+7,f,c
  6517  0046A8  1E24               	comf	___aodiv@quotient+6,f,c
  6518  0046AA  1E23               	comf	___aodiv@quotient+5,f,c
  6519  0046AC  1E22               	comf	___aodiv@quotient+4,f,c
  6520  0046AE  1E21               	comf	___aodiv@quotient+3,f,c
  6521  0046B0  1E20               	comf	___aodiv@quotient+2,f,c
  6522  0046B2  1E1F               	comf	___aodiv@quotient+1,f,c
  6523  0046B4  6C1E               	negf	___aodiv@quotient,c
  6524  0046B6  0E00               	movlw	0
  6525  0046B8  221F               	addwfc	___aodiv@quotient+1,f,c
  6526  0046BA  2220               	addwfc	___aodiv@quotient+2,f,c
  6527  0046BC  2221               	addwfc	___aodiv@quotient+3,f,c
  6528  0046BE  2222               	addwfc	___aodiv@quotient+4,f,c
  6529  0046C0  2223               	addwfc	___aodiv@quotient+5,f,c
  6530  0046C2  2224               	addwfc	___aodiv@quotient+6,f,c
  6531  0046C4  2225               	addwfc	___aodiv@quotient+7,f,c
  6532  0046C6                     l4305:
  6533  0046C6  C01E  F00C         	movff	___aodiv@quotient,?___aodiv
  6534  0046CA  C01F  F00D         	movff	___aodiv@quotient+1,?___aodiv+1
  6535  0046CE  C020  F00E         	movff	___aodiv@quotient+2,?___aodiv+2
  6536  0046D2  C021  F00F         	movff	___aodiv@quotient+3,?___aodiv+3
  6537  0046D6  C022  F010         	movff	___aodiv@quotient+4,?___aodiv+4
  6538  0046DA  C023  F011         	movff	___aodiv@quotient+5,?___aodiv+5
  6539  0046DE  C024  F012         	movff	___aodiv@quotient+6,?___aodiv+6
  6540  0046E2  C025  F013         	movff	___aodiv@quotient+7,?___aodiv+7
  6541  0046E6  0012               	return		;funcret
  6542  0046E8                     __end_of___aodiv:
  6543                           	opt callstack 0
  6544                           
  6545 ;; *************** function _ctoa *****************
  6546 ;; Defined at:
  6547 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  6550 ;;		 -> sprintf@f(6), 
  6551 ;;  c               1   40[COMRAM] unsigned char 
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;  w               2   41[COMRAM] int 
  6554 ;;  l               2    0        int 
  6555 ;; Return value:  Size  Location     Type
  6556 ;;                  2   38[COMRAM] int 
  6557 ;; Registers used:
  6558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6559 ;; Tracked objects:
  6560 ;;		On entry : 0/0
  6561 ;;		On exit  : 0/0
  6562 ;;		Unchanged: 0/0
  6563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6564 ;;      Params:         3       0       0       0       0       0       0       0       0
  6565 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6566 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6567 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6568 ;;Total ram usage:        5 bytes
  6569 ;; Hardware stack levels used:    1
  6570 ;; Hardware stack levels required when called:   11
  6571 ;; This function calls:
  6572 ;;		_pad
  6573 ;; This function is called by:
  6574 ;;		_vfpfcnvrt
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577                           
  6578                           	psect	text31
  6579  005482                     __ptext31:
  6580                           	opt callstack 0
  6581  005482                     _ctoa:
  6582                           	opt callstack 15
  6583                           
  6584                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  6585                           
  6586                           ;incstack = 0
  6587  005482  0100               	movlb	0	; () banked
  6588  005484  51E9               	movf	_width& (0+255),w,b
  6589  005486  11EA               	iorwf	(_width+1)& (0+255),w,b
  6590  005488  A4D8               	btfss	status,2,c
  6591  00548A  D005               	goto	l4387
  6592                           
  6593                           ; BSR set to: 0
  6594  00548C  C0E9  F02A         	movff	_width,ctoa@w
  6595  005490  C0EA  F02B         	movff	_width+1,ctoa@w+1
  6596  005494  D006               	goto	l4389
  6597  005496                     l4387:
  6598                           
  6599                           ; BSR set to: 0
  6600  005496  0EFF               	movlw	255
  6601  005498  25E9               	addwf	_width& (0+255),w,b
  6602  00549A  6E2A               	movwf	ctoa@w,c
  6603  00549C  0EFF               	movlw	255
  6604  00549E  21EA               	addwfc	(_width+1)& (0+255),w,b
  6605  0054A0  6E2B               	movwf	ctoa@w+1,c
  6606  0054A2                     l4389:
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  6610  0054A2  C029  F1C4         	movff	ctoa@c,_dbuf
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  6614  0054A6  0E00               	movlw	0
  6615  0054A8  0101               	movlb	1	; () banked
  6616  0054AA  6FC5               	movwf	(_dbuf+1)& (0+255),b
  6617                           
  6618                           ; BSR set to: 1
  6619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  6620  0054AC  C027  F01C         	movff	ctoa@fp,pad@fp
  6621  0054B0  C028  F01D         	movff	ctoa@fp+1,pad@fp+1
  6622  0054B4  0EC4               	movlw	low _dbuf
  6623  0054B6  6E1E               	movwf	pad@buf,c
  6624  0054B8  0E01               	movlw	high _dbuf
  6625  0054BA  6E1F               	movwf	pad@buf+1,c
  6626  0054BC  C02A  F020         	movff	ctoa@w,pad@p
  6627  0054C0  C02B  F021         	movff	ctoa@w+1,pad@p+1
  6628  0054C4  EC66  F028         	call	_pad	;wreg free
  6629  0054C8  C01C  F027         	movff	?_pad,?_ctoa
  6630  0054CC  C01D  F028         	movff	?_pad+1,?_ctoa+1
  6631  0054D0  0012               	return		;funcret
  6632  0054D2                     __end_of_ctoa:
  6633                           	opt callstack 0
  6634                           
  6635 ;; *************** function _pad *****************
  6636 ;; Defined at:
  6637 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6640 ;;		 -> sprintf@f(6), 
  6641 ;;  buf             2   29[COMRAM] PTR unsigned char 
  6642 ;;		 -> dbuf(32), 
  6643 ;;  p               2   31[COMRAM] int 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;  w               2   36[COMRAM] int 
  6646 ;;  i               2   34[COMRAM] int 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  2   27[COMRAM] int 
  6649 ;; Registers used:
  6650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6656 ;;      Params:         6       0       0       0       0       0       0       0       0
  6657 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6658 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6659 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6660 ;;Total ram usage:       11 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:   10
  6663 ;; This function calls:
  6664 ;;		_fputc
  6665 ;;		_fputs
  6666 ;;		_strlen
  6667 ;; This function is called by:
  6668 ;;		_ctoa
  6669 ;;		_dtoa
  6670 ;;		_utoa
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text32
  6675  0050CC                     __ptext32:
  6676                           	opt callstack 0
  6677  0050CC                     _pad:
  6678                           	opt callstack 15
  6679                           
  6680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6681                           
  6682                           ;incstack = 0
  6683  0050CC  A03E               	btfss	_flags,0,c
  6684  0050CE  D00A               	goto	l4243
  6685                           
  6686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6687  0050D0  C01E  F015         	movff	pad@buf,fputs@s
  6688  0050D4  C01F  F016         	movff	pad@buf+1,fputs@s+1
  6689  0050D8  C01C  F017         	movff	pad@fp,fputs@fp
  6690  0050DC  C01D  F018         	movff	pad@fp+1,fputs@fp+1
  6691  0050E0  EC23  F02B         	call	_fputs	;wreg free
  6692  0050E4                     l4243:
  6693                           
  6694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6695  0050E4  BE21               	btfsc	pad@p+1,7,c
  6696  0050E6  D005               	goto	l4247
  6697  0050E8  C020  F025         	movff	pad@p,pad@w
  6698  0050EC  C021  F026         	movff	pad@p+1,pad@w+1
  6699  0050F0  D004               	goto	l707
  6700  0050F2                     l4247:
  6701  0050F2  0E00               	movlw	0
  6702  0050F4  6E26               	movwf	pad@w+1,c
  6703  0050F6  0E00               	movlw	0
  6704  0050F8  6E25               	movwf	pad@w,c
  6705  0050FA                     l707:
  6706                           
  6707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6708  0050FA  0E00               	movlw	0
  6709  0050FC  6E24               	movwf	pad@i+1,c
  6710  0050FE  0E00               	movlw	0
  6711  005100  6E23               	movwf	pad@i,c
  6712                           
  6713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6714  005102  D00C               	goto	l4253
  6715  005104                     l4249:
  6716                           
  6717                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6718  005104  0E00               	movlw	0
  6719  005106  6E0D               	movwf	fputc@c+1,c
  6720  005108  0E20               	movlw	32
  6721  00510A  6E0C               	movwf	fputc@c,c
  6722  00510C  C01C  F00E         	movff	pad@fp,fputc@fp
  6723  005110  C01D  F00F         	movff	pad@fp+1,fputc@fp+1
  6724  005114  EC16  F028         	call	_fputc	;wreg free
  6725                           
  6726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6727  005118  4A23               	infsnz	pad@i,f,c
  6728  00511A  2A24               	incf	pad@i+1,f,c
  6729  00511C                     l4253:
  6730                           
  6731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6732  00511C  5025               	movf	pad@w,w,c
  6733  00511E  5C23               	subwf	pad@i,w,c
  6734  005120  5024               	movf	pad@i+1,w,c
  6735  005122  0A80               	xorlw	128
  6736  005124  6E22               	movwf	??_pad& (0+255),c
  6737  005126  5026               	movf	pad@w+1,w,c
  6738  005128  0A80               	xorlw	128
  6739  00512A  5822               	subwfb	??_pad& (0+255),w,c
  6740  00512C  A0D8               	btfss	status,0,c
  6741  00512E  D7EA               	goto	l4249
  6742                           
  6743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6744  005130  B03E               	btfsc	_flags,0,c
  6745  005132  D00A               	goto	l4257
  6746                           
  6747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6748  005134  C01E  F015         	movff	pad@buf,fputs@s
  6749  005138  C01F  F016         	movff	pad@buf+1,fputs@s+1
  6750  00513C  C01C  F017         	movff	pad@fp,fputs@fp
  6751  005140  C01D  F018         	movff	pad@fp+1,fputs@fp+1
  6752  005144  EC23  F02B         	call	_fputs	;wreg free
  6753  005148                     l4257:
  6754                           
  6755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6756  005148  C01E  F00C         	movff	pad@buf,strlen@s
  6757  00514C  C01F  F00D         	movff	pad@buf+1,strlen@s+1
  6758  005150  EC77  F02C         	call	_strlen	;wreg free
  6759  005154  5025               	movf	pad@w,w,c
  6760  005156  240C               	addwf	?_strlen,w,c
  6761  005158  6E1C               	movwf	?_pad,c
  6762  00515A  5026               	movf	pad@w+1,w,c
  6763  00515C  200D               	addwfc	?_strlen+1,w,c
  6764  00515E  6E1D               	movwf	?_pad+1,c
  6765  005160  0012               	return		;funcret
  6766  005162                     __end_of_pad:
  6767                           	opt callstack 0
  6768                           
  6769 ;; *************** function _strlen *****************
  6770 ;; Defined at:
  6771 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6774 ;;		 -> dbuf(32), 
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;  a               2   13[COMRAM] PTR const unsigned char 
  6777 ;;		 -> dbuf(32), 
  6778 ;; Return value:  Size  Location     Type
  6779 ;;                  2   11[COMRAM] unsigned int 
  6780 ;; Registers used:
  6781 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6782 ;; Tracked objects:
  6783 ;;		On entry : 0/0
  6784 ;;		On exit  : 0/0
  6785 ;;		Unchanged: 0/0
  6786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6787 ;;      Params:         2       0       0       0       0       0       0       0       0
  6788 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6789 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6790 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6791 ;;Total ram usage:        4 bytes
  6792 ;; Hardware stack levels used:    1
  6793 ;; Hardware stack levels required when called:    7
  6794 ;; This function calls:
  6795 ;;		Nothing
  6796 ;; This function is called by:
  6797 ;;		_pad
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           	psect	text33
  6802  0058EE                     __ptext33:
  6803                           	opt callstack 0
  6804  0058EE                     _strlen:
  6805                           	opt callstack 17
  6806                           
  6807                           ;incstack = 0
  6808  0058EE  C00C  F00E         	movff	strlen@s,strlen@a
  6809  0058F2  C00D  F00F         	movff	strlen@s+1,strlen@a+1
  6810  0058F6  D002               	goto	l4233
  6811  0058F8                     l4231:
  6812  0058F8  4A0C               	infsnz	strlen@s,f,c
  6813  0058FA  2A0D               	incf	strlen@s+1,f,c
  6814  0058FC                     l4233:
  6815  0058FC  C00C  FFD9         	movff	strlen@s,fsr2l
  6816  005900  C00D  FFDA         	movff	strlen@s+1,fsr2h
  6817  005904  50DF               	movf	indf2,w,c
  6818  005906  A4D8               	btfss	status,2,c
  6819  005908  D7F7               	goto	l4231
  6820  00590A  500E               	movf	strlen@a,w,c
  6821  00590C  5C0C               	subwf	strlen@s,w,c
  6822  00590E  6E0C               	movwf	?_strlen,c
  6823  005910  500F               	movf	strlen@a+1,w,c
  6824  005912  580D               	subwfb	strlen@s+1,w,c
  6825  005914  6E0D               	movwf	?_strlen+1,c
  6826  005916  0012               	return		;funcret
  6827  005918                     __end_of_strlen:
  6828                           	opt callstack 0
  6829                           
  6830 ;; *************** function _fputs *****************
  6831 ;; Defined at:
  6832 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;  s               2   20[COMRAM] PTR const unsigned char 
  6835 ;;		 -> dbuf(32), 
  6836 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  6837 ;;		 -> sprintf@f(6), 
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;  i               2   25[COMRAM] int 
  6840 ;;  c               1   24[COMRAM] unsigned char 
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  2   20[COMRAM] int 
  6843 ;; Registers used:
  6844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6850 ;;      Params:         4       0       0       0       0       0       0       0       0
  6851 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6852 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6853 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6854 ;;Total ram usage:        7 bytes
  6855 ;; Hardware stack levels used:    1
  6856 ;; Hardware stack levels required when called:    9
  6857 ;; This function calls:
  6858 ;;		_fputc
  6859 ;; This function is called by:
  6860 ;;		_pad
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           	psect	text34
  6865  005646                     __ptext34:
  6866                           	opt callstack 0
  6867  005646                     _fputs:
  6868                           	opt callstack 15
  6869                           
  6870                           ;incstack = 0
  6871  005646  0E00               	movlw	0
  6872  005648  6E1B               	movwf	fputs@i+1,c
  6873  00564A  0E00               	movlw	0
  6874  00564C  6E1A               	movwf	fputs@i,c
  6875  00564E  D00B               	goto	l4227
  6876  005650                     l4223:
  6877  005650  C019  F00C         	movff	fputs@c,fputc@c
  6878  005654  6A0D               	clrf	fputc@c+1,c
  6879  005656  C017  F00E         	movff	fputs@fp,fputc@fp
  6880  00565A  C018  F00F         	movff	fputs@fp+1,fputc@fp+1
  6881  00565E  EC16  F028         	call	_fputc	;wreg free
  6882  005662  4A1A               	infsnz	fputs@i,f,c
  6883  005664  2A1B               	incf	fputs@i+1,f,c
  6884  005666                     l4227:
  6885  005666  501A               	movf	fputs@i,w,c
  6886  005668  2415               	addwf	fputs@s,w,c
  6887  00566A  6ED9               	movwf	fsr2l,c
  6888  00566C  501B               	movf	fputs@i+1,w,c
  6889  00566E  2016               	addwfc	fputs@s+1,w,c
  6890  005670  6EDA               	movwf	fsr2h,c
  6891  005672  50DF               	movf	indf2,w,c
  6892  005674  6E19               	movwf	fputs@c,c
  6893  005676  5019               	movf	fputs@c,w,c
  6894  005678  B4D8               	btfsc	status,2,c
  6895  00567A  0012               	return	
  6896  00567C  D7E9               	goto	l4223
  6897  00567E                     __end_of_fputs:
  6898                           	opt callstack 0
  6899                           
  6900 ;; *************** function _fputc *****************
  6901 ;; Defined at:
  6902 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  c               2   11[COMRAM] int 
  6905 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  6906 ;;		 -> sprintf@f(6), 
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;		None
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  2   11[COMRAM] int 
  6911 ;; Registers used:
  6912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/0
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6918 ;;      Params:         4       0       0       0       0       0       0       0       0
  6919 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6920 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6921 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6922 ;;Total ram usage:        9 bytes
  6923 ;; Hardware stack levels used:    1
  6924 ;; Hardware stack levels required when called:    8
  6925 ;; This function calls:
  6926 ;;		_putch
  6927 ;; This function is called by:
  6928 ;;		_pad
  6929 ;;		_vfpfcnvrt
  6930 ;;		_fputs
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934                           	psect	text35
  6935  00502C                     __ptext35:
  6936                           	opt callstack 0
  6937  00502C                     _fputc:
  6938                           	opt callstack 15
  6939                           
  6940                           ;incstack = 0
  6941  00502C  500E               	movf	fputc@fp,w,c
  6942  00502E  100F               	iorwf	fputc@fp+1,w,c
  6943  005030  B4D8               	btfsc	status,2,c
  6944  005032  D004               	goto	u3340
  6945  005034  500E               	movf	fputc@fp,w,c
  6946  005036  100F               	iorwf	fputc@fp+1,w,c
  6947  005038  A4D8               	btfss	status,2,c
  6948  00503A  D004               	goto	l4213
  6949  00503C                     u3340:
  6950  00503C  500C               	movf	fputc@c,w,c
  6951  00503E  EC98  F02D         	call	_putch
  6952  005042  0012               	return	
  6953  005044                     l4213:
  6954  005044  EE20 F004          	lfsr	2,4
  6955  005048  500E               	movf	fputc@fp,w,c
  6956  00504A  26D9               	addwf	fsr2l,f,c
  6957  00504C  500F               	movf	fputc@fp+1,w,c
  6958  00504E  22DA               	addwfc	fsr2h,f,c
  6959  005050  50DE               	movf	postinc2,w,c
  6960  005052  10DE               	iorwf	postinc2,w,c
  6961  005054  B4D8               	btfsc	status,2,c
  6962  005056  D016               	goto	u3360
  6963  005058  EE20 F004          	lfsr	2,4
  6964  00505C  500E               	movf	fputc@fp,w,c
  6965  00505E  26D9               	addwf	fsr2l,f,c
  6966  005060  500F               	movf	fputc@fp+1,w,c
  6967  005062  22DA               	addwfc	fsr2h,f,c
  6968  005064  EE10 F002          	lfsr	1,2
  6969  005068  500E               	movf	fputc@fp,w,c
  6970  00506A  26E1               	addwf	fsr1l,f,c
  6971  00506C  500F               	movf	fputc@fp+1,w,c
  6972  00506E  22E2               	addwfc	fsr1h,f,c
  6973  005070  50DE               	movf	postinc2,w,c
  6974  005072  5CE6               	subwf	postinc1,w,c
  6975  005074  50E6               	movf	postinc1,w,c
  6976  005076  0A80               	xorlw	128
  6977  005078  6E14               	movwf	(??_fputc+4)& (0+255),c
  6978  00507A  50DE               	movf	postinc2,w,c
  6979  00507C  0A80               	xorlw	128
  6980  00507E  5814               	subwfb	(??_fputc+4)& (0+255),w,c
  6981  005080  B0D8               	btfsc	status,0,c
  6982  005082  0012               	return	
  6983  005084                     u3360:
  6984  005084  EE20 F002          	lfsr	2,2
  6985  005088  500E               	movf	fputc@fp,w,c
  6986  00508A  26D9               	addwf	fsr2l,f,c
  6987  00508C  500F               	movf	fputc@fp+1,w,c
  6988  00508E  22DA               	addwfc	fsr2h,f,c
  6989  005090  CFDE F010          	movff	postinc2,??_fputc
  6990  005094  CFDD F011          	movff	postdec2,??_fputc+1
  6991  005098  C00E  FFD9         	movff	fputc@fp,fsr2l
  6992  00509C  C00F  FFDA         	movff	fputc@fp+1,fsr2h
  6993  0050A0  CFDE F012          	movff	postinc2,??_fputc+2
  6994  0050A4  CFDD F013          	movff	postdec2,??_fputc+3
  6995  0050A8  5010               	movf	??_fputc,w,c
  6996  0050AA  2412               	addwf	??_fputc+2,w,c
  6997  0050AC  6ED9               	movwf	fsr2l,c
  6998  0050AE  5011               	movf	??_fputc+1,w,c
  6999  0050B0  2013               	addwfc	??_fputc+3,w,c
  7000  0050B2  6EDA               	movwf	fsr2h,c
  7001  0050B4  C00C  FFDF         	movff	fputc@c,indf2
  7002  0050B8  EE20 F002          	lfsr	2,2
  7003  0050BC  500E               	movf	fputc@fp,w,c
  7004  0050BE  26D9               	addwf	fsr2l,f,c
  7005  0050C0  500F               	movf	fputc@fp+1,w,c
  7006  0050C2  22DA               	addwfc	fsr2h,f,c
  7007  0050C4  2ADE               	incf	postinc2,f,c
  7008  0050C6  0E00               	movlw	0
  7009  0050C8  22DD               	addwfc	postdec2,f,c
  7010  0050CA  0012               	return		;funcret
  7011  0050CC                     __end_of_fputc:
  7012                           	opt callstack 0
  7013                           
  7014 ;; *************** function _putch *****************
  7015 ;; Defined at:
  7016 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  c               1    wreg     unsigned char 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;  c               1    0[COMRAM] unsigned char 
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  1    wreg      void 
  7023 ;; Registers used:
  7024 ;;		wreg
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7030 ;;      Params:         0       0       0       0       0       0       0       0       0
  7031 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7033 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7034 ;;Total ram usage:        0 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:    7
  7037 ;; This function calls:
  7038 ;;		Nothing
  7039 ;; This function is called by:
  7040 ;;		_fputc
  7041 ;; This function uses a non-reentrant model
  7042 ;;
  7043                           
  7044                           	psect	text36
  7045  005B30                     __ptext36:
  7046                           	opt callstack 0
  7047  005B30                     _putch:
  7048                           	opt callstack 15
  7049                           
  7050                           ;incstack = 0
  7051  005B30  0012               	return		;funcret
  7052  005B32                     __end_of_putch:
  7053                           	opt callstack 0
  7054                           
  7055 ;; *************** function _atol *****************
  7056 ;; Defined at:
  7057 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atol.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;  s               2   23[COMRAM] PTR const unsigned char 
  7060 ;;		 -> rx_data(20), 
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;  n               4   39[COMRAM] long 
  7063 ;;  neg             2   32[COMRAM] int 
  7064 ;; Return value:  Size  Location     Type
  7065 ;;                  4   23[COMRAM] long 
  7066 ;; Registers used:
  7067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7068 ;; Tracked objects:
  7069 ;;		On entry : 0/0
  7070 ;;		On exit  : 0/0
  7071 ;;		Unchanged: 0/0
  7072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7073 ;;      Params:         4       0       0       0       0       0       0       0       0
  7074 ;;      Locals:        11       0       0       0       0       0       0       0       0
  7075 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7076 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7077 ;;Total ram usage:       20 bytes
  7078 ;; Hardware stack levels used:    1
  7079 ;; Hardware stack levels required when called:    8
  7080 ;; This function calls:
  7081 ;;		___lmul
  7082 ;;		_isdigit
  7083 ;;		_isspace
  7084 ;; This function is called by:
  7085 ;;		_Parse_Data
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           	psect	text37
  7090  004418                     __ptext37:
  7091                           	opt callstack 0
  7092  004418                     _atol:
  7093                           	opt callstack 21
  7094                           
  7095                           ;incstack = 0
  7096  004418  0E00               	movlw	0
  7097  00441A  6E28               	movwf	atol@n,c
  7098  00441C  0E00               	movlw	0
  7099  00441E  6E29               	movwf	atol@n+1,c
  7100  004420  0E00               	movlw	0
  7101  004422  6E2A               	movwf	atol@n+2,c
  7102  004424  0E00               	movlw	0
  7103  004426  6E2B               	movwf	atol@n+3,c
  7104  004428  0E00               	movlw	0
  7105  00442A  6E22               	movwf	atol@neg+1,c
  7106  00442C  0E00               	movlw	0
  7107  00442E  6E21               	movwf	atol@neg,c
  7108  004430  D002               	goto	l6025
  7109  004432                     l6023:
  7110  004432  4A18               	infsnz	atol@s,f,c
  7111  004434  2A19               	incf	atol@s+1,f,c
  7112  004436                     l6025:
  7113  004436  0E01               	movlw	1
  7114  004438  6E27               	movwf	_atol$2051,c
  7115  00443A  C018  FFD9         	movff	atol@s,fsr2l
  7116  00443E  C019  FFDA         	movff	atol@s+1,fsr2h
  7117  004442  0E20               	movlw	32
  7118  004444  18DE               	xorwf	postinc2,w,c
  7119  004446  B4D8               	btfsc	status,2,c
  7120  004448  D017               	goto	l6033
  7121  00444A  0EF7               	movlw	247
  7122  00444C  6E1C               	movwf	??_atol& (0+255),c
  7123  00444E  0EFF               	movlw	255
  7124  004450  6E1D               	movwf	(??_atol+1)& (0+255),c
  7125  004452  C018  FFD9         	movff	atol@s,fsr2l
  7126  004456  C019  FFDA         	movff	atol@s+1,fsr2h
  7127  00445A  50DF               	movf	indf2,w,c
  7128  00445C  6E1E               	movwf	(??_atol+2)& (0+255),c
  7129  00445E  6A1F               	clrf	(??_atol+3)& (0+255),c
  7130  004460  501C               	movf	??_atol,w,c
  7131  004462  261E               	addwf	??_atol+2,f,c
  7132  004464  501D               	movf	??_atol+1,w,c
  7133  004466  221F               	addwfc	??_atol+3,f,c
  7134  004468  501F               	movf	??_atol+3,w,c
  7135  00446A  E104               	bnz	u6000
  7136  00446C  0E05               	movlw	5
  7137  00446E  5C1E               	subwf	??_atol+2,w,c
  7138  004470  A0D8               	btfss	status,0,c
  7139  004472  D002               	goto	l6033
  7140  004474                     u6000:
  7141  004474  0E00               	movlw	0
  7142  004476  6E27               	movwf	_atol$2051,c
  7143  004478                     l6033:
  7144  004478  C027  F023         	movff	_atol$2051,_atol$2050
  7145  00447C  6A24               	clrf	_atol$2050+1,c
  7146  00447E  5023               	movf	_atol$2050,w,c
  7147  004480  1024               	iorwf	_atol$2050+1,w,c
  7148  004482  B4D8               	btfsc	status,2,c
  7149  004484  D008               	goto	l6043
  7150  004486  D7D5               	goto	l6023
  7151  004488                     l6039:
  7152  004488  0E00               	movlw	0
  7153  00448A  6E22               	movwf	atol@neg+1,c
  7154  00448C  0E01               	movlw	1
  7155  00448E  6E21               	movwf	atol@neg,c
  7156  004490                     l6041:
  7157  004490  4A18               	infsnz	atol@s,f,c
  7158  004492  2A19               	incf	atol@s+1,f,c
  7159  004494  D040               	goto	l6049
  7160  004496                     l6043:
  7161  004496  C018  FFD9         	movff	atol@s,fsr2l
  7162  00449A  C019  FFDA         	movff	atol@s+1,fsr2h
  7163  00449E  50DF               	movf	indf2,w,c
  7164  0044A0  6E1C               	movwf	??_atol& (0+255),c
  7165  0044A2  6A1D               	clrf	(??_atol+1)& (0+255),c
  7166                           
  7167                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7168                           ; Switch size 1, requested type "simple"
  7169                           ; Number of cases is 1, Range of values is 0 to 0
  7170                           ; switch strategies available:
  7171                           ; Name         Instructions Cycles
  7172                           ; simple_byte            4     3 (average)
  7173                           ;	Chosen strategy is simple_byte
  7174  0044A4  501D               	movf	??_atol+1,w,c
  7175  0044A6  0A00               	xorlw	0	; case 0
  7176  0044A8  A4D8               	btfss	status,2,c
  7177  0044AA  D035               	goto	l6049
  7178                           
  7179                           ; Switch size 1, requested type "simple"
  7180                           ; Number of cases is 2, Range of values is 43 to 45
  7181                           ; switch strategies available:
  7182                           ; Name         Instructions Cycles
  7183                           ; simple_byte            7     4 (average)
  7184                           ;	Chosen strategy is simple_byte
  7185  0044AC  501C               	movf	??_atol,w,c
  7186  0044AE  0A2B               	xorlw	43	; case 43
  7187  0044B0  B4D8               	btfsc	status,2,c
  7188  0044B2  D7EE               	goto	l6041
  7189  0044B4  0A06               	xorlw	6	; case 45
  7190  0044B6  B4D8               	btfsc	status,2,c
  7191  0044B8  D7E7               	goto	l6039
  7192  0044BA  D02D               	goto	l6049
  7193  0044BC                     l6045:
  7194  0044BC  C018  FFD9         	movff	atol@s,fsr2l
  7195  0044C0  C019  FFDA         	movff	atol@s+1,fsr2h
  7196  0044C4  50DF               	movf	indf2,w,c
  7197  0044C6  6E1C               	movwf	??_atol& (0+255),c
  7198  0044C8  0ED0               	movlw	208
  7199  0044CA  241C               	addwf	??_atol,w,c
  7200  0044CC  6E1D               	movwf	(??_atol+1)& (0+255),c
  7201  0044CE  6A1E               	clrf	(??_atol+2)& (0+255),c
  7202  0044D0  0EFF               	movlw	255
  7203  0044D2  221E               	addwfc	(??_atol+2)& (0+255),f,c
  7204  0044D4  6A1F               	clrf	(??_atol+3)& (0+255),c
  7205  0044D6  6A20               	clrf	(??_atol+4)& (0+255),c
  7206  0044D8  C028  F00C         	movff	atol@n,___lmul@multiplier
  7207  0044DC  C029  F00D         	movff	atol@n+1,___lmul@multiplier+1
  7208  0044E0  C02A  F00E         	movff	atol@n+2,___lmul@multiplier+2
  7209  0044E4  C02B  F00F         	movff	atol@n+3,___lmul@multiplier+3
  7210  0044E8  0E0A               	movlw	10
  7211  0044EA  6E10               	movwf	___lmul@multiplicand,c
  7212  0044EC  0E00               	movlw	0
  7213  0044EE  6E11               	movwf	___lmul@multiplicand+1,c
  7214  0044F0  0E00               	movlw	0
  7215  0044F2  6E12               	movwf	___lmul@multiplicand+2,c
  7216  0044F4  0E00               	movlw	0
  7217  0044F6  6E13               	movwf	___lmul@multiplicand+3,c
  7218  0044F8  ECC4  F029         	call	___lmul	;wreg free
  7219  0044FC  501D               	movf	??_atol+1,w,c
  7220  0044FE  5C0C               	subwf	?___lmul,w,c
  7221  004500  6E28               	movwf	atol@n,c
  7222  004502  501E               	movf	??_atol+2,w,c
  7223  004504  580D               	subwfb	?___lmul+1,w,c
  7224  004506  6E29               	movwf	atol@n+1,c
  7225  004508  501F               	movf	??_atol+3,w,c
  7226  00450A  580E               	subwfb	?___lmul+2,w,c
  7227  00450C  6E2A               	movwf	atol@n+2,c
  7228  00450E  5020               	movf	??_atol+4,w,c
  7229  004510  580F               	subwfb	?___lmul+3,w,c
  7230  004512  6E2B               	movwf	atol@n+3,c
  7231  004514  D7BD               	goto	l6041
  7232  004516                     l6049:
  7233  004516  0ED0               	movlw	208
  7234  004518  6E1C               	movwf	??_atol& (0+255),c
  7235  00451A  0EFF               	movlw	255
  7236  00451C  6E1D               	movwf	(??_atol+1)& (0+255),c
  7237  00451E  C018  FFD9         	movff	atol@s,fsr2l
  7238  004522  C019  FFDA         	movff	atol@s+1,fsr2h
  7239  004526  50DF               	movf	indf2,w,c
  7240  004528  6E1E               	movwf	(??_atol+2)& (0+255),c
  7241  00452A  6A1F               	clrf	(??_atol+3)& (0+255),c
  7242  00452C  501C               	movf	??_atol,w,c
  7243  00452E  261E               	addwf	??_atol+2,f,c
  7244  004530  501D               	movf	??_atol+1,w,c
  7245  004532  221F               	addwfc	??_atol+3,f,c
  7246  004534  501F               	movf	??_atol+3,w,c
  7247  004536  E106               	bnz	u6020
  7248  004538  0E0A               	movlw	10
  7249  00453A  5C1E               	subwf	??_atol+2,w,c
  7250  00453C  B0D8               	btfsc	status,0,c
  7251  00453E  D002               	goto	u6020
  7252  004540  0E01               	movlw	1
  7253  004542  D001               	goto	u6030
  7254  004544                     u6020:
  7255  004544  0E00               	movlw	0
  7256  004546                     u6030:
  7257  004546  6E25               	movwf	_atol$2052,c
  7258  004548  6A26               	clrf	_atol$2052+1,c
  7259  00454A  5025               	movf	_atol$2052,w,c
  7260  00454C  1026               	iorwf	_atol$2052+1,w,c
  7261  00454E  A4D8               	btfss	status,2,c
  7262  004550  D7B5               	goto	l6045
  7263  004552  5021               	movf	atol@neg,w,c
  7264  004554  1022               	iorwf	atol@neg+1,w,c
  7265  004556  A4D8               	btfss	status,2,c
  7266  004558  D01A               	goto	l1520
  7267  00455A  C028  F01C         	movff	atol@n,??_atol
  7268  00455E  C029  F01D         	movff	atol@n+1,??_atol+1
  7269  004562  C02A  F01E         	movff	atol@n+2,??_atol+2
  7270  004566  C02B  F01F         	movff	atol@n+3,??_atol+3
  7271  00456A  1E1C               	comf	??_atol,f,c
  7272  00456C  1E1D               	comf	??_atol+1,f,c
  7273  00456E  1E1E               	comf	??_atol+2,f,c
  7274  004570  1E1F               	comf	??_atol+3,f,c
  7275  004572  2A1C               	incf	??_atol,f,c
  7276  004574  0E00               	movlw	0
  7277  004576  221D               	addwfc	??_atol+1,f,c
  7278  004578  221E               	addwfc	??_atol+2,f,c
  7279  00457A  221F               	addwfc	??_atol+3,f,c
  7280  00457C  C01C  F018         	movff	??_atol,?_atol
  7281  004580  C01D  F019         	movff	??_atol+1,?_atol+1
  7282  004584  C01E  F01A         	movff	??_atol+2,?_atol+2
  7283  004588  C01F  F01B         	movff	??_atol+3,?_atol+3
  7284  00458C  0012               	return	
  7285  00458E                     l1520:
  7286  00458E  C028  F018         	movff	atol@n,?_atol
  7287  004592  C029  F019         	movff	atol@n+1,?_atol+1
  7288  004596  C02A  F01A         	movff	atol@n+2,?_atol+2
  7289  00459A  C02B  F01B         	movff	atol@n+3,?_atol+3
  7290  00459E  0012               	return		;funcret
  7291  0045A0                     __end_of_atol:
  7292                           	opt callstack 0
  7293                           
  7294 ;; *************** function ___lmul *****************
  7295 ;; Defined at:
  7296 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;  multiplier      4   11[COMRAM] unsigned long 
  7299 ;;  multiplicand    4   15[COMRAM] unsigned long 
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  product         4   19[COMRAM] unsigned long 
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  4   11[COMRAM] unsigned long 
  7304 ;; Registers used:
  7305 ;;		wreg, status,2, status,0
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7311 ;;      Params:         8       0       0       0       0       0       0       0       0
  7312 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7314 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7315 ;;Total ram usage:       12 bytes
  7316 ;; Hardware stack levels used:    1
  7317 ;; Hardware stack levels required when called:    7
  7318 ;; This function calls:
  7319 ;;		Nothing
  7320 ;; This function is called by:
  7321 ;;		_atol
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           	psect	text38
  7326  005388                     __ptext38:
  7327                           	opt callstack 0
  7328  005388                     ___lmul:
  7329                           	opt callstack 21
  7330                           
  7331                           ;incstack = 0
  7332  005388  0E00               	movlw	0
  7333  00538A  6E14               	movwf	___lmul@product,c
  7334  00538C  0E00               	movlw	0
  7335  00538E  6E15               	movwf	___lmul@product+1,c
  7336  005390  0E00               	movlw	0
  7337  005392  6E16               	movwf	___lmul@product+2,c
  7338  005394  0E00               	movlw	0
  7339  005396  6E17               	movwf	___lmul@product+3,c
  7340  005398                     l5813:
  7341  005398  A00C               	btfss	___lmul@multiplier,0,c
  7342  00539A  D008               	goto	l5817
  7343  00539C  5010               	movf	___lmul@multiplicand,w,c
  7344  00539E  2614               	addwf	___lmul@product,f,c
  7345  0053A0  5011               	movf	___lmul@multiplicand+1,w,c
  7346  0053A2  2215               	addwfc	___lmul@product+1,f,c
  7347  0053A4  5012               	movf	___lmul@multiplicand+2,w,c
  7348  0053A6  2216               	addwfc	___lmul@product+2,f,c
  7349  0053A8  5013               	movf	___lmul@multiplicand+3,w,c
  7350  0053AA  2217               	addwfc	___lmul@product+3,f,c
  7351  0053AC                     l5817:
  7352  0053AC  90D8               	bcf	status,0,c
  7353  0053AE  3610               	rlcf	___lmul@multiplicand,f,c
  7354  0053B0  3611               	rlcf	___lmul@multiplicand+1,f,c
  7355  0053B2  3612               	rlcf	___lmul@multiplicand+2,f,c
  7356  0053B4  3613               	rlcf	___lmul@multiplicand+3,f,c
  7357  0053B6  90D8               	bcf	status,0,c
  7358  0053B8  320F               	rrcf	___lmul@multiplier+3,f,c
  7359  0053BA  320E               	rrcf	___lmul@multiplier+2,f,c
  7360  0053BC  320D               	rrcf	___lmul@multiplier+1,f,c
  7361  0053BE  320C               	rrcf	___lmul@multiplier,f,c
  7362  0053C0  500C               	movf	___lmul@multiplier,w,c
  7363  0053C2  100D               	iorwf	___lmul@multiplier+1,w,c
  7364  0053C4  100E               	iorwf	___lmul@multiplier+2,w,c
  7365  0053C6  100F               	iorwf	___lmul@multiplier+3,w,c
  7366  0053C8  A4D8               	btfss	status,2,c
  7367  0053CA  D7E6               	goto	l5813
  7368  0053CC  C014  F00C         	movff	___lmul@product,?___lmul
  7369  0053D0  C015  F00D         	movff	___lmul@product+1,?___lmul+1
  7370  0053D4  C016  F00E         	movff	___lmul@product+2,?___lmul+2
  7371  0053D8  C017  F00F         	movff	___lmul@product+3,?___lmul+3
  7372  0053DC  0012               	return		;funcret
  7373  0053DE                     __end_of___lmul:
  7374                           	opt callstack 0
  7375                           
  7376 ;; *************** function _atoi *****************
  7377 ;; Defined at:
  7378 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  s               2   18[COMRAM] PTR const unsigned char 
  7381 ;;		 -> rx_data(20), 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  n               2   31[COMRAM] int 
  7384 ;;  neg             2   24[COMRAM] int 
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  2   18[COMRAM] int 
  7387 ;; Registers used:
  7388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7394 ;;      Params:         2       0       0       0       0       0       0       0       0
  7395 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7396 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7397 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7398 ;;Total ram usage:       15 bytes
  7399 ;; Hardware stack levels used:    1
  7400 ;; Hardware stack levels required when called:    8
  7401 ;; This function calls:
  7402 ;;		___wmul
  7403 ;;		_isdigit
  7404 ;;		_isspace
  7405 ;; This function is called by:
  7406 ;;		_Parse_Data
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text39
  7411  004968                     __ptext39:
  7412                           	opt callstack 0
  7413  004968                     _atoi:
  7414                           	opt callstack 21
  7415                           
  7416                           ;incstack = 0
  7417  004968  0E00               	movlw	0
  7418  00496A  6E21               	movwf	atoi@n+1,c
  7419  00496C  0E00               	movlw	0
  7420  00496E  6E20               	movwf	atoi@n,c
  7421  004970  0E00               	movlw	0
  7422  004972  6E1A               	movwf	atoi@neg+1,c
  7423  004974  0E00               	movlw	0
  7424  004976  6E19               	movwf	atoi@neg,c
  7425  004978  D002               	goto	l6089
  7426  00497A                     l6087:
  7427  00497A  4A13               	infsnz	atoi@s,f,c
  7428  00497C  2A14               	incf	atoi@s+1,f,c
  7429  00497E                     l6089:
  7430  00497E  0E01               	movlw	1
  7431  004980  6E1F               	movwf	_atoi$2042,c
  7432  004982  C013  FFD9         	movff	atoi@s,fsr2l
  7433  004986  C014  FFDA         	movff	atoi@s+1,fsr2h
  7434  00498A  0E20               	movlw	32
  7435  00498C  18DE               	xorwf	postinc2,w,c
  7436  00498E  B4D8               	btfsc	status,2,c
  7437  004990  D017               	goto	l6097
  7438  004992  0EF7               	movlw	247
  7439  004994  6E15               	movwf	??_atoi& (0+255),c
  7440  004996  0EFF               	movlw	255
  7441  004998  6E16               	movwf	(??_atoi+1)& (0+255),c
  7442  00499A  C013  FFD9         	movff	atoi@s,fsr2l
  7443  00499E  C014  FFDA         	movff	atoi@s+1,fsr2h
  7444  0049A2  50DF               	movf	indf2,w,c
  7445  0049A4  6E17               	movwf	(??_atoi+2)& (0+255),c
  7446  0049A6  6A18               	clrf	(??_atoi+3)& (0+255),c
  7447  0049A8  5015               	movf	??_atoi,w,c
  7448  0049AA  2617               	addwf	??_atoi+2,f,c
  7449  0049AC  5016               	movf	??_atoi+1,w,c
  7450  0049AE  2218               	addwfc	??_atoi+3,f,c
  7451  0049B0  5018               	movf	??_atoi+3,w,c
  7452  0049B2  E104               	bnz	u6080
  7453  0049B4  0E05               	movlw	5
  7454  0049B6  5C17               	subwf	??_atoi+2,w,c
  7455  0049B8  A0D8               	btfss	status,0,c
  7456  0049BA  D002               	goto	l6097
  7457  0049BC                     u6080:
  7458  0049BC  0E00               	movlw	0
  7459  0049BE  6E1F               	movwf	_atoi$2042,c
  7460  0049C0                     l6097:
  7461  0049C0  C01F  F01B         	movff	_atoi$2042,_atoi$2041
  7462  0049C4  6A1C               	clrf	_atoi$2041+1,c
  7463  0049C6  501B               	movf	_atoi$2041,w,c
  7464  0049C8  101C               	iorwf	_atoi$2041+1,w,c
  7465  0049CA  B4D8               	btfsc	status,2,c
  7466  0049CC  D008               	goto	l6107
  7467  0049CE  D7D5               	goto	l6087
  7468  0049D0                     l6103:
  7469  0049D0  0E00               	movlw	0
  7470  0049D2  6E1A               	movwf	atoi@neg+1,c
  7471  0049D4  0E01               	movlw	1
  7472  0049D6  6E19               	movwf	atoi@neg,c
  7473  0049D8                     l6105:
  7474  0049D8  4A13               	infsnz	atoi@s,f,c
  7475  0049DA  2A14               	incf	atoi@s+1,f,c
  7476  0049DC  D02E               	goto	l6113
  7477  0049DE                     l6107:
  7478  0049DE  C013  FFD9         	movff	atoi@s,fsr2l
  7479  0049E2  C014  FFDA         	movff	atoi@s+1,fsr2h
  7480  0049E6  50DF               	movf	indf2,w,c
  7481  0049E8  6E15               	movwf	??_atoi& (0+255),c
  7482  0049EA  6A16               	clrf	(??_atoi+1)& (0+255),c
  7483                           
  7484                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7485                           ; Switch size 1, requested type "simple"
  7486                           ; Number of cases is 1, Range of values is 0 to 0
  7487                           ; switch strategies available:
  7488                           ; Name         Instructions Cycles
  7489                           ; simple_byte            4     3 (average)
  7490                           ;	Chosen strategy is simple_byte
  7491  0049EC  5016               	movf	??_atoi+1,w,c
  7492  0049EE  0A00               	xorlw	0	; case 0
  7493  0049F0  A4D8               	btfss	status,2,c
  7494  0049F2  D023               	goto	l6113
  7495                           
  7496                           ; Switch size 1, requested type "simple"
  7497                           ; Number of cases is 2, Range of values is 43 to 45
  7498                           ; switch strategies available:
  7499                           ; Name         Instructions Cycles
  7500                           ; simple_byte            7     4 (average)
  7501                           ;	Chosen strategy is simple_byte
  7502  0049F4  5015               	movf	??_atoi,w,c
  7503  0049F6  0A2B               	xorlw	43	; case 43
  7504  0049F8  B4D8               	btfsc	status,2,c
  7505  0049FA  D7EE               	goto	l6105
  7506  0049FC  0A06               	xorlw	6	; case 45
  7507  0049FE  B4D8               	btfsc	status,2,c
  7508  004A00  D7E7               	goto	l6103
  7509  004A02  D01B               	goto	l6113
  7510  004A04                     l6109:
  7511  004A04  C020  F00C         	movff	atoi@n,___wmul@multiplier
  7512  004A08  C021  F00D         	movff	atoi@n+1,___wmul@multiplier+1
  7513  004A0C  0E00               	movlw	0
  7514  004A0E  6E0F               	movwf	___wmul@multiplicand+1,c
  7515  004A10  0E0A               	movlw	10
  7516  004A12  6E0E               	movwf	___wmul@multiplicand,c
  7517  004A14  ECA1  F02C         	call	___wmul	;wreg free
  7518  004A18  C013  FFD9         	movff	atoi@s,fsr2l
  7519  004A1C  C014  FFDA         	movff	atoi@s+1,fsr2h
  7520  004A20  50DF               	movf	indf2,w,c
  7521  004A22  6E15               	movwf	??_atoi& (0+255),c
  7522  004A24  5015               	movf	??_atoi,w,c
  7523  004A26  5E0C               	subwf	?___wmul,f,c
  7524  004A28  0E00               	movlw	0
  7525  004A2A  5A0D               	subwfb	?___wmul+1,f,c
  7526  004A2C  0E30               	movlw	48
  7527  004A2E  240C               	addwf	?___wmul,w,c
  7528  004A30  6E20               	movwf	atoi@n,c
  7529  004A32  0E00               	movlw	0
  7530  004A34  200D               	addwfc	?___wmul+1,w,c
  7531  004A36  6E21               	movwf	atoi@n+1,c
  7532  004A38  D7CF               	goto	l6105
  7533  004A3A                     l6113:
  7534  004A3A  0ED0               	movlw	208
  7535  004A3C  6E15               	movwf	??_atoi& (0+255),c
  7536  004A3E  0EFF               	movlw	255
  7537  004A40  6E16               	movwf	(??_atoi+1)& (0+255),c
  7538  004A42  C013  FFD9         	movff	atoi@s,fsr2l
  7539  004A46  C014  FFDA         	movff	atoi@s+1,fsr2h
  7540  004A4A  50DF               	movf	indf2,w,c
  7541  004A4C  6E17               	movwf	(??_atoi+2)& (0+255),c
  7542  004A4E  6A18               	clrf	(??_atoi+3)& (0+255),c
  7543  004A50  5015               	movf	??_atoi,w,c
  7544  004A52  2617               	addwf	??_atoi+2,f,c
  7545  004A54  5016               	movf	??_atoi+1,w,c
  7546  004A56  2218               	addwfc	??_atoi+3,f,c
  7547  004A58  5018               	movf	??_atoi+3,w,c
  7548  004A5A  E106               	bnz	u6100
  7549  004A5C  0E0A               	movlw	10
  7550  004A5E  5C17               	subwf	??_atoi+2,w,c
  7551  004A60  B0D8               	btfsc	status,0,c
  7552  004A62  D002               	goto	u6100
  7553  004A64  0E01               	movlw	1
  7554  004A66  D001               	goto	u6110
  7555  004A68                     u6100:
  7556  004A68  0E00               	movlw	0
  7557  004A6A                     u6110:
  7558  004A6A  6E1D               	movwf	_atoi$2043,c
  7559  004A6C  6A1E               	clrf	_atoi$2043+1,c
  7560  004A6E  501D               	movf	_atoi$2043,w,c
  7561  004A70  101E               	iorwf	_atoi$2043+1,w,c
  7562  004A72  A4D8               	btfss	status,2,c
  7563  004A74  D7C7               	goto	l6109
  7564  004A76  5019               	movf	atoi@neg,w,c
  7565  004A78  101A               	iorwf	atoi@neg+1,w,c
  7566  004A7A  A4D8               	btfss	status,2,c
  7567  004A7C  D00D               	goto	l1489
  7568  004A7E  C020  F015         	movff	atoi@n,??_atoi
  7569  004A82  C021  F016         	movff	atoi@n+1,??_atoi+1
  7570  004A86  1E15               	comf	??_atoi,f,c
  7571  004A88  1E16               	comf	??_atoi+1,f,c
  7572  004A8A  4A15               	infsnz	??_atoi,f,c
  7573  004A8C  2A16               	incf	??_atoi+1,f,c
  7574  004A8E  C015  F013         	movff	??_atoi,?_atoi
  7575  004A92  C016  F014         	movff	??_atoi+1,?_atoi+1
  7576  004A96  0012               	return	
  7577  004A98                     l1489:
  7578  004A98  C020  F013         	movff	atoi@n,?_atoi
  7579  004A9C  C021  F014         	movff	atoi@n+1,?_atoi+1
  7580  004AA0  0012               	return		;funcret
  7581  004AA2                     __end_of_atoi:
  7582                           	opt callstack 0
  7583                           
  7584 ;; *************** function _isspace *****************
  7585 ;; Defined at:
  7586 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  c               2   11[COMRAM] int 
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;		None
  7591 ;; Return value:  Size  Location     Type
  7592 ;;                  2   11[COMRAM] int 
  7593 ;; Registers used:
  7594 ;;		wreg, status,2, status,0
  7595 ;; Tracked objects:
  7596 ;;		On entry : 0/0
  7597 ;;		On exit  : 0/0
  7598 ;;		Unchanged: 0/0
  7599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7600 ;;      Params:         2       0       0       0       0       0       0       0       0
  7601 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7602 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7603 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7604 ;;Total ram usage:        7 bytes
  7605 ;; Hardware stack levels used:    1
  7606 ;; Hardware stack levels required when called:    7
  7607 ;; This function calls:
  7608 ;;		Nothing
  7609 ;; This function is called by:
  7610 ;;		_atoi
  7611 ;;		_atol
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           	psect	text40
  7616  00551A                     __ptext40:
  7617                           	opt callstack 0
  7618  00551A                     _isspace:
  7619                           	opt callstack 21
  7620                           
  7621                           ;incstack = 0
  7622  00551A  0E01               	movlw	1
  7623  00551C  6E12               	movwf	_isspace$2068,c
  7624  00551E  0E20               	movlw	32
  7625  005520  180C               	xorwf	isspace@c,w,c
  7626  005522  100D               	iorwf	isspace@c+1,w,c
  7627  005524  B4D8               	btfsc	status,2,c
  7628  005526  D014               	goto	l5873
  7629  005528  0EF7               	movlw	247
  7630  00552A  6E0E               	movwf	??_isspace& (0+255),c
  7631  00552C  0EFF               	movlw	255
  7632  00552E  6E0F               	movwf	(??_isspace+1)& (0+255),c
  7633  005530  C00C  F010         	movff	isspace@c,??_isspace+2
  7634  005534  C00D  F011         	movff	isspace@c+1,??_isspace+3
  7635  005538  500E               	movf	??_isspace,w,c
  7636  00553A  2610               	addwf	??_isspace+2,f,c
  7637  00553C  500F               	movf	??_isspace+1,w,c
  7638  00553E  2211               	addwfc	??_isspace+3,f,c
  7639  005540  5011               	movf	??_isspace+3,w,c
  7640  005542  E104               	bnz	u5920
  7641  005544  0E05               	movlw	5
  7642  005546  5C10               	subwf	??_isspace+2,w,c
  7643  005548  A0D8               	btfss	status,0,c
  7644  00554A  D002               	goto	l5873
  7645  00554C                     u5920:
  7646  00554C  0E00               	movlw	0
  7647  00554E  6E12               	movwf	_isspace$2068,c
  7648  005550                     l5873:
  7649  005550  C012  F00C         	movff	_isspace$2068,?_isspace
  7650  005554  6A0D               	clrf	?_isspace+1,c
  7651  005556  0012               	return		;funcret
  7652  005558                     __end_of_isspace:
  7653                           	opt callstack 0
  7654                           
  7655 ;; *************** function _isdigit *****************
  7656 ;; Defined at:
  7657 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;  c               2   11[COMRAM] int 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;		None
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  2   11[COMRAM] int 
  7664 ;; Registers used:
  7665 ;;		wreg, status,2, status,0
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7671 ;;      Params:         2       0       0       0       0       0       0       0       0
  7672 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7673 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7674 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7675 ;;Total ram usage:        6 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; Hardware stack levels required when called:    7
  7678 ;; This function calls:
  7679 ;;		Nothing
  7680 ;; This function is called by:
  7681 ;;		_atoi
  7682 ;;		_atol
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text41
  7687  0057AE                     __ptext41:
  7688                           	opt callstack 0
  7689  0057AE                     _isdigit:
  7690                           	opt callstack 21
  7691                           
  7692                           ;incstack = 0
  7693  0057AE  0ED0               	movlw	208
  7694  0057B0  6E0E               	movwf	??_isdigit& (0+255),c
  7695  0057B2  0EFF               	movlw	255
  7696  0057B4  6E0F               	movwf	(??_isdigit+1)& (0+255),c
  7697  0057B6  C00C  F010         	movff	isdigit@c,??_isdigit+2
  7698  0057BA  C00D  F011         	movff	isdigit@c+1,??_isdigit+3
  7699  0057BE  500E               	movf	??_isdigit,w,c
  7700  0057C0  2610               	addwf	??_isdigit+2,f,c
  7701  0057C2  500F               	movf	??_isdigit+1,w,c
  7702  0057C4  2211               	addwfc	??_isdigit+3,f,c
  7703  0057C6  5011               	movf	??_isdigit+3,w,c
  7704  0057C8  E106               	bnz	u5930
  7705  0057CA  0E0A               	movlw	10
  7706  0057CC  5C10               	subwf	??_isdigit+2,w,c
  7707  0057CE  B0D8               	btfsc	status,0,c
  7708  0057D0  D002               	goto	u5930
  7709  0057D2  0E01               	movlw	1
  7710  0057D4  D001               	goto	u5940
  7711  0057D6                     u5930:
  7712  0057D6  0E00               	movlw	0
  7713  0057D8                     u5940:
  7714  0057D8  6E0C               	movwf	?_isdigit,c
  7715  0057DA  6A0D               	clrf	?_isdigit+1,c
  7716  0057DC  0012               	return		;funcret
  7717  0057DE                     __end_of_isdigit:
  7718                           	opt callstack 0
  7719                           
  7720 ;; *************** function ___wmul *****************
  7721 ;; Defined at:
  7722 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;  multiplier      2   11[COMRAM] unsigned int 
  7725 ;;  multiplicand    2   13[COMRAM] unsigned int 
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;  product         2   15[COMRAM] unsigned int 
  7728 ;; Return value:  Size  Location     Type
  7729 ;;                  2   11[COMRAM] unsigned int 
  7730 ;; Registers used:
  7731 ;;		wreg, status,2, status,0, prodl, prodh
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7737 ;;      Params:         4       0       0       0       0       0       0       0       0
  7738 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7740 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7741 ;;Total ram usage:        6 bytes
  7742 ;; Hardware stack levels used:    1
  7743 ;; Hardware stack levels required when called:    7
  7744 ;; This function calls:
  7745 ;;		Nothing
  7746 ;; This function is called by:
  7747 ;;		_atoi
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           	psect	text42
  7752  005942                     __ptext42:
  7753                           	opt callstack 0
  7754  005942                     ___wmul:
  7755                           	opt callstack 21
  7756                           
  7757                           ;incstack = 0
  7758  005942  500C               	movf	___wmul@multiplier,w,c
  7759  005944  020E               	mulwf	___wmul@multiplicand,c
  7760  005946  CFF3 F010          	movff	prodl,___wmul@product
  7761  00594A  CFF4 F011          	movff	prodh,___wmul@product+1
  7762  00594E  500C               	movf	___wmul@multiplier,w,c
  7763  005950  020F               	mulwf	___wmul@multiplicand+1,c
  7764  005952  50F3               	movf	prodl,w,c
  7765  005954  2611               	addwf	___wmul@product+1,f,c
  7766  005956  500D               	movf	___wmul@multiplier+1,w,c
  7767  005958  020E               	mulwf	___wmul@multiplicand,c
  7768  00595A  50F3               	movf	prodl,w,c
  7769  00595C  2611               	addwf	___wmul@product+1,f,c
  7770  00595E  C010  F00C         	movff	___wmul@product,?___wmul
  7771  005962  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  7772  005966  0012               	return		;funcret
  7773  005968                     __end_of___wmul:
  7774                           	opt callstack 0
  7775                           
  7776 ;; *************** function _EUSART_Write_String *****************
  7777 ;; Defined at:
  7778 ;;		line 142 in file "mcc_generated_files/eusart.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;  data            2   12[COMRAM] PTR unsigned char 
  7781 ;;		 -> output(50), rx_data(20), 
  7782 ;; Auto vars:     Size  Location     Type
  7783 ;;  i               1   14[COMRAM] unsigned char 
  7784 ;; Return value:  Size  Location     Type
  7785 ;;                  1    wreg      void 
  7786 ;; Registers used:
  7787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7788 ;; Tracked objects:
  7789 ;;		On entry : 0/0
  7790 ;;		On exit  : 0/0
  7791 ;;		Unchanged: 0/0
  7792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7793 ;;      Params:         2       0       0       0       0       0       0       0       0
  7794 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7796 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7797 ;;Total ram usage:        3 bytes
  7798 ;; Hardware stack levels used:    1
  7799 ;; Hardware stack levels required when called:    8
  7800 ;; This function calls:
  7801 ;;		_EUSART_Write
  7802 ;; This function is called by:
  7803 ;;		_Parse_Data
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           	psect	text43
  7808  00567E                     __ptext43:
  7809                           	opt callstack 0
  7810  00567E                     _EUSART_Write_String:
  7811                           	opt callstack 21
  7812                           
  7813                           ;mcc_generated_files/eusart.c: 142: void EUSART_Write_String(char data[]);mcc_generated_
      +                          files/eusart.c: 143: {;mcc_generated_files/eusart.c: 145:     uint8_t i = 0;
  7814                           
  7815                           ;incstack = 0
  7816  00567E  0E00               	movlw	0
  7817  005680  6E0F               	movwf	EUSART_Write_String@i,c
  7818                           
  7819                           ;mcc_generated_files/eusart.c: 146:     while(data[i] != '\0'){
  7820  005682  D00A               	goto	l5911
  7821  005684                     l5907:
  7822                           
  7823                           ;mcc_generated_files/eusart.c: 147:             EUSART_Write(data[i]);
  7824  005684  500F               	movf	EUSART_Write_String@i,w,c
  7825  005686  240D               	addwf	EUSART_Write_String@data,w,c
  7826  005688  6ED9               	movwf	fsr2l,c
  7827  00568A  0E00               	movlw	0
  7828  00568C  200E               	addwfc	EUSART_Write_String@data+1,w,c
  7829  00568E  6EDA               	movwf	fsr2h,c
  7830  005690  50DF               	movf	indf2,w,c
  7831  005692  ECAC  F02A         	call	_EUSART_Write
  7832                           
  7833                           ;mcc_generated_files/eusart.c: 148:             i++;
  7834  005696  2A0F               	incf	EUSART_Write_String@i,f,c
  7835  005698                     l5911:
  7836                           
  7837                           ;mcc_generated_files/eusart.c: 146:     while(data[i] != '\0'){
  7838  005698  500F               	movf	EUSART_Write_String@i,w,c
  7839  00569A  240D               	addwf	EUSART_Write_String@data,w,c
  7840  00569C  6ED9               	movwf	fsr2l,c
  7841  00569E  0E00               	movlw	0
  7842  0056A0  200E               	addwfc	EUSART_Write_String@data+1,w,c
  7843  0056A2  6EDA               	movwf	fsr2h,c
  7844  0056A4  50DF               	movf	indf2,w,c
  7845  0056A6  A4D8               	btfss	status,2,c
  7846  0056A8  D7ED               	goto	l5907
  7847                           
  7848                           ;mcc_generated_files/eusart.c: 152:     EUSART_Write(0x0A);
  7849  0056AA  0E0A               	movlw	10
  7850  0056AC  ECAC  F02A         	call	_EUSART_Write
  7851  0056B0  0012               	return		;funcret
  7852  0056B2                     __end_of_EUSART_Write_String:
  7853                           	opt callstack 0
  7854                           
  7855 ;; *************** function _EUSART_Write *****************
  7856 ;; Defined at:
  7857 ;;		line 116 in file "mcc_generated_files/eusart.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  txData          1    wreg     unsigned char 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;  txData          1   11[COMRAM] unsigned char 
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1    wreg      void 
  7864 ;; Registers used:
  7865 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7871 ;;      Params:         0       0       0       0       0       0       0       0       0
  7872 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7873 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7874 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7875 ;;Total ram usage:        1 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    7
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		_EUSART_Write_String
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           	psect	text44
  7886  005558                     __ptext44:
  7887                           	opt callstack 0
  7888  005558                     _EUSART_Write:
  7889                           	opt callstack 21
  7890                           
  7891                           ;incstack = 0
  7892                           ;EUSART_Write@txData stored from wreg
  7893  005558  6E0C               	movwf	EUSART_Write@txData,c
  7894  00555A                     
  7895                           ;mcc_generated_files/eusart.c: 119:     while(0 == eusartTxBufferRemaining)
  7896                           
  7897                           ;mcc_generated_files/eusart.c: 116: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 117: {;mcc_generated_files/eusart.c: 119:     while(0 == eusartTxBufferRemai
      +                          ning)
  7898  00555A  0100               	movlb	0	; () banked
  7899  00555C  51F5               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
  7900  00555E  B4D8               	btfsc	status,2,c
  7901  005560  D7FC               	goto	l5285
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;mcc_generated_files/eusart.c: 124:     if(0 == PIE3bits.TXIE)
  7905  005562  010E               	movlb	14	; () banked
  7906  005564  B9C5               	btfsc	197,4,b	;volatile
  7907  005566  D003               	goto	l89
  7908                           
  7909                           ; BSR set to: 14
  7910                           ;mcc_generated_files/eusart.c: 125:     {;mcc_generated_files/eusart.c: 126:         TX1
      +                          REG = txData;
  7911  005568  C00C  FF9A         	movff	EUSART_Write@txData,3994	;volatile
  7912                           
  7913                           ;mcc_generated_files/eusart.c: 127:     }
  7914  00556C  D011               	goto	l5301
  7915  00556E                     l89:
  7916                           
  7917                           ; BSR set to: 14
  7918                           ;mcc_generated_files/eusart.c: 130:     {;mcc_generated_files/eusart.c: 131:         PIE
      +                          3bits.TXIE = 0;
  7919  00556E  99C5               	bcf	197,4,b	;volatile
  7920                           
  7921                           ; BSR set to: 14
  7922                           ;mcc_generated_files/eusart.c: 132:         eusartTxBuffer[eusartTxHead++] = txData;
  7923  005570  0EBC               	movlw	low _eusartTxBuffer
  7924  005572  2446               	addwf	_eusartTxHead,w,c	;volatile
  7925  005574  6ED9               	movwf	fsr2l,c
  7926  005576  6ADA               	clrf	fsr2h,c
  7927  005578  0E01               	movlw	high _eusartTxBuffer
  7928  00557A  22DA               	addwfc	fsr2h,f,c
  7929  00557C  C00C  FFDF         	movff	EUSART_Write@txData,indf2
  7930                           
  7931                           ; BSR set to: 14
  7932  005580  2A46               	incf	_eusartTxHead,f,c	;volatile
  7933                           
  7934                           ; BSR set to: 14
  7935                           ;mcc_generated_files/eusart.c: 133:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  7936  005582  0E07               	movlw	7
  7937  005584  6446               	cpfsgt	_eusartTxHead,c	;volatile
  7938  005586  D002               	goto	l5299
  7939                           
  7940                           ; BSR set to: 14
  7941                           ;mcc_generated_files/eusart.c: 134:         {;mcc_generated_files/eusart.c: 135:        
      +                               eusartTxHead = 0;
  7942  005588  0E00               	movlw	0
  7943  00558A  6E46               	movwf	_eusartTxHead,c	;volatile
  7944  00558C                     l5299:
  7945                           
  7946                           ; BSR set to: 14
  7947                           ;mcc_generated_files/eusart.c: 137:         eusartTxBufferRemaining--;
  7948  00558C  0100               	movlb	0	; () banked
  7949  00558E  07F5               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  7950  005590                     l5301:
  7951                           
  7952                           ;mcc_generated_files/eusart.c: 139:     PIE3bits.TXIE = 1;
  7953  005590  010E               	movlb	14	; () banked
  7954  005592  89C5               	bsf	197,4,b	;volatile
  7955                           
  7956                           ; BSR set to: 14
  7957  005594  0012               	return		;funcret
  7958  005596                     __end_of_EUSART_Write:
  7959                           	opt callstack 0
  7960                           
  7961 ;; *************** function _AD9833_Init *****************
  7962 ;; Defined at:
  7963 ;;		line 23 in file "ad9833.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;		None
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;		None
  7968 ;; Return value:  Size  Location     Type
  7969 ;;                  1    wreg      void 
  7970 ;; Registers used:
  7971 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7972 ;; Tracked objects:
  7973 ;;		On entry : 0/0
  7974 ;;		On exit  : 0/0
  7975 ;;		Unchanged: 0/0
  7976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7977 ;;      Params:         0       0       0       0       0       0       0       0       0
  7978 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7979 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7980 ;;      Totals:         0       2       0       0       0       0       0       0       0
  7981 ;;Total ram usage:        2 bytes
  7982 ;; Hardware stack levels used:    1
  7983 ;; Hardware stack levels required when called:   11
  7984 ;; This function calls:
  7985 ;;		_AD9833_SetFrequency
  7986 ;;		_SPI1_WriteWord
  7987 ;; This function is called by:
  7988 ;;		_main
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           	psect	text45
  7993  005596                     __ptext45:
  7994                           	opt callstack 0
  7995  005596                     _AD9833_Init:
  7996                           	opt callstack 19
  7997                           
  7998                           ;ad9833.c: 26:     SPI1_WriteWord(0x0100);
  7999                           
  8000                           ; BSR set to: 14
  8001                           ;incstack = 0
  8002  005596  0E01               	movlw	1
  8003  005598  6E0D               	movwf	SPI1_WriteWord@word+1,c
  8004  00559A  0E00               	movlw	0
  8005  00559C  6E0C               	movwf	SPI1_WriteWord@word,c
  8006  00559E  EC8C  F02C         	call	_SPI1_WriteWord	;wreg free
  8007                           
  8008                           ;ad9833.c: 27:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8009  0055A2  0E05               	movlw	5
  8010  0055A4  0100               	movlb	0	; () banked
  8011  0055A6  6FD2               	movwf	(??_AD9833_Init+1)& (0+255),b
  8012  0055A8  0E0F               	movlw	15
  8013  0055AA  6FD1               	movwf	??_AD9833_Init& (0+255),b
  8014  0055AC  0EF1               	movlw	241
  8015  0055AE                     u10137:
  8016  0055AE  2EE8               	decfsz	wreg,f,c
  8017  0055B0  D7FE               	bra	u10137
  8018  0055B2  2FD1               	decfsz	??_AD9833_Init& (0+255),f,b
  8019  0055B4  D7FC               	bra	u10137
  8020  0055B6  2FD2               	decfsz	(??_AD9833_Init+1)& (0+255),f,b
  8021  0055B8  D7FA               	bra	u10137
  8022                           
  8023                           ;ad9833.c: 30:     AD9833_SetFrequency(3000000);
  8024  0055BA  0EC0               	movlw	192
  8025  0055BC  0100               	movlb	0	; () banked
  8026  0055BE  6FBC               	movwf	AD9833_SetFrequency@frequency& (0+255),b
  8027  0055C0  0EC6               	movlw	198
  8028  0055C2  6FBD               	movwf	(AD9833_SetFrequency@frequency+1)& (0+255),b
  8029  0055C4  0E2D               	movlw	45
  8030  0055C6  6FBE               	movwf	(AD9833_SetFrequency@frequency+2)& (0+255),b
  8031  0055C8  0E00               	movlw	0
  8032  0055CA  6FBF               	movwf	(AD9833_SetFrequency@frequency+3)& (0+255),b
  8033  0055CC  EC74  F023         	call	_AD9833_SetFrequency	;wreg free
  8034  0055D0  0012               	return		;funcret
  8035  0055D2                     __end_of_AD9833_Init:
  8036                           	opt callstack 0
  8037                           
  8038 ;; *************** function _AD9833_SetFrequency *****************
  8039 ;; Defined at:
  8040 ;;		line 37 in file "ad9833.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  frequency       4   92[BANK0 ] long 
  8043 ;; Auto vars:     Size  Location     Type
  8044 ;;  freq            4  109[BANK0 ] long 
  8045 ;;  LSB             2  107[BANK0 ] int 
  8046 ;;  MSB             2  105[BANK0 ] int 
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  1    wreg      void 
  8049 ;; Registers used:
  8050 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8056 ;;      Params:         0       4       0       0       0       0       0       0       0
  8057 ;;      Locals:         0      12       0       0       0       0       0       0       0
  8058 ;;      Temps:          0       5       0       0       0       0       0       0       0
  8059 ;;      Totals:         0      21       0       0       0       0       0       0       0
  8060 ;;Total ram usage:       21 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:   10
  8063 ;; This function calls:
  8064 ;;		_SPI1_WriteWord
  8065 ;;		___fldiv
  8066 ;;		___flmul
  8067 ;;		___fltol
  8068 ;;		___xxtofl
  8069 ;;		_powf
  8070 ;; This function is called by:
  8071 ;;		_Parse_Data
  8072 ;;		_AD9833_Init
  8073 ;; This function uses a non-reentrant model
  8074 ;;
  8075                           
  8076                           	psect	text46
  8077  0046E8                     __ptext46:
  8078                           	opt callstack 0
  8079  0046E8                     _AD9833_SetFrequency:
  8080                           	opt callstack 19
  8081                           
  8082                           ;ad9833.c: 37: void AD9833_SetFrequency(long frequency);ad9833.c: 38: {;ad9833.c: 40:   
      +                            long freq = (frequency * powf(2,28)) / 25000000;
  8083                           
  8084                           ;incstack = 0
  8085  0046E8  0E00               	movlw	0
  8086  0046EA  0100               	movlb	0	; () banked
  8087  0046EC  6FA5               	movwf	powf@y& (0+255),b
  8088  0046EE  0E00               	movlw	0
  8089  0046F0  6FA6               	movwf	(powf@y+1)& (0+255),b
  8090  0046F2  0EE0               	movlw	224
  8091  0046F4  6FA7               	movwf	(powf@y+2)& (0+255),b
  8092  0046F6  0E41               	movlw	65
  8093  0046F8  6FA8               	movwf	(powf@y+3)& (0+255),b
  8094  0046FA  0E00               	movlw	0
  8095  0046FC  6FA1               	movwf	powf@x& (0+255),b
  8096  0046FE  0E00               	movlw	0
  8097  004700  6FA2               	movwf	(powf@x+1)& (0+255),b
  8098  004702  0E00               	movlw	0
  8099  004704  6FA3               	movwf	(powf@x+2)& (0+255),b
  8100  004706  0E40               	movlw	64
  8101  004708  6FA4               	movwf	(powf@x+3)& (0+255),b
  8102  00470A  EC5B  F000         	call	_powf	;wreg free
  8103  00470E  C0A1  F0C5         	movff	?_powf,_AD9833_SetFrequency$2487
  8104  004712  C0A2  F0C6         	movff	?_powf+1,_AD9833_SetFrequency$2487+1
  8105  004716  C0A3  F0C7         	movff	?_powf+2,_AD9833_SetFrequency$2487+2
  8106  00471A  C0A4  F0C8         	movff	?_powf+3,_AD9833_SetFrequency$2487+3
  8107                           
  8108                           ;ad9833.c: 37: void AD9833_SetFrequency(long frequency);ad9833.c: 38: {;ad9833.c: 40:   
      +                            long freq = (frequency * powf(2,28)) / 25000000;
  8109  00471E  0E20               	movlw	32
  8110  004720  0100               	movlb	0	; () banked
  8111  004722  6F6C               	movwf	___fldiv@a& (0+255),b
  8112  004724  0EBC               	movlw	188
  8113  004726  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
  8114  004728  0EBE               	movlw	190
  8115  00472A  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
  8116  00472C  0E4B               	movlw	75
  8117  00472E  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
  8118  004730  C0C5  F020         	movff	_AD9833_SetFrequency$2487,___flmul@a
  8119  004734  C0C6  F021         	movff	_AD9833_SetFrequency$2487+1,___flmul@a+1
  8120  004738  C0C7  F022         	movff	_AD9833_SetFrequency$2487+2,___flmul@a+2
  8121  00473C  C0C8  F023         	movff	_AD9833_SetFrequency$2487+3,___flmul@a+3
  8122  004740  C0BC  F00C         	movff	AD9833_SetFrequency@frequency,___xxtofl@val
  8123  004744  C0BD  F00D         	movff	AD9833_SetFrequency@frequency+1,___xxtofl@val+1
  8124  004748  C0BE  F00E         	movff	AD9833_SetFrequency@frequency+2,___xxtofl@val+2
  8125  00474C  C0BF  F00F         	movff	AD9833_SetFrequency@frequency+3,___xxtofl@val+3
  8126  004750  0E01               	movlw	1
  8127  004752  EC14  F024         	call	___xxtofl
  8128  004756  C00C  F01C         	movff	?___xxtofl,___flmul@b
  8129  00475A  C00D  F01D         	movff	?___xxtofl+1,___flmul@b+1
  8130  00475E  C00E  F01E         	movff	?___xxtofl+2,___flmul@b+2
  8131  004762  C00F  F01F         	movff	?___xxtofl+3,___flmul@b+3
  8132  004766  ECA5  F01A         	call	___flmul	;wreg free
  8133  00476A  C01C  F068         	movff	?___flmul,___fldiv@b
  8134  00476E  C01D  F069         	movff	?___flmul+1,___fldiv@b+1
  8135  004772  C01E  F06A         	movff	?___flmul+2,___fldiv@b+2
  8136  004776  C01F  F06B         	movff	?___flmul+3,___fldiv@b+3
  8137  00477A  ECD4  F01D         	call	___fldiv	;wreg free
  8138  00477E  C068  F0B2         	movff	?___fldiv,___fltol@f1
  8139  004782  C069  F0B3         	movff	?___fldiv+1,___fltol@f1+1
  8140  004786  C06A  F0B4         	movff	?___fldiv+2,___fltol@f1+2
  8141  00478A  C06B  F0B5         	movff	?___fldiv+3,___fltol@f1+3
  8142  00478E  ECB3  F026         	call	___fltol	;wreg free
  8143  004792  C0B2  F0CD         	movff	?___fltol,AD9833_SetFrequency@freq
  8144  004796  C0B3  F0CE         	movff	?___fltol+1,AD9833_SetFrequency@freq+1
  8145  00479A  C0B4  F0CF         	movff	?___fltol+2,AD9833_SetFrequency@freq+2
  8146  00479E  C0B5  F0D0         	movff	?___fltol+3,AD9833_SetFrequency@freq+3
  8147                           
  8148                           ;ad9833.c: 43:     int MSB = (int)((freq & 0xFFFC000) >> 14);
  8149  0047A2  0E0E               	movlw	14
  8150  0047A4  0100               	movlb	0	; () banked
  8151  0047A6  6FC0               	movwf	??_AD9833_SetFrequency& (0+255),b
  8152  0047A8  C0CD  F0C1         	movff	AD9833_SetFrequency@freq,??_AD9833_SetFrequency+1
  8153  0047AC  C0CE  F0C2         	movff	AD9833_SetFrequency@freq+1,??_AD9833_SetFrequency+2
  8154  0047B0  C0CF  F0C3         	movff	AD9833_SetFrequency@freq+2,??_AD9833_SetFrequency+3
  8155  0047B4  C0D0  F0C4         	movff	AD9833_SetFrequency@freq+3,??_AD9833_SetFrequency+4
  8156  0047B8                     u9885:
  8157  0047B8  67C0               	tstfsz	??_AD9833_SetFrequency& (0+255),b
  8158  0047BA  D001               	goto	u9886
  8159  0047BC  D007               	goto	u9887
  8160  0047BE                     u9886:
  8161  0047BE  35C4               	rlcf	(??_AD9833_SetFrequency+4)& (0+255),w,b
  8162  0047C0  33C4               	rrcf	(??_AD9833_SetFrequency+4)& (0+255),f,b
  8163  0047C2  33C3               	rrcf	(??_AD9833_SetFrequency+3)& (0+255),f,b
  8164  0047C4  33C2               	rrcf	(??_AD9833_SetFrequency+2)& (0+255),f,b
  8165  0047C6  33C1               	rrcf	(??_AD9833_SetFrequency+1)& (0+255),f,b
  8166  0047C8  2FC0               	decfsz	??_AD9833_SetFrequency& (0+255),f,b
  8167  0047CA  D7F6               	goto	u9885
  8168  0047CC                     u9887:
  8169  0047CC  0EFF               	movlw	255
  8170  0047CE  0100               	movlb	0	; () banked
  8171  0047D0  15C1               	andwf	(??_AD9833_SetFrequency+1)& (0+255),w,b
  8172  0047D2  6FC9               	movwf	AD9833_SetFrequency@MSB& (0+255),b
  8173  0047D4  0E3F               	movlw	63
  8174  0047D6  15C2               	andwf	(??_AD9833_SetFrequency+2)& (0+255),w,b
  8175  0047D8  6FCA               	movwf	(AD9833_SetFrequency@MSB+1)& (0+255),b
  8176                           
  8177                           ; BSR set to: 0
  8178                           ;ad9833.c: 45:     int LSB = (int)(freq & 0x3FFF);
  8179  0047DA  0EFF               	movlw	255
  8180  0047DC  15CD               	andwf	AD9833_SetFrequency@freq& (0+255),w,b
  8181  0047DE  6FCB               	movwf	AD9833_SetFrequency@LSB& (0+255),b
  8182  0047E0  0E3F               	movlw	63
  8183  0047E2  15CE               	andwf	(AD9833_SetFrequency@freq+1)& (0+255),w,b
  8184  0047E4  6FCC               	movwf	(AD9833_SetFrequency@LSB+1)& (0+255),b
  8185                           
  8186                           ; BSR set to: 0
  8187                           ;ad9833.c: 48:     LSB |= 0x4000;
  8188  0047E6  8DCC               	bsf	(AD9833_SetFrequency@LSB+1)& (0+255),6,b
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;ad9833.c: 49:     MSB |= 0x4000;
  8192  0047E8  8DCA               	bsf	(AD9833_SetFrequency@MSB+1)& (0+255),6,b
  8193                           
  8194                           ; BSR set to: 0
  8195                           ;ad9833.c: 52:     SPI1_WriteWord(0x2100);
  8196  0047EA  0E21               	movlw	33
  8197  0047EC  6E0D               	movwf	SPI1_WriteWord@word+1,c
  8198  0047EE  0E00               	movlw	0
  8199  0047F0  6E0C               	movwf	SPI1_WriteWord@word,c
  8200  0047F2  EC8C  F02C         	call	_SPI1_WriteWord	;wreg free
  8201                           
  8202                           ;ad9833.c: 55:     SPI1_WriteWord(LSB);
  8203  0047F6  C0CB  F00C         	movff	AD9833_SetFrequency@LSB,SPI1_WriteWord@word
  8204  0047FA  C0CC  F00D         	movff	AD9833_SetFrequency@LSB+1,SPI1_WriteWord@word+1
  8205  0047FE  EC8C  F02C         	call	_SPI1_WriteWord	;wreg free
  8206                           
  8207                           ;ad9833.c: 57:     SPI1_WriteWord(MSB);
  8208  004802  C0C9  F00C         	movff	AD9833_SetFrequency@MSB,SPI1_WriteWord@word
  8209  004806  C0CA  F00D         	movff	AD9833_SetFrequency@MSB+1,SPI1_WriteWord@word+1
  8210  00480A  EC8C  F02C         	call	_SPI1_WriteWord	;wreg free
  8211                           
  8212                           ;ad9833.c: 59:     SPI1_WriteWord(0xC000);
  8213  00480E  0EC0               	movlw	192
  8214  004810  6E0D               	movwf	SPI1_WriteWord@word+1,c
  8215  004812  0E00               	movlw	0
  8216  004814  6E0C               	movwf	SPI1_WriteWord@word,c
  8217  004816  EC8C  F02C         	call	_SPI1_WriteWord	;wreg free
  8218                           
  8219                           ;ad9833.c: 62:     SPI1_WriteWord(0x2028);
  8220  00481A  0E20               	movlw	32
  8221  00481C  6E0D               	movwf	SPI1_WriteWord@word+1,c
  8222  00481E  0E28               	movlw	40
  8223  004820  6E0C               	movwf	SPI1_WriteWord@word,c
  8224  004822  EC8C  F02C         	call	_SPI1_WriteWord	;wreg free
  8225  004826  0012               	return		;funcret
  8226  004828                     __end_of_AD9833_SetFrequency:
  8227                           	opt callstack 0
  8228                           
  8229 ;; *************** function _powf *****************
  8230 ;; Defined at:
  8231 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\powf.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;  x               4   65[BANK0 ] float 
  8234 ;;  y               4   69[BANK0 ] float 
  8235 ;; Auto vars:     Size  Location     Type
  8236 ;;  s2              4  140[BANK1 ] float 
  8237 ;;  s_h             4  108[BANK1 ] float 
  8238 ;;  t_h             4  104[BANK1 ] float 
  8239 ;;  t_l             4   52[BANK1 ] float 
  8240 ;;  s_l             4   48[BANK1 ] float 
  8241 ;;  __xc8_float_    4  184[BANK1 ] struct .
  8242 ;;  z               4  180[BANK1 ] float 
  8243 ;;  t               4  176[BANK1 ] float 
  8244 ;;  j               4  172[BANK1 ] long 
  8245 ;;  ix              4  168[BANK1 ] long 
  8246 ;;  k               4  160[BANK1 ] long 
  8247 ;;  p_h             4  156[BANK1 ] float 
  8248 ;;  is              4  148[BANK1 ] long 
  8249 ;;  iy              4  144[BANK1 ] long 
  8250 ;;  n               4  136[BANK1 ] long 
  8251 ;;  sn              4  132[BANK1 ] float 
  8252 ;;  t1              4  128[BANK1 ] float 
  8253 ;;  hy              4  124[BANK1 ] long 
  8254 ;;  v               4  120[BANK1 ] float 
  8255 ;;  u               4  116[BANK1 ] float 
  8256 ;;  ax              4  112[BANK1 ] float 
  8257 ;;  p_l             4  100[BANK1 ] float 
  8258 ;;  hx              4   96[BANK1 ] long 
  8259 ;;  s               4   84[BANK1 ] float 
  8260 ;;  yisint          4   80[BANK1 ] long 
  8261 ;;  r               4   76[BANK1 ] float 
  8262 ;;  w               4   68[BANK1 ] float 
  8263 ;;  i               4   44[BANK1 ] long 
  8264 ;;  y1              4   40[BANK1 ] float 
  8265 ;;  z_l             4   36[BANK1 ] float 
  8266 ;;  z_h             4   32[BANK1 ] float 
  8267 ;;  t2              4   28[BANK1 ] float 
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  4   65[BANK0 ] float 
  8270 ;; Registers used:
  8271 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8277 ;;      Params:         0       8       0       0       0       0       0       0       0
  8278 ;;      Locals:         0       0     188       0       0       0       0       0       0
  8279 ;;      Temps:          0       9       0       0       0       0       0       0       0
  8280 ;;      Totals:         0      17     188       0       0       0       0       0       0
  8281 ;;Total ram usage:      205 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:    9
  8284 ;; This function calls:
  8285 ;;		___fladd
  8286 ;;		___fldiv
  8287 ;;		___flge
  8288 ;;		___flmul
  8289 ;;		___flneg
  8290 ;;		___flsub
  8291 ;;		___xxtofl
  8292 ;;		_fabsf
  8293 ;;		_scalbnf
  8294 ;;		_sqrtf
  8295 ;; This function is called by:
  8296 ;;		_AD9833_SetFrequency
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	text47
  8301  0000B6                     __ptext47:
  8302                           	opt callstack 0
  8303  0000B6                     _powf:
  8304                           	opt callstack 19
  8305                           
  8306                           ;incstack = 0
  8307  0000B6  C0A1  F1B8         	movff	powf@x,powf@__xc8_float_word
  8308  0000BA  C0A2  F1B9         	movff	powf@x+1,powf@__xc8_float_word+1
  8309  0000BE  C0A3  F1BA         	movff	powf@x+2,powf@__xc8_float_word+2
  8310  0000C2  C0A4  F1BB         	movff	powf@x+3,powf@__xc8_float_word+3
  8311  0000C6  C1B8  F160         	movff	powf@__xc8_float_word,powf@hx
  8312  0000CA  C1B9  F161         	movff	powf@__xc8_float_word+1,powf@hx+1
  8313  0000CE  C1BA  F162         	movff	powf@__xc8_float_word+2,powf@hx+2
  8314  0000D2  C1BB  F163         	movff	powf@__xc8_float_word+3,powf@hx+3
  8315  0000D6  C0A5  F1B8         	movff	powf@y,powf@__xc8_float_word
  8316  0000DA  C0A6  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
  8317  0000DE  C0A7  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
  8318  0000E2  C0A8  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
  8319  0000E6  C1B8  F17C         	movff	powf@__xc8_float_word,powf@hy
  8320  0000EA  C1B9  F17D         	movff	powf@__xc8_float_word+1,powf@hy+1
  8321  0000EE  C1BA  F17E         	movff	powf@__xc8_float_word+2,powf@hy+2
  8322  0000F2  C1BB  F17F         	movff	powf@__xc8_float_word+3,powf@hy+3
  8323  0000F6  0EFF               	movlw	255
  8324  0000F8  0101               	movlb	1	; () banked
  8325  0000FA  1560               	andwf	powf@hx& (0+255),w,b
  8326  0000FC  6FA8               	movwf	powf@ix& (0+255),b
  8327  0000FE  0EFF               	movlw	255
  8328  000100  1561               	andwf	(powf@hx+1)& (0+255),w,b
  8329  000102  6FA9               	movwf	(powf@ix+1)& (0+255),b
  8330  000104  0EFF               	movlw	255
  8331  000106  1562               	andwf	(powf@hx+2)& (0+255),w,b
  8332  000108  6FAA               	movwf	(powf@ix+2)& (0+255),b
  8333  00010A  0E7F               	movlw	127
  8334  00010C  1563               	andwf	(powf@hx+3)& (0+255),w,b
  8335  00010E  6FAB               	movwf	(powf@ix+3)& (0+255),b
  8336  000110  0EFF               	movlw	255
  8337  000112  157C               	andwf	powf@hy& (0+255),w,b
  8338  000114  6F90               	movwf	powf@iy& (0+255),b
  8339  000116  0EFF               	movlw	255
  8340  000118  157D               	andwf	(powf@hy+1)& (0+255),w,b
  8341  00011A  6F91               	movwf	(powf@iy+1)& (0+255),b
  8342  00011C  0EFF               	movlw	255
  8343  00011E  157E               	andwf	(powf@hy+2)& (0+255),w,b
  8344  000120  6F92               	movwf	(powf@iy+2)& (0+255),b
  8345  000122  0E7F               	movlw	127
  8346  000124  157F               	andwf	(powf@hy+3)& (0+255),w,b
  8347  000126  6F93               	movwf	(powf@iy+3)& (0+255),b
  8348  000128  5190               	movf	powf@iy& (0+255),w,b
  8349  00012A  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  8350  00012C  1192               	iorwf	(powf@iy+2)& (0+255),w,b
  8351  00012E  1193               	iorwf	(powf@iy+3)& (0+255),w,b
  8352  000130  A4D8               	btfss	status,2,c
  8353  000132  D00A               	goto	l8565
  8354                           
  8355                           ; BSR set to: 1
  8356  000134  0E00               	movlw	0
  8357  000136  0100               	movlb	0	; () banked
  8358  000138  6FA1               	movwf	?_powf& (0+255),b
  8359  00013A  0E00               	movlw	0
  8360  00013C  6FA2               	movwf	(?_powf+1)& (0+255),b
  8361  00013E  0E80               	movlw	128
  8362  000140  6FA3               	movwf	(?_powf+2)& (0+255),b
  8363  000142  0E3F               	movlw	63
  8364  000144  6FA4               	movwf	(?_powf+3)& (0+255),b
  8365  000146  0012               	return	
  8366  000148                     l8565:
  8367                           
  8368                           ; BSR set to: 1
  8369  000148  0E80               	movlw	128
  8370  00014A  1962               	xorwf	(powf@hx+2)& (0+255),w,b
  8371  00014C  E110               	bnz	l8571
  8372  00014E  0E3F               	movlw	63
  8373  000150  1963               	xorwf	(powf@hx+3)& (0+255),w,b
  8374  000152  1160               	iorwf	powf@hx& (0+255),w,b
  8375  000154  1161               	iorwf	(powf@hx+1)& (0+255),w,b
  8376  000156  A4D8               	btfss	status,2,c
  8377  000158  D00A               	goto	l8571
  8378                           
  8379                           ; BSR set to: 1
  8380  00015A  0E00               	movlw	0
  8381  00015C  0100               	movlb	0	; () banked
  8382  00015E  6FA1               	movwf	?_powf& (0+255),b
  8383  000160  0E00               	movlw	0
  8384  000162  6FA2               	movwf	(?_powf+1)& (0+255),b
  8385  000164  0E80               	movlw	128
  8386  000166  6FA3               	movwf	(?_powf+2)& (0+255),b
  8387  000168  0E3F               	movlw	63
  8388  00016A  6FA4               	movwf	(?_powf+3)& (0+255),b
  8389  00016C  0012               	return	
  8390  00016E                     l8571:
  8391                           
  8392                           ; BSR set to: 1
  8393  00016E  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  8394  000170  D009               	goto	u9330
  8395  000172  05A8               	decf	powf@ix& (0+255),w,b
  8396  000174  0E00               	movlw	0
  8397  000176  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  8398  000178  0E80               	movlw	128
  8399  00017A  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  8400  00017C  0E7F               	movlw	127
  8401  00017E  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  8402  000180  B0D8               	btfsc	status,0,c
  8403  000182  D00B               	goto	u9340
  8404  000184                     u9330:
  8405                           
  8406                           ; BSR set to: 1
  8407  000184  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  8408  000186  D024               	goto	l8579
  8409  000188  0590               	decf	powf@iy& (0+255),w,b
  8410  00018A  0E00               	movlw	0
  8411  00018C  5991               	subwfb	(powf@iy+1)& (0+255),w,b
  8412  00018E  0E80               	movlw	128
  8413  000190  5992               	subwfb	(powf@iy+2)& (0+255),w,b
  8414  000192  0E7F               	movlw	127
  8415  000194  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  8416  000196  A0D8               	btfss	status,0,c
  8417  000198  D01B               	goto	l8579
  8418  00019A                     u9340:
  8419                           
  8420                           ; BSR set to: 1
  8421  00019A  C0A1  F00C         	movff	powf@x,___fladd@b
  8422  00019E  C0A2  F00D         	movff	powf@x+1,___fladd@b+1
  8423  0001A2  C0A3  F00E         	movff	powf@x+2,___fladd@b+2
  8424  0001A6  C0A4  F00F         	movff	powf@x+3,___fladd@b+3
  8425  0001AA  C0A5  F010         	movff	powf@y,___fladd@a
  8426  0001AE  C0A6  F011         	movff	powf@y+1,___fladd@a+1
  8427  0001B2  C0A7  F012         	movff	powf@y+2,___fladd@a+2
  8428  0001B6  C0A8  F013         	movff	powf@y+3,___fladd@a+3
  8429  0001BA  EC4E  F01C         	call	___fladd	;wreg free
  8430  0001BE  C00C  F0A1         	movff	?___fladd,?_powf
  8431  0001C2  C00D  F0A2         	movff	?___fladd+1,?_powf+1
  8432  0001C6  C00E  F0A3         	movff	?___fladd+2,?_powf+2
  8433  0001CA  C00F  F0A4         	movff	?___fladd+3,?_powf+3
  8434  0001CE  0012               	return	
  8435  0001D0                     l8579:
  8436                           
  8437                           ; BSR set to: 1
  8438  0001D0  0E00               	movlw	0
  8439  0001D2  6F50               	movwf	powf@yisint& (0+255),b
  8440  0001D4  0E00               	movlw	0
  8441  0001D6  6F51               	movwf	(powf@yisint+1)& (0+255),b
  8442  0001D8  0E00               	movlw	0
  8443  0001DA  6F52               	movwf	(powf@yisint+2)& (0+255),b
  8444  0001DC  0E00               	movlw	0
  8445  0001DE  6F53               	movwf	(powf@yisint+3)& (0+255),b
  8446                           
  8447                           ; BSR set to: 1
  8448  0001E0  AF63               	btfss	(powf@hx+3)& (0+255),7,b
  8449  0001E2  D0B1               	goto	l1637
  8450                           
  8451                           ; BSR set to: 1
  8452  0001E4  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  8453  0001E6  D00E               	goto	l8587
  8454  0001E8  0E80               	movlw	128
  8455  0001EA  5D92               	subwf	(powf@iy+2)& (0+255),w,b
  8456  0001EC  0E4B               	movlw	75
  8457  0001EE  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  8458  0001F0  A0D8               	btfss	status,0,c
  8459  0001F2  D008               	goto	l8587
  8460                           
  8461                           ; BSR set to: 1
  8462  0001F4  0E02               	movlw	2
  8463  0001F6  6F50               	movwf	powf@yisint& (0+255),b
  8464  0001F8  0E00               	movlw	0
  8465  0001FA  6F51               	movwf	(powf@yisint+1)& (0+255),b
  8466  0001FC  0E00               	movlw	0
  8467  0001FE  6F52               	movwf	(powf@yisint+2)& (0+255),b
  8468  000200  0E00               	movlw	0
  8469  000202  D0A0               	goto	L3
  8470  000204                     l8587:
  8471                           
  8472                           ; BSR set to: 1
  8473  000204  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  8474  000206  D09F               	goto	l1637
  8475  000208  0E80               	movlw	128
  8476  00020A  5D92               	subwf	(powf@iy+2)& (0+255),w,b
  8477  00020C  0E3F               	movlw	63
  8478  00020E  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  8479  000210  A0D8               	btfss	status,0,c
  8480  000212  D099               	goto	l1637
  8481                           
  8482                           ; BSR set to: 1
  8483  000214  0E17               	movlw	23
  8484  000216  0100               	movlb	0	; () banked
  8485  000218  6FA9               	movwf	??_powf& (0+255),b
  8486  00021A  C190  F0AA         	movff	powf@iy,??_powf+1
  8487  00021E  C191  F0AB         	movff	powf@iy+1,??_powf+2
  8488  000222  C192  F0AC         	movff	powf@iy+2,??_powf+3
  8489  000226  C193  F0AD         	movff	powf@iy+3,??_powf+4
  8490  00022A                     u9385:
  8491  00022A  67A9               	tstfsz	??_powf& (0+255),b
  8492  00022C  D001               	goto	u9386
  8493  00022E  D007               	goto	u9387
  8494  000230                     u9386:
  8495  000230  35AD               	rlcf	(??_powf+4)& (0+255),w,b
  8496  000232  33AD               	rrcf	(??_powf+4)& (0+255),f,b
  8497  000234  33AC               	rrcf	(??_powf+3)& (0+255),f,b
  8498  000236  33AB               	rrcf	(??_powf+2)& (0+255),f,b
  8499  000238  33AA               	rrcf	(??_powf+1)& (0+255),f,b
  8500  00023A  2FA9               	decfsz	??_powf& (0+255),f,b
  8501  00023C  D7F6               	goto	u9385
  8502  00023E                     u9387:
  8503  00023E  0E81               	movlw	129
  8504  000240  0100               	movlb	0	; () banked
  8505  000242  25AA               	addwf	(??_powf+1)& (0+255),w,b
  8506  000244  0101               	movlb	1	; () banked
  8507  000246  6FA0               	movwf	powf@k& (0+255),b
  8508  000248  0EFF               	movlw	255
  8509  00024A  0100               	movlb	0	; () banked
  8510  00024C  21AB               	addwfc	(??_powf+2)& (0+255),w,b
  8511  00024E  0101               	movlb	1	; () banked
  8512  000250  6FA1               	movwf	(powf@k+1)& (0+255),b
  8513  000252  0EFF               	movlw	255
  8514  000254  0100               	movlb	0	; () banked
  8515  000256  21AC               	addwfc	(??_powf+3)& (0+255),w,b
  8516  000258  0101               	movlb	1	; () banked
  8517  00025A  6FA2               	movwf	(powf@k+2)& (0+255),b
  8518  00025C  0EFF               	movlw	255
  8519  00025E  0100               	movlb	0	; () banked
  8520  000260  21AD               	addwfc	(??_powf+4)& (0+255),w,b
  8521  000262  0101               	movlb	1	; () banked
  8522  000264  6FA3               	movwf	(powf@k+3)& (0+255),b
  8523  000266  51A0               	movf	powf@k& (0+255),w,b
  8524  000268  0817               	sublw	23
  8525  00026A  0100               	movlb	0	; () banked
  8526  00026C  6FA9               	movwf	??_powf& (0+255),b
  8527  00026E  C190  F0AA         	movff	powf@iy,??_powf+1
  8528  000272  C191  F0AB         	movff	powf@iy+1,??_powf+2
  8529  000276  C192  F0AC         	movff	powf@iy+2,??_powf+3
  8530  00027A  C193  F0AD         	movff	powf@iy+3,??_powf+4
  8531  00027E                     u9395:
  8532  00027E  67A9               	tstfsz	??_powf& (0+255),b
  8533  000280  D001               	goto	u9396
  8534  000282  D007               	goto	u9397
  8535  000284                     u9396:
  8536  000284  35AD               	rlcf	(??_powf+4)& (0+255),w,b
  8537  000286  33AD               	rrcf	(??_powf+4)& (0+255),f,b
  8538  000288  33AC               	rrcf	(??_powf+3)& (0+255),f,b
  8539  00028A  33AB               	rrcf	(??_powf+2)& (0+255),f,b
  8540  00028C  33AA               	rrcf	(??_powf+1)& (0+255),f,b
  8541  00028E  2FA9               	decfsz	??_powf& (0+255),f,b
  8542  000290  D7F6               	goto	u9395
  8543  000292                     u9397:
  8544  000292  C0AA  F1AC         	movff	??_powf+1,powf@j
  8545  000296  C0AB  F1AD         	movff	??_powf+2,powf@j+1
  8546  00029A  C0AC  F1AE         	movff	??_powf+3,powf@j+2
  8547  00029E  C0AD  F1AF         	movff	??_powf+4,powf@j+3
  8548  0002A2  0101               	movlb	1	; () banked
  8549  0002A4  51A0               	movf	powf@k& (0+255),w,b
  8550  0002A6  0817               	sublw	23
  8551  0002A8  0100               	movlb	0	; () banked
  8552  0002AA  6FA9               	movwf	??_powf& (0+255),b
  8553  0002AC  C1AC  F0AA         	movff	powf@j,??_powf+1
  8554  0002B0  C1AD  F0AB         	movff	powf@j+1,??_powf+2
  8555  0002B4  C1AE  F0AC         	movff	powf@j+2,??_powf+3
  8556  0002B8  C1AF  F0AD         	movff	powf@j+3,??_powf+4
  8557  0002BC  2BA9               	incf	??_powf& (0+255),f,b
  8558  0002BE  D005               	goto	u9400
  8559  0002C0                     u9405:
  8560  0002C0  90D8               	bcf	status,0,c
  8561  0002C2  37AA               	rlcf	(??_powf+1)& (0+255),f,b
  8562  0002C4  37AB               	rlcf	(??_powf+2)& (0+255),f,b
  8563  0002C6  37AC               	rlcf	(??_powf+3)& (0+255),f,b
  8564  0002C8  37AD               	rlcf	(??_powf+4)& (0+255),f,b
  8565  0002CA                     u9400:
  8566  0002CA  2FA9               	decfsz	??_powf& (0+255),f,b
  8567  0002CC  D7F9               	goto	u9405
  8568  0002CE  0101               	movlb	1	; () banked
  8569  0002D0  5190               	movf	powf@iy& (0+255),w,b
  8570  0002D2  0100               	movlb	0	; () banked
  8571  0002D4  19AA               	xorwf	(??_powf+1)& (0+255),w,b
  8572  0002D6  E137               	bnz	l1637
  8573  0002D8  0101               	movlb	1	; () banked
  8574  0002DA  5191               	movf	(powf@iy+1)& (0+255),w,b
  8575  0002DC  0100               	movlb	0	; () banked
  8576  0002DE  19AB               	xorwf	(??_powf+2)& (0+255),w,b
  8577  0002E0  E132               	bnz	l1637
  8578  0002E2  0101               	movlb	1	; () banked
  8579  0002E4  5192               	movf	(powf@iy+2)& (0+255),w,b
  8580  0002E6  0100               	movlb	0	; () banked
  8581  0002E8  19AC               	xorwf	(??_powf+3)& (0+255),w,b
  8582  0002EA  E12D               	bnz	l1637
  8583  0002EC  0101               	movlb	1	; () banked
  8584  0002EE  5193               	movf	(powf@iy+3)& (0+255),w,b
  8585  0002F0  0100               	movlb	0	; () banked
  8586  0002F2  19AD               	xorwf	(??_powf+4)& (0+255),w,b
  8587  0002F4  A4D8               	btfss	status,2,c
  8588  0002F6  D027               	goto	l1637
  8589                           
  8590                           ; BSR set to: 0
  8591  0002F8  0E01               	movlw	1
  8592  0002FA  0101               	movlb	1	; () banked
  8593  0002FC  15AC               	andwf	powf@j& (0+255),w,b
  8594  0002FE  0100               	movlb	0	; () banked
  8595  000300  6FA9               	movwf	??_powf& (0+255),b
  8596  000302  0E00               	movlw	0
  8597  000304  0101               	movlb	1	; () banked
  8598  000306  15AD               	andwf	(powf@j+1)& (0+255),w,b
  8599  000308  0100               	movlb	0	; () banked
  8600  00030A  6FAA               	movwf	(??_powf+1)& (0+255),b
  8601  00030C  0E00               	movlw	0
  8602  00030E  0101               	movlb	1	; () banked
  8603  000310  15AE               	andwf	(powf@j+2)& (0+255),w,b
  8604  000312  0100               	movlb	0	; () banked
  8605  000314  6FAB               	movwf	(??_powf+2)& (0+255),b
  8606  000316  0E00               	movlw	0
  8607  000318  0101               	movlb	1	; () banked
  8608  00031A  15AF               	andwf	(powf@j+3)& (0+255),w,b
  8609  00031C  0100               	movlb	0	; () banked
  8610  00031E  6FAC               	movwf	(??_powf+3)& (0+255),b
  8611  000320  51A9               	movf	??_powf& (0+255),w,b
  8612  000322  0802               	sublw	2
  8613  000324  0101               	movlb	1	; () banked
  8614  000326  6F50               	movwf	powf@yisint& (0+255),b
  8615  000328  0E00               	movlw	0
  8616  00032A  0100               	movlb	0	; () banked
  8617  00032C  55AA               	subfwb	(??_powf+1)& (0+255),w,b
  8618  00032E  0101               	movlb	1	; () banked
  8619  000330  6F51               	movwf	(powf@yisint+1)& (0+255),b
  8620  000332  0E00               	movlw	0
  8621  000334  0100               	movlb	0	; () banked
  8622  000336  55AB               	subfwb	(??_powf+2)& (0+255),w,b
  8623  000338  0101               	movlb	1	; () banked
  8624  00033A  6F52               	movwf	(powf@yisint+2)& (0+255),b
  8625  00033C  0E00               	movlw	0
  8626  00033E  0100               	movlb	0	; () banked
  8627  000340  55AC               	subfwb	(??_powf+3)& (0+255),w,b
  8628  000342  0101               	movlb	1	; () banked
  8629  000344                     L3:
  8630  000344  6F53               	movwf	(powf@yisint+3)& (0+255),b
  8631  000346                     l1637:
  8632  000346  0E80               	movlw	128
  8633  000348  0101               	movlb	1	; () banked
  8634  00034A  1992               	xorwf	(powf@iy+2)& (0+255),w,b
  8635  00034C  E158               	bnz	l8617
  8636  00034E  0E7F               	movlw	127
  8637  000350  1993               	xorwf	(powf@iy+3)& (0+255),w,b
  8638  000352  1190               	iorwf	powf@iy& (0+255),w,b
  8639  000354  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  8640  000356  A4D8               	btfss	status,2,c
  8641  000358  D052               	goto	l8617
  8642                           
  8643                           ; BSR set to: 1
  8644  00035A  0E80               	movlw	128
  8645  00035C  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  8646  00035E  E110               	bnz	l8601
  8647  000360  0E3F               	movlw	63
  8648  000362  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  8649  000364  11A8               	iorwf	powf@ix& (0+255),w,b
  8650  000366  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  8651  000368  A4D8               	btfss	status,2,c
  8652  00036A  D00A               	goto	l8601
  8653                           
  8654                           ; BSR set to: 1
  8655  00036C  0E00               	movlw	0
  8656  00036E  0100               	movlb	0	; () banked
  8657  000370  6FA1               	movwf	?_powf& (0+255),b
  8658  000372  0E00               	movlw	0
  8659  000374  6FA2               	movwf	(?_powf+1)& (0+255),b
  8660  000376  0E80               	movlw	128
  8661  000378  6FA3               	movwf	(?_powf+2)& (0+255),b
  8662  00037A  0E3F               	movlw	63
  8663  00037C  6FA4               	movwf	(?_powf+3)& (0+255),b
  8664  00037E  0012               	return	
  8665  000380                     l8601:
  8666                           
  8667                           ; BSR set to: 1
  8668  000380  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  8669  000382  D01E               	goto	l8609
  8670  000384  05A8               	decf	powf@ix& (0+255),w,b
  8671  000386  0E00               	movlw	0
  8672  000388  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  8673  00038A  0E80               	movlw	128
  8674  00038C  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  8675  00038E  0E3F               	movlw	63
  8676  000390  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  8677  000392  A0D8               	btfss	status,0,c
  8678  000394  D015               	goto	l8609
  8679                           
  8680                           ; BSR set to: 1
  8681  000396  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
  8682  000398  D00A               	goto	l1647
  8683                           
  8684                           ; BSR set to: 1
  8685  00039A  0E00               	movlw	0
  8686  00039C  0100               	movlb	0	; () banked
  8687  00039E  6FA1               	movwf	?_powf& (0+255),b
  8688  0003A0  0E00               	movlw	0
  8689  0003A2  6FA2               	movwf	(?_powf+1)& (0+255),b
  8690  0003A4  0E00               	movlw	0
  8691  0003A6  6FA3               	movwf	(?_powf+2)& (0+255),b
  8692  0003A8  0E00               	movlw	0
  8693  0003AA  6FA4               	movwf	(?_powf+3)& (0+255),b
  8694  0003AC  0012               	return	
  8695  0003AE                     l1647:
  8696                           
  8697                           ; BSR set to: 1
  8698  0003AE  C0A5  F0A1         	movff	powf@y,?_powf
  8699  0003B2  C0A6  F0A2         	movff	powf@y+1,?_powf+1
  8700  0003B6  C0A7  F0A3         	movff	powf@y+2,?_powf+2
  8701  0003BA  C0A8  F0A4         	movff	powf@y+3,?_powf+3
  8702  0003BE  0012               	return	
  8703  0003C0                     l8609:
  8704                           
  8705                           ; BSR set to: 1
  8706  0003C0  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
  8707  0003C2  D013               	goto	l8613
  8708                           
  8709                           ; BSR set to: 1
  8710  0003C4  C0A5  F00C         	movff	powf@y,___flneg@f1
  8711  0003C8  C0A6  F00D         	movff	powf@y+1,___flneg@f1+1
  8712  0003CC  C0A7  F00E         	movff	powf@y+2,___flneg@f1+2
  8713  0003D0  C0A8  F00F         	movff	powf@y+3,___flneg@f1+3
  8714  0003D4  ECEF  F02B         	call	___flneg	;wreg free
  8715  0003D8  C00C  F0A1         	movff	?___flneg,?_powf
  8716  0003DC  C00D  F0A2         	movff	?___flneg+1,?_powf+1
  8717  0003E0  C00E  F0A3         	movff	?___flneg+2,?_powf+2
  8718  0003E4  C00F  F0A4         	movff	?___flneg+3,?_powf+3
  8719  0003E8  0012               	return	
  8720  0003EA                     l8613:
  8721                           
  8722                           ; BSR set to: 1
  8723  0003EA  0E00               	movlw	0
  8724  0003EC  0100               	movlb	0	; () banked
  8725  0003EE  6FA1               	movwf	?_powf& (0+255),b
  8726  0003F0  0E00               	movlw	0
  8727  0003F2  6FA2               	movwf	(?_powf+1)& (0+255),b
  8728  0003F4  0E00               	movlw	0
  8729  0003F6  6FA3               	movwf	(?_powf+2)& (0+255),b
  8730  0003F8  0E00               	movlw	0
  8731  0003FA  6FA4               	movwf	(?_powf+3)& (0+255),b
  8732  0003FC  0012               	return	
  8733  0003FE                     l8617:
  8734                           
  8735                           ; BSR set to: 1
  8736  0003FE  0E80               	movlw	128
  8737  000400  1992               	xorwf	(powf@iy+2)& (0+255),w,b
  8738  000402  E12D               	bnz	l8623
  8739  000404  0E3F               	movlw	63
  8740  000406  1993               	xorwf	(powf@iy+3)& (0+255),w,b
  8741  000408  1190               	iorwf	powf@iy& (0+255),w,b
  8742  00040A  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  8743  00040C  A4D8               	btfss	status,2,c
  8744  00040E  D027               	goto	l8623
  8745                           
  8746                           ; BSR set to: 1
  8747  000410  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
  8748  000412  D01C               	goto	l1657
  8749                           
  8750                           ; BSR set to: 1
  8751  000414  0E00               	movlw	0
  8752  000416  0100               	movlb	0	; () banked
  8753  000418  6F68               	movwf	___fldiv@b& (0+255),b
  8754  00041A  0E00               	movlw	0
  8755  00041C  6F69               	movwf	(___fldiv@b+1)& (0+255),b
  8756  00041E  0E80               	movlw	128
  8757  000420  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
  8758  000422  0E3F               	movlw	63
  8759  000424  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
  8760  000426  C0A1  F06C         	movff	powf@x,___fldiv@a
  8761  00042A  C0A2  F06D         	movff	powf@x+1,___fldiv@a+1
  8762  00042E  C0A3  F06E         	movff	powf@x+2,___fldiv@a+2
  8763  000432  C0A4  F06F         	movff	powf@x+3,___fldiv@a+3
  8764  000436  ECD4  F01D         	call	___fldiv	;wreg free
  8765  00043A  C068  F0A1         	movff	?___fldiv,?_powf
  8766  00043E  C069  F0A2         	movff	?___fldiv+1,?_powf+1
  8767  000442  C06A  F0A3         	movff	?___fldiv+2,?_powf+2
  8768  000446  C06B  F0A4         	movff	?___fldiv+3,?_powf+3
  8769  00044A  0012               	return	
  8770  00044C                     l1657:
  8771                           
  8772                           ; BSR set to: 1
  8773  00044C  C0A1  F0A1         	movff	powf@x,?_powf
  8774  000450  C0A2  F0A2         	movff	powf@x+1,?_powf+1
  8775  000454  C0A3  F0A3         	movff	powf@x+2,?_powf+2
  8776  000458  C0A4  F0A4         	movff	powf@x+3,?_powf+3
  8777  00045C  0012               	return	
  8778  00045E                     l8623:
  8779                           
  8780                           ; BSR set to: 1
  8781  00045E  0E40               	movlw	64
  8782  000460  197F               	xorwf	(powf@hy+3)& (0+255),w,b
  8783  000462  117C               	iorwf	powf@hy& (0+255),w,b
  8784  000464  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  8785  000466  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  8786  000468  A4D8               	btfss	status,2,c
  8787  00046A  D01B               	goto	l8629
  8788                           
  8789                           ; BSR set to: 1
  8790  00046C  C0A1  F01C         	movff	powf@x,___flmul@b
  8791  000470  C0A2  F01D         	movff	powf@x+1,___flmul@b+1
  8792  000474  C0A3  F01E         	movff	powf@x+2,___flmul@b+2
  8793  000478  C0A4  F01F         	movff	powf@x+3,___flmul@b+3
  8794  00047C  C0A1  F020         	movff	powf@x,___flmul@a
  8795  000480  C0A2  F021         	movff	powf@x+1,___flmul@a+1
  8796  000484  C0A3  F022         	movff	powf@x+2,___flmul@a+2
  8797  000488  C0A4  F023         	movff	powf@x+3,___flmul@a+3
  8798  00048C  ECA5  F01A         	call	___flmul	;wreg free
  8799  000490  C01C  F0A1         	movff	?___flmul,?_powf
  8800  000494  C01D  F0A2         	movff	?___flmul+1,?_powf+1
  8801  000498  C01E  F0A3         	movff	?___flmul+2,?_powf+2
  8802  00049C  C01F  F0A4         	movff	?___flmul+3,?_powf+3
  8803  0004A0  0012               	return	
  8804  0004A2                     l8629:
  8805                           
  8806                           ; BSR set to: 1
  8807  0004A2  0E3F               	movlw	63
  8808  0004A4  197F               	xorwf	(powf@hy+3)& (0+255),w,b
  8809  0004A6  117C               	iorwf	powf@hy& (0+255),w,b
  8810  0004A8  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  8811  0004AA  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  8812  0004AC  B4D8               	btfsc	status,2,c
  8813                           
  8814                           ; BSR set to: 1
  8815  0004AE  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
  8816  0004B0  D013               	goto	l8637
  8817                           
  8818                           ; BSR set to: 1
  8819  0004B2  C0A1  F070         	movff	powf@x,sqrtf@x
  8820  0004B6  C0A2  F071         	movff	powf@x+1,sqrtf@x+1
  8821  0004BA  C0A3  F072         	movff	powf@x+2,sqrtf@x+2
  8822  0004BE  C0A4  F073         	movff	powf@x+3,sqrtf@x+3
  8823  0004C2  EC9C  F016         	call	_sqrtf	;wreg free
  8824  0004C6  C070  F0A1         	movff	?_sqrtf,?_powf
  8825  0004CA  C071  F0A2         	movff	?_sqrtf+1,?_powf+1
  8826  0004CE  C072  F0A3         	movff	?_sqrtf+2,?_powf+2
  8827  0004D2  C073  F0A4         	movff	?_sqrtf+3,?_powf+3
  8828  0004D6  0012               	return	
  8829  0004D8                     l8637:
  8830                           
  8831                           ; BSR set to: 1
  8832  0004D8  C0A1  F00C         	movff	powf@x,fabsf@x
  8833  0004DC  C0A2  F00D         	movff	powf@x+1,fabsf@x+1
  8834  0004E0  C0A3  F00E         	movff	powf@x+2,fabsf@x+2
  8835  0004E4  C0A4  F00F         	movff	powf@x+3,fabsf@x+3
  8836  0004E8  EC59  F02B         	call	_fabsf	;wreg free
  8837  0004EC  C00C  F170         	movff	?_fabsf,powf@ax
  8838  0004F0  C00D  F171         	movff	?_fabsf+1,powf@ax+1
  8839  0004F4  C00E  F172         	movff	?_fabsf+2,powf@ax+2
  8840  0004F8  C00F  F173         	movff	?_fabsf+3,powf@ax+3
  8841  0004FC  0E80               	movlw	128
  8842  0004FE  0101               	movlb	1	; () banked
  8843  000500  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  8844  000502  E106               	bnz	u9520
  8845  000504  0E7F               	movlw	127
  8846  000506  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  8847  000508  11A8               	iorwf	powf@ix& (0+255),w,b
  8848  00050A  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  8849  00050C  B4D8               	btfsc	status,2,c
  8850  00050E  D00F               	goto	u9540
  8851  000510                     u9520:
  8852                           
  8853                           ; BSR set to: 1
  8854  000510  51A8               	movf	powf@ix& (0+255),w,b
  8855  000512  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  8856  000514  11AA               	iorwf	(powf@ix+2)& (0+255),w,b
  8857  000516  11AB               	iorwf	(powf@ix+3)& (0+255),w,b
  8858  000518  B4D8               	btfsc	status,2,c
  8859  00051A  D009               	goto	u9540
  8860                           
  8861                           ; BSR set to: 1
  8862  00051C  0E80               	movlw	128
  8863  00051E  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  8864  000520  E105               	bnz	u9541
  8865  000522  0E3F               	movlw	63
  8866  000524  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  8867  000526  11A8               	iorwf	powf@ix& (0+255),w,b
  8868  000528  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  8869  00052A  A4D8               	btfss	status,2,c
  8870  00052C                     u9541:
  8871  00052C  D0B6               	goto	l8663
  8872  00052E                     u9540:
  8873                           
  8874                           ; BSR set to: 1
  8875  00052E  C170  F1B4         	movff	powf@ax,powf@z
  8876  000532  C171  F1B5         	movff	powf@ax+1,powf@z+1
  8877  000536  C172  F1B6         	movff	powf@ax+2,powf@z+2
  8878  00053A  C173  F1B7         	movff	powf@ax+3,powf@z+3
  8879                           
  8880                           ; BSR set to: 1
  8881  00053E  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
  8882  000540  D01B               	goto	l8649
  8883                           
  8884                           ; BSR set to: 1
  8885  000542  0E00               	movlw	0
  8886  000544  0100               	movlb	0	; () banked
  8887  000546  6F68               	movwf	___fldiv@b& (0+255),b
  8888  000548  0E00               	movlw	0
  8889  00054A  6F69               	movwf	(___fldiv@b+1)& (0+255),b
  8890  00054C  0E80               	movlw	128
  8891  00054E  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
  8892  000550  0E3F               	movlw	63
  8893  000552  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
  8894  000554  C1B4  F06C         	movff	powf@z,___fldiv@a
  8895  000558  C1B5  F06D         	movff	powf@z+1,___fldiv@a+1
  8896  00055C  C1B6  F06E         	movff	powf@z+2,___fldiv@a+2
  8897  000560  C1B7  F06F         	movff	powf@z+3,___fldiv@a+3
  8898  000564  ECD4  F01D         	call	___fldiv	;wreg free
  8899  000568  C068  F1B4         	movff	?___fldiv,powf@z
  8900  00056C  C069  F1B5         	movff	?___fldiv+1,powf@z+1
  8901  000570  C06A  F1B6         	movff	?___fldiv+2,powf@z+2
  8902  000574  C06B  F1B7         	movff	?___fldiv+3,powf@z+3
  8903  000578                     l8649:
  8904  000578  0101               	movlb	1	; () banked
  8905  00057A  AF63               	btfss	(powf@hx+3)& (0+255),7,b
  8906  00057C  D085               	goto	l8659
  8907                           
  8908                           ; BSR set to: 1
  8909  00057E  0E00               	movlw	0
  8910  000580  25A8               	addwf	powf@ix& (0+255),w,b
  8911  000582  0100               	movlb	0	; () banked
  8912  000584  6FA9               	movwf	??_powf& (0+255),b
  8913  000586  0E00               	movlw	0
  8914  000588  0101               	movlb	1	; () banked
  8915  00058A  21A9               	addwfc	(powf@ix+1)& (0+255),w,b
  8916  00058C  0100               	movlb	0	; () banked
  8917  00058E  6FAA               	movwf	(??_powf+1)& (0+255),b
  8918  000590  0E80               	movlw	128
  8919  000592  0101               	movlb	1	; () banked
  8920  000594  21AA               	addwfc	(powf@ix+2)& (0+255),w,b
  8921  000596  0100               	movlb	0	; () banked
  8922  000598  6FAB               	movwf	(??_powf+2)& (0+255),b
  8923  00059A  0EC0               	movlw	192
  8924  00059C  0101               	movlb	1	; () banked
  8925  00059E  21AB               	addwfc	(powf@ix+3)& (0+255),w,b
  8926  0005A0  0100               	movlb	0	; () banked
  8927  0005A2  6FAC               	movwf	(??_powf+3)& (0+255),b
  8928  0005A4  0101               	movlb	1	; () banked
  8929  0005A6  5150               	movf	powf@yisint& (0+255),w,b
  8930  0005A8  0100               	movlb	0	; () banked
  8931  0005AA  11A9               	iorwf	??_powf& (0+255),w,b
  8932  0005AC  6FAD               	movwf	(??_powf+4)& (0+255),b
  8933  0005AE  0101               	movlb	1	; () banked
  8934  0005B0  5151               	movf	(powf@yisint+1)& (0+255),w,b
  8935  0005B2  0100               	movlb	0	; () banked
  8936  0005B4  11AA               	iorwf	(??_powf+1)& (0+255),w,b
  8937  0005B6  6FAE               	movwf	(??_powf+5)& (0+255),b
  8938  0005B8  0101               	movlb	1	; () banked
  8939  0005BA  5152               	movf	(powf@yisint+2)& (0+255),w,b
  8940  0005BC  0100               	movlb	0	; () banked
  8941  0005BE  11AB               	iorwf	(??_powf+2)& (0+255),w,b
  8942  0005C0  6FAF               	movwf	(??_powf+6)& (0+255),b
  8943  0005C2  0101               	movlb	1	; () banked
  8944  0005C4  5153               	movf	(powf@yisint+3)& (0+255),w,b
  8945  0005C6  0100               	movlb	0	; () banked
  8946  0005C8  11AC               	iorwf	(??_powf+3)& (0+255),w,b
  8947  0005CA  6FB0               	movwf	(??_powf+7)& (0+255),b
  8948  0005CC  51AD               	movf	(??_powf+4)& (0+255),w,b
  8949  0005CE  11AE               	iorwf	(??_powf+5)& (0+255),w,b
  8950  0005D0  11AF               	iorwf	(??_powf+6)& (0+255),w,b
  8951  0005D2  11B0               	iorwf	(??_powf+7)& (0+255),w,b
  8952  0005D4  A4D8               	btfss	status,2,c
  8953  0005D6  D03F               	goto	l8655
  8954                           
  8955                           ; BSR set to: 0
  8956  0005D8  C1B4  F064         	movff	powf@z,___flsub@a
  8957  0005DC  C1B5  F065         	movff	powf@z+1,___flsub@a+1
  8958  0005E0  C1B6  F066         	movff	powf@z+2,___flsub@a+2
  8959  0005E4  C1B7  F067         	movff	powf@z+3,___flsub@a+3
  8960  0005E8  C1B4  F060         	movff	powf@z,___flsub@b
  8961  0005EC  C1B5  F061         	movff	powf@z+1,___flsub@b+1
  8962  0005F0  C1B6  F062         	movff	powf@z+2,___flsub@b+2
  8963  0005F4  C1B7  F063         	movff	powf@z+3,___flsub@b+3
  8964  0005F8  EC69  F02A         	call	___flsub	;wreg free
  8965  0005FC  C060  F068         	movff	?___flsub,___fldiv@b
  8966  000600  C061  F069         	movff	?___flsub+1,___fldiv@b+1
  8967  000604  C062  F06A         	movff	?___flsub+2,___fldiv@b+2
  8968  000608  C063  F06B         	movff	?___flsub+3,___fldiv@b+3
  8969  00060C  C1B4  F064         	movff	powf@z,___flsub@a
  8970  000610  C1B5  F065         	movff	powf@z+1,___flsub@a+1
  8971  000614  C1B6  F066         	movff	powf@z+2,___flsub@a+2
  8972  000618  C1B7  F067         	movff	powf@z+3,___flsub@a+3
  8973  00061C  C1B4  F060         	movff	powf@z,___flsub@b
  8974  000620  C1B5  F061         	movff	powf@z+1,___flsub@b+1
  8975  000624  C1B6  F062         	movff	powf@z+2,___flsub@b+2
  8976  000628  C1B7  F063         	movff	powf@z+3,___flsub@b+3
  8977  00062C  EC69  F02A         	call	___flsub	;wreg free
  8978  000630  C060  F06C         	movff	?___flsub,___fldiv@a
  8979  000634  C061  F06D         	movff	?___flsub+1,___fldiv@a+1
  8980  000638  C062  F06E         	movff	?___flsub+2,___fldiv@a+2
  8981  00063C  C063  F06F         	movff	?___flsub+3,___fldiv@a+3
  8982  000640  ECD4  F01D         	call	___fldiv	;wreg free
  8983  000644  C068  F1B4         	movff	?___fldiv,powf@z
  8984  000648  C069  F1B5         	movff	?___fldiv+1,powf@z+1
  8985  00064C  C06A  F1B6         	movff	?___fldiv+2,powf@z+2
  8986  000650  C06B  F1B7         	movff	?___fldiv+3,powf@z+3
  8987  000654  D019               	goto	l8659
  8988  000656                     l8655:
  8989                           
  8990                           ; BSR set to: 0
  8991  000656  0101               	movlb	1	; () banked
  8992  000658  0550               	decf	powf@yisint& (0+255),w,b
  8993  00065A  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  8994  00065C  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  8995  00065E  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  8996  000660  A4D8               	btfss	status,2,c
  8997  000662  D012               	goto	l8659
  8998                           
  8999                           ; BSR set to: 1
  9000  000664  C1B4  F00C         	movff	powf@z,___flneg@f1
  9001  000668  C1B5  F00D         	movff	powf@z+1,___flneg@f1+1
  9002  00066C  C1B6  F00E         	movff	powf@z+2,___flneg@f1+2
  9003  000670  C1B7  F00F         	movff	powf@z+3,___flneg@f1+3
  9004  000674  ECEF  F02B         	call	___flneg	;wreg free
  9005  000678  C00C  F1B4         	movff	?___flneg,powf@z
  9006  00067C  C00D  F1B5         	movff	?___flneg+1,powf@z+1
  9007  000680  C00E  F1B6         	movff	?___flneg+2,powf@z+2
  9008  000684  C00F  F1B7         	movff	?___flneg+3,powf@z+3
  9009  000688                     l8659:
  9010  000688  C1B4  F0A1         	movff	powf@z,?_powf
  9011  00068C  C1B5  F0A2         	movff	powf@z+1,?_powf+1
  9012  000690  C1B6  F0A3         	movff	powf@z+2,?_powf+2
  9013  000694  C1B7  F0A4         	movff	powf@z+3,?_powf+3
  9014  000698  0012               	return	
  9015  00069A                     l8663:
  9016                           
  9017                           ; BSR set to: 1
  9018  00069A  0E00               	movlw	0
  9019  00069C  6F84               	movwf	powf@sn& (0+255),b
  9020  00069E  0E00               	movlw	0
  9021  0006A0  6F85               	movwf	(powf@sn+1)& (0+255),b
  9022  0006A2  0E80               	movlw	128
  9023  0006A4  6F86               	movwf	(powf@sn+2)& (0+255),b
  9024  0006A6  0E3F               	movlw	63
  9025  0006A8  6F87               	movwf	(powf@sn+3)& (0+255),b
  9026                           
  9027                           ; BSR set to: 1
  9028  0006AA  AF63               	btfss	(powf@hx+3)& (0+255),7,b
  9029  0006AC  D053               	goto	l8677
  9030                           
  9031                           ; BSR set to: 1
  9032  0006AE  5150               	movf	powf@yisint& (0+255),w,b
  9033  0006B0  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  9034  0006B2  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  9035  0006B4  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  9036  0006B6  A4D8               	btfss	status,2,c
  9037  0006B8  D03F               	goto	l8673
  9038                           
  9039                           ; BSR set to: 1
  9040  0006BA  C0A1  F064         	movff	powf@x,___flsub@a
  9041  0006BE  C0A2  F065         	movff	powf@x+1,___flsub@a+1
  9042  0006C2  C0A3  F066         	movff	powf@x+2,___flsub@a+2
  9043  0006C6  C0A4  F067         	movff	powf@x+3,___flsub@a+3
  9044  0006CA  C0A1  F060         	movff	powf@x,___flsub@b
  9045  0006CE  C0A2  F061         	movff	powf@x+1,___flsub@b+1
  9046  0006D2  C0A3  F062         	movff	powf@x+2,___flsub@b+2
  9047  0006D6  C0A4  F063         	movff	powf@x+3,___flsub@b+3
  9048  0006DA  EC69  F02A         	call	___flsub	;wreg free
  9049  0006DE  C060  F068         	movff	?___flsub,___fldiv@b
  9050  0006E2  C061  F069         	movff	?___flsub+1,___fldiv@b+1
  9051  0006E6  C062  F06A         	movff	?___flsub+2,___fldiv@b+2
  9052  0006EA  C063  F06B         	movff	?___flsub+3,___fldiv@b+3
  9053  0006EE  C0A1  F064         	movff	powf@x,___flsub@a
  9054  0006F2  C0A2  F065         	movff	powf@x+1,___flsub@a+1
  9055  0006F6  C0A3  F066         	movff	powf@x+2,___flsub@a+2
  9056  0006FA  C0A4  F067         	movff	powf@x+3,___flsub@a+3
  9057  0006FE  C0A1  F060         	movff	powf@x,___flsub@b
  9058  000702  C0A2  F061         	movff	powf@x+1,___flsub@b+1
  9059  000706  C0A3  F062         	movff	powf@x+2,___flsub@b+2
  9060  00070A  C0A4  F063         	movff	powf@x+3,___flsub@b+3
  9061  00070E  EC69  F02A         	call	___flsub	;wreg free
  9062  000712  C060  F06C         	movff	?___flsub,___fldiv@a
  9063  000716  C061  F06D         	movff	?___flsub+1,___fldiv@a+1
  9064  00071A  C062  F06E         	movff	?___flsub+2,___fldiv@a+2
  9065  00071E  C063  F06F         	movff	?___flsub+3,___fldiv@a+3
  9066  000722  ECD4  F01D         	call	___fldiv	;wreg free
  9067  000726  C068  F0A1         	movff	?___fldiv,?_powf
  9068  00072A  C069  F0A2         	movff	?___fldiv+1,?_powf+1
  9069  00072E  C06A  F0A3         	movff	?___fldiv+2,?_powf+2
  9070  000732  C06B  F0A4         	movff	?___fldiv+3,?_powf+3
  9071  000736  0012               	return	
  9072  000738                     l8673:
  9073                           
  9074                           ; BSR set to: 1
  9075  000738  0550               	decf	powf@yisint& (0+255),w,b
  9076  00073A  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  9077  00073C  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  9078  00073E  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  9079  000740  A4D8               	btfss	status,2,c
  9080  000742  D008               	goto	l8677
  9081                           
  9082                           ; BSR set to: 1
  9083  000744  0E00               	movlw	0
  9084  000746  6F84               	movwf	powf@sn& (0+255),b
  9085  000748  0E00               	movlw	0
  9086  00074A  6F85               	movwf	(powf@sn+1)& (0+255),b
  9087  00074C  0E80               	movlw	128
  9088  00074E  6F86               	movwf	(powf@sn+2)& (0+255),b
  9089  000750  0EBF               	movlw	191
  9090  000752  6F87               	movwf	(powf@sn+3)& (0+255),b
  9091  000754                     l8677:
  9092                           
  9093                           ; BSR set to: 1
  9094  000754  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  9095  000756  D26D               	goto	l8725
  9096  000758  0590               	decf	powf@iy& (0+255),w,b
  9097  00075A  0E00               	movlw	0
  9098  00075C  5991               	subwfb	(powf@iy+1)& (0+255),w,b
  9099  00075E  0E00               	movlw	0
  9100  000760  5992               	subwfb	(powf@iy+2)& (0+255),w,b
  9101  000762  0E4D               	movlw	77
  9102  000764  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  9103  000766  A0D8               	btfss	status,0,c
  9104  000768  D264               	goto	l8725
  9105                           
  9106                           ; BSR set to: 1
  9107  00076A  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  9108  00076C  D00A               	goto	u9630
  9109  00076E  0EF8               	movlw	248
  9110  000770  5DA8               	subwf	powf@ix& (0+255),w,b
  9111  000772  0EFF               	movlw	255
  9112  000774  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  9113  000776  0E7F               	movlw	127
  9114  000778  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  9115  00077A  0E3F               	movlw	63
  9116  00077C  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  9117  00077E  B0D8               	btfsc	status,0,c
  9118  000780  D06C               	goto	l8689
  9119  000782                     u9630:
  9120                           
  9121                           ; BSR set to: 1
  9122  000782  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  9123  000784  D035               	goto	l8685
  9124                           
  9125                           ; BSR set to: 1
  9126  000786  0E60               	movlw	96
  9127  000788  6E20               	movwf	___flmul@a,c
  9128  00078A  0E42               	movlw	66
  9129  00078C  6E21               	movwf	___flmul@a+1,c
  9130  00078E  0EA2               	movlw	162
  9131  000790  6E22               	movwf	___flmul@a+2,c
  9132  000792  0E0D               	movlw	13
  9133  000794  6E23               	movwf	___flmul@a+3,c
  9134  000796  C184  F01C         	movff	powf@sn,___flmul@b
  9135  00079A  C185  F01D         	movff	powf@sn+1,___flmul@b+1
  9136  00079E  C186  F01E         	movff	powf@sn+2,___flmul@b+2
  9137  0007A2  C187  F01F         	movff	powf@sn+3,___flmul@b+3
  9138  0007A6  ECA5  F01A         	call	___flmul	;wreg free
  9139  0007AA  C01C  F1A4         	movff	?___flmul,_powf$2488
  9140  0007AE  C01D  F1A5         	movff	?___flmul+1,_powf$2488+1
  9141  0007B2  C01E  F1A6         	movff	?___flmul+2,_powf$2488+2
  9142  0007B6  C01F  F1A7         	movff	?___flmul+3,_powf$2488+3
  9143  0007BA  C1A4  F01C         	movff	_powf$2488,___flmul@b
  9144  0007BE  C1A5  F01D         	movff	_powf$2488+1,___flmul@b+1
  9145  0007C2  C1A6  F01E         	movff	_powf$2488+2,___flmul@b+2
  9146  0007C6  C1A7  F01F         	movff	_powf$2488+3,___flmul@b+3
  9147  0007CA  0E60               	movlw	96
  9148  0007CC  6E20               	movwf	___flmul@a,c
  9149  0007CE  0E42               	movlw	66
  9150  0007D0  6E21               	movwf	___flmul@a+1,c
  9151  0007D2  0EA2               	movlw	162
  9152  0007D4  6E22               	movwf	___flmul@a+2,c
  9153  0007D6  0E0D               	movlw	13
  9154  0007D8  6E23               	movwf	___flmul@a+3,c
  9155  0007DA  ECA5  F01A         	call	___flmul	;wreg free
  9156  0007DE  C01C  F0A1         	movff	?___flmul,?_powf
  9157  0007E2  C01D  F0A2         	movff	?___flmul+1,?_powf+1
  9158  0007E6  C01E  F0A3         	movff	?___flmul+2,?_powf+2
  9159  0007EA  C01F  F0A4         	movff	?___flmul+3,?_powf+3
  9160  0007EE  0012               	return	
  9161  0007F0                     l8685:
  9162                           
  9163                           ; BSR set to: 1
  9164  0007F0  0ECA               	movlw	202
  9165  0007F2  6E20               	movwf	___flmul@a,c
  9166  0007F4  0EF2               	movlw	242
  9167  0007F6  6E21               	movwf	___flmul@a+1,c
  9168  0007F8  0E49               	movlw	73
  9169  0007FA  6E22               	movwf	___flmul@a+2,c
  9170  0007FC  0E71               	movlw	113
  9171  0007FE  6E23               	movwf	___flmul@a+3,c
  9172  000800  C184  F01C         	movff	powf@sn,___flmul@b
  9173  000804  C185  F01D         	movff	powf@sn+1,___flmul@b+1
  9174  000808  C186  F01E         	movff	powf@sn+2,___flmul@b+2
  9175  00080C  C187  F01F         	movff	powf@sn+3,___flmul@b+3
  9176  000810  ECA5  F01A         	call	___flmul	;wreg free
  9177  000814  C01C  F1A4         	movff	?___flmul,_powf$2488
  9178  000818  C01D  F1A5         	movff	?___flmul+1,_powf$2488+1
  9179  00081C  C01E  F1A6         	movff	?___flmul+2,_powf$2488+2
  9180  000820  C01F  F1A7         	movff	?___flmul+3,_powf$2488+3
  9181  000824  C1A4  F01C         	movff	_powf$2488,___flmul@b
  9182  000828  C1A5  F01D         	movff	_powf$2488+1,___flmul@b+1
  9183  00082C  C1A6  F01E         	movff	_powf$2488+2,___flmul@b+2
  9184  000830  C1A7  F01F         	movff	_powf$2488+3,___flmul@b+3
  9185  000834  0ECA               	movlw	202
  9186  000836  6E20               	movwf	___flmul@a,c
  9187  000838  0EF2               	movlw	242
  9188  00083A  6E21               	movwf	___flmul@a+1,c
  9189  00083C  0E49               	movlw	73
  9190  00083E  6E22               	movwf	___flmul@a+2,c
  9191  000840  0E71               	movlw	113
  9192  000842  6E23               	movwf	___flmul@a+3,c
  9193  000844  ECA5  F01A         	call	___flmul	;wreg free
  9194  000848  C01C  F0A1         	movff	?___flmul,?_powf
  9195  00084C  C01D  F0A2         	movff	?___flmul+1,?_powf+1
  9196  000850  C01E  F0A3         	movff	?___flmul+2,?_powf+2
  9197  000854  C01F  F0A4         	movff	?___flmul+3,?_powf+3
  9198  000858  0012               	return	
  9199  00085A                     l8689:
  9200                           
  9201                           ; BSR set to: 1
  9202  00085A  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  9203  00085C  D07D               	goto	l8699
  9204  00085E  0E08               	movlw	8
  9205  000860  5DA8               	subwf	powf@ix& (0+255),w,b
  9206  000862  0E00               	movlw	0
  9207  000864  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  9208  000866  0E80               	movlw	128
  9209  000868  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  9210  00086A  0E3F               	movlw	63
  9211  00086C  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  9212  00086E  A0D8               	btfss	status,0,c
  9213  000870  D073               	goto	l8699
  9214                           
  9215                           ; BSR set to: 1
  9216  000872  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  9217  000874  D007               	goto	u9660
  9218  000876  517F               	movf	(powf@hy+3)& (0+255),w,b
  9219  000878  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  9220  00087A  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  9221  00087C  E138               	bnz	l8695
  9222  00087E  057C               	decf	powf@hy& (0+255),w,b
  9223  000880  B0D8               	btfsc	status,0,c
  9224  000882  D035               	goto	l8695
  9225  000884                     u9660:
  9226                           
  9227                           ; BSR set to: 1
  9228  000884  0E60               	movlw	96
  9229  000886  6E20               	movwf	___flmul@a,c
  9230  000888  0E42               	movlw	66
  9231  00088A  6E21               	movwf	___flmul@a+1,c
  9232  00088C  0EA2               	movlw	162
  9233  00088E  6E22               	movwf	___flmul@a+2,c
  9234  000890  0E0D               	movlw	13
  9235  000892  6E23               	movwf	___flmul@a+3,c
  9236  000894  C184  F01C         	movff	powf@sn,___flmul@b
  9237  000898  C185  F01D         	movff	powf@sn+1,___flmul@b+1
  9238  00089C  C186  F01E         	movff	powf@sn+2,___flmul@b+2
  9239  0008A0  C187  F01F         	movff	powf@sn+3,___flmul@b+3
  9240  0008A4  ECA5  F01A         	call	___flmul	;wreg free
  9241  0008A8  C01C  F1A4         	movff	?___flmul,_powf$2488
  9242  0008AC  C01D  F1A5         	movff	?___flmul+1,_powf$2488+1
  9243  0008B0  C01E  F1A6         	movff	?___flmul+2,_powf$2488+2
  9244  0008B4  C01F  F1A7         	movff	?___flmul+3,_powf$2488+3
  9245  0008B8  C1A4  F01C         	movff	_powf$2488,___flmul@b
  9246  0008BC  C1A5  F01D         	movff	_powf$2488+1,___flmul@b+1
  9247  0008C0  C1A6  F01E         	movff	_powf$2488+2,___flmul@b+2
  9248  0008C4  C1A7  F01F         	movff	_powf$2488+3,___flmul@b+3
  9249  0008C8  0E60               	movlw	96
  9250  0008CA  6E20               	movwf	___flmul@a,c
  9251  0008CC  0E42               	movlw	66
  9252  0008CE  6E21               	movwf	___flmul@a+1,c
  9253  0008D0  0EA2               	movlw	162
  9254  0008D2  6E22               	movwf	___flmul@a+2,c
  9255  0008D4  0E0D               	movlw	13
  9256  0008D6  6E23               	movwf	___flmul@a+3,c
  9257  0008D8  ECA5  F01A         	call	___flmul	;wreg free
  9258  0008DC  C01C  F0A1         	movff	?___flmul,?_powf
  9259  0008E0  C01D  F0A2         	movff	?___flmul+1,?_powf+1
  9260  0008E4  C01E  F0A3         	movff	?___flmul+2,?_powf+2
  9261  0008E8  C01F  F0A4         	movff	?___flmul+3,?_powf+3
  9262  0008EC  0012               	return	
  9263  0008EE                     l8695:
  9264                           
  9265                           ; BSR set to: 1
  9266  0008EE  0ECA               	movlw	202
  9267  0008F0  6E20               	movwf	___flmul@a,c
  9268  0008F2  0EF2               	movlw	242
  9269  0008F4  6E21               	movwf	___flmul@a+1,c
  9270  0008F6  0E49               	movlw	73
  9271  0008F8  6E22               	movwf	___flmul@a+2,c
  9272  0008FA  0E71               	movlw	113
  9273  0008FC  6E23               	movwf	___flmul@a+3,c
  9274  0008FE  C184  F01C         	movff	powf@sn,___flmul@b
  9275  000902  C185  F01D         	movff	powf@sn+1,___flmul@b+1
  9276  000906  C186  F01E         	movff	powf@sn+2,___flmul@b+2
  9277  00090A  C187  F01F         	movff	powf@sn+3,___flmul@b+3
  9278  00090E  ECA5  F01A         	call	___flmul	;wreg free
  9279  000912  C01C  F1A4         	movff	?___flmul,_powf$2488
  9280  000916  C01D  F1A5         	movff	?___flmul+1,_powf$2488+1
  9281  00091A  C01E  F1A6         	movff	?___flmul+2,_powf$2488+2
  9282  00091E  C01F  F1A7         	movff	?___flmul+3,_powf$2488+3
  9283  000922  C1A4  F01C         	movff	_powf$2488,___flmul@b
  9284  000926  C1A5  F01D         	movff	_powf$2488+1,___flmul@b+1
  9285  00092A  C1A6  F01E         	movff	_powf$2488+2,___flmul@b+2
  9286  00092E  C1A7  F01F         	movff	_powf$2488+3,___flmul@b+3
  9287  000932  0ECA               	movlw	202
  9288  000934  6E20               	movwf	___flmul@a,c
  9289  000936  0EF2               	movlw	242
  9290  000938  6E21               	movwf	___flmul@a+1,c
  9291  00093A  0E49               	movlw	73
  9292  00093C  6E22               	movwf	___flmul@a+2,c
  9293  00093E  0E71               	movlw	113
  9294  000940  6E23               	movwf	___flmul@a+3,c
  9295  000942  ECA5  F01A         	call	___flmul	;wreg free
  9296  000946  C01C  F0A1         	movff	?___flmul,?_powf
  9297  00094A  C01D  F0A2         	movff	?___flmul+1,?_powf+1
  9298  00094E  C01E  F0A3         	movff	?___flmul+2,?_powf+2
  9299  000952  C01F  F0A4         	movff	?___flmul+3,?_powf+3
  9300  000956  0012               	return	
  9301  000958                     l8699:
  9302                           
  9303                           ; BSR set to: 1
  9304  000958  C170  F00C         	movff	powf@ax,___fladd@b
  9305  00095C  C171  F00D         	movff	powf@ax+1,___fladd@b+1
  9306  000960  C172  F00E         	movff	powf@ax+2,___fladd@b+2
  9307  000964  C173  F00F         	movff	powf@ax+3,___fladd@b+3
  9308  000968  0E00               	movlw	0
  9309  00096A  6E10               	movwf	___fladd@a,c
  9310  00096C  0E00               	movlw	0
  9311  00096E  6E11               	movwf	___fladd@a+1,c
  9312  000970  0E80               	movlw	128
  9313  000972  6E12               	movwf	___fladd@a+2,c
  9314  000974  0EBF               	movlw	191
  9315  000976  6E13               	movwf	___fladd@a+3,c
  9316  000978  EC4E  F01C         	call	___fladd	;wreg free
  9317  00097C  C00C  F1B0         	movff	?___fladd,powf@t
  9318  000980  C00D  F1B1         	movff	?___fladd+1,powf@t+1
  9319  000984  C00E  F1B2         	movff	?___fladd+2,powf@t+2
  9320  000988  C00F  F1B3         	movff	?___fladd+3,powf@t+3
  9321  00098C  0E00               	movlw	0
  9322  00098E  6E20               	movwf	___flmul@a,c
  9323  000990  0E00               	movlw	0
  9324  000992  6E21               	movwf	___flmul@a+1,c
  9325  000994  0E80               	movlw	128
  9326  000996  6E22               	movwf	___flmul@a+2,c
  9327  000998  0E3E               	movlw	62
  9328  00099A  6E23               	movwf	___flmul@a+3,c
  9329  00099C  C1B0  F01C         	movff	powf@t,___flmul@b
  9330  0009A0  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
  9331  0009A4  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
  9332  0009A8  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
  9333  0009AC  ECA5  F01A         	call	___flmul	;wreg free
  9334  0009B0  C01C  F064         	movff	?___flmul,___flsub@a
  9335  0009B4  C01D  F065         	movff	?___flmul+1,___flsub@a+1
  9336  0009B8  C01E  F066         	movff	?___flmul+2,___flsub@a+2
  9337  0009BC  C01F  F067         	movff	?___flmul+3,___flsub@a+3
  9338  0009C0  0EAB               	movlw	171
  9339  0009C2  0100               	movlb	0	; () banked
  9340  0009C4  6F60               	movwf	___flsub@b& (0+255),b
  9341  0009C6  0EAA               	movlw	170
  9342  0009C8  6F61               	movwf	(___flsub@b+1)& (0+255),b
  9343  0009CA  0EAA               	movlw	170
  9344  0009CC  6F62               	movwf	(___flsub@b+2)& (0+255),b
  9345  0009CE  0E3E               	movlw	62
  9346  0009D0  6F63               	movwf	(___flsub@b+3)& (0+255),b
  9347  0009D2  EC69  F02A         	call	___flsub	;wreg free
  9348  0009D6  C060  F1A4         	movff	?___flsub,_powf$2488
  9349  0009DA  C061  F1A5         	movff	?___flsub+1,_powf$2488+1
  9350  0009DE  C062  F1A6         	movff	?___flsub+2,_powf$2488+2
  9351  0009E2  C063  F1A7         	movff	?___flsub+3,_powf$2488+3
  9352  0009E6  C1B0  F020         	movff	powf@t,___flmul@a
  9353  0009EA  C1B1  F021         	movff	powf@t+1,___flmul@a+1
  9354  0009EE  C1B2  F022         	movff	powf@t+2,___flmul@a+2
  9355  0009F2  C1B3  F023         	movff	powf@t+3,___flmul@a+3
  9356  0009F6  C1B0  F01C         	movff	powf@t,___flmul@b
  9357  0009FA  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
  9358  0009FE  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
  9359  000A02  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
  9360  000A06  ECA5  F01A         	call	___flmul	;wreg free
  9361  000A0A  C01C  F158         	movff	?___flmul,_powf$2489
  9362  000A0E  C01D  F159         	movff	?___flmul+1,_powf$2489+1
  9363  000A12  C01E  F15A         	movff	?___flmul+2,_powf$2489+2
  9364  000A16  C01F  F15B         	movff	?___flmul+3,_powf$2489+3
  9365  000A1A  C1B0  F020         	movff	powf@t,___flmul@a
  9366  000A1E  C1B1  F021         	movff	powf@t+1,___flmul@a+1
  9367  000A22  C1B2  F022         	movff	powf@t+2,___flmul@a+2
  9368  000A26  C1B3  F023         	movff	powf@t+3,___flmul@a+3
  9369  000A2A  C1A4  F01C         	movff	_powf$2488,___flmul@b
  9370  000A2E  C1A5  F01D         	movff	_powf$2488+1,___flmul@b+1
  9371  000A32  C1A6  F01E         	movff	_powf$2488+2,___flmul@b+2
  9372  000A36  C1A7  F01F         	movff	_powf$2488+3,___flmul@b+3
  9373  000A3A  ECA5  F01A         	call	___flmul	;wreg free
  9374  000A3E  C01C  F064         	movff	?___flmul,___flsub@a
  9375  000A42  C01D  F065         	movff	?___flmul+1,___flsub@a+1
  9376  000A46  C01E  F066         	movff	?___flmul+2,___flsub@a+2
  9377  000A4A  C01F  F067         	movff	?___flmul+3,___flsub@a+3
  9378  000A4E  0E00               	movlw	0
  9379  000A50  0100               	movlb	0	; () banked
  9380  000A52  6F60               	movwf	___flsub@b& (0+255),b
  9381  000A54  0E00               	movlw	0
  9382  000A56  6F61               	movwf	(___flsub@b+1)& (0+255),b
  9383  000A58  0E00               	movlw	0
  9384  000A5A  6F62               	movwf	(___flsub@b+2)& (0+255),b
  9385  000A5C  0E3F               	movlw	63
  9386  000A5E  6F63               	movwf	(___flsub@b+3)& (0+255),b
  9387  000A60  EC69  F02A         	call	___flsub	;wreg free
  9388  000A64  C060  F148         	movff	?___flsub,_powf$2490
  9389  000A68  C061  F149         	movff	?___flsub+1,_powf$2490+1
  9390  000A6C  C062  F14A         	movff	?___flsub+2,_powf$2490+2
  9391  000A70  C063  F14B         	movff	?___flsub+3,_powf$2490+3
  9392  000A74  C158  F01C         	movff	_powf$2489,___flmul@b
  9393  000A78  C159  F01D         	movff	_powf$2489+1,___flmul@b+1
  9394  000A7C  C15A  F01E         	movff	_powf$2489+2,___flmul@b+2
  9395  000A80  C15B  F01F         	movff	_powf$2489+3,___flmul@b+3
  9396  000A84  C148  F020         	movff	_powf$2490,___flmul@a
  9397  000A88  C149  F021         	movff	_powf$2490+1,___flmul@a+1
  9398  000A8C  C14A  F022         	movff	_powf$2490+2,___flmul@a+2
  9399  000A90  C14B  F023         	movff	_powf$2490+3,___flmul@a+3
  9400  000A94  ECA5  F01A         	call	___flmul	;wreg free
  9401  000A98  C01C  F144         	movff	?___flmul,powf@w
  9402  000A9C  C01D  F145         	movff	?___flmul+1,powf@w+1
  9403  000AA0  C01E  F146         	movff	?___flmul+2,powf@w+2
  9404  000AA4  C01F  F147         	movff	?___flmul+3,powf@w+3
  9405  000AA8  C1B0  F01C         	movff	powf@t,___flmul@b
  9406  000AAC  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
  9407  000AB0  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
  9408  000AB4  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
  9409  000AB8  0E00               	movlw	0
  9410  000ABA  6E20               	movwf	___flmul@a,c
  9411  000ABC  0EAA               	movlw	170
  9412  000ABE  6E21               	movwf	___flmul@a+1,c
  9413  000AC0  0EB8               	movlw	184
  9414  000AC2  6E22               	movwf	___flmul@a+2,c
  9415  000AC4  0E3F               	movlw	63
  9416  000AC6  6E23               	movwf	___flmul@a+3,c
  9417  000AC8  ECA5  F01A         	call	___flmul	;wreg free
  9418  000ACC  C01C  F174         	movff	?___flmul,powf@u
  9419  000AD0  C01D  F175         	movff	?___flmul+1,powf@u+1
  9420  000AD4  C01E  F176         	movff	?___flmul+2,powf@u+2
  9421  000AD8  C01F  F177         	movff	?___flmul+3,powf@u+3
  9422  000ADC  0E70               	movlw	112
  9423  000ADE  6E20               	movwf	___flmul@a,c
  9424  000AE0  0EA5               	movlw	165
  9425  000AE2  6E21               	movwf	___flmul@a+1,c
  9426  000AE4  0EEC               	movlw	236
  9427  000AE6  6E22               	movwf	___flmul@a+2,c
  9428  000AE8  0E36               	movlw	54
  9429  000AEA  6E23               	movwf	___flmul@a+3,c
  9430  000AEC  C1B0  F01C         	movff	powf@t,___flmul@b
  9431  000AF0  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
  9432  000AF4  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
  9433  000AF8  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
  9434  000AFC  ECA5  F01A         	call	___flmul	;wreg free
  9435  000B00  C01C  F060         	movff	?___flmul,___flsub@b
  9436  000B04  C01D  F061         	movff	?___flmul+1,___flsub@b+1
  9437  000B08  C01E  F062         	movff	?___flmul+2,___flsub@b+2
  9438  000B0C  C01F  F063         	movff	?___flmul+3,___flsub@b+3
  9439  000B10  0E3B               	movlw	59
  9440  000B12  6E20               	movwf	___flmul@a,c
  9441  000B14  0EAA               	movlw	170
  9442  000B16  6E21               	movwf	___flmul@a+1,c
  9443  000B18  0EB8               	movlw	184
  9444  000B1A  6E22               	movwf	___flmul@a+2,c
  9445  000B1C  0E3F               	movlw	63
  9446  000B1E  6E23               	movwf	___flmul@a+3,c
  9447  000B20  C144  F01C         	movff	powf@w,___flmul@b
  9448  000B24  C145  F01D         	movff	powf@w+1,___flmul@b+1
  9449  000B28  C146  F01E         	movff	powf@w+2,___flmul@b+2
  9450  000B2C  C147  F01F         	movff	powf@w+3,___flmul@b+3
  9451  000B30  ECA5  F01A         	call	___flmul	;wreg free
  9452  000B34  C01C  F064         	movff	?___flmul,___flsub@a
  9453  000B38  C01D  F065         	movff	?___flmul+1,___flsub@a+1
  9454  000B3C  C01E  F066         	movff	?___flmul+2,___flsub@a+2
  9455  000B40  C01F  F067         	movff	?___flmul+3,___flsub@a+3
  9456  000B44  EC69  F02A         	call	___flsub	;wreg free
  9457  000B48  C060  F178         	movff	?___flsub,powf@v
  9458  000B4C  C061  F179         	movff	?___flsub+1,powf@v+1
  9459  000B50  C062  F17A         	movff	?___flsub+2,powf@v+2
  9460  000B54  C063  F17B         	movff	?___flsub+3,powf@v+3
  9461  000B58  C174  F00C         	movff	powf@u,___fladd@b
  9462  000B5C  C175  F00D         	movff	powf@u+1,___fladd@b+1
  9463  000B60  C176  F00E         	movff	powf@u+2,___fladd@b+2
  9464  000B64  C177  F00F         	movff	powf@u+3,___fladd@b+3
  9465  000B68  C178  F010         	movff	powf@v,___fladd@a
  9466  000B6C  C179  F011         	movff	powf@v+1,___fladd@a+1
  9467  000B70  C17A  F012         	movff	powf@v+2,___fladd@a+2
  9468  000B74  C17B  F013         	movff	powf@v+3,___fladd@a+3
  9469  000B78  EC4E  F01C         	call	___fladd	;wreg free
  9470  000B7C  C00C  F180         	movff	?___fladd,powf@t1
  9471  000B80  C00D  F181         	movff	?___fladd+1,powf@t1+1
  9472  000B84  C00E  F182         	movff	?___fladd+2,powf@t1+2
  9473  000B88  C00F  F183         	movff	?___fladd+3,powf@t1+3
  9474  000B8C  C180  F1B8         	movff	powf@t1,powf@__xc8_float_word
  9475  000B90  C181  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
  9476  000B94  C182  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
  9477  000B98  C183  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
  9478  000B9C  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  9479  000BA0  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  9480  000BA4  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  9481  000BA8  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  9482  000BAC  0E00               	movlw	0
  9483  000BAE  0101               	movlb	1	; () banked
  9484  000BB0  1594               	andwf	powf@is& (0+255),w,b
  9485  000BB2  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  9486  000BB4  0EF0               	movlw	240
  9487  000BB6  1595               	andwf	(powf@is+1)& (0+255),w,b
  9488  000BB8  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  9489  000BBA  0EFF               	movlw	255
  9490  000BBC  1596               	andwf	(powf@is+2)& (0+255),w,b
  9491  000BBE  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  9492  000BC0  0EFF               	movlw	255
  9493  000BC2  1597               	andwf	(powf@is+3)& (0+255),w,b
  9494  000BC4  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  9495                           
  9496                           ; BSR set to: 1
  9497  000BC6  C1B8  F180         	movff	powf@__xc8_float_word,powf@t1
  9498  000BCA  C1B9  F181         	movff	powf@__xc8_float_word+1,powf@t1+1
  9499  000BCE  C1BA  F182         	movff	powf@__xc8_float_word+2,powf@t1+2
  9500  000BD2  C1BB  F183         	movff	powf@__xc8_float_word+3,powf@t1+3
  9501                           
  9502                           ; BSR set to: 1
  9503  000BD6  C174  F064         	movff	powf@u,___flsub@a
  9504  000BDA  C175  F065         	movff	powf@u+1,___flsub@a+1
  9505  000BDE  C176  F066         	movff	powf@u+2,___flsub@a+2
  9506  000BE2  C177  F067         	movff	powf@u+3,___flsub@a+3
  9507  000BE6  C180  F060         	movff	powf@t1,___flsub@b
  9508  000BEA  C181  F061         	movff	powf@t1+1,___flsub@b+1
  9509  000BEE  C182  F062         	movff	powf@t1+2,___flsub@b+2
  9510  000BF2  C183  F063         	movff	powf@t1+3,___flsub@b+3
  9511  000BF6  EC69  F02A         	call	___flsub	;wreg free
  9512  000BFA  C060  F198         	movff	?___flsub,_powf$2491
  9513  000BFE  C061  F199         	movff	?___flsub+1,_powf$2491+1
  9514  000C02  C062  F19A         	movff	?___flsub+2,_powf$2491+2
  9515  000C06  C063  F19B         	movff	?___flsub+3,_powf$2491+3
  9516  000C0A  C178  F060         	movff	powf@v,___flsub@b
  9517  000C0E  C179  F061         	movff	powf@v+1,___flsub@b+1
  9518  000C12  C17A  F062         	movff	powf@v+2,___flsub@b+2
  9519  000C16  C17B  F063         	movff	powf@v+3,___flsub@b+3
  9520  000C1A  C198  F064         	movff	_powf$2491,___flsub@a
  9521  000C1E  C199  F065         	movff	_powf$2491+1,___flsub@a+1
  9522  000C22  C19A  F066         	movff	_powf$2491+2,___flsub@a+2
  9523  000C26  C19B  F067         	movff	_powf$2491+3,___flsub@a+3
  9524  000C2A  EC69  F02A         	call	___flsub	;wreg free
  9525  000C2E  EF60  F00D         	goto	L4
  9526  000C32                     l8725:
  9527                           
  9528                           ; BSR set to: 1
  9529  000C32  0E00               	movlw	0
  9530  000C34  6F88               	movwf	powf@n& (0+255),b
  9531  000C36  0E00               	movlw	0
  9532  000C38  6F89               	movwf	(powf@n+1)& (0+255),b
  9533  000C3A  0E00               	movlw	0
  9534  000C3C  6F8A               	movwf	(powf@n+2)& (0+255),b
  9535  000C3E  0E00               	movlw	0
  9536  000C40  6F8B               	movwf	(powf@n+3)& (0+255),b
  9537                           
  9538                           ; BSR set to: 1
  9539  000C42  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  9540  000C44  D006               	goto	u9670
  9541  000C46  51AB               	movf	(powf@ix+3)& (0+255),w,b
  9542  000C48  E137               	bnz	l8737
  9543  000C4A  0E80               	movlw	128
  9544  000C4C  5DAA               	subwf	(powf@ix+2)& (0+255),w,b
  9545  000C4E  B0D8               	btfsc	status,0,c
  9546  000C50  D033               	goto	l8737
  9547  000C52                     u9670:
  9548                           
  9549                           ; BSR set to: 1
  9550  000C52  C170  F01C         	movff	powf@ax,___flmul@b
  9551  000C56  C171  F01D         	movff	powf@ax+1,___flmul@b+1
  9552  000C5A  C172  F01E         	movff	powf@ax+2,___flmul@b+2
  9553  000C5E  C173  F01F         	movff	powf@ax+3,___flmul@b+3
  9554  000C62  0E00               	movlw	0
  9555  000C64  6E20               	movwf	___flmul@a,c
  9556  000C66  0E00               	movlw	0
  9557  000C68  6E21               	movwf	___flmul@a+1,c
  9558  000C6A  0E80               	movlw	128
  9559  000C6C  6E22               	movwf	___flmul@a+2,c
  9560  000C6E  0E4B               	movlw	75
  9561  000C70  6E23               	movwf	___flmul@a+3,c
  9562  000C72  ECA5  F01A         	call	___flmul	;wreg free
  9563  000C76  C01C  F170         	movff	?___flmul,powf@ax
  9564  000C7A  C01D  F171         	movff	?___flmul+1,powf@ax+1
  9565  000C7E  C01E  F172         	movff	?___flmul+2,powf@ax+2
  9566  000C82  C01F  F173         	movff	?___flmul+3,powf@ax+3
  9567  000C86  0EE8               	movlw	232
  9568  000C88  0101               	movlb	1	; () banked
  9569  000C8A  2788               	addwf	powf@n& (0+255),f,b
  9570  000C8C  0EFF               	movlw	255
  9571  000C8E  2389               	addwfc	(powf@n+1)& (0+255),f,b
  9572  000C90  0EFF               	movlw	255
  9573  000C92  238A               	addwfc	(powf@n+2)& (0+255),f,b
  9574  000C94  0EFF               	movlw	255
  9575  000C96  238B               	addwfc	(powf@n+3)& (0+255),f,b
  9576                           
  9577                           ; BSR set to: 1
  9578  000C98  C170  F1B8         	movff	powf@ax,powf@__xc8_float_word
  9579  000C9C  C171  F1B9         	movff	powf@ax+1,powf@__xc8_float_word+1
  9580  000CA0  C172  F1BA         	movff	powf@ax+2,powf@__xc8_float_word+2
  9581  000CA4  C173  F1BB         	movff	powf@ax+3,powf@__xc8_float_word+3
  9582                           
  9583                           ; BSR set to: 1
  9584  000CA8  C1B8  F1A8         	movff	powf@__xc8_float_word,powf@ix
  9585  000CAC  C1B9  F1A9         	movff	powf@__xc8_float_word+1,powf@ix+1
  9586  000CB0  C1BA  F1AA         	movff	powf@__xc8_float_word+2,powf@ix+2
  9587  000CB4  C1BB  F1AB         	movff	powf@__xc8_float_word+3,powf@ix+3
  9588  000CB8                     l8737:
  9589                           
  9590                           ; BSR set to: 1
  9591  000CB8  0E17               	movlw	23
  9592  000CBA  0100               	movlb	0	; () banked
  9593  000CBC  6FA9               	movwf	??_powf& (0+255),b
  9594  000CBE  C1A8  F0AA         	movff	powf@ix,??_powf+1
  9595  000CC2  C1A9  F0AB         	movff	powf@ix+1,??_powf+2
  9596  000CC6  C1AA  F0AC         	movff	powf@ix+2,??_powf+3
  9597  000CCA  C1AB  F0AD         	movff	powf@ix+3,??_powf+4
  9598  000CCE                     u9685:
  9599  000CCE  67A9               	tstfsz	??_powf& (0+255),b
  9600  000CD0  D001               	goto	u9686
  9601  000CD2  D007               	goto	u9687
  9602  000CD4                     u9686:
  9603  000CD4  35AD               	rlcf	(??_powf+4)& (0+255),w,b
  9604  000CD6  33AD               	rrcf	(??_powf+4)& (0+255),f,b
  9605  000CD8  33AC               	rrcf	(??_powf+3)& (0+255),f,b
  9606  000CDA  33AB               	rrcf	(??_powf+2)& (0+255),f,b
  9607  000CDC  33AA               	rrcf	(??_powf+1)& (0+255),f,b
  9608  000CDE  2FA9               	decfsz	??_powf& (0+255),f,b
  9609  000CE0  D7F6               	goto	u9685
  9610  000CE2                     u9687:
  9611  000CE2  0E81               	movlw	129
  9612  000CE4  0100               	movlb	0	; () banked
  9613  000CE6  25AA               	addwf	(??_powf+1)& (0+255),w,b
  9614  000CE8  6FAE               	movwf	(??_powf+5)& (0+255),b
  9615  000CEA  0EFF               	movlw	255
  9616  000CEC  21AB               	addwfc	(??_powf+2)& (0+255),w,b
  9617  000CEE  6FAF               	movwf	(??_powf+6)& (0+255),b
  9618  000CF0  0EFF               	movlw	255
  9619  000CF2  21AC               	addwfc	(??_powf+3)& (0+255),w,b
  9620  000CF4  6FB0               	movwf	(??_powf+7)& (0+255),b
  9621  000CF6  0EFF               	movlw	255
  9622  000CF8  21AD               	addwfc	(??_powf+4)& (0+255),w,b
  9623  000CFA  6FB1               	movwf	(??_powf+8)& (0+255),b
  9624  000CFC  51AE               	movf	(??_powf+5)& (0+255),w,b
  9625  000CFE  0101               	movlb	1	; () banked
  9626  000D00  2788               	addwf	powf@n& (0+255),f,b
  9627  000D02  0100               	movlb	0	; () banked
  9628  000D04  51AF               	movf	(??_powf+6)& (0+255),w,b
  9629  000D06  0101               	movlb	1	; () banked
  9630  000D08  2389               	addwfc	(powf@n+1)& (0+255),f,b
  9631  000D0A  0100               	movlb	0	; () banked
  9632  000D0C  51B0               	movf	(??_powf+7)& (0+255),w,b
  9633  000D0E  0101               	movlb	1	; () banked
  9634  000D10  238A               	addwfc	(powf@n+2)& (0+255),f,b
  9635  000D12  0100               	movlb	0	; () banked
  9636  000D14  51B1               	movf	(??_powf+8)& (0+255),w,b
  9637  000D16  0101               	movlb	1	; () banked
  9638  000D18  238B               	addwfc	(powf@n+3)& (0+255),f,b
  9639                           
  9640                           ; BSR set to: 1
  9641  000D1A  0EFF               	movlw	255
  9642  000D1C  15A8               	andwf	powf@ix& (0+255),w,b
  9643  000D1E  6FAC               	movwf	powf@j& (0+255),b
  9644  000D20  0EFF               	movlw	255
  9645  000D22  15A9               	andwf	(powf@ix+1)& (0+255),w,b
  9646  000D24  6FAD               	movwf	(powf@j+1)& (0+255),b
  9647  000D26  0E7F               	movlw	127
  9648  000D28  15AA               	andwf	(powf@ix+2)& (0+255),w,b
  9649  000D2A  6FAE               	movwf	(powf@j+2)& (0+255),b
  9650  000D2C  0E00               	movlw	0
  9651  000D2E  15AB               	andwf	(powf@ix+3)& (0+255),w,b
  9652  000D30  6FAF               	movwf	(powf@j+3)& (0+255),b
  9653                           
  9654                           ; BSR set to: 1
  9655  000D32  0E00               	movlw	0
  9656  000D34  11AC               	iorwf	powf@j& (0+255),w,b
  9657  000D36  6FA8               	movwf	powf@ix& (0+255),b
  9658  000D38  0E00               	movlw	0
  9659  000D3A  11AD               	iorwf	(powf@j+1)& (0+255),w,b
  9660  000D3C  6FA9               	movwf	(powf@ix+1)& (0+255),b
  9661  000D3E  0E80               	movlw	128
  9662  000D40  11AE               	iorwf	(powf@j+2)& (0+255),w,b
  9663  000D42  6FAA               	movwf	(powf@ix+2)& (0+255),b
  9664  000D44  0E3F               	movlw	63
  9665  000D46  11AF               	iorwf	(powf@j+3)& (0+255),w,b
  9666  000D48  6FAB               	movwf	(powf@ix+3)& (0+255),b
  9667                           
  9668                           ; BSR set to: 1
  9669  000D4A  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  9670  000D4C  D00A               	goto	u9690
  9671  000D4E  51AF               	movf	(powf@j+3)& (0+255),w,b
  9672  000D50  E10A               	bnz	l8747
  9673  000D52  0E72               	movlw	114
  9674  000D54  5DAC               	subwf	powf@j& (0+255),w,b
  9675  000D56  0EC4               	movlw	196
  9676  000D58  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  9677  000D5A  0E1C               	movlw	28
  9678  000D5C  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  9679  000D5E  B0D8               	btfsc	status,0,c
  9680  000D60  D002               	goto	l8747
  9681  000D62                     u9690:
  9682                           
  9683                           ; BSR set to: 1
  9684  000D62  0E00               	movlw	0
  9685  000D64  D00D               	goto	L5
  9686  000D66                     l8747:
  9687                           
  9688                           ; BSR set to: 1
  9689  000D66  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  9690  000D68  D00A               	goto	u9700
  9691  000D6A  51AF               	movf	(powf@j+3)& (0+255),w,b
  9692  000D6C  E111               	bnz	l8751
  9693  000D6E  0ED7               	movlw	215
  9694  000D70  5DAC               	subwf	powf@j& (0+255),w,b
  9695  000D72  0EB3               	movlw	179
  9696  000D74  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  9697  000D76  0E5D               	movlw	93
  9698  000D78  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  9699  000D7A  B0D8               	btfsc	status,0,c
  9700  000D7C  D009               	goto	l8751
  9701  000D7E                     u9700:
  9702                           
  9703                           ; BSR set to: 1
  9704  000D7E  0E01               	movlw	1
  9705  000D80                     L5:
  9706  000D80  6FA0               	movwf	powf@k& (0+255),b
  9707  000D82  0E00               	movlw	0
  9708  000D84  6FA1               	movwf	(powf@k+1)& (0+255),b
  9709  000D86  0E00               	movlw	0
  9710  000D88  6FA2               	movwf	(powf@k+2)& (0+255),b
  9711  000D8A  0E00               	movlw	0
  9712  000D8C  6FA3               	movwf	(powf@k+3)& (0+255),b
  9713  000D8E  D016               	goto	l8757
  9714  000D90                     l8751:
  9715                           
  9716                           ; BSR set to: 1
  9717  000D90  0E00               	movlw	0
  9718  000D92  6FA0               	movwf	powf@k& (0+255),b
  9719  000D94  0E00               	movlw	0
  9720  000D96  6FA1               	movwf	(powf@k+1)& (0+255),b
  9721  000D98  0E00               	movlw	0
  9722  000D9A  6FA2               	movwf	(powf@k+2)& (0+255),b
  9723  000D9C  0E00               	movlw	0
  9724  000D9E  6FA3               	movwf	(powf@k+3)& (0+255),b
  9725                           
  9726                           ; BSR set to: 1
  9727  000DA0  0E01               	movlw	1
  9728  000DA2  2788               	addwf	powf@n& (0+255),f,b
  9729  000DA4  0E00               	movlw	0
  9730  000DA6  2389               	addwfc	(powf@n+1)& (0+255),f,b
  9731  000DA8  238A               	addwfc	(powf@n+2)& (0+255),f,b
  9732  000DAA  238B               	addwfc	(powf@n+3)& (0+255),f,b
  9733                           
  9734                           ; BSR set to: 1
  9735  000DAC  0E00               	movlw	0
  9736  000DAE  27A8               	addwf	powf@ix& (0+255),f,b
  9737  000DB0  0E00               	movlw	0
  9738  000DB2  23A9               	addwfc	(powf@ix+1)& (0+255),f,b
  9739  000DB4  0E80               	movlw	128
  9740  000DB6  23AA               	addwfc	(powf@ix+2)& (0+255),f,b
  9741  000DB8  0EFF               	movlw	255
  9742  000DBA  23AB               	addwfc	(powf@ix+3)& (0+255),f,b
  9743  000DBC                     l8757:
  9744                           
  9745                           ; BSR set to: 1
  9746  000DBC  C1A8  F1B8         	movff	powf@ix,powf@__xc8_float_word
  9747  000DC0  C1A9  F1B9         	movff	powf@ix+1,powf@__xc8_float_word+1
  9748  000DC4  C1AA  F1BA         	movff	powf@ix+2,powf@__xc8_float_word+2
  9749  000DC8  C1AB  F1BB         	movff	powf@ix+3,powf@__xc8_float_word+3
  9750                           
  9751                           ; BSR set to: 1
  9752  000DCC  C1B8  F170         	movff	powf@__xc8_float_word,powf@ax
  9753  000DD0  C1B9  F171         	movff	powf@__xc8_float_word+1,powf@ax+1
  9754  000DD4  C1BA  F172         	movff	powf@__xc8_float_word+2,powf@ax+2
  9755  000DD8  C1BB  F173         	movff	powf@__xc8_float_word+3,powf@ax+3
  9756                           
  9757                           ; BSR set to: 1
  9758  000DDC  C170  F060         	movff	powf@ax,___flsub@b
  9759  000DE0  C171  F061         	movff	powf@ax+1,___flsub@b+1
  9760  000DE4  C172  F062         	movff	powf@ax+2,___flsub@b+2
  9761  000DE8  C173  F063         	movff	powf@ax+3,___flsub@b+3
  9762  000DEC  C1A0  F0A9         	movff	powf@k,??_powf
  9763  000DF0  C1A1  F0AA         	movff	powf@k+1,??_powf+1
  9764  000DF4  0100               	movlb	0	; () banked
  9765  000DF6  90D8               	bcf	status,0,c
  9766  000DF8  37A9               	rlcf	??_powf& (0+255),f,b
  9767  000DFA  37AA               	rlcf	(??_powf+1)& (0+255),f,b
  9768  000DFC  90D8               	bcf	status,0,c
  9769  000DFE  37A9               	rlcf	??_powf& (0+255),f,b
  9770  000E00  37AA               	rlcf	(??_powf+1)& (0+255),f,b
  9771  000E02  0EED               	movlw	low _bp
  9772  000E04  25A9               	addwf	??_powf& (0+255),w,b
  9773  000E06  6EF6               	movwf	tblptrl,c
  9774  000E08  0E7D               	movlw	high _bp
  9775  000E0A  21AA               	addwfc	(??_powf+1)& (0+255),w,b
  9776  000E0C  6EF7               	movwf	tblptrh,c
  9777  000E0E                     	if	0	;There are less than 3 active tblptr bytes
  9778  000E0E                     	endif
  9779  000E0E  0009               	tblrd		*+
  9780  000E10  CFF5 F064          	movff	tablat,___flsub@a
  9781  000E14  0009               	tblrd		*+
  9782  000E16  CFF5 F065          	movff	tablat,___flsub@a+1
  9783  000E1A  0009               	tblrd		*+
  9784  000E1C  CFF5 F066          	movff	tablat,___flsub@a+2
  9785  000E20  000A               	tblrd		*-
  9786  000E22  CFF5 F067          	movff	tablat,___flsub@a+3
  9787  000E26  EC69  F02A         	call	___flsub	;wreg free
  9788  000E2A  C060  F174         	movff	?___flsub,powf@u
  9789  000E2E  C061  F175         	movff	?___flsub+1,powf@u+1
  9790  000E32  C062  F176         	movff	?___flsub+2,powf@u+2
  9791  000E36  C063  F177         	movff	?___flsub+3,powf@u+3
  9792  000E3A  0E00               	movlw	0
  9793  000E3C  0100               	movlb	0	; () banked
  9794  000E3E  6F68               	movwf	___fldiv@b& (0+255),b
  9795  000E40  0E00               	movlw	0
  9796  000E42  6F69               	movwf	(___fldiv@b+1)& (0+255),b
  9797  000E44  0E80               	movlw	128
  9798  000E46  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
  9799  000E48  0E3F               	movlw	63
  9800  000E4A  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
  9801  000E4C  C170  F010         	movff	powf@ax,___fladd@a
  9802  000E50  C171  F011         	movff	powf@ax+1,___fladd@a+1
  9803  000E54  C172  F012         	movff	powf@ax+2,___fladd@a+2
  9804  000E58  C173  F013         	movff	powf@ax+3,___fladd@a+3
  9805  000E5C  C1A0  F0A9         	movff	powf@k,??_powf
  9806  000E60  C1A1  F0AA         	movff	powf@k+1,??_powf+1
  9807  000E64  90D8               	bcf	status,0,c
  9808  000E66  37A9               	rlcf	??_powf& (0+255),f,b
  9809  000E68  37AA               	rlcf	(??_powf+1)& (0+255),f,b
  9810  000E6A  90D8               	bcf	status,0,c
  9811  000E6C  37A9               	rlcf	??_powf& (0+255),f,b
  9812  000E6E  37AA               	rlcf	(??_powf+1)& (0+255),f,b
  9813  000E70  0EED               	movlw	low _bp
  9814  000E72  25A9               	addwf	??_powf& (0+255),w,b
  9815  000E74  6EF6               	movwf	tblptrl,c
  9816  000E76  0E7D               	movlw	high _bp
  9817  000E78  21AA               	addwfc	(??_powf+1)& (0+255),w,b
  9818  000E7A  6EF7               	movwf	tblptrh,c
  9819  000E7C                     	if	0	;There are less than 3 active tblptr bytes
  9820  000E7C                     	endif
  9821  000E7C  0009               	tblrd		*+
  9822  000E7E  CFF5 F00C          	movff	tablat,___fladd@b
  9823  000E82  0009               	tblrd		*+
  9824  000E84  CFF5 F00D          	movff	tablat,___fladd@b+1
  9825  000E88  0009               	tblrd		*+
  9826  000E8A  CFF5 F00E          	movff	tablat,___fladd@b+2
  9827  000E8E  000A               	tblrd		*-
  9828  000E90  CFF5 F00F          	movff	tablat,___fladd@b+3
  9829  000E94  EC4E  F01C         	call	___fladd	;wreg free
  9830  000E98  C00C  F06C         	movff	?___fladd,___fldiv@a
  9831  000E9C  C00D  F06D         	movff	?___fladd+1,___fldiv@a+1
  9832  000EA0  C00E  F06E         	movff	?___fladd+2,___fldiv@a+2
  9833  000EA4  C00F  F06F         	movff	?___fladd+3,___fldiv@a+3
  9834  000EA8  ECD4  F01D         	call	___fldiv	;wreg free
  9835  000EAC  C068  F178         	movff	?___fldiv,powf@v
  9836  000EB0  C069  F179         	movff	?___fldiv+1,powf@v+1
  9837  000EB4  C06A  F17A         	movff	?___fldiv+2,powf@v+2
  9838  000EB8  C06B  F17B         	movff	?___fldiv+3,powf@v+3
  9839  000EBC  C174  F01C         	movff	powf@u,___flmul@b
  9840  000EC0  C175  F01D         	movff	powf@u+1,___flmul@b+1
  9841  000EC4  C176  F01E         	movff	powf@u+2,___flmul@b+2
  9842  000EC8  C177  F01F         	movff	powf@u+3,___flmul@b+3
  9843  000ECC  C178  F020         	movff	powf@v,___flmul@a
  9844  000ED0  C179  F021         	movff	powf@v+1,___flmul@a+1
  9845  000ED4  C17A  F022         	movff	powf@v+2,___flmul@a+2
  9846  000ED8  C17B  F023         	movff	powf@v+3,___flmul@a+3
  9847  000EDC  ECA5  F01A         	call	___flmul	;wreg free
  9848  000EE0  C01C  F154         	movff	?___flmul,powf@s
  9849  000EE4  C01D  F155         	movff	?___flmul+1,powf@s+1
  9850  000EE8  C01E  F156         	movff	?___flmul+2,powf@s+2
  9851  000EEC  C01F  F157         	movff	?___flmul+3,powf@s+3
  9852  000EF0  C154  F16C         	movff	powf@s,powf@s_h
  9853  000EF4  C155  F16D         	movff	powf@s+1,powf@s_h+1
  9854  000EF8  C156  F16E         	movff	powf@s+2,powf@s_h+2
  9855  000EFC  C157  F16F         	movff	powf@s+3,powf@s_h+3
  9856  000F00  C16C  F1B8         	movff	powf@s_h,powf@__xc8_float_word
  9857  000F04  C16D  F1B9         	movff	powf@s_h+1,powf@__xc8_float_word+1
  9858  000F08  C16E  F1BA         	movff	powf@s_h+2,powf@__xc8_float_word+2
  9859  000F0C  C16F  F1BB         	movff	powf@s_h+3,powf@__xc8_float_word+3
  9860  000F10  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  9861  000F14  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  9862  000F18  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  9863  000F1C  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  9864  000F20  0E00               	movlw	0
  9865  000F22  0101               	movlb	1	; () banked
  9866  000F24  1594               	andwf	powf@is& (0+255),w,b
  9867  000F26  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  9868  000F28  0EF0               	movlw	240
  9869  000F2A  1595               	andwf	(powf@is+1)& (0+255),w,b
  9870  000F2C  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  9871  000F2E  0EFF               	movlw	255
  9872  000F30  1596               	andwf	(powf@is+2)& (0+255),w,b
  9873  000F32  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  9874  000F34  0EFF               	movlw	255
  9875  000F36  1597               	andwf	(powf@is+3)& (0+255),w,b
  9876  000F38  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  9877                           
  9878                           ; BSR set to: 1
  9879  000F3A  C1B8  F16C         	movff	powf@__xc8_float_word,powf@s_h
  9880  000F3E  C1B9  F16D         	movff	powf@__xc8_float_word+1,powf@s_h+1
  9881  000F42  C1BA  F16E         	movff	powf@__xc8_float_word+2,powf@s_h+2
  9882  000F46  C1BB  F16F         	movff	powf@__xc8_float_word+3,powf@s_h+3
  9883                           
  9884                           ; BSR set to: 1
  9885  000F4A  C1A8  F0A9         	movff	powf@ix,??_powf
  9886  000F4E  C1A9  F0AA         	movff	powf@ix+1,??_powf+1
  9887  000F52  C1AA  F0AB         	movff	powf@ix+2,??_powf+2
  9888  000F56  C1AB  F0AC         	movff	powf@ix+3,??_powf+3
  9889  000F5A  0100               	movlb	0	; () banked
  9890  000F5C  35AC               	rlcf	(??_powf+3)& (0+255),w,b
  9891  000F5E  33AC               	rrcf	(??_powf+3)& (0+255),f,b
  9892  000F60  33AB               	rrcf	(??_powf+2)& (0+255),f,b
  9893  000F62  33AA               	rrcf	(??_powf+1)& (0+255),f,b
  9894  000F64  33A9               	rrcf	??_powf& (0+255),f,b
  9895  000F66  0E00               	movlw	0
  9896  000F68  15A9               	andwf	??_powf& (0+255),w,b
  9897  000F6A  6FAD               	movwf	(??_powf+4)& (0+255),b
  9898  000F6C  0EF0               	movlw	240
  9899  000F6E  15AA               	andwf	(??_powf+1)& (0+255),w,b
  9900  000F70  6FAE               	movwf	(??_powf+5)& (0+255),b
  9901  000F72  0EFF               	movlw	255
  9902  000F74  15AB               	andwf	(??_powf+2)& (0+255),w,b
  9903  000F76  6FAF               	movwf	(??_powf+6)& (0+255),b
  9904  000F78  0EFF               	movlw	255
  9905  000F7A  15AC               	andwf	(??_powf+3)& (0+255),w,b
  9906  000F7C  6FB0               	movwf	(??_powf+7)& (0+255),b
  9907  000F7E  0E00               	movlw	0
  9908  000F80  11AD               	iorwf	(??_powf+4)& (0+255),w,b
  9909  000F82  0101               	movlb	1	; () banked
  9910  000F84  6F94               	movwf	powf@is& (0+255),b
  9911  000F86  0E00               	movlw	0
  9912  000F88  0100               	movlb	0	; () banked
  9913  000F8A  11AE               	iorwf	(??_powf+5)& (0+255),w,b
  9914  000F8C  0101               	movlb	1	; () banked
  9915  000F8E  6F95               	movwf	(powf@is+1)& (0+255),b
  9916  000F90  0E00               	movlw	0
  9917  000F92  0100               	movlb	0	; () banked
  9918  000F94  11AF               	iorwf	(??_powf+6)& (0+255),w,b
  9919  000F96  0101               	movlb	1	; () banked
  9920  000F98  6F96               	movwf	(powf@is+2)& (0+255),b
  9921  000F9A  0E20               	movlw	32
  9922  000F9C  0100               	movlb	0	; () banked
  9923  000F9E  11B0               	iorwf	(??_powf+7)& (0+255),w,b
  9924  000FA0  0101               	movlb	1	; () banked
  9925  000FA2  6F97               	movwf	(powf@is+3)& (0+255),b
  9926                           
  9927                           ; BSR set to: 1
  9928  000FA4  C1A0  F0A9         	movff	powf@k,??_powf
  9929  000FA8  C1A1  F0AA         	movff	powf@k+1,??_powf+1
  9930  000FAC  C1A2  F0AB         	movff	powf@k+2,??_powf+2
  9931  000FB0  C1A3  F0AC         	movff	powf@k+3,??_powf+3
  9932  000FB4  0E15               	movlw	21
  9933  000FB6                     u9715:
  9934  000FB6  90D8               	bcf	status,0,c
  9935  000FB8  0100               	movlb	0	; () banked
  9936  000FBA  37A9               	rlcf	??_powf& (0+255),f,b
  9937  000FBC  37AA               	rlcf	(??_powf+1)& (0+255),f,b
  9938  000FBE  37AB               	rlcf	(??_powf+2)& (0+255),f,b
  9939  000FC0  37AC               	rlcf	(??_powf+3)& (0+255),f,b
  9940  000FC2  2EE8               	decfsz	wreg,f,c
  9941  000FC4  D7F8               	goto	u9715
  9942  000FC6  0101               	movlb	1	; () banked
  9943  000FC8  5194               	movf	powf@is& (0+255),w,b
  9944  000FCA  0100               	movlb	0	; () banked
  9945  000FCC  25A9               	addwf	??_powf& (0+255),w,b
  9946  000FCE  6FAD               	movwf	(??_powf+4)& (0+255),b
  9947  000FD0  0101               	movlb	1	; () banked
  9948  000FD2  5195               	movf	(powf@is+1)& (0+255),w,b
  9949  000FD4  0100               	movlb	0	; () banked
  9950  000FD6  21AA               	addwfc	(??_powf+1)& (0+255),w,b
  9951  000FD8  6FAE               	movwf	(??_powf+5)& (0+255),b
  9952  000FDA  0101               	movlb	1	; () banked
  9953  000FDC  5196               	movf	(powf@is+2)& (0+255),w,b
  9954  000FDE  0100               	movlb	0	; () banked
  9955  000FE0  21AB               	addwfc	(??_powf+2)& (0+255),w,b
  9956  000FE2  6FAF               	movwf	(??_powf+6)& (0+255),b
  9957  000FE4  0101               	movlb	1	; () banked
  9958  000FE6  5197               	movf	(powf@is+3)& (0+255),w,b
  9959  000FE8  0100               	movlb	0	; () banked
  9960  000FEA  21AC               	addwfc	(??_powf+3)& (0+255),w,b
  9961  000FEC  6FB0               	movwf	(??_powf+7)& (0+255),b
  9962  000FEE  0E00               	movlw	0
  9963  000FF0  25AD               	addwf	(??_powf+4)& (0+255),w,b
  9964  000FF2  0101               	movlb	1	; () banked
  9965  000FF4  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  9966  000FF6  0E00               	movlw	0
  9967  000FF8  0100               	movlb	0	; () banked
  9968  000FFA  21AE               	addwfc	(??_powf+5)& (0+255),w,b
  9969  000FFC  0101               	movlb	1	; () banked
  9970  000FFE  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  9971  001000  0E40               	movlw	64
  9972  001002  0100               	movlb	0	; () banked
  9973  001004  21AF               	addwfc	(??_powf+6)& (0+255),w,b
  9974  001006  0101               	movlb	1	; () banked
  9975  001008  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  9976  00100A  0E00               	movlw	0
  9977  00100C  0100               	movlb	0	; () banked
  9978  00100E  21B0               	addwfc	(??_powf+7)& (0+255),w,b
  9979  001010  0101               	movlb	1	; () banked
  9980  001012  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  9981                           
  9982                           ; BSR set to: 1
  9983  001014  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
  9984  001018  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
  9985  00101C  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
  9986  001020  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
  9987                           
  9988                           ; BSR set to: 1
  9989  001024  C1A0  F0A9         	movff	powf@k,??_powf
  9990  001028  C1A1  F0AA         	movff	powf@k+1,??_powf+1
  9991  00102C  0100               	movlb	0	; () banked
  9992  00102E  90D8               	bcf	status,0,c
  9993  001030  37A9               	rlcf	??_powf& (0+255),f,b
  9994  001032  37AA               	rlcf	(??_powf+1)& (0+255),f,b
  9995  001034  90D8               	bcf	status,0,c
  9996  001036  37A9               	rlcf	??_powf& (0+255),f,b
  9997  001038  37AA               	rlcf	(??_powf+1)& (0+255),f,b
  9998  00103A  0EED               	movlw	low _bp
  9999  00103C  25A9               	addwf	??_powf& (0+255),w,b
 10000  00103E  6EF6               	movwf	tblptrl,c
 10001  001040  0E7D               	movlw	high _bp
 10002  001042  21AA               	addwfc	(??_powf+1)& (0+255),w,b
 10003  001044  6EF7               	movwf	tblptrh,c
 10004  001046                     	if	0	;There are less than 3 active tblptr bytes
 10005  001046                     	endif
 10006  001046  0009               	tblrd		*+
 10007  001048  CFF5 F064          	movff	tablat,___flsub@a
 10008  00104C  0009               	tblrd		*+
 10009  00104E  CFF5 F065          	movff	tablat,___flsub@a+1
 10010  001052  0009               	tblrd		*+
 10011  001054  CFF5 F066          	movff	tablat,___flsub@a+2
 10012  001058  000A               	tblrd		*-
 10013  00105A  CFF5 F067          	movff	tablat,___flsub@a+3
 10014  00105E  C168  F060         	movff	powf@t_h,___flsub@b
 10015  001062  C169  F061         	movff	powf@t_h+1,___flsub@b+1
 10016  001066  C16A  F062         	movff	powf@t_h+2,___flsub@b+2
 10017  00106A  C16B  F063         	movff	powf@t_h+3,___flsub@b+3
 10018  00106E  EC69  F02A         	call	___flsub	;wreg free
 10019  001072  C060  F198         	movff	?___flsub,_powf$2491
 10020  001076  C061  F199         	movff	?___flsub+1,_powf$2491+1
 10021  00107A  C062  F19A         	movff	?___flsub+2,_powf$2491+2
 10022  00107E  C063  F19B         	movff	?___flsub+3,_powf$2491+3
 10023  001082  C170  F060         	movff	powf@ax,___flsub@b
 10024  001086  C171  F061         	movff	powf@ax+1,___flsub@b+1
 10025  00108A  C172  F062         	movff	powf@ax+2,___flsub@b+2
 10026  00108E  C173  F063         	movff	powf@ax+3,___flsub@b+3
 10027  001092  C198  F064         	movff	_powf$2491,___flsub@a
 10028  001096  C199  F065         	movff	_powf$2491+1,___flsub@a+1
 10029  00109A  C19A  F066         	movff	_powf$2491+2,___flsub@a+2
 10030  00109E  C19B  F067         	movff	_powf$2491+3,___flsub@a+3
 10031  0010A2  EC69  F02A         	call	___flsub	;wreg free
 10032  0010A6  C060  F134         	movff	?___flsub,powf@t_l
 10033  0010AA  C061  F135         	movff	?___flsub+1,powf@t_l+1
 10034  0010AE  C062  F136         	movff	?___flsub+2,powf@t_l+2
 10035  0010B2  C063  F137         	movff	?___flsub+3,powf@t_l+3
 10036  0010B6  C168  F020         	movff	powf@t_h,___flmul@a
 10037  0010BA  C169  F021         	movff	powf@t_h+1,___flmul@a+1
 10038  0010BE  C16A  F022         	movff	powf@t_h+2,___flmul@a+2
 10039  0010C2  C16B  F023         	movff	powf@t_h+3,___flmul@a+3
 10040  0010C6  C16C  F01C         	movff	powf@s_h,___flmul@b
 10041  0010CA  C16D  F01D         	movff	powf@s_h+1,___flmul@b+1
 10042  0010CE  C16E  F01E         	movff	powf@s_h+2,___flmul@b+2
 10043  0010D2  C16F  F01F         	movff	powf@s_h+3,___flmul@b+3
 10044  0010D6  ECA5  F01A         	call	___flmul	;wreg free
 10045  0010DA  C01C  F064         	movff	?___flmul,___flsub@a
 10046  0010DE  C01D  F065         	movff	?___flmul+1,___flsub@a+1
 10047  0010E2  C01E  F066         	movff	?___flmul+2,___flsub@a+2
 10048  0010E6  C01F  F067         	movff	?___flmul+3,___flsub@a+3
 10049  0010EA  C174  F060         	movff	powf@u,___flsub@b
 10050  0010EE  C175  F061         	movff	powf@u+1,___flsub@b+1
 10051  0010F2  C176  F062         	movff	powf@u+2,___flsub@b+2
 10052  0010F6  C177  F063         	movff	powf@u+3,___flsub@b+3
 10053  0010FA  EC69  F02A         	call	___flsub	;wreg free
 10054  0010FE  C060  F198         	movff	?___flsub,_powf$2491
 10055  001102  C061  F199         	movff	?___flsub+1,_powf$2491+1
 10056  001106  C062  F19A         	movff	?___flsub+2,_powf$2491+2
 10057  00110A  C063  F19B         	movff	?___flsub+3,_powf$2491+3
 10058  00110E  C134  F020         	movff	powf@t_l,___flmul@a
 10059  001112  C135  F021         	movff	powf@t_l+1,___flmul@a+1
 10060  001116  C136  F022         	movff	powf@t_l+2,___flmul@a+2
 10061  00111A  C137  F023         	movff	powf@t_l+3,___flmul@a+3
 10062  00111E  C16C  F01C         	movff	powf@s_h,___flmul@b
 10063  001122  C16D  F01D         	movff	powf@s_h+1,___flmul@b+1
 10064  001126  C16E  F01E         	movff	powf@s_h+2,___flmul@b+2
 10065  00112A  C16F  F01F         	movff	powf@s_h+3,___flmul@b+3
 10066  00112E  ECA5  F01A         	call	___flmul	;wreg free
 10067  001132  C01C  F064         	movff	?___flmul,___flsub@a
 10068  001136  C01D  F065         	movff	?___flmul+1,___flsub@a+1
 10069  00113A  C01E  F066         	movff	?___flmul+2,___flsub@a+2
 10070  00113E  C01F  F067         	movff	?___flmul+3,___flsub@a+3
 10071  001142  C198  F060         	movff	_powf$2491,___flsub@b
 10072  001146  C199  F061         	movff	_powf$2491+1,___flsub@b+1
 10073  00114A  C19A  F062         	movff	_powf$2491+2,___flsub@b+2
 10074  00114E  C19B  F063         	movff	_powf$2491+3,___flsub@b+3
 10075  001152  EC69  F02A         	call	___flsub	;wreg free
 10076  001156  C060  F158         	movff	?___flsub,_powf$2489
 10077  00115A  C061  F159         	movff	?___flsub+1,_powf$2489+1
 10078  00115E  C062  F15A         	movff	?___flsub+2,_powf$2489+2
 10079  001162  C063  F15B         	movff	?___flsub+3,_powf$2489+3
 10080  001166  C158  F01C         	movff	_powf$2489,___flmul@b
 10081  00116A  C159  F01D         	movff	_powf$2489+1,___flmul@b+1
 10082  00116E  C15A  F01E         	movff	_powf$2489+2,___flmul@b+2
 10083  001172  C15B  F01F         	movff	_powf$2489+3,___flmul@b+3
 10084  001176  C178  F020         	movff	powf@v,___flmul@a
 10085  00117A  C179  F021         	movff	powf@v+1,___flmul@a+1
 10086  00117E  C17A  F022         	movff	powf@v+2,___flmul@a+2
 10087  001182  C17B  F023         	movff	powf@v+3,___flmul@a+3
 10088  001186  ECA5  F01A         	call	___flmul	;wreg free
 10089  00118A  C01C  F130         	movff	?___flmul,powf@s_l
 10090  00118E  C01D  F131         	movff	?___flmul+1,powf@s_l+1
 10091  001192  C01E  F132         	movff	?___flmul+2,powf@s_l+2
 10092  001196  C01F  F133         	movff	?___flmul+3,powf@s_l+3
 10093  00119A  C154  F01C         	movff	powf@s,___flmul@b
 10094  00119E  C155  F01D         	movff	powf@s+1,___flmul@b+1
 10095  0011A2  C156  F01E         	movff	powf@s+2,___flmul@b+2
 10096  0011A6  C157  F01F         	movff	powf@s+3,___flmul@b+3
 10097  0011AA  C154  F020         	movff	powf@s,___flmul@a
 10098  0011AE  C155  F021         	movff	powf@s+1,___flmul@a+1
 10099  0011B2  C156  F022         	movff	powf@s+2,___flmul@a+2
 10100  0011B6  C157  F023         	movff	powf@s+3,___flmul@a+3
 10101  0011BA  ECA5  F01A         	call	___flmul	;wreg free
 10102  0011BE  C01C  F18C         	movff	?___flmul,powf@s2
 10103  0011C2  C01D  F18D         	movff	?___flmul+1,powf@s2+1
 10104  0011C6  C01E  F18E         	movff	?___flmul+2,powf@s2+2
 10105  0011CA  C01F  F18F         	movff	?___flmul+3,powf@s2+3
 10106  0011CE  0E55               	movlw	85
 10107  0011D0  6E10               	movwf	___fladd@a,c
 10108  0011D2  0E32               	movlw	50
 10109  0011D4  6E11               	movwf	___fladd@a+1,c
 10110  0011D6  0E6C               	movlw	108
 10111  0011D8  6E12               	movwf	___fladd@a+2,c
 10112  0011DA  0E3E               	movlw	62
 10113  0011DC  6E13               	movwf	___fladd@a+3,c
 10114  0011DE  0E42               	movlw	66
 10115  0011E0  6E20               	movwf	___flmul@a,c
 10116  0011E2  0EF1               	movlw	241
 10117  0011E4  6E21               	movwf	___flmul@a+1,c
 10118  0011E6  0E53               	movlw	83
 10119  0011E8  6E22               	movwf	___flmul@a+2,c
 10120  0011EA  0E3E               	movlw	62
 10121  0011EC  6E23               	movwf	___flmul@a+3,c
 10122  0011EE  C18C  F01C         	movff	powf@s2,___flmul@b
 10123  0011F2  C18D  F01D         	movff	powf@s2+1,___flmul@b+1
 10124  0011F6  C18E  F01E         	movff	powf@s2+2,___flmul@b+2
 10125  0011FA  C18F  F01F         	movff	powf@s2+3,___flmul@b+3
 10126  0011FE  ECA5  F01A         	call	___flmul	;wreg free
 10127  001202  C01C  F00C         	movff	?___flmul,___fladd@b
 10128  001206  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10129  00120A  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10130  00120E  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10131  001212  EC4E  F01C         	call	___fladd	;wreg free
 10132  001216  C00C  F1A4         	movff	?___fladd,_powf$2488
 10133  00121A  C00D  F1A5         	movff	?___fladd+1,_powf$2488+1
 10134  00121E  C00E  F1A6         	movff	?___fladd+2,_powf$2488+2
 10135  001222  C00F  F1A7         	movff	?___fladd+3,_powf$2488+3
 10136  001226  0E05               	movlw	5
 10137  001228  6E10               	movwf	___fladd@a,c
 10138  00122A  0EA3               	movlw	163
 10139  00122C  6E11               	movwf	___fladd@a+1,c
 10140  00122E  0E8B               	movlw	139
 10141  001230  6E12               	movwf	___fladd@a+2,c
 10142  001232  0E3E               	movlw	62
 10143  001234  6E13               	movwf	___fladd@a+3,c
 10144  001236  C18C  F020         	movff	powf@s2,___flmul@a
 10145  00123A  C18D  F021         	movff	powf@s2+1,___flmul@a+1
 10146  00123E  C18E  F022         	movff	powf@s2+2,___flmul@a+2
 10147  001242  C18F  F023         	movff	powf@s2+3,___flmul@a+3
 10148  001246  C1A4  F01C         	movff	_powf$2488,___flmul@b
 10149  00124A  C1A5  F01D         	movff	_powf$2488+1,___flmul@b+1
 10150  00124E  C1A6  F01E         	movff	_powf$2488+2,___flmul@b+2
 10151  001252  C1A7  F01F         	movff	_powf$2488+3,___flmul@b+3
 10152  001256  ECA5  F01A         	call	___flmul	;wreg free
 10153  00125A  C01C  F00C         	movff	?___flmul,___fladd@b
 10154  00125E  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10155  001262  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10156  001266  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10157  00126A  EC4E  F01C         	call	___fladd	;wreg free
 10158  00126E  C00C  F158         	movff	?___fladd,_powf$2489
 10159  001272  C00D  F159         	movff	?___fladd+1,_powf$2489+1
 10160  001276  C00E  F15A         	movff	?___fladd+2,_powf$2489+2
 10161  00127A  C00F  F15B         	movff	?___fladd+3,_powf$2489+3
 10162  00127E  0EAB               	movlw	171
 10163  001280  6E10               	movwf	___fladd@a,c
 10164  001282  0EAA               	movlw	170
 10165  001284  6E11               	movwf	___fladd@a+1,c
 10166  001286  0EAA               	movlw	170
 10167  001288  6E12               	movwf	___fladd@a+2,c
 10168  00128A  0E3E               	movlw	62
 10169  00128C  6E13               	movwf	___fladd@a+3,c
 10170  00128E  C18C  F020         	movff	powf@s2,___flmul@a
 10171  001292  C18D  F021         	movff	powf@s2+1,___flmul@a+1
 10172  001296  C18E  F022         	movff	powf@s2+2,___flmul@a+2
 10173  00129A  C18F  F023         	movff	powf@s2+3,___flmul@a+3
 10174  00129E  C158  F01C         	movff	_powf$2489,___flmul@b
 10175  0012A2  C159  F01D         	movff	_powf$2489+1,___flmul@b+1
 10176  0012A6  C15A  F01E         	movff	_powf$2489+2,___flmul@b+2
 10177  0012AA  C15B  F01F         	movff	_powf$2489+3,___flmul@b+3
 10178  0012AE  ECA5  F01A         	call	___flmul	;wreg free
 10179  0012B2  C01C  F00C         	movff	?___flmul,___fladd@b
 10180  0012B6  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10181  0012BA  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10182  0012BE  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10183  0012C2  EC4E  F01C         	call	___fladd	;wreg free
 10184  0012C6  C00C  F148         	movff	?___fladd,_powf$2490
 10185  0012CA  C00D  F149         	movff	?___fladd+1,_powf$2490+1
 10186  0012CE  C00E  F14A         	movff	?___fladd+2,_powf$2490+2
 10187  0012D2  C00F  F14B         	movff	?___fladd+3,_powf$2490+3
 10188  0012D6  0EB7               	movlw	183
 10189  0012D8  6E10               	movwf	___fladd@a,c
 10190  0012DA  0E6D               	movlw	109
 10191  0012DC  6E11               	movwf	___fladd@a+1,c
 10192  0012DE  0EDB               	movlw	219
 10193  0012E0  6E12               	movwf	___fladd@a+2,c
 10194  0012E2  0E3E               	movlw	62
 10195  0012E4  6E13               	movwf	___fladd@a+3,c
 10196  0012E6  C18C  F020         	movff	powf@s2,___flmul@a
 10197  0012EA  C18D  F021         	movff	powf@s2+1,___flmul@a+1
 10198  0012EE  C18E  F022         	movff	powf@s2+2,___flmul@a+2
 10199  0012F2  C18F  F023         	movff	powf@s2+3,___flmul@a+3
 10200  0012F6  C148  F01C         	movff	_powf$2490,___flmul@b
 10201  0012FA  C149  F01D         	movff	_powf$2490+1,___flmul@b+1
 10202  0012FE  C14A  F01E         	movff	_powf$2490+2,___flmul@b+2
 10203  001302  C14B  F01F         	movff	_powf$2490+3,___flmul@b+3
 10204  001306  ECA5  F01A         	call	___flmul	;wreg free
 10205  00130A  C01C  F00C         	movff	?___flmul,___fladd@b
 10206  00130E  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10207  001312  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10208  001316  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10209  00131A  EC4E  F01C         	call	___fladd	;wreg free
 10210  00131E  C00C  F138         	movff	?___fladd,_powf$2492
 10211  001322  C00D  F139         	movff	?___fladd+1,_powf$2492+1
 10212  001326  C00E  F13A         	movff	?___fladd+2,_powf$2492+2
 10213  00132A  C00F  F13B         	movff	?___fladd+3,_powf$2492+3
 10214  00132E  0E9A               	movlw	154
 10215  001330  6E10               	movwf	___fladd@a,c
 10216  001332  0E99               	movlw	153
 10217  001334  6E11               	movwf	___fladd@a+1,c
 10218  001336  0E19               	movlw	25
 10219  001338  6E12               	movwf	___fladd@a+2,c
 10220  00133A  0E3F               	movlw	63
 10221  00133C  6E13               	movwf	___fladd@a+3,c
 10222  00133E  C18C  F020         	movff	powf@s2,___flmul@a
 10223  001342  C18D  F021         	movff	powf@s2+1,___flmul@a+1
 10224  001346  C18E  F022         	movff	powf@s2+2,___flmul@a+2
 10225  00134A  C18F  F023         	movff	powf@s2+3,___flmul@a+3
 10226  00134E  C138  F01C         	movff	_powf$2492,___flmul@b
 10227  001352  C139  F01D         	movff	_powf$2492+1,___flmul@b+1
 10228  001356  C13A  F01E         	movff	_powf$2492+2,___flmul@b+2
 10229  00135A  C13B  F01F         	movff	_powf$2492+3,___flmul@b+3
 10230  00135E  ECA5  F01A         	call	___flmul	;wreg free
 10231  001362  C01C  F00C         	movff	?___flmul,___fladd@b
 10232  001366  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10233  00136A  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10234  00136E  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10235  001372  EC4E  F01C         	call	___fladd	;wreg free
 10236  001376  C00C  F100         	movff	?___fladd,_powf$2493
 10237  00137A  C00D  F101         	movff	?___fladd+1,_powf$2493+1
 10238  00137E  C00E  F102         	movff	?___fladd+2,_powf$2493+2
 10239  001382  C00F  F103         	movff	?___fladd+3,_powf$2493+3
 10240  001386  C18C  F020         	movff	powf@s2,___flmul@a
 10241  00138A  C18D  F021         	movff	powf@s2+1,___flmul@a+1
 10242  00138E  C18E  F022         	movff	powf@s2+2,___flmul@a+2
 10243  001392  C18F  F023         	movff	powf@s2+3,___flmul@a+3
 10244  001396  C18C  F01C         	movff	powf@s2,___flmul@b
 10245  00139A  C18D  F01D         	movff	powf@s2+1,___flmul@b+1
 10246  00139E  C18E  F01E         	movff	powf@s2+2,___flmul@b+2
 10247  0013A2  C18F  F01F         	movff	powf@s2+3,___flmul@b+3
 10248  0013A6  ECA5  F01A         	call	___flmul	;wreg free
 10249  0013AA  C01C  F104         	movff	?___flmul,_powf$2494
 10250  0013AE  C01D  F105         	movff	?___flmul+1,_powf$2494+1
 10251  0013B2  C01E  F106         	movff	?___flmul+2,_powf$2494+2
 10252  0013B6  C01F  F107         	movff	?___flmul+3,_powf$2494+3
 10253  0013BA  C100  F01C         	movff	_powf$2493,___flmul@b
 10254  0013BE  C101  F01D         	movff	_powf$2493+1,___flmul@b+1
 10255  0013C2  C102  F01E         	movff	_powf$2493+2,___flmul@b+2
 10256  0013C6  C103  F01F         	movff	_powf$2493+3,___flmul@b+3
 10257  0013CA  C104  F020         	movff	_powf$2494,___flmul@a
 10258  0013CE  C105  F021         	movff	_powf$2494+1,___flmul@a+1
 10259  0013D2  C106  F022         	movff	_powf$2494+2,___flmul@a+2
 10260  0013D6  C107  F023         	movff	_powf$2494+3,___flmul@a+3
 10261  0013DA  ECA5  F01A         	call	___flmul	;wreg free
 10262  0013DE  C01C  F14C         	movff	?___flmul,powf@r
 10263  0013E2  C01D  F14D         	movff	?___flmul+1,powf@r+1
 10264  0013E6  C01E  F14E         	movff	?___flmul+2,powf@r+2
 10265  0013EA  C01F  F14F         	movff	?___flmul+3,powf@r+3
 10266  0013EE  C130  F020         	movff	powf@s_l,___flmul@a
 10267  0013F2  C131  F021         	movff	powf@s_l+1,___flmul@a+1
 10268  0013F6  C132  F022         	movff	powf@s_l+2,___flmul@a+2
 10269  0013FA  C133  F023         	movff	powf@s_l+3,___flmul@a+3
 10270  0013FE  C154  F010         	movff	powf@s,___fladd@a
 10271  001402  C155  F011         	movff	powf@s+1,___fladd@a+1
 10272  001406  C156  F012         	movff	powf@s+2,___fladd@a+2
 10273  00140A  C157  F013         	movff	powf@s+3,___fladd@a+3
 10274  00140E  C16C  F00C         	movff	powf@s_h,___fladd@b
 10275  001412  C16D  F00D         	movff	powf@s_h+1,___fladd@b+1
 10276  001416  C16E  F00E         	movff	powf@s_h+2,___fladd@b+2
 10277  00141A  C16F  F00F         	movff	powf@s_h+3,___fladd@b+3
 10278  00141E  EC4E  F01C         	call	___fladd	;wreg free
 10279  001422  C00C  F01C         	movff	?___fladd,___flmul@b
 10280  001426  C00D  F01D         	movff	?___fladd+1,___flmul@b+1
 10281  00142A  C00E  F01E         	movff	?___fladd+2,___flmul@b+2
 10282  00142E  C00F  F01F         	movff	?___fladd+3,___flmul@b+3
 10283  001432  ECA5  F01A         	call	___flmul	;wreg free
 10284  001436  C01C  F15C         	movff	?___flmul,_powf$2495
 10285  00143A  C01D  F15D         	movff	?___flmul+1,_powf$2495+1
 10286  00143E  C01E  F15E         	movff	?___flmul+2,_powf$2495+2
 10287  001442  C01F  F15F         	movff	?___flmul+3,_powf$2495+3
 10288  001446  C14C  F00C         	movff	powf@r,___fladd@b
 10289  00144A  C14D  F00D         	movff	powf@r+1,___fladd@b+1
 10290  00144E  C14E  F00E         	movff	powf@r+2,___fladd@b+2
 10291  001452  C14F  F00F         	movff	powf@r+3,___fladd@b+3
 10292  001456  C15C  F010         	movff	_powf$2495,___fladd@a
 10293  00145A  C15D  F011         	movff	_powf$2495+1,___fladd@a+1
 10294  00145E  C15E  F012         	movff	_powf$2495+2,___fladd@a+2
 10295  001462  C15F  F013         	movff	_powf$2495+3,___fladd@a+3
 10296  001466  EC4E  F01C         	call	___fladd	;wreg free
 10297  00146A  C00C  F14C         	movff	?___fladd,powf@r
 10298  00146E  C00D  F14D         	movff	?___fladd+1,powf@r+1
 10299  001472  C00E  F14E         	movff	?___fladd+2,powf@r+2
 10300  001476  C00F  F14F         	movff	?___fladd+3,powf@r+3
 10301  00147A  C16C  F01C         	movff	powf@s_h,___flmul@b
 10302  00147E  C16D  F01D         	movff	powf@s_h+1,___flmul@b+1
 10303  001482  C16E  F01E         	movff	powf@s_h+2,___flmul@b+2
 10304  001486  C16F  F01F         	movff	powf@s_h+3,___flmul@b+3
 10305  00148A  C16C  F020         	movff	powf@s_h,___flmul@a
 10306  00148E  C16D  F021         	movff	powf@s_h+1,___flmul@a+1
 10307  001492  C16E  F022         	movff	powf@s_h+2,___flmul@a+2
 10308  001496  C16F  F023         	movff	powf@s_h+3,___flmul@a+3
 10309  00149A  ECA5  F01A         	call	___flmul	;wreg free
 10310  00149E  C01C  F18C         	movff	?___flmul,powf@s2
 10311  0014A2  C01D  F18D         	movff	?___flmul+1,powf@s2+1
 10312  0014A6  C01E  F18E         	movff	?___flmul+2,powf@s2+2
 10313  0014AA  C01F  F18F         	movff	?___flmul+3,powf@s2+3
 10314  0014AE  0E00               	movlw	0
 10315  0014B0  6E10               	movwf	___fladd@a,c
 10316  0014B2  0E00               	movlw	0
 10317  0014B4  6E11               	movwf	___fladd@a+1,c
 10318  0014B6  0E40               	movlw	64
 10319  0014B8  6E12               	movwf	___fladd@a+2,c
 10320  0014BA  0E40               	movlw	64
 10321  0014BC  6E13               	movwf	___fladd@a+3,c
 10322  0014BE  C18C  F00C         	movff	powf@s2,___fladd@b
 10323  0014C2  C18D  F00D         	movff	powf@s2+1,___fladd@b+1
 10324  0014C6  C18E  F00E         	movff	powf@s2+2,___fladd@b+2
 10325  0014CA  C18F  F00F         	movff	powf@s2+3,___fladd@b+3
 10326  0014CE  EC4E  F01C         	call	___fladd	;wreg free
 10327  0014D2  C00C  F15C         	movff	?___fladd,_powf$2495
 10328  0014D6  C00D  F15D         	movff	?___fladd+1,_powf$2495+1
 10329  0014DA  C00E  F15E         	movff	?___fladd+2,_powf$2495+2
 10330  0014DE  C00F  F15F         	movff	?___fladd+3,_powf$2495+3
 10331  0014E2  C15C  F00C         	movff	_powf$2495,___fladd@b
 10332  0014E6  C15D  F00D         	movff	_powf$2495+1,___fladd@b+1
 10333  0014EA  C15E  F00E         	movff	_powf$2495+2,___fladd@b+2
 10334  0014EE  C15F  F00F         	movff	_powf$2495+3,___fladd@b+3
 10335  0014F2  C14C  F010         	movff	powf@r,___fladd@a
 10336  0014F6  C14D  F011         	movff	powf@r+1,___fladd@a+1
 10337  0014FA  C14E  F012         	movff	powf@r+2,___fladd@a+2
 10338  0014FE  C14F  F013         	movff	powf@r+3,___fladd@a+3
 10339  001502  EC4E  F01C         	call	___fladd	;wreg free
 10340  001506  C00C  F168         	movff	?___fladd,powf@t_h
 10341  00150A  C00D  F169         	movff	?___fladd+1,powf@t_h+1
 10342  00150E  C00E  F16A         	movff	?___fladd+2,powf@t_h+2
 10343  001512  C00F  F16B         	movff	?___fladd+3,powf@t_h+3
 10344  001516  C168  F1B8         	movff	powf@t_h,powf@__xc8_float_word
 10345  00151A  C169  F1B9         	movff	powf@t_h+1,powf@__xc8_float_word+1
 10346  00151E  C16A  F1BA         	movff	powf@t_h+2,powf@__xc8_float_word+2
 10347  001522  C16B  F1BB         	movff	powf@t_h+3,powf@__xc8_float_word+3
 10348  001526  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 10349  00152A  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 10350  00152E  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 10351  001532  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 10352  001536  0E00               	movlw	0
 10353  001538  0101               	movlb	1	; () banked
 10354  00153A  1594               	andwf	powf@is& (0+255),w,b
 10355  00153C  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10356  00153E  0EF0               	movlw	240
 10357  001540  1595               	andwf	(powf@is+1)& (0+255),w,b
 10358  001542  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10359  001544  0EFF               	movlw	255
 10360  001546  1596               	andwf	(powf@is+2)& (0+255),w,b
 10361  001548  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10362  00154A  0EFF               	movlw	255
 10363  00154C  1597               	andwf	(powf@is+3)& (0+255),w,b
 10364  00154E  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10365                           
 10366                           ; BSR set to: 1
 10367  001550  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
 10368  001554  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
 10369  001558  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
 10370  00155C  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
 10371                           
 10372                           ; BSR set to: 1
 10373  001560  0E00               	movlw	0
 10374  001562  6E10               	movwf	___fladd@a,c
 10375  001564  0E00               	movlw	0
 10376  001566  6E11               	movwf	___fladd@a+1,c
 10377  001568  0E40               	movlw	64
 10378  00156A  6E12               	movwf	___fladd@a+2,c
 10379  00156C  0EC0               	movlw	192
 10380  00156E  6E13               	movwf	___fladd@a+3,c
 10381  001570  C168  F00C         	movff	powf@t_h,___fladd@b
 10382  001574  C169  F00D         	movff	powf@t_h+1,___fladd@b+1
 10383  001578  C16A  F00E         	movff	powf@t_h+2,___fladd@b+2
 10384  00157C  C16B  F00F         	movff	powf@t_h+3,___fladd@b+3
 10385  001580  EC4E  F01C         	call	___fladd	;wreg free
 10386  001584  C00C  F13C         	movff	?___fladd,_powf$2496
 10387  001588  C00D  F13D         	movff	?___fladd+1,_powf$2496+1
 10388  00158C  C00E  F13E         	movff	?___fladd+2,_powf$2496+2
 10389  001590  C00F  F13F         	movff	?___fladd+3,_powf$2496+3
 10390  001594  C18C  F064         	movff	powf@s2,___flsub@a
 10391  001598  C18D  F065         	movff	powf@s2+1,___flsub@a+1
 10392  00159C  C18E  F066         	movff	powf@s2+2,___flsub@a+2
 10393  0015A0  C18F  F067         	movff	powf@s2+3,___flsub@a+3
 10394  0015A4  C13C  F060         	movff	_powf$2496,___flsub@b
 10395  0015A8  C13D  F061         	movff	_powf$2496+1,___flsub@b+1
 10396  0015AC  C13E  F062         	movff	_powf$2496+2,___flsub@b+2
 10397  0015B0  C13F  F063         	movff	_powf$2496+3,___flsub@b+3
 10398  0015B4  EC69  F02A         	call	___flsub	;wreg free
 10399  0015B8  C060  F140         	movff	?___flsub,_powf$2497
 10400  0015BC  C061  F141         	movff	?___flsub+1,_powf$2497+1
 10401  0015C0  C062  F142         	movff	?___flsub+2,_powf$2497+2
 10402  0015C4  C063  F143         	movff	?___flsub+3,_powf$2497+3
 10403  0015C8  C14C  F060         	movff	powf@r,___flsub@b
 10404  0015CC  C14D  F061         	movff	powf@r+1,___flsub@b+1
 10405  0015D0  C14E  F062         	movff	powf@r+2,___flsub@b+2
 10406  0015D4  C14F  F063         	movff	powf@r+3,___flsub@b+3
 10407  0015D8  C140  F064         	movff	_powf$2497,___flsub@a
 10408  0015DC  C141  F065         	movff	_powf$2497+1,___flsub@a+1
 10409  0015E0  C142  F066         	movff	_powf$2497+2,___flsub@a+2
 10410  0015E4  C143  F067         	movff	_powf$2497+3,___flsub@a+3
 10411  0015E8  EC69  F02A         	call	___flsub	;wreg free
 10412  0015EC  C060  F134         	movff	?___flsub,powf@t_l
 10413  0015F0  C061  F135         	movff	?___flsub+1,powf@t_l+1
 10414  0015F4  C062  F136         	movff	?___flsub+2,powf@t_l+2
 10415  0015F8  C063  F137         	movff	?___flsub+3,powf@t_l+3
 10416  0015FC  C16C  F01C         	movff	powf@s_h,___flmul@b
 10417  001600  C16D  F01D         	movff	powf@s_h+1,___flmul@b+1
 10418  001604  C16E  F01E         	movff	powf@s_h+2,___flmul@b+2
 10419  001608  C16F  F01F         	movff	powf@s_h+3,___flmul@b+3
 10420  00160C  C168  F020         	movff	powf@t_h,___flmul@a
 10421  001610  C169  F021         	movff	powf@t_h+1,___flmul@a+1
 10422  001614  C16A  F022         	movff	powf@t_h+2,___flmul@a+2
 10423  001618  C16B  F023         	movff	powf@t_h+3,___flmul@a+3
 10424  00161C  ECA5  F01A         	call	___flmul	;wreg free
 10425  001620  C01C  F174         	movff	?___flmul,powf@u
 10426  001624  C01D  F175         	movff	?___flmul+1,powf@u+1
 10427  001628  C01E  F176         	movff	?___flmul+2,powf@u+2
 10428  00162C  C01F  F177         	movff	?___flmul+3,powf@u+3
 10429  001630  C168  F020         	movff	powf@t_h,___flmul@a
 10430  001634  C169  F021         	movff	powf@t_h+1,___flmul@a+1
 10431  001638  C16A  F022         	movff	powf@t_h+2,___flmul@a+2
 10432  00163C  C16B  F023         	movff	powf@t_h+3,___flmul@a+3
 10433  001640  C130  F01C         	movff	powf@s_l,___flmul@b
 10434  001644  C131  F01D         	movff	powf@s_l+1,___flmul@b+1
 10435  001648  C132  F01E         	movff	powf@s_l+2,___flmul@b+2
 10436  00164C  C133  F01F         	movff	powf@s_l+3,___flmul@b+3
 10437  001650  ECA5  F01A         	call	___flmul	;wreg free
 10438  001654  C01C  F00C         	movff	?___flmul,___fladd@b
 10439  001658  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10440  00165C  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10441  001660  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10442  001664  C154  F020         	movff	powf@s,___flmul@a
 10443  001668  C155  F021         	movff	powf@s+1,___flmul@a+1
 10444  00166C  C156  F022         	movff	powf@s+2,___flmul@a+2
 10445  001670  C157  F023         	movff	powf@s+3,___flmul@a+3
 10446  001674  C134  F01C         	movff	powf@t_l,___flmul@b
 10447  001678  C135  F01D         	movff	powf@t_l+1,___flmul@b+1
 10448  00167C  C136  F01E         	movff	powf@t_l+2,___flmul@b+2
 10449  001680  C137  F01F         	movff	powf@t_l+3,___flmul@b+3
 10450  001684  ECA5  F01A         	call	___flmul	;wreg free
 10451  001688  C01C  F010         	movff	?___flmul,___fladd@a
 10452  00168C  C01D  F011         	movff	?___flmul+1,___fladd@a+1
 10453  001690  C01E  F012         	movff	?___flmul+2,___fladd@a+2
 10454  001694  C01F  F013         	movff	?___flmul+3,___fladd@a+3
 10455  001698  EC4E  F01C         	call	___fladd	;wreg free
 10456  00169C  C00C  F178         	movff	?___fladd,powf@v
 10457  0016A0  C00D  F179         	movff	?___fladd+1,powf@v+1
 10458  0016A4  C00E  F17A         	movff	?___fladd+2,powf@v+2
 10459  0016A8  C00F  F17B         	movff	?___fladd+3,powf@v+3
 10460  0016AC  C174  F00C         	movff	powf@u,___fladd@b
 10461  0016B0  C175  F00D         	movff	powf@u+1,___fladd@b+1
 10462  0016B4  C176  F00E         	movff	powf@u+2,___fladd@b+2
 10463  0016B8  C177  F00F         	movff	powf@u+3,___fladd@b+3
 10464  0016BC  C178  F010         	movff	powf@v,___fladd@a
 10465  0016C0  C179  F011         	movff	powf@v+1,___fladd@a+1
 10466  0016C4  C17A  F012         	movff	powf@v+2,___fladd@a+2
 10467  0016C8  C17B  F013         	movff	powf@v+3,___fladd@a+3
 10468  0016CC  EC4E  F01C         	call	___fladd	;wreg free
 10469  0016D0  C00C  F19C         	movff	?___fladd,powf@p_h
 10470  0016D4  C00D  F19D         	movff	?___fladd+1,powf@p_h+1
 10471  0016D8  C00E  F19E         	movff	?___fladd+2,powf@p_h+2
 10472  0016DC  C00F  F19F         	movff	?___fladd+3,powf@p_h+3
 10473  0016E0  C19C  F1B8         	movff	powf@p_h,powf@__xc8_float_word
 10474  0016E4  C19D  F1B9         	movff	powf@p_h+1,powf@__xc8_float_word+1
 10475  0016E8  C19E  F1BA         	movff	powf@p_h+2,powf@__xc8_float_word+2
 10476  0016EC  C19F  F1BB         	movff	powf@p_h+3,powf@__xc8_float_word+3
 10477  0016F0  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 10478  0016F4  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 10479  0016F8  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 10480  0016FC  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 10481  001700  0E00               	movlw	0
 10482  001702  0101               	movlb	1	; () banked
 10483  001704  1594               	andwf	powf@is& (0+255),w,b
 10484  001706  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10485  001708  0EF0               	movlw	240
 10486  00170A  1595               	andwf	(powf@is+1)& (0+255),w,b
 10487  00170C  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10488  00170E  0EFF               	movlw	255
 10489  001710  1596               	andwf	(powf@is+2)& (0+255),w,b
 10490  001712  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10491  001714  0EFF               	movlw	255
 10492  001716  1597               	andwf	(powf@is+3)& (0+255),w,b
 10493  001718  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10494                           
 10495                           ; BSR set to: 1
 10496  00171A  C1B8  F19C         	movff	powf@__xc8_float_word,powf@p_h
 10497  00171E  C1B9  F19D         	movff	powf@__xc8_float_word+1,powf@p_h+1
 10498  001722  C1BA  F19E         	movff	powf@__xc8_float_word+2,powf@p_h+2
 10499  001726  C1BB  F19F         	movff	powf@__xc8_float_word+3,powf@p_h+3
 10500                           
 10501                           ; BSR set to: 1
 10502  00172A  C174  F064         	movff	powf@u,___flsub@a
 10503  00172E  C175  F065         	movff	powf@u+1,___flsub@a+1
 10504  001732  C176  F066         	movff	powf@u+2,___flsub@a+2
 10505  001736  C177  F067         	movff	powf@u+3,___flsub@a+3
 10506  00173A  C19C  F060         	movff	powf@p_h,___flsub@b
 10507  00173E  C19D  F061         	movff	powf@p_h+1,___flsub@b+1
 10508  001742  C19E  F062         	movff	powf@p_h+2,___flsub@b+2
 10509  001746  C19F  F063         	movff	powf@p_h+3,___flsub@b+3
 10510  00174A  EC69  F02A         	call	___flsub	;wreg free
 10511  00174E  C060  F198         	movff	?___flsub,_powf$2491
 10512  001752  C061  F199         	movff	?___flsub+1,_powf$2491+1
 10513  001756  C062  F19A         	movff	?___flsub+2,_powf$2491+2
 10514  00175A  C063  F19B         	movff	?___flsub+3,_powf$2491+3
 10515  00175E  C178  F060         	movff	powf@v,___flsub@b
 10516  001762  C179  F061         	movff	powf@v+1,___flsub@b+1
 10517  001766  C17A  F062         	movff	powf@v+2,___flsub@b+2
 10518  00176A  C17B  F063         	movff	powf@v+3,___flsub@b+3
 10519  00176E  C198  F064         	movff	_powf$2491,___flsub@a
 10520  001772  C199  F065         	movff	_powf$2491+1,___flsub@a+1
 10521  001776  C19A  F066         	movff	_powf$2491+2,___flsub@a+2
 10522  00177A  C19B  F067         	movff	_powf$2491+3,___flsub@a+3
 10523  00177E  EC69  F02A         	call	___flsub	;wreg free
 10524  001782  C060  F164         	movff	?___flsub,powf@p_l
 10525  001786  C061  F165         	movff	?___flsub+1,powf@p_l+1
 10526  00178A  C062  F166         	movff	?___flsub+2,powf@p_l+2
 10527  00178E  C063  F167         	movff	?___flsub+3,powf@p_l+3
 10528  001792  C19C  F01C         	movff	powf@p_h,___flmul@b
 10529  001796  C19D  F01D         	movff	powf@p_h+1,___flmul@b+1
 10530  00179A  C19E  F01E         	movff	powf@p_h+2,___flmul@b+2
 10531  00179E  C19F  F01F         	movff	powf@p_h+3,___flmul@b+3
 10532  0017A2  0E00               	movlw	0
 10533  0017A4  6E20               	movwf	___flmul@a,c
 10534  0017A6  0E40               	movlw	64
 10535  0017A8  6E21               	movwf	___flmul@a+1,c
 10536  0017AA  0E76               	movlw	118
 10537  0017AC  6E22               	movwf	___flmul@a+2,c
 10538  0017AE  0E3F               	movlw	63
 10539  0017B0  6E23               	movwf	___flmul@a+3,c
 10540  0017B2  ECA5  F01A         	call	___flmul	;wreg free
 10541  0017B6  C01C  F120         	movff	?___flmul,powf@z_h
 10542  0017BA  C01D  F121         	movff	?___flmul+1,powf@z_h+1
 10543  0017BE  C01E  F122         	movff	?___flmul+2,powf@z_h+2
 10544  0017C2  C01F  F123         	movff	?___flmul+3,powf@z_h+3
 10545  0017C6  0E4F               	movlw	79
 10546  0017C8  6E20               	movwf	___flmul@a,c
 10547  0017CA  0E38               	movlw	56
 10548  0017CC  6E21               	movwf	___flmul@a+1,c
 10549  0017CE  0E76               	movlw	118
 10550  0017D0  6E22               	movwf	___flmul@a+2,c
 10551  0017D2  0E3F               	movlw	63
 10552  0017D4  6E23               	movwf	___flmul@a+3,c
 10553  0017D6  C164  F01C         	movff	powf@p_l,___flmul@b
 10554  0017DA  C165  F01D         	movff	powf@p_l+1,___flmul@b+1
 10555  0017DE  C166  F01E         	movff	powf@p_l+2,___flmul@b+2
 10556  0017E2  C167  F01F         	movff	powf@p_l+3,___flmul@b+3
 10557  0017E6  ECA5  F01A         	call	___flmul	;wreg free
 10558  0017EA  C01C  F010         	movff	?___flmul,___fladd@a
 10559  0017EE  C01D  F011         	movff	?___flmul+1,___fladd@a+1
 10560  0017F2  C01E  F012         	movff	?___flmul+2,___fladd@a+2
 10561  0017F6  C01F  F013         	movff	?___flmul+3,___fladd@a+3
 10562  0017FA  0EC6               	movlw	198
 10563  0017FC  6E20               	movwf	___flmul@a,c
 10564  0017FE  0E23               	movlw	35
 10565  001800  6E21               	movwf	___flmul@a+1,c
 10566  001802  0EF6               	movlw	246
 10567  001804  6E22               	movwf	___flmul@a+2,c
 10568  001806  0EB8               	movlw	184
 10569  001808  6E23               	movwf	___flmul@a+3,c
 10570  00180A  C19C  F01C         	movff	powf@p_h,___flmul@b
 10571  00180E  C19D  F01D         	movff	powf@p_h+1,___flmul@b+1
 10572  001812  C19E  F01E         	movff	powf@p_h+2,___flmul@b+2
 10573  001816  C19F  F01F         	movff	powf@p_h+3,___flmul@b+3
 10574  00181A  ECA5  F01A         	call	___flmul	;wreg free
 10575  00181E  C01C  F00C         	movff	?___flmul,___fladd@b
 10576  001822  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10577  001826  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10578  00182A  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10579  00182E  EC4E  F01C         	call	___fladd	;wreg free
 10580  001832  C00C  F15C         	movff	?___fladd,_powf$2495
 10581  001836  C00D  F15D         	movff	?___fladd+1,_powf$2495+1
 10582  00183A  C00E  F15E         	movff	?___fladd+2,_powf$2495+2
 10583  00183E  C00F  F15F         	movff	?___fladd+3,_powf$2495+3
 10584  001842  C15C  F00C         	movff	_powf$2495,___fladd@b
 10585  001846  C15D  F00D         	movff	_powf$2495+1,___fladd@b+1
 10586  00184A  C15E  F00E         	movff	_powf$2495+2,___fladd@b+2
 10587  00184E  C15F  F00F         	movff	_powf$2495+3,___fladd@b+3
 10588  001852  C1A0  F0A9         	movff	powf@k,??_powf
 10589  001856  C1A1  F0AA         	movff	powf@k+1,??_powf+1
 10590  00185A  0100               	movlb	0	; () banked
 10591  00185C  90D8               	bcf	status,0,c
 10592  00185E  37A9               	rlcf	??_powf& (0+255),f,b
 10593  001860  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 10594  001862  90D8               	bcf	status,0,c
 10595  001864  37A9               	rlcf	??_powf& (0+255),f,b
 10596  001866  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 10597  001868  0E81               	movlw	low _dp_l
 10598  00186A  25A9               	addwf	??_powf& (0+255),w,b
 10599  00186C  6EF6               	movwf	tblptrl,c
 10600  00186E  0E7D               	movlw	high _dp_l
 10601  001870  21AA               	addwfc	(??_powf+1)& (0+255),w,b
 10602  001872  6EF7               	movwf	tblptrh,c
 10603  001874                     	if	0	;There are less than 3 active tblptr bytes
 10604  001874                     	endif
 10605  001874  0009               	tblrd		*+
 10606  001876  CFF5 F010          	movff	tablat,___fladd@a
 10607  00187A  0009               	tblrd		*+
 10608  00187C  CFF5 F011          	movff	tablat,___fladd@a+1
 10609  001880  0009               	tblrd		*+
 10610  001882  CFF5 F012          	movff	tablat,___fladd@a+2
 10611  001886  000A               	tblrd		*-
 10612  001888  CFF5 F013          	movff	tablat,___fladd@a+3
 10613  00188C  EC4E  F01C         	call	___fladd	;wreg free
 10614  001890  C00C  F124         	movff	?___fladd,powf@z_l
 10615  001894  C00D  F125         	movff	?___fladd+1,powf@z_l+1
 10616  001898  C00E  F126         	movff	?___fladd+2,powf@z_l+2
 10617  00189C  C00F  F127         	movff	?___fladd+3,powf@z_l+3
 10618  0018A0  C188  F00C         	movff	powf@n,___xxtofl@val
 10619  0018A4  C189  F00D         	movff	powf@n+1,___xxtofl@val+1
 10620  0018A8  C18A  F00E         	movff	powf@n+2,___xxtofl@val+2
 10621  0018AC  C18B  F00F         	movff	powf@n+3,___xxtofl@val+3
 10622  0018B0  0E01               	movlw	1
 10623  0018B2  EC14  F024         	call	___xxtofl
 10624  0018B6  C00C  F1B0         	movff	?___xxtofl,powf@t
 10625  0018BA  C00D  F1B1         	movff	?___xxtofl+1,powf@t+1
 10626  0018BE  C00E  F1B2         	movff	?___xxtofl+2,powf@t+2
 10627  0018C2  C00F  F1B3         	movff	?___xxtofl+3,powf@t+3
 10628  0018C6  C124  F010         	movff	powf@z_l,___fladd@a
 10629  0018CA  C125  F011         	movff	powf@z_l+1,___fladd@a+1
 10630  0018CE  C126  F012         	movff	powf@z_l+2,___fladd@a+2
 10631  0018D2  C127  F013         	movff	powf@z_l+3,___fladd@a+3
 10632  0018D6  C120  F00C         	movff	powf@z_h,___fladd@b
 10633  0018DA  C121  F00D         	movff	powf@z_h+1,___fladd@b+1
 10634  0018DE  C122  F00E         	movff	powf@z_h+2,___fladd@b+2
 10635  0018E2  C123  F00F         	movff	powf@z_h+3,___fladd@b+3
 10636  0018E6  EC4E  F01C         	call	___fladd	;wreg free
 10637  0018EA  C00C  F15C         	movff	?___fladd,_powf$2495
 10638  0018EE  C00D  F15D         	movff	?___fladd+1,_powf$2495+1
 10639  0018F2  C00E  F15E         	movff	?___fladd+2,_powf$2495+2
 10640  0018F6  C00F  F15F         	movff	?___fladd+3,_powf$2495+3
 10641  0018FA  C1A0  F0A9         	movff	powf@k,??_powf
 10642  0018FE  C1A1  F0AA         	movff	powf@k+1,??_powf+1
 10643  001902  0100               	movlb	0	; () banked
 10644  001904  90D8               	bcf	status,0,c
 10645  001906  37A9               	rlcf	??_powf& (0+255),f,b
 10646  001908  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 10647  00190A  90D8               	bcf	status,0,c
 10648  00190C  37A9               	rlcf	??_powf& (0+255),f,b
 10649  00190E  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 10650  001910  0E89               	movlw	low _dp_h
 10651  001912  25A9               	addwf	??_powf& (0+255),w,b
 10652  001914  6EF6               	movwf	tblptrl,c
 10653  001916  0E7D               	movlw	high _dp_h
 10654  001918  21AA               	addwfc	(??_powf+1)& (0+255),w,b
 10655  00191A  6EF7               	movwf	tblptrh,c
 10656  00191C                     	if	0	;There are less than 3 active tblptr bytes
 10657  00191C                     	endif
 10658  00191C  0009               	tblrd		*+
 10659  00191E  CFF5 F010          	movff	tablat,___fladd@a
 10660  001922  0009               	tblrd		*+
 10661  001924  CFF5 F011          	movff	tablat,___fladd@a+1
 10662  001928  0009               	tblrd		*+
 10663  00192A  CFF5 F012          	movff	tablat,___fladd@a+2
 10664  00192E  000A               	tblrd		*-
 10665  001930  CFF5 F013          	movff	tablat,___fladd@a+3
 10666  001934  C15C  F00C         	movff	_powf$2495,___fladd@b
 10667  001938  C15D  F00D         	movff	_powf$2495+1,___fladd@b+1
 10668  00193C  C15E  F00E         	movff	_powf$2495+2,___fladd@b+2
 10669  001940  C15F  F00F         	movff	_powf$2495+3,___fladd@b+3
 10670  001944  EC4E  F01C         	call	___fladd	;wreg free
 10671  001948  C00C  F108         	movff	?___fladd,_powf$2498
 10672  00194C  C00D  F109         	movff	?___fladd+1,_powf$2498+1
 10673  001950  C00E  F10A         	movff	?___fladd+2,_powf$2498+2
 10674  001954  C00F  F10B         	movff	?___fladd+3,_powf$2498+3
 10675  001958  C108  F00C         	movff	_powf$2498,___fladd@b
 10676  00195C  C109  F00D         	movff	_powf$2498+1,___fladd@b+1
 10677  001960  C10A  F00E         	movff	_powf$2498+2,___fladd@b+2
 10678  001964  C10B  F00F         	movff	_powf$2498+3,___fladd@b+3
 10679  001968  C1B0  F010         	movff	powf@t,___fladd@a
 10680  00196C  C1B1  F011         	movff	powf@t+1,___fladd@a+1
 10681  001970  C1B2  F012         	movff	powf@t+2,___fladd@a+2
 10682  001974  C1B3  F013         	movff	powf@t+3,___fladd@a+3
 10683  001978  EC4E  F01C         	call	___fladd	;wreg free
 10684  00197C  C00C  F180         	movff	?___fladd,powf@t1
 10685  001980  C00D  F181         	movff	?___fladd+1,powf@t1+1
 10686  001984  C00E  F182         	movff	?___fladd+2,powf@t1+2
 10687  001988  C00F  F183         	movff	?___fladd+3,powf@t1+3
 10688  00198C  C180  F1B8         	movff	powf@t1,powf@__xc8_float_word
 10689  001990  C181  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
 10690  001994  C182  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
 10691  001998  C183  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
 10692  00199C  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 10693  0019A0  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 10694  0019A4  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 10695  0019A8  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 10696  0019AC  0E00               	movlw	0
 10697  0019AE  0101               	movlb	1	; () banked
 10698  0019B0  1594               	andwf	powf@is& (0+255),w,b
 10699  0019B2  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10700  0019B4  0EF0               	movlw	240
 10701  0019B6  1595               	andwf	(powf@is+1)& (0+255),w,b
 10702  0019B8  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10703  0019BA  0EFF               	movlw	255
 10704  0019BC  1596               	andwf	(powf@is+2)& (0+255),w,b
 10705  0019BE  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10706  0019C0  0EFF               	movlw	255
 10707  0019C2  1597               	andwf	(powf@is+3)& (0+255),w,b
 10708  0019C4  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10709                           
 10710                           ; BSR set to: 1
 10711  0019C6  C1B8  F180         	movff	powf@__xc8_float_word,powf@t1
 10712  0019CA  C1B9  F181         	movff	powf@__xc8_float_word+1,powf@t1+1
 10713  0019CE  C1BA  F182         	movff	powf@__xc8_float_word+2,powf@t1+2
 10714  0019D2  C1BB  F183         	movff	powf@__xc8_float_word+3,powf@t1+3
 10715                           
 10716                           ; BSR set to: 1
 10717  0019D6  C1B0  F064         	movff	powf@t,___flsub@a
 10718  0019DA  C1B1  F065         	movff	powf@t+1,___flsub@a+1
 10719  0019DE  C1B2  F066         	movff	powf@t+2,___flsub@a+2
 10720  0019E2  C1B3  F067         	movff	powf@t+3,___flsub@a+3
 10721  0019E6  C180  F060         	movff	powf@t1,___flsub@b
 10722  0019EA  C181  F061         	movff	powf@t1+1,___flsub@b+1
 10723  0019EE  C182  F062         	movff	powf@t1+2,___flsub@b+2
 10724  0019F2  C183  F063         	movff	powf@t1+3,___flsub@b+3
 10725  0019F6  EC69  F02A         	call	___flsub	;wreg free
 10726  0019FA  C060  F198         	movff	?___flsub,_powf$2491
 10727  0019FE  C061  F199         	movff	?___flsub+1,_powf$2491+1
 10728  001A02  C062  F19A         	movff	?___flsub+2,_powf$2491+2
 10729  001A06  C063  F19B         	movff	?___flsub+3,_powf$2491+3
 10730  001A0A  C1A0  F0A9         	movff	powf@k,??_powf
 10731  001A0E  C1A1  F0AA         	movff	powf@k+1,??_powf+1
 10732  001A12  0100               	movlb	0	; () banked
 10733  001A14  90D8               	bcf	status,0,c
 10734  001A16  37A9               	rlcf	??_powf& (0+255),f,b
 10735  001A18  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 10736  001A1A  90D8               	bcf	status,0,c
 10737  001A1C  37A9               	rlcf	??_powf& (0+255),f,b
 10738  001A1E  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 10739  001A20  0E89               	movlw	low _dp_h
 10740  001A22  25A9               	addwf	??_powf& (0+255),w,b
 10741  001A24  6EF6               	movwf	tblptrl,c
 10742  001A26  0E7D               	movlw	high _dp_h
 10743  001A28  21AA               	addwfc	(??_powf+1)& (0+255),w,b
 10744  001A2A  6EF7               	movwf	tblptrh,c
 10745  001A2C                     	if	0	;There are less than 3 active tblptr bytes
 10746  001A2C                     	endif
 10747  001A2C  0009               	tblrd		*+
 10748  001A2E  CFF5 F064          	movff	tablat,___flsub@a
 10749  001A32  0009               	tblrd		*+
 10750  001A34  CFF5 F065          	movff	tablat,___flsub@a+1
 10751  001A38  0009               	tblrd		*+
 10752  001A3A  CFF5 F066          	movff	tablat,___flsub@a+2
 10753  001A3E  000A               	tblrd		*-
 10754  001A40  CFF5 F067          	movff	tablat,___flsub@a+3
 10755  001A44  C198  F060         	movff	_powf$2491,___flsub@b
 10756  001A48  C199  F061         	movff	_powf$2491+1,___flsub@b+1
 10757  001A4C  C19A  F062         	movff	_powf$2491+2,___flsub@b+2
 10758  001A50  C19B  F063         	movff	_powf$2491+3,___flsub@b+3
 10759  001A54  EC69  F02A         	call	___flsub	;wreg free
 10760  001A58  C060  F140         	movff	?___flsub,_powf$2497
 10761  001A5C  C061  F141         	movff	?___flsub+1,_powf$2497+1
 10762  001A60  C062  F142         	movff	?___flsub+2,_powf$2497+2
 10763  001A64  C063  F143         	movff	?___flsub+3,_powf$2497+3
 10764  001A68  C120  F064         	movff	powf@z_h,___flsub@a
 10765  001A6C  C121  F065         	movff	powf@z_h+1,___flsub@a+1
 10766  001A70  C122  F066         	movff	powf@z_h+2,___flsub@a+2
 10767  001A74  C123  F067         	movff	powf@z_h+3,___flsub@a+3
 10768  001A78  C140  F060         	movff	_powf$2497,___flsub@b
 10769  001A7C  C141  F061         	movff	_powf$2497+1,___flsub@b+1
 10770  001A80  C142  F062         	movff	_powf$2497+2,___flsub@b+2
 10771  001A84  C143  F063         	movff	_powf$2497+3,___flsub@b+3
 10772  001A88  EC69  F02A         	call	___flsub	;wreg free
 10773  001A8C  C060  F10C         	movff	?___flsub,_powf$2499
 10774  001A90  C061  F10D         	movff	?___flsub+1,_powf$2499+1
 10775  001A94  C062  F10E         	movff	?___flsub+2,_powf$2499+2
 10776  001A98  C063  F10F         	movff	?___flsub+3,_powf$2499+3
 10777  001A9C  C124  F060         	movff	powf@z_l,___flsub@b
 10778  001AA0  C125  F061         	movff	powf@z_l+1,___flsub@b+1
 10779  001AA4  C126  F062         	movff	powf@z_l+2,___flsub@b+2
 10780  001AA8  C127  F063         	movff	powf@z_l+3,___flsub@b+3
 10781  001AAC  C10C  F064         	movff	_powf$2499,___flsub@a
 10782  001AB0  C10D  F065         	movff	_powf$2499+1,___flsub@a+1
 10783  001AB4  C10E  F066         	movff	_powf$2499+2,___flsub@a+2
 10784  001AB8  C10F  F067         	movff	_powf$2499+3,___flsub@a+3
 10785  001ABC  EC69  F02A         	call	___flsub	;wreg free
 10786  001AC0                     L4:
 10787  001AC0  C060  F11C         	movff	?___flsub,powf@t2
 10788  001AC4  C061  F11D         	movff	?___flsub+1,powf@t2+1
 10789  001AC8  C062  F11E         	movff	?___flsub+2,powf@t2+2
 10790  001ACC  C063  F11F         	movff	?___flsub+3,powf@t2+3
 10791  001AD0  C0A5  F1B8         	movff	powf@y,powf@__xc8_float_word
 10792  001AD4  C0A6  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
 10793  001AD8  C0A7  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
 10794  001ADC  C0A8  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
 10795  001AE0  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 10796  001AE4  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 10797  001AE8  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 10798  001AEC  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 10799  001AF0  0E00               	movlw	0
 10800  001AF2  0101               	movlb	1	; () banked
 10801  001AF4  1594               	andwf	powf@is& (0+255),w,b
 10802  001AF6  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10803  001AF8  0EF0               	movlw	240
 10804  001AFA  1595               	andwf	(powf@is+1)& (0+255),w,b
 10805  001AFC  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10806  001AFE  0EFF               	movlw	255
 10807  001B00  1596               	andwf	(powf@is+2)& (0+255),w,b
 10808  001B02  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10809  001B04  0EFF               	movlw	255
 10810  001B06  1597               	andwf	(powf@is+3)& (0+255),w,b
 10811  001B08  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10812                           
 10813                           ; BSR set to: 1
 10814  001B0A  C1B8  F128         	movff	powf@__xc8_float_word,powf@y1
 10815  001B0E  C1B9  F129         	movff	powf@__xc8_float_word+1,powf@y1+1
 10816  001B12  C1BA  F12A         	movff	powf@__xc8_float_word+2,powf@y1+2
 10817  001B16  C1BB  F12B         	movff	powf@__xc8_float_word+3,powf@y1+3
 10818                           
 10819                           ; BSR set to: 1
 10820  001B1A  C180  F020         	movff	powf@t1,___flmul@a
 10821  001B1E  C181  F021         	movff	powf@t1+1,___flmul@a+1
 10822  001B22  C182  F022         	movff	powf@t1+2,___flmul@a+2
 10823  001B26  C183  F023         	movff	powf@t1+3,___flmul@a+3
 10824  001B2A  C128  F064         	movff	powf@y1,___flsub@a
 10825  001B2E  C129  F065         	movff	powf@y1+1,___flsub@a+1
 10826  001B32  C12A  F066         	movff	powf@y1+2,___flsub@a+2
 10827  001B36  C12B  F067         	movff	powf@y1+3,___flsub@a+3
 10828  001B3A  C0A5  F060         	movff	powf@y,___flsub@b
 10829  001B3E  C0A6  F061         	movff	powf@y+1,___flsub@b+1
 10830  001B42  C0A7  F062         	movff	powf@y+2,___flsub@b+2
 10831  001B46  C0A8  F063         	movff	powf@y+3,___flsub@b+3
 10832  001B4A  EC69  F02A         	call	___flsub	;wreg free
 10833  001B4E  C060  F01C         	movff	?___flsub,___flmul@b
 10834  001B52  C061  F01D         	movff	?___flsub+1,___flmul@b+1
 10835  001B56  C062  F01E         	movff	?___flsub+2,___flmul@b+2
 10836  001B5A  C063  F01F         	movff	?___flsub+3,___flmul@b+3
 10837  001B5E  ECA5  F01A         	call	___flmul	;wreg free
 10838  001B62  C01C  F110         	movff	?___flmul,_powf$2500
 10839  001B66  C01D  F111         	movff	?___flmul+1,_powf$2500+1
 10840  001B6A  C01E  F112         	movff	?___flmul+2,_powf$2500+2
 10841  001B6E  C01F  F113         	movff	?___flmul+3,_powf$2500+3
 10842  001B72  C110  F00C         	movff	_powf$2500,___fladd@b
 10843  001B76  C111  F00D         	movff	_powf$2500+1,___fladd@b+1
 10844  001B7A  C112  F00E         	movff	_powf$2500+2,___fladd@b+2
 10845  001B7E  C113  F00F         	movff	_powf$2500+3,___fladd@b+3
 10846  001B82  C11C  F020         	movff	powf@t2,___flmul@a
 10847  001B86  C11D  F021         	movff	powf@t2+1,___flmul@a+1
 10848  001B8A  C11E  F022         	movff	powf@t2+2,___flmul@a+2
 10849  001B8E  C11F  F023         	movff	powf@t2+3,___flmul@a+3
 10850  001B92  C0A5  F01C         	movff	powf@y,___flmul@b
 10851  001B96  C0A6  F01D         	movff	powf@y+1,___flmul@b+1
 10852  001B9A  C0A7  F01E         	movff	powf@y+2,___flmul@b+2
 10853  001B9E  C0A8  F01F         	movff	powf@y+3,___flmul@b+3
 10854  001BA2  ECA5  F01A         	call	___flmul	;wreg free
 10855  001BA6  C01C  F010         	movff	?___flmul,___fladd@a
 10856  001BAA  C01D  F011         	movff	?___flmul+1,___fladd@a+1
 10857  001BAE  C01E  F012         	movff	?___flmul+2,___fladd@a+2
 10858  001BB2  C01F  F013         	movff	?___flmul+3,___fladd@a+3
 10859  001BB6  EC4E  F01C         	call	___fladd	;wreg free
 10860  001BBA  C00C  F164         	movff	?___fladd,powf@p_l
 10861  001BBE  C00D  F165         	movff	?___fladd+1,powf@p_l+1
 10862  001BC2  C00E  F166         	movff	?___fladd+2,powf@p_l+2
 10863  001BC6  C00F  F167         	movff	?___fladd+3,powf@p_l+3
 10864  001BCA  C128  F01C         	movff	powf@y1,___flmul@b
 10865  001BCE  C129  F01D         	movff	powf@y1+1,___flmul@b+1
 10866  001BD2  C12A  F01E         	movff	powf@y1+2,___flmul@b+2
 10867  001BD6  C12B  F01F         	movff	powf@y1+3,___flmul@b+3
 10868  001BDA  C180  F020         	movff	powf@t1,___flmul@a
 10869  001BDE  C181  F021         	movff	powf@t1+1,___flmul@a+1
 10870  001BE2  C182  F022         	movff	powf@t1+2,___flmul@a+2
 10871  001BE6  C183  F023         	movff	powf@t1+3,___flmul@a+3
 10872  001BEA  ECA5  F01A         	call	___flmul	;wreg free
 10873  001BEE  C01C  F19C         	movff	?___flmul,powf@p_h
 10874  001BF2  C01D  F19D         	movff	?___flmul+1,powf@p_h+1
 10875  001BF6  C01E  F19E         	movff	?___flmul+2,powf@p_h+2
 10876  001BFA  C01F  F19F         	movff	?___flmul+3,powf@p_h+3
 10877  001BFE  C164  F00C         	movff	powf@p_l,___fladd@b
 10878  001C02  C165  F00D         	movff	powf@p_l+1,___fladd@b+1
 10879  001C06  C166  F00E         	movff	powf@p_l+2,___fladd@b+2
 10880  001C0A  C167  F00F         	movff	powf@p_l+3,___fladd@b+3
 10881  001C0E  C19C  F010         	movff	powf@p_h,___fladd@a
 10882  001C12  C19D  F011         	movff	powf@p_h+1,___fladd@a+1
 10883  001C16  C19E  F012         	movff	powf@p_h+2,___fladd@a+2
 10884  001C1A  C19F  F013         	movff	powf@p_h+3,___fladd@a+3
 10885  001C1E  EC4E  F01C         	call	___fladd	;wreg free
 10886  001C22  C00C  F1B4         	movff	?___fladd,powf@z
 10887  001C26  C00D  F1B5         	movff	?___fladd+1,powf@z+1
 10888  001C2A  C00E  F1B6         	movff	?___fladd+2,powf@z+2
 10889  001C2E  C00F  F1B7         	movff	?___fladd+3,powf@z+3
 10890  001C32  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
 10891  001C36  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
 10892  001C3A  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
 10893  001C3E  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
 10894  001C42  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
 10895  001C46  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
 10896  001C4A  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
 10897  001C4E  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
 10898  001C52  0101               	movlb	1	; () banked
 10899  001C54  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
 10900  001C56  D03E               	goto	l8909
 10901  001C58  05AC               	decf	powf@j& (0+255),w,b
 10902  001C5A  0E00               	movlw	0
 10903  001C5C  59AD               	subwfb	(powf@j+1)& (0+255),w,b
 10904  001C5E  0E00               	movlw	0
 10905  001C60  59AE               	subwfb	(powf@j+2)& (0+255),w,b
 10906  001C62  0E43               	movlw	67
 10907  001C64  59AF               	subwfb	(powf@j+3)& (0+255),w,b
 10908  001C66  A0D8               	btfss	status,0,c
 10909  001C68  D035               	goto	l8909
 10910                           
 10911                           ; BSR set to: 1
 10912  001C6A  0ECA               	movlw	202
 10913  001C6C  6E20               	movwf	___flmul@a,c
 10914  001C6E  0EF2               	movlw	242
 10915  001C70  6E21               	movwf	___flmul@a+1,c
 10916  001C72  0E49               	movlw	73
 10917  001C74  6E22               	movwf	___flmul@a+2,c
 10918  001C76  0E71               	movlw	113
 10919  001C78  6E23               	movwf	___flmul@a+3,c
 10920  001C7A  C184  F01C         	movff	powf@sn,___flmul@b
 10921  001C7E  C185  F01D         	movff	powf@sn+1,___flmul@b+1
 10922  001C82  C186  F01E         	movff	powf@sn+2,___flmul@b+2
 10923  001C86  C187  F01F         	movff	powf@sn+3,___flmul@b+3
 10924  001C8A  ECA5  F01A         	call	___flmul	;wreg free
 10925  001C8E  C01C  F1A4         	movff	?___flmul,_powf$2488
 10926  001C92  C01D  F1A5         	movff	?___flmul+1,_powf$2488+1
 10927  001C96  C01E  F1A6         	movff	?___flmul+2,_powf$2488+2
 10928  001C9A  C01F  F1A7         	movff	?___flmul+3,_powf$2488+3
 10929  001C9E  C1A4  F01C         	movff	_powf$2488,___flmul@b
 10930  001CA2  C1A5  F01D         	movff	_powf$2488+1,___flmul@b+1
 10931  001CA6  C1A6  F01E         	movff	_powf$2488+2,___flmul@b+2
 10932  001CAA  C1A7  F01F         	movff	_powf$2488+3,___flmul@b+3
 10933  001CAE  0ECA               	movlw	202
 10934  001CB0  6E20               	movwf	___flmul@a,c
 10935  001CB2  0EF2               	movlw	242
 10936  001CB4  6E21               	movwf	___flmul@a+1,c
 10937  001CB6  0E49               	movlw	73
 10938  001CB8  6E22               	movwf	___flmul@a+2,c
 10939  001CBA  0E71               	movlw	113
 10940  001CBC  6E23               	movwf	___flmul@a+3,c
 10941  001CBE  ECA5  F01A         	call	___flmul	;wreg free
 10942  001CC2  C01C  F0A1         	movff	?___flmul,?_powf
 10943  001CC6  C01D  F0A2         	movff	?___flmul+1,?_powf+1
 10944  001CCA  C01E  F0A3         	movff	?___flmul+2,?_powf+2
 10945  001CCE  C01F  F0A4         	movff	?___flmul+3,?_powf+3
 10946  001CD2  0012               	return	
 10947  001CD4                     l8909:
 10948                           
 10949                           ; BSR set to: 1
 10950  001CD4  0E43               	movlw	67
 10951  001CD6  19AF               	xorwf	(powf@j+3)& (0+255),w,b
 10952  001CD8  11AC               	iorwf	powf@j& (0+255),w,b
 10953  001CDA  11AD               	iorwf	(powf@j+1)& (0+255),w,b
 10954  001CDC  11AE               	iorwf	(powf@j+2)& (0+255),w,b
 10955  001CDE  A4D8               	btfss	status,2,c
 10956  001CE0  D06E               	goto	l8917
 10957                           
 10958                           ; BSR set to: 1
 10959  001CE2  C19C  F064         	movff	powf@p_h,___flsub@a
 10960  001CE6  C19D  F065         	movff	powf@p_h+1,___flsub@a+1
 10961  001CEA  C19E  F066         	movff	powf@p_h+2,___flsub@a+2
 10962  001CEE  C19F  F067         	movff	powf@p_h+3,___flsub@a+3
 10963  001CF2  C1B4  F060         	movff	powf@z,___flsub@b
 10964  001CF6  C1B5  F061         	movff	powf@z+1,___flsub@b+1
 10965  001CFA  C1B6  F062         	movff	powf@z+2,___flsub@b+2
 10966  001CFE  C1B7  F063         	movff	powf@z+3,___flsub@b+3
 10967  001D02  EC69  F02A         	call	___flsub	;wreg free
 10968  001D06  C060  F068         	movff	?___flsub,___flge@ff1
 10969  001D0A  C061  F069         	movff	?___flsub+1,___flge@ff1+1
 10970  001D0E  C062  F06A         	movff	?___flsub+2,___flge@ff1+2
 10971  001D12  C063  F06B         	movff	?___flsub+3,___flge@ff1+3
 10972  001D16  0E3C               	movlw	60
 10973  001D18  6E10               	movwf	___fladd@a,c
 10974  001D1A  0EAA               	movlw	170
 10975  001D1C  6E11               	movwf	___fladd@a+1,c
 10976  001D1E  0E38               	movlw	56
 10977  001D20  6E12               	movwf	___fladd@a+2,c
 10978  001D22  0E33               	movlw	51
 10979  001D24  6E13               	movwf	___fladd@a+3,c
 10980  001D26  C164  F00C         	movff	powf@p_l,___fladd@b
 10981  001D2A  C165  F00D         	movff	powf@p_l+1,___fladd@b+1
 10982  001D2E  C166  F00E         	movff	powf@p_l+2,___fladd@b+2
 10983  001D32  C167  F00F         	movff	powf@p_l+3,___fladd@b+3
 10984  001D36  EC4E  F01C         	call	___fladd	;wreg free
 10985  001D3A  C00C  F06C         	movff	?___fladd,___flge@ff2
 10986  001D3E  C00D  F06D         	movff	?___fladd+1,___flge@ff2+1
 10987  001D42  C00E  F06E         	movff	?___fladd+2,___flge@ff2+2
 10988  001D46  C00F  F06F         	movff	?___fladd+3,___flge@ff2+3
 10989  001D4A  ECE3  F025         	call	___flge	;wreg free
 10990  001D4E  0100               	movlb	0	; () banked
 10991  001D50  B0D8               	btfsc	status,0,c
 10992  001D52  D0EE               	goto	l8933
 10993                           
 10994                           ; BSR set to: 0
 10995  001D54  0ECA               	movlw	202
 10996  001D56  6E20               	movwf	___flmul@a,c
 10997  001D58  0EF2               	movlw	242
 10998  001D5A  6E21               	movwf	___flmul@a+1,c
 10999  001D5C  0E49               	movlw	73
 11000  001D5E  6E22               	movwf	___flmul@a+2,c
 11001  001D60  0E71               	movlw	113
 11002  001D62  6E23               	movwf	___flmul@a+3,c
 11003  001D64  C184  F01C         	movff	powf@sn,___flmul@b
 11004  001D68  C185  F01D         	movff	powf@sn+1,___flmul@b+1
 11005  001D6C  C186  F01E         	movff	powf@sn+2,___flmul@b+2
 11006  001D70  C187  F01F         	movff	powf@sn+3,___flmul@b+3
 11007  001D74  ECA5  F01A         	call	___flmul	;wreg free
 11008  001D78  C01C  F1A4         	movff	?___flmul,_powf$2488
 11009  001D7C  C01D  F1A5         	movff	?___flmul+1,_powf$2488+1
 11010  001D80  C01E  F1A6         	movff	?___flmul+2,_powf$2488+2
 11011  001D84  C01F  F1A7         	movff	?___flmul+3,_powf$2488+3
 11012  001D88  C1A4  F01C         	movff	_powf$2488,___flmul@b
 11013  001D8C  C1A5  F01D         	movff	_powf$2488+1,___flmul@b+1
 11014  001D90  C1A6  F01E         	movff	_powf$2488+2,___flmul@b+2
 11015  001D94  C1A7  F01F         	movff	_powf$2488+3,___flmul@b+3
 11016  001D98  0ECA               	movlw	202
 11017  001D9A  6E20               	movwf	___flmul@a,c
 11018  001D9C  0EF2               	movlw	242
 11019  001D9E  6E21               	movwf	___flmul@a+1,c
 11020  001DA0  0E49               	movlw	73
 11021  001DA2  6E22               	movwf	___flmul@a+2,c
 11022  001DA4  0E71               	movlw	113
 11023  001DA6  6E23               	movwf	___flmul@a+3,c
 11024  001DA8  ECA5  F01A         	call	___flmul	;wreg free
 11025  001DAC  C01C  F0A1         	movff	?___flmul,?_powf
 11026  001DB0  C01D  F0A2         	movff	?___flmul+1,?_powf+1
 11027  001DB4  C01E  F0A3         	movff	?___flmul+2,?_powf+2
 11028  001DB8  C01F  F0A4         	movff	?___flmul+3,?_powf+3
 11029  001DBC  0012               	return	
 11030  001DBE                     l8917:
 11031                           
 11032                           ; BSR set to: 1
 11033  001DBE  0EFF               	movlw	255
 11034  001DC0  15AC               	andwf	powf@j& (0+255),w,b
 11035  001DC2  0100               	movlb	0	; () banked
 11036  001DC4  6FA9               	movwf	??_powf& (0+255),b
 11037  001DC6  0EFF               	movlw	255
 11038  001DC8  0101               	movlb	1	; () banked
 11039  001DCA  15AD               	andwf	(powf@j+1)& (0+255),w,b
 11040  001DCC  0100               	movlb	0	; () banked
 11041  001DCE  6FAA               	movwf	(??_powf+1)& (0+255),b
 11042  001DD0  0EFF               	movlw	255
 11043  001DD2  0101               	movlb	1	; () banked
 11044  001DD4  15AE               	andwf	(powf@j+2)& (0+255),w,b
 11045  001DD6  0100               	movlb	0	; () banked
 11046  001DD8  6FAB               	movwf	(??_powf+2)& (0+255),b
 11047  001DDA  0E7F               	movlw	127
 11048  001DDC  0101               	movlb	1	; () banked
 11049  001DDE  15AF               	andwf	(powf@j+3)& (0+255),w,b
 11050  001DE0  0100               	movlb	0	; () banked
 11051  001DE2  6FAC               	movwf	(??_powf+3)& (0+255),b
 11052  001DE4  BFAC               	btfsc	(??_powf+3)& (0+255),7,b
 11053  001DE6  D03E               	goto	l8925
 11054  001DE8  05A9               	decf	??_powf& (0+255),w,b
 11055  001DEA  0E00               	movlw	0
 11056  001DEC  59AA               	subwfb	(??_powf+1)& (0+255),w,b
 11057  001DEE  0E16               	movlw	22
 11058  001DF0  59AB               	subwfb	(??_powf+2)& (0+255),w,b
 11059  001DF2  0E43               	movlw	67
 11060  001DF4  59AC               	subwfb	(??_powf+3)& (0+255),w,b
 11061  001DF6  A0D8               	btfss	status,0,c
 11062  001DF8  D035               	goto	l8925
 11063                           
 11064                           ; BSR set to: 0
 11065  001DFA  0E60               	movlw	96
 11066  001DFC  6E20               	movwf	___flmul@a,c
 11067  001DFE  0E42               	movlw	66
 11068  001E00  6E21               	movwf	___flmul@a+1,c
 11069  001E02  0EA2               	movlw	162
 11070  001E04  6E22               	movwf	___flmul@a+2,c
 11071  001E06  0E0D               	movlw	13
 11072  001E08  6E23               	movwf	___flmul@a+3,c
 11073  001E0A  C184  F01C         	movff	powf@sn,___flmul@b
 11074  001E0E  C185  F01D         	movff	powf@sn+1,___flmul@b+1
 11075  001E12  C186  F01E         	movff	powf@sn+2,___flmul@b+2
 11076  001E16  C187  F01F         	movff	powf@sn+3,___flmul@b+3
 11077  001E1A  ECA5  F01A         	call	___flmul	;wreg free
 11078  001E1E  C01C  F1A4         	movff	?___flmul,_powf$2488
 11079  001E22  C01D  F1A5         	movff	?___flmul+1,_powf$2488+1
 11080  001E26  C01E  F1A6         	movff	?___flmul+2,_powf$2488+2
 11081  001E2A  C01F  F1A7         	movff	?___flmul+3,_powf$2488+3
 11082  001E2E  C1A4  F01C         	movff	_powf$2488,___flmul@b
 11083  001E32  C1A5  F01D         	movff	_powf$2488+1,___flmul@b+1
 11084  001E36  C1A6  F01E         	movff	_powf$2488+2,___flmul@b+2
 11085  001E3A  C1A7  F01F         	movff	_powf$2488+3,___flmul@b+3
 11086  001E3E  0E60               	movlw	96
 11087  001E40  6E20               	movwf	___flmul@a,c
 11088  001E42  0E42               	movlw	66
 11089  001E44  6E21               	movwf	___flmul@a+1,c
 11090  001E46  0EA2               	movlw	162
 11091  001E48  6E22               	movwf	___flmul@a+2,c
 11092  001E4A  0E0D               	movlw	13
 11093  001E4C  6E23               	movwf	___flmul@a+3,c
 11094  001E4E  ECA5  F01A         	call	___flmul	;wreg free
 11095  001E52  C01C  F0A1         	movff	?___flmul,?_powf
 11096  001E56  C01D  F0A2         	movff	?___flmul+1,?_powf+1
 11097  001E5A  C01E  F0A3         	movff	?___flmul+2,?_powf+2
 11098  001E5E  C01F  F0A4         	movff	?___flmul+3,?_powf+3
 11099  001E62  0012               	return	
 11100  001E64                     l8925:
 11101                           
 11102                           ; BSR set to: 0
 11103  001E64  0E16               	movlw	22
 11104  001E66  0101               	movlb	1	; () banked
 11105  001E68  19AE               	xorwf	(powf@j+2)& (0+255),w,b
 11106  001E6A  E162               	bnz	l8933
 11107  001E6C  0EC3               	movlw	195
 11108  001E6E  19AF               	xorwf	(powf@j+3)& (0+255),w,b
 11109  001E70  11AC               	iorwf	powf@j& (0+255),w,b
 11110  001E72  11AD               	iorwf	(powf@j+1)& (0+255),w,b
 11111  001E74  A4D8               	btfss	status,2,c
 11112  001E76  D05C               	goto	l8933
 11113                           
 11114                           ; BSR set to: 1
 11115  001E78  C19C  F064         	movff	powf@p_h,___flsub@a
 11116  001E7C  C19D  F065         	movff	powf@p_h+1,___flsub@a+1
 11117  001E80  C19E  F066         	movff	powf@p_h+2,___flsub@a+2
 11118  001E84  C19F  F067         	movff	powf@p_h+3,___flsub@a+3
 11119  001E88  C1B4  F060         	movff	powf@z,___flsub@b
 11120  001E8C  C1B5  F061         	movff	powf@z+1,___flsub@b+1
 11121  001E90  C1B6  F062         	movff	powf@z+2,___flsub@b+2
 11122  001E94  C1B7  F063         	movff	powf@z+3,___flsub@b+3
 11123  001E98  EC69  F02A         	call	___flsub	;wreg free
 11124  001E9C  C060  F068         	movff	?___flsub,___flge@ff1
 11125  001EA0  C061  F069         	movff	?___flsub+1,___flge@ff1+1
 11126  001EA4  C062  F06A         	movff	?___flsub+2,___flge@ff1+2
 11127  001EA8  C063  F06B         	movff	?___flsub+3,___flge@ff1+3
 11128  001EAC  C164  F06C         	movff	powf@p_l,___flge@ff2
 11129  001EB0  C165  F06D         	movff	powf@p_l+1,___flge@ff2+1
 11130  001EB4  C166  F06E         	movff	powf@p_l+2,___flge@ff2+2
 11131  001EB8  C167  F06F         	movff	powf@p_l+3,___flge@ff2+3
 11132  001EBC  ECE3  F025         	call	___flge	;wreg free
 11133  001EC0  0100               	movlb	0	; () banked
 11134  001EC2  A0D8               	btfss	status,0,c
 11135  001EC4  D035               	goto	l8933
 11136                           
 11137                           ; BSR set to: 0
 11138  001EC6  0E60               	movlw	96
 11139  001EC8  6E20               	movwf	___flmul@a,c
 11140  001ECA  0E42               	movlw	66
 11141  001ECC  6E21               	movwf	___flmul@a+1,c
 11142  001ECE  0EA2               	movlw	162
 11143  001ED0  6E22               	movwf	___flmul@a+2,c
 11144  001ED2  0E0D               	movlw	13
 11145  001ED4  6E23               	movwf	___flmul@a+3,c
 11146  001ED6  C184  F01C         	movff	powf@sn,___flmul@b
 11147  001EDA  C185  F01D         	movff	powf@sn+1,___flmul@b+1
 11148  001EDE  C186  F01E         	movff	powf@sn+2,___flmul@b+2
 11149  001EE2  C187  F01F         	movff	powf@sn+3,___flmul@b+3
 11150  001EE6  ECA5  F01A         	call	___flmul	;wreg free
 11151  001EEA  C01C  F1A4         	movff	?___flmul,_powf$2488
 11152  001EEE  C01D  F1A5         	movff	?___flmul+1,_powf$2488+1
 11153  001EF2  C01E  F1A6         	movff	?___flmul+2,_powf$2488+2
 11154  001EF6  C01F  F1A7         	movff	?___flmul+3,_powf$2488+3
 11155  001EFA  C1A4  F01C         	movff	_powf$2488,___flmul@b
 11156  001EFE  C1A5  F01D         	movff	_powf$2488+1,___flmul@b+1
 11157  001F02  C1A6  F01E         	movff	_powf$2488+2,___flmul@b+2
 11158  001F06  C1A7  F01F         	movff	_powf$2488+3,___flmul@b+3
 11159  001F0A  0E60               	movlw	96
 11160  001F0C  6E20               	movwf	___flmul@a,c
 11161  001F0E  0E42               	movlw	66
 11162  001F10  6E21               	movwf	___flmul@a+1,c
 11163  001F12  0EA2               	movlw	162
 11164  001F14  6E22               	movwf	___flmul@a+2,c
 11165  001F16  0E0D               	movlw	13
 11166  001F18  6E23               	movwf	___flmul@a+3,c
 11167  001F1A  ECA5  F01A         	call	___flmul	;wreg free
 11168  001F1E  C01C  F0A1         	movff	?___flmul,?_powf
 11169  001F22  C01D  F0A2         	movff	?___flmul+1,?_powf+1
 11170  001F26  C01E  F0A3         	movff	?___flmul+2,?_powf+2
 11171  001F2A  C01F  F0A4         	movff	?___flmul+3,?_powf+3
 11172  001F2E  0012               	return	
 11173  001F30                     l8933:
 11174  001F30  0EFF               	movlw	255
 11175  001F32  0101               	movlb	1	; () banked
 11176  001F34  15AC               	andwf	powf@j& (0+255),w,b
 11177  001F36  6F2C               	movwf	powf@i& (0+255),b
 11178  001F38  0EFF               	movlw	255
 11179  001F3A  15AD               	andwf	(powf@j+1)& (0+255),w,b
 11180  001F3C  6F2D               	movwf	(powf@i+1)& (0+255),b
 11181  001F3E  0EFF               	movlw	255
 11182  001F40  15AE               	andwf	(powf@j+2)& (0+255),w,b
 11183  001F42  6F2E               	movwf	(powf@i+2)& (0+255),b
 11184  001F44  0E7F               	movlw	127
 11185  001F46  15AF               	andwf	(powf@j+3)& (0+255),w,b
 11186  001F48  6F2F               	movwf	(powf@i+3)& (0+255),b
 11187  001F4A  0E17               	movlw	23
 11188  001F4C  0100               	movlb	0	; () banked
 11189  001F4E  6FA9               	movwf	??_powf& (0+255),b
 11190  001F50  C12C  F0AA         	movff	powf@i,??_powf+1
 11191  001F54  C12D  F0AB         	movff	powf@i+1,??_powf+2
 11192  001F58  C12E  F0AC         	movff	powf@i+2,??_powf+3
 11193  001F5C  C12F  F0AD         	movff	powf@i+3,??_powf+4
 11194  001F60                     u9785:
 11195  001F60  67A9               	tstfsz	??_powf& (0+255),b
 11196  001F62  D001               	goto	u9786
 11197  001F64  D007               	goto	u9787
 11198  001F66                     u9786:
 11199  001F66  35AD               	rlcf	(??_powf+4)& (0+255),w,b
 11200  001F68  33AD               	rrcf	(??_powf+4)& (0+255),f,b
 11201  001F6A  33AC               	rrcf	(??_powf+3)& (0+255),f,b
 11202  001F6C  33AB               	rrcf	(??_powf+2)& (0+255),f,b
 11203  001F6E  33AA               	rrcf	(??_powf+1)& (0+255),f,b
 11204  001F70  2FA9               	decfsz	??_powf& (0+255),f,b
 11205  001F72  D7F6               	goto	u9785
 11206  001F74                     u9787:
 11207  001F74  0E81               	movlw	129
 11208  001F76  0100               	movlb	0	; () banked
 11209  001F78  25AA               	addwf	(??_powf+1)& (0+255),w,b
 11210  001F7A  0101               	movlb	1	; () banked
 11211  001F7C  6FA0               	movwf	powf@k& (0+255),b
 11212  001F7E  0EFF               	movlw	255
 11213  001F80  0100               	movlb	0	; () banked
 11214  001F82  21AB               	addwfc	(??_powf+2)& (0+255),w,b
 11215  001F84  0101               	movlb	1	; () banked
 11216  001F86  6FA1               	movwf	(powf@k+1)& (0+255),b
 11217  001F88  0EFF               	movlw	255
 11218  001F8A  0100               	movlb	0	; () banked
 11219  001F8C  21AC               	addwfc	(??_powf+3)& (0+255),w,b
 11220  001F8E  0101               	movlb	1	; () banked
 11221  001F90  6FA2               	movwf	(powf@k+2)& (0+255),b
 11222  001F92  0EFF               	movlw	255
 11223  001F94  0100               	movlb	0	; () banked
 11224  001F96  21AD               	addwfc	(??_powf+4)& (0+255),w,b
 11225  001F98  0101               	movlb	1	; () banked
 11226  001F9A  6FA3               	movwf	(powf@k+3)& (0+255),b
 11227                           
 11228                           ; BSR set to: 1
 11229  001F9C  0E00               	movlw	0
 11230  001F9E  6F88               	movwf	powf@n& (0+255),b
 11231  001FA0  0E00               	movlw	0
 11232  001FA2  6F89               	movwf	(powf@n+1)& (0+255),b
 11233  001FA4  0E00               	movlw	0
 11234  001FA6  6F8A               	movwf	(powf@n+2)& (0+255),b
 11235  001FA8  0E00               	movlw	0
 11236  001FAA  6F8B               	movwf	(powf@n+3)& (0+255),b
 11237                           
 11238                           ; BSR set to: 1
 11239  001FAC  BF2F               	btfsc	(powf@i+3)& (0+255),7,b
 11240  001FAE  D0FC               	goto	l8947
 11241  001FB0  052C               	decf	powf@i& (0+255),w,b
 11242  001FB2  0E00               	movlw	0
 11243  001FB4  592D               	subwfb	(powf@i+1)& (0+255),w,b
 11244  001FB6  0E00               	movlw	0
 11245  001FB8  592E               	subwfb	(powf@i+2)& (0+255),w,b
 11246  001FBA  0E3F               	movlw	63
 11247  001FBC  592F               	subwfb	(powf@i+3)& (0+255),w,b
 11248  001FBE  A0D8               	btfss	status,0,c
 11249  001FC0  D0F3               	goto	l8947
 11250                           
 11251                           ; BSR set to: 1
 11252  001FC2  C1A0  F0A9         	movff	powf@k,??_powf
 11253  001FC6  0E01               	movlw	1
 11254  001FC8  0100               	movlb	0	; () banked
 11255  001FCA  27A9               	addwf	??_powf& (0+255),f,b
 11256  001FCC  0E00               	movlw	0
 11257  001FCE  6FAA               	movwf	(??_powf+1)& (0+255),b
 11258  001FD0  0E00               	movlw	0
 11259  001FD2  6FAB               	movwf	(??_powf+2)& (0+255),b
 11260  001FD4  0E80               	movlw	128
 11261  001FD6  6FAC               	movwf	(??_powf+3)& (0+255),b
 11262  001FD8  0E00               	movlw	0
 11263  001FDA  6FAD               	movwf	(??_powf+4)& (0+255),b
 11264  001FDC                     u9805:
 11265  001FDC  67A9               	tstfsz	??_powf& (0+255),b
 11266  001FDE  D001               	goto	u9806
 11267  001FE0  D007               	goto	u9807
 11268  001FE2                     u9806:
 11269  001FE2  35AD               	rlcf	(??_powf+4)& (0+255),w,b
 11270  001FE4  33AD               	rrcf	(??_powf+4)& (0+255),f,b
 11271  001FE6  33AC               	rrcf	(??_powf+3)& (0+255),f,b
 11272  001FE8  33AB               	rrcf	(??_powf+2)& (0+255),f,b
 11273  001FEA  33AA               	rrcf	(??_powf+1)& (0+255),f,b
 11274  001FEC  2FA9               	decfsz	??_powf& (0+255),f,b
 11275  001FEE  D7F6               	goto	u9805
 11276  001FF0                     u9807:
 11277  001FF0  0101               	movlb	1	; () banked
 11278  001FF2  51AC               	movf	powf@j& (0+255),w,b
 11279  001FF4  0100               	movlb	0	; () banked
 11280  001FF6  25AA               	addwf	(??_powf+1)& (0+255),w,b
 11281  001FF8  0101               	movlb	1	; () banked
 11282  001FFA  6F88               	movwf	powf@n& (0+255),b
 11283  001FFC  51AD               	movf	(powf@j+1)& (0+255),w,b
 11284  001FFE  0100               	movlb	0	; () banked
 11285  002000  21AB               	addwfc	(??_powf+2)& (0+255),w,b
 11286  002002  0101               	movlb	1	; () banked
 11287  002004  6F89               	movwf	(powf@n+1)& (0+255),b
 11288  002006  51AE               	movf	(powf@j+2)& (0+255),w,b
 11289  002008  0100               	movlb	0	; () banked
 11290  00200A  21AC               	addwfc	(??_powf+3)& (0+255),w,b
 11291  00200C  0101               	movlb	1	; () banked
 11292  00200E  6F8A               	movwf	(powf@n+2)& (0+255),b
 11293  002010  51AF               	movf	(powf@j+3)& (0+255),w,b
 11294  002012  0100               	movlb	0	; () banked
 11295  002014  21AD               	addwfc	(??_powf+4)& (0+255),w,b
 11296  002016  0101               	movlb	1	; () banked
 11297  002018  6F8B               	movwf	(powf@n+3)& (0+255),b
 11298  00201A  0E81               	movlw	129
 11299  00201C  0100               	movlb	0	; () banked
 11300  00201E  6FA9               	movwf	??_powf& (0+255),b
 11301  002020  0EFF               	movlw	255
 11302  002022  6FAA               	movwf	(??_powf+1)& (0+255),b
 11303  002024  0EFF               	movlw	255
 11304  002026  6FAB               	movwf	(??_powf+2)& (0+255),b
 11305  002028  0EFF               	movlw	255
 11306  00202A  6FAC               	movwf	(??_powf+3)& (0+255),b
 11307  00202C  0E17               	movlw	23
 11308  00202E  6FAD               	movwf	(??_powf+4)& (0+255),b
 11309  002030  C188  F0AE         	movff	powf@n,??_powf+5
 11310  002034  C189  F0AF         	movff	powf@n+1,??_powf+6
 11311  002038  C18A  F0B0         	movff	powf@n+2,??_powf+7
 11312  00203C  C18B  F0B1         	movff	powf@n+3,??_powf+8
 11313  002040                     u9815:
 11314  002040  67AD               	tstfsz	(??_powf+4)& (0+255),b
 11315  002042  D001               	goto	u9816
 11316  002044  D007               	goto	u9817
 11317  002046                     u9816:
 11318  002046  35B1               	rlcf	(??_powf+8)& (0+255),w,b
 11319  002048  33B1               	rrcf	(??_powf+8)& (0+255),f,b
 11320  00204A  33B0               	rrcf	(??_powf+7)& (0+255),f,b
 11321  00204C  33AF               	rrcf	(??_powf+6)& (0+255),f,b
 11322  00204E  33AE               	rrcf	(??_powf+5)& (0+255),f,b
 11323  002050  2FAD               	decfsz	(??_powf+4)& (0+255),f,b
 11324  002052  D7F6               	goto	u9815
 11325  002054                     u9817:
 11326  002054  0100               	movlb	0	; () banked
 11327  002056  51AE               	movf	(??_powf+5)& (0+255),w,b
 11328  002058  25A9               	addwf	??_powf& (0+255),w,b
 11329  00205A  0101               	movlb	1	; () banked
 11330  00205C  6FA0               	movwf	powf@k& (0+255),b
 11331  00205E  0E00               	movlw	0
 11332  002060  0100               	movlb	0	; () banked
 11333  002062  21AA               	addwfc	(??_powf+1)& (0+255),w,b
 11334  002064  0101               	movlb	1	; () banked
 11335  002066  6FA1               	movwf	(powf@k+1)& (0+255),b
 11336  002068  0E00               	movlw	0
 11337  00206A  0100               	movlb	0	; () banked
 11338  00206C  21AB               	addwfc	(??_powf+2)& (0+255),w,b
 11339  00206E  0101               	movlb	1	; () banked
 11340  002070  6FA2               	movwf	(powf@k+2)& (0+255),b
 11341  002072  0E00               	movlw	0
 11342  002074  0100               	movlb	0	; () banked
 11343  002076  21AC               	addwfc	(??_powf+3)& (0+255),w,b
 11344  002078  0101               	movlb	1	; () banked
 11345  00207A  6FA3               	movwf	(powf@k+3)& (0+255),b
 11346                           
 11347                           ; BSR set to: 1
 11348  00207C  C1A0  F0A9         	movff	powf@k,??_powf
 11349  002080  0EFF               	movlw	255
 11350  002082  0100               	movlb	0	; () banked
 11351  002084  6FAA               	movwf	(??_powf+1)& (0+255),b
 11352  002086  0EFF               	movlw	255
 11353  002088  6FAB               	movwf	(??_powf+2)& (0+255),b
 11354  00208A  0E7F               	movlw	127
 11355  00208C  6FAC               	movwf	(??_powf+3)& (0+255),b
 11356  00208E  0E00               	movlw	0
 11357  002090  6FAD               	movwf	(??_powf+4)& (0+255),b
 11358  002092                     u9825:
 11359  002092  67A9               	tstfsz	??_powf& (0+255),b
 11360  002094  D001               	goto	u9826
 11361  002096  D007               	goto	u9827
 11362  002098                     u9826:
 11363  002098  35AD               	rlcf	(??_powf+4)& (0+255),w,b
 11364  00209A  33AD               	rrcf	(??_powf+4)& (0+255),f,b
 11365  00209C  33AC               	rrcf	(??_powf+3)& (0+255),f,b
 11366  00209E  33AB               	rrcf	(??_powf+2)& (0+255),f,b
 11367  0020A0  33AA               	rrcf	(??_powf+1)& (0+255),f,b
 11368  0020A2  2FA9               	decfsz	??_powf& (0+255),f,b
 11369  0020A4  D7F6               	goto	u9825
 11370  0020A6                     u9827:
 11371  0020A6  0100               	movlb	0	; () banked
 11372  0020A8  1DAA               	comf	(??_powf+1)& (0+255),w,b
 11373  0020AA  6FAE               	movwf	(??_powf+5)& (0+255),b
 11374  0020AC  1DAB               	comf	(??_powf+2)& (0+255),w,b
 11375  0020AE  6FAF               	movwf	(??_powf+6)& (0+255),b
 11376  0020B0  1DAC               	comf	(??_powf+3)& (0+255),w,b
 11377  0020B2  6FB0               	movwf	(??_powf+7)& (0+255),b
 11378  0020B4  1DAD               	comf	(??_powf+4)& (0+255),w,b
 11379  0020B6  6FB1               	movwf	(??_powf+8)& (0+255),b
 11380  0020B8  0101               	movlb	1	; () banked
 11381  0020BA  5188               	movf	powf@n& (0+255),w,b
 11382  0020BC  0100               	movlb	0	; () banked
 11383  0020BE  15AE               	andwf	(??_powf+5)& (0+255),w,b
 11384  0020C0  0101               	movlb	1	; () banked
 11385  0020C2  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 11386  0020C4  5189               	movf	(powf@n+1)& (0+255),w,b
 11387  0020C6  0100               	movlb	0	; () banked
 11388  0020C8  15AF               	andwf	(??_powf+6)& (0+255),w,b
 11389  0020CA  0101               	movlb	1	; () banked
 11390  0020CC  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 11391  0020CE  518A               	movf	(powf@n+2)& (0+255),w,b
 11392  0020D0  0100               	movlb	0	; () banked
 11393  0020D2  15B0               	andwf	(??_powf+7)& (0+255),w,b
 11394  0020D4  0101               	movlb	1	; () banked
 11395  0020D6  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 11396  0020D8  518B               	movf	(powf@n+3)& (0+255),w,b
 11397  0020DA  0100               	movlb	0	; () banked
 11398  0020DC  15B1               	andwf	(??_powf+8)& (0+255),w,b
 11399  0020DE  0101               	movlb	1	; () banked
 11400  0020E0  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 11401                           
 11402                           ; BSR set to: 1
 11403  0020E2  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
 11404  0020E6  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
 11405  0020EA  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
 11406  0020EE  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
 11407                           
 11408                           ; BSR set to: 1
 11409  0020F2  51A0               	movf	powf@k& (0+255),w,b
 11410  0020F4  0817               	sublw	23
 11411  0020F6  0100               	movlb	0	; () banked
 11412  0020F8  6FA9               	movwf	??_powf& (0+255),b
 11413  0020FA  0EFF               	movlw	255
 11414  0020FC  0101               	movlb	1	; () banked
 11415  0020FE  1588               	andwf	powf@n& (0+255),w,b
 11416  002100  0100               	movlb	0	; () banked
 11417  002102  6FAA               	movwf	(??_powf+1)& (0+255),b
 11418  002104  0EFF               	movlw	255
 11419  002106  0101               	movlb	1	; () banked
 11420  002108  1589               	andwf	(powf@n+1)& (0+255),w,b
 11421  00210A  0100               	movlb	0	; () banked
 11422  00210C  6FAB               	movwf	(??_powf+2)& (0+255),b
 11423  00210E  0E7F               	movlw	127
 11424  002110  0101               	movlb	1	; () banked
 11425  002112  158A               	andwf	(powf@n+2)& (0+255),w,b
 11426  002114  0100               	movlb	0	; () banked
 11427  002116  6FAC               	movwf	(??_powf+3)& (0+255),b
 11428  002118  0E00               	movlw	0
 11429  00211A  0101               	movlb	1	; () banked
 11430  00211C  158B               	andwf	(powf@n+3)& (0+255),w,b
 11431  00211E  0100               	movlb	0	; () banked
 11432  002120  6FAD               	movwf	(??_powf+4)& (0+255),b
 11433  002122  0E00               	movlw	0
 11434  002124  11AA               	iorwf	(??_powf+1)& (0+255),w,b
 11435  002126  6FAE               	movwf	(??_powf+5)& (0+255),b
 11436  002128  0E00               	movlw	0
 11437  00212A  11AB               	iorwf	(??_powf+2)& (0+255),w,b
 11438  00212C  6FAF               	movwf	(??_powf+6)& (0+255),b
 11439  00212E  0E80               	movlw	128
 11440  002130  11AC               	iorwf	(??_powf+3)& (0+255),w,b
 11441  002132  6FB0               	movwf	(??_powf+7)& (0+255),b
 11442  002134  0E00               	movlw	0
 11443  002136  11AD               	iorwf	(??_powf+4)& (0+255),w,b
 11444  002138  6FB1               	movwf	(??_powf+8)& (0+255),b
 11445  00213A                     u9835:
 11446  00213A  67A9               	tstfsz	??_powf& (0+255),b
 11447  00213C  D001               	goto	u9836
 11448  00213E  D007               	goto	u9837
 11449  002140                     u9836:
 11450  002140  35B1               	rlcf	(??_powf+8)& (0+255),w,b
 11451  002142  33B1               	rrcf	(??_powf+8)& (0+255),f,b
 11452  002144  33B0               	rrcf	(??_powf+7)& (0+255),f,b
 11453  002146  33AF               	rrcf	(??_powf+6)& (0+255),f,b
 11454  002148  33AE               	rrcf	(??_powf+5)& (0+255),f,b
 11455  00214A  2FA9               	decfsz	??_powf& (0+255),f,b
 11456  00214C  D7F6               	goto	u9835
 11457  00214E                     u9837:
 11458  00214E  C0AE  F188         	movff	??_powf+5,powf@n
 11459  002152  C0AF  F189         	movff	??_powf+6,powf@n+1
 11460  002156  C0B0  F18A         	movff	??_powf+7,powf@n+2
 11461  00215A  C0B1  F18B         	movff	??_powf+8,powf@n+3
 11462  00215E  0101               	movlb	1	; () banked
 11463  002160  AFAF               	btfss	(powf@j+3)& (0+255),7,b
 11464  002162  D008               	goto	l8945
 11465                           
 11466                           ; BSR set to: 1
 11467  002164  1F8B               	comf	(powf@n+3)& (0+255),f,b
 11468  002166  1F8A               	comf	(powf@n+2)& (0+255),f,b
 11469  002168  1F89               	comf	(powf@n+1)& (0+255),f,b
 11470  00216A  6D88               	negf	powf@n& (0+255),b
 11471  00216C  0E00               	movlw	0
 11472  00216E  2389               	addwfc	(powf@n+1)& (0+255),f,b
 11473  002170  238A               	addwfc	(powf@n+2)& (0+255),f,b
 11474  002172  238B               	addwfc	(powf@n+3)& (0+255),f,b
 11475  002174                     l8945:
 11476                           
 11477                           ; BSR set to: 1
 11478  002174  C19C  F060         	movff	powf@p_h,___flsub@b
 11479  002178  C19D  F061         	movff	powf@p_h+1,___flsub@b+1
 11480  00217C  C19E  F062         	movff	powf@p_h+2,___flsub@b+2
 11481  002180  C19F  F063         	movff	powf@p_h+3,___flsub@b+3
 11482  002184  C1B0  F064         	movff	powf@t,___flsub@a
 11483  002188  C1B1  F065         	movff	powf@t+1,___flsub@a+1
 11484  00218C  C1B2  F066         	movff	powf@t+2,___flsub@a+2
 11485  002190  C1B3  F067         	movff	powf@t+3,___flsub@a+3
 11486  002194  EC69  F02A         	call	___flsub	;wreg free
 11487  002198  C060  F19C         	movff	?___flsub,powf@p_h
 11488  00219C  C061  F19D         	movff	?___flsub+1,powf@p_h+1
 11489  0021A0  C062  F19E         	movff	?___flsub+2,powf@p_h+2
 11490  0021A4  C063  F19F         	movff	?___flsub+3,powf@p_h+3
 11491  0021A8                     l8947:
 11492  0021A8  C164  F00C         	movff	powf@p_l,___fladd@b
 11493  0021AC  C165  F00D         	movff	powf@p_l+1,___fladd@b+1
 11494  0021B0  C166  F00E         	movff	powf@p_l+2,___fladd@b+2
 11495  0021B4  C167  F00F         	movff	powf@p_l+3,___fladd@b+3
 11496  0021B8  C19C  F010         	movff	powf@p_h,___fladd@a
 11497  0021BC  C19D  F011         	movff	powf@p_h+1,___fladd@a+1
 11498  0021C0  C19E  F012         	movff	powf@p_h+2,___fladd@a+2
 11499  0021C4  C19F  F013         	movff	powf@p_h+3,___fladd@a+3
 11500  0021C8  EC4E  F01C         	call	___fladd	;wreg free
 11501  0021CC  C00C  F1B0         	movff	?___fladd,powf@t
 11502  0021D0  C00D  F1B1         	movff	?___fladd+1,powf@t+1
 11503  0021D4  C00E  F1B2         	movff	?___fladd+2,powf@t+2
 11504  0021D8  C00F  F1B3         	movff	?___fladd+3,powf@t+3
 11505  0021DC  C1B0  F1B8         	movff	powf@t,powf@__xc8_float_word
 11506  0021E0  C1B1  F1B9         	movff	powf@t+1,powf@__xc8_float_word+1
 11507  0021E4  C1B2  F1BA         	movff	powf@t+2,powf@__xc8_float_word+2
 11508  0021E8  C1B3  F1BB         	movff	powf@t+3,powf@__xc8_float_word+3
 11509  0021EC  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 11510  0021F0  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 11511  0021F4  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 11512  0021F8  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 11513  0021FC  0E00               	movlw	0
 11514  0021FE  0101               	movlb	1	; () banked
 11515  002200  1594               	andwf	powf@is& (0+255),w,b
 11516  002202  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 11517  002204  0E80               	movlw	128
 11518  002206  1595               	andwf	(powf@is+1)& (0+255),w,b
 11519  002208  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 11520  00220A  0EFF               	movlw	255
 11521  00220C  1596               	andwf	(powf@is+2)& (0+255),w,b
 11522  00220E  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 11523  002210  0EFF               	movlw	255
 11524  002212  1597               	andwf	(powf@is+3)& (0+255),w,b
 11525  002214  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 11526                           
 11527                           ; BSR set to: 1
 11528  002216  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
 11529  00221A  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
 11530  00221E  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
 11531  002222  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
 11532                           
 11533                           ; BSR set to: 1
 11534  002226  C1B0  F01C         	movff	powf@t,___flmul@b
 11535  00222A  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
 11536  00222E  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
 11537  002232  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
 11538  002236  0E00               	movlw	0
 11539  002238  6E20               	movwf	___flmul@a,c
 11540  00223A  0E72               	movlw	114
 11541  00223C  6E21               	movwf	___flmul@a+1,c
 11542  00223E  0E31               	movlw	49
 11543  002240  6E22               	movwf	___flmul@a+2,c
 11544  002242  0E3F               	movlw	63
 11545  002244  6E23               	movwf	___flmul@a+3,c
 11546  002246  ECA5  F01A         	call	___flmul	;wreg free
 11547  00224A  C01C  F174         	movff	?___flmul,powf@u
 11548  00224E  C01D  F175         	movff	?___flmul+1,powf@u+1
 11549  002252  C01E  F176         	movff	?___flmul+2,powf@u+2
 11550  002256  C01F  F177         	movff	?___flmul+3,powf@u+3
 11551  00225A  C19C  F064         	movff	powf@p_h,___flsub@a
 11552  00225E  C19D  F065         	movff	powf@p_h+1,___flsub@a+1
 11553  002262  C19E  F066         	movff	powf@p_h+2,___flsub@a+2
 11554  002266  C19F  F067         	movff	powf@p_h+3,___flsub@a+3
 11555  00226A  C1B0  F060         	movff	powf@t,___flsub@b
 11556  00226E  C1B1  F061         	movff	powf@t+1,___flsub@b+1
 11557  002272  C1B2  F062         	movff	powf@t+2,___flsub@b+2
 11558  002276  C1B3  F063         	movff	powf@t+3,___flsub@b+3
 11559  00227A  EC69  F02A         	call	___flsub	;wreg free
 11560  00227E  C060  F198         	movff	?___flsub,_powf$2491
 11561  002282  C061  F199         	movff	?___flsub+1,_powf$2491+1
 11562  002286  C062  F19A         	movff	?___flsub+2,_powf$2491+2
 11563  00228A  C063  F19B         	movff	?___flsub+3,_powf$2491+3
 11564  00228E  0E18               	movlw	24
 11565  002290  6E20               	movwf	___flmul@a,c
 11566  002292  0E72               	movlw	114
 11567  002294  6E21               	movwf	___flmul@a+1,c
 11568  002296  0E31               	movlw	49
 11569  002298  6E22               	movwf	___flmul@a+2,c
 11570  00229A  0E3F               	movlw	63
 11571  00229C  6E23               	movwf	___flmul@a+3,c
 11572  00229E  C198  F064         	movff	_powf$2491,___flsub@a
 11573  0022A2  C199  F065         	movff	_powf$2491+1,___flsub@a+1
 11574  0022A6  C19A  F066         	movff	_powf$2491+2,___flsub@a+2
 11575  0022AA  C19B  F067         	movff	_powf$2491+3,___flsub@a+3
 11576  0022AE  C164  F060         	movff	powf@p_l,___flsub@b
 11577  0022B2  C165  F061         	movff	powf@p_l+1,___flsub@b+1
 11578  0022B6  C166  F062         	movff	powf@p_l+2,___flsub@b+2
 11579  0022BA  C167  F063         	movff	powf@p_l+3,___flsub@b+3
 11580  0022BE  EC69  F02A         	call	___flsub	;wreg free
 11581  0022C2  C060  F01C         	movff	?___flsub,___flmul@b
 11582  0022C6  C061  F01D         	movff	?___flsub+1,___flmul@b+1
 11583  0022CA  C062  F01E         	movff	?___flsub+2,___flmul@b+2
 11584  0022CE  C063  F01F         	movff	?___flsub+3,___flmul@b+3
 11585  0022D2  ECA5  F01A         	call	___flmul	;wreg free
 11586  0022D6  C01C  F114         	movff	?___flmul,_powf$2501
 11587  0022DA  C01D  F115         	movff	?___flmul+1,_powf$2501+1
 11588  0022DE  C01E  F116         	movff	?___flmul+2,_powf$2501+2
 11589  0022E2  C01F  F117         	movff	?___flmul+3,_powf$2501+3
 11590  0022E6  C114  F00C         	movff	_powf$2501,___fladd@b
 11591  0022EA  C115  F00D         	movff	_powf$2501+1,___fladd@b+1
 11592  0022EE  C116  F00E         	movff	_powf$2501+2,___fladd@b+2
 11593  0022F2  C117  F00F         	movff	_powf$2501+3,___fladd@b+3
 11594  0022F6  0E8C               	movlw	140
 11595  0022F8  6E20               	movwf	___flmul@a,c
 11596  0022FA  0EBE               	movlw	190
 11597  0022FC  6E21               	movwf	___flmul@a+1,c
 11598  0022FE  0EBF               	movlw	191
 11599  002300  6E22               	movwf	___flmul@a+2,c
 11600  002302  0E35               	movlw	53
 11601  002304  6E23               	movwf	___flmul@a+3,c
 11602  002306  C1B0  F01C         	movff	powf@t,___flmul@b
 11603  00230A  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
 11604  00230E  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
 11605  002312  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
 11606  002316  ECA5  F01A         	call	___flmul	;wreg free
 11607  00231A  C01C  F010         	movff	?___flmul,___fladd@a
 11608  00231E  C01D  F011         	movff	?___flmul+1,___fladd@a+1
 11609  002322  C01E  F012         	movff	?___flmul+2,___fladd@a+2
 11610  002326  C01F  F013         	movff	?___flmul+3,___fladd@a+3
 11611  00232A  EC4E  F01C         	call	___fladd	;wreg free
 11612  00232E  C00C  F178         	movff	?___fladd,powf@v
 11613  002332  C00D  F179         	movff	?___fladd+1,powf@v+1
 11614  002336  C00E  F17A         	movff	?___fladd+2,powf@v+2
 11615  00233A  C00F  F17B         	movff	?___fladd+3,powf@v+3
 11616  00233E  C174  F00C         	movff	powf@u,___fladd@b
 11617  002342  C175  F00D         	movff	powf@u+1,___fladd@b+1
 11618  002346  C176  F00E         	movff	powf@u+2,___fladd@b+2
 11619  00234A  C177  F00F         	movff	powf@u+3,___fladd@b+3
 11620  00234E  C178  F010         	movff	powf@v,___fladd@a
 11621  002352  C179  F011         	movff	powf@v+1,___fladd@a+1
 11622  002356  C17A  F012         	movff	powf@v+2,___fladd@a+2
 11623  00235A  C17B  F013         	movff	powf@v+3,___fladd@a+3
 11624  00235E  EC4E  F01C         	call	___fladd	;wreg free
 11625  002362  C00C  F1B4         	movff	?___fladd,powf@z
 11626  002366  C00D  F1B5         	movff	?___fladd+1,powf@z+1
 11627  00236A  C00E  F1B6         	movff	?___fladd+2,powf@z+2
 11628  00236E  C00F  F1B7         	movff	?___fladd+3,powf@z+3
 11629  002372  C174  F064         	movff	powf@u,___flsub@a
 11630  002376  C175  F065         	movff	powf@u+1,___flsub@a+1
 11631  00237A  C176  F066         	movff	powf@u+2,___flsub@a+2
 11632  00237E  C177  F067         	movff	powf@u+3,___flsub@a+3
 11633  002382  C1B4  F060         	movff	powf@z,___flsub@b
 11634  002386  C1B5  F061         	movff	powf@z+1,___flsub@b+1
 11635  00238A  C1B6  F062         	movff	powf@z+2,___flsub@b+2
 11636  00238E  C1B7  F063         	movff	powf@z+3,___flsub@b+3
 11637  002392  EC69  F02A         	call	___flsub	;wreg free
 11638  002396  C060  F198         	movff	?___flsub,_powf$2491
 11639  00239A  C061  F199         	movff	?___flsub+1,_powf$2491+1
 11640  00239E  C062  F19A         	movff	?___flsub+2,_powf$2491+2
 11641  0023A2  C063  F19B         	movff	?___flsub+3,_powf$2491+3
 11642  0023A6  C178  F060         	movff	powf@v,___flsub@b
 11643  0023AA  C179  F061         	movff	powf@v+1,___flsub@b+1
 11644  0023AE  C17A  F062         	movff	powf@v+2,___flsub@b+2
 11645  0023B2  C17B  F063         	movff	powf@v+3,___flsub@b+3
 11646  0023B6  C198  F064         	movff	_powf$2491,___flsub@a
 11647  0023BA  C199  F065         	movff	_powf$2491+1,___flsub@a+1
 11648  0023BE  C19A  F066         	movff	_powf$2491+2,___flsub@a+2
 11649  0023C2  C19B  F067         	movff	_powf$2491+3,___flsub@a+3
 11650  0023C6  EC69  F02A         	call	___flsub	;wreg free
 11651  0023CA  C060  F144         	movff	?___flsub,powf@w
 11652  0023CE  C061  F145         	movff	?___flsub+1,powf@w+1
 11653  0023D2  C062  F146         	movff	?___flsub+2,powf@w+2
 11654  0023D6  C063  F147         	movff	?___flsub+3,powf@w+3
 11655  0023DA  C1B4  F01C         	movff	powf@z,___flmul@b
 11656  0023DE  C1B5  F01D         	movff	powf@z+1,___flmul@b+1
 11657  0023E2  C1B6  F01E         	movff	powf@z+2,___flmul@b+2
 11658  0023E6  C1B7  F01F         	movff	powf@z+3,___flmul@b+3
 11659  0023EA  C1B4  F020         	movff	powf@z,___flmul@a
 11660  0023EE  C1B5  F021         	movff	powf@z+1,___flmul@a+1
 11661  0023F2  C1B6  F022         	movff	powf@z+2,___flmul@a+2
 11662  0023F6  C1B7  F023         	movff	powf@z+3,___flmul@a+3
 11663  0023FA  ECA5  F01A         	call	___flmul	;wreg free
 11664  0023FE  C01C  F1B0         	movff	?___flmul,powf@t
 11665  002402  C01D  F1B1         	movff	?___flmul+1,powf@t+1
 11666  002406  C01E  F1B2         	movff	?___flmul+2,powf@t+2
 11667  00240A  C01F  F1B3         	movff	?___flmul+3,powf@t+3
 11668  00240E  0E0E               	movlw	14
 11669  002410  6E10               	movwf	___fladd@a,c
 11670  002412  0EEA               	movlw	234
 11671  002414  6E11               	movwf	___fladd@a+1,c
 11672  002416  0EDD               	movlw	221
 11673  002418  6E12               	movwf	___fladd@a+2,c
 11674  00241A  0EB5               	movlw	181
 11675  00241C  6E13               	movwf	___fladd@a+3,c
 11676  00241E  0E4C               	movlw	76
 11677  002420  6E20               	movwf	___flmul@a,c
 11678  002422  0EBB               	movlw	187
 11679  002424  6E21               	movwf	___flmul@a+1,c
 11680  002426  0E31               	movlw	49
 11681  002428  6E22               	movwf	___flmul@a+2,c
 11682  00242A  0E33               	movlw	51
 11683  00242C  6E23               	movwf	___flmul@a+3,c
 11684  00242E  C1B0  F01C         	movff	powf@t,___flmul@b
 11685  002432  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
 11686  002436  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
 11687  00243A  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
 11688  00243E  ECA5  F01A         	call	___flmul	;wreg free
 11689  002442  C01C  F00C         	movff	?___flmul,___fladd@b
 11690  002446  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 11691  00244A  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 11692  00244E  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 11693  002452  EC4E  F01C         	call	___fladd	;wreg free
 11694  002456  C00C  F1A4         	movff	?___fladd,_powf$2488
 11695  00245A  C00D  F1A5         	movff	?___fladd+1,_powf$2488+1
 11696  00245E  C00E  F1A6         	movff	?___fladd+2,_powf$2488+2
 11697  002462  C00F  F1A7         	movff	?___fladd+3,_powf$2488+3
 11698  002466  0E55               	movlw	85
 11699  002468  6E10               	movwf	___fladd@a,c
 11700  00246A  0EB3               	movlw	179
 11701  00246C  6E11               	movwf	___fladd@a+1,c
 11702  00246E  0E8A               	movlw	138
 11703  002470  6E12               	movwf	___fladd@a+2,c
 11704  002472  0E38               	movlw	56
 11705  002474  6E13               	movwf	___fladd@a+3,c
 11706  002476  C1B0  F020         	movff	powf@t,___flmul@a
 11707  00247A  C1B1  F021         	movff	powf@t+1,___flmul@a+1
 11708  00247E  C1B2  F022         	movff	powf@t+2,___flmul@a+2
 11709  002482  C1B3  F023         	movff	powf@t+3,___flmul@a+3
 11710  002486  C1A4  F01C         	movff	_powf$2488,___flmul@b
 11711  00248A  C1A5  F01D         	movff	_powf$2488+1,___flmul@b+1
 11712  00248E  C1A6  F01E         	movff	_powf$2488+2,___flmul@b+2
 11713  002492  C1A7  F01F         	movff	_powf$2488+3,___flmul@b+3
 11714  002496  ECA5  F01A         	call	___flmul	;wreg free
 11715  00249A  C01C  F00C         	movff	?___flmul,___fladd@b
 11716  00249E  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 11717  0024A2  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 11718  0024A6  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 11719  0024AA  EC4E  F01C         	call	___fladd	;wreg free
 11720  0024AE  C00C  F158         	movff	?___fladd,_powf$2489
 11721  0024B2  C00D  F159         	movff	?___fladd+1,_powf$2489+1
 11722  0024B6  C00E  F15A         	movff	?___fladd+2,_powf$2489+2
 11723  0024BA  C00F  F15B         	movff	?___fladd+3,_powf$2489+3
 11724  0024BE  0E61               	movlw	97
 11725  0024C0  6E10               	movwf	___fladd@a,c
 11726  0024C2  0E0B               	movlw	11
 11727  0024C4  6E11               	movwf	___fladd@a+1,c
 11728  0024C6  0E36               	movlw	54
 11729  0024C8  6E12               	movwf	___fladd@a+2,c
 11730  0024CA  0EBB               	movlw	187
 11731  0024CC  6E13               	movwf	___fladd@a+3,c
 11732  0024CE  C1B0  F020         	movff	powf@t,___flmul@a
 11733  0024D2  C1B1  F021         	movff	powf@t+1,___flmul@a+1
 11734  0024D6  C1B2  F022         	movff	powf@t+2,___flmul@a+2
 11735  0024DA  C1B3  F023         	movff	powf@t+3,___flmul@a+3
 11736  0024DE  C158  F01C         	movff	_powf$2489,___flmul@b
 11737  0024E2  C159  F01D         	movff	_powf$2489+1,___flmul@b+1
 11738  0024E6  C15A  F01E         	movff	_powf$2489+2,___flmul@b+2
 11739  0024EA  C15B  F01F         	movff	_powf$2489+3,___flmul@b+3
 11740  0024EE  ECA5  F01A         	call	___flmul	;wreg free
 11741  0024F2  C01C  F00C         	movff	?___flmul,___fladd@b
 11742  0024F6  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 11743  0024FA  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 11744  0024FE  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 11745  002502  EC4E  F01C         	call	___fladd	;wreg free
 11746  002506  C00C  F148         	movff	?___fladd,_powf$2490
 11747  00250A  C00D  F149         	movff	?___fladd+1,_powf$2490+1
 11748  00250E  C00E  F14A         	movff	?___fladd+2,_powf$2490+2
 11749  002512  C00F  F14B         	movff	?___fladd+3,_powf$2490+3
 11750  002516  0EAB               	movlw	171
 11751  002518  6E10               	movwf	___fladd@a,c
 11752  00251A  0EAA               	movlw	170
 11753  00251C  6E11               	movwf	___fladd@a+1,c
 11754  00251E  0E2A               	movlw	42
 11755  002520  6E12               	movwf	___fladd@a+2,c
 11756  002522  0E3E               	movlw	62
 11757  002524  6E13               	movwf	___fladd@a+3,c
 11758  002526  C1B0  F020         	movff	powf@t,___flmul@a
 11759  00252A  C1B1  F021         	movff	powf@t+1,___flmul@a+1
 11760  00252E  C1B2  F022         	movff	powf@t+2,___flmul@a+2
 11761  002532  C1B3  F023         	movff	powf@t+3,___flmul@a+3
 11762  002536  C148  F01C         	movff	_powf$2490,___flmul@b
 11763  00253A  C149  F01D         	movff	_powf$2490+1,___flmul@b+1
 11764  00253E  C14A  F01E         	movff	_powf$2490+2,___flmul@b+2
 11765  002542  C14B  F01F         	movff	_powf$2490+3,___flmul@b+3
 11766  002546  ECA5  F01A         	call	___flmul	;wreg free
 11767  00254A  C01C  F00C         	movff	?___flmul,___fladd@b
 11768  00254E  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 11769  002552  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 11770  002556  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 11771  00255A  EC4E  F01C         	call	___fladd	;wreg free
 11772  00255E  C00C  F138         	movff	?___fladd,_powf$2492
 11773  002562  C00D  F139         	movff	?___fladd+1,_powf$2492+1
 11774  002566  C00E  F13A         	movff	?___fladd+2,_powf$2492+2
 11775  00256A  C00F  F13B         	movff	?___fladd+3,_powf$2492+3
 11776  00256E  C1B4  F060         	movff	powf@z,___flsub@b
 11777  002572  C1B5  F061         	movff	powf@z+1,___flsub@b+1
 11778  002576  C1B6  F062         	movff	powf@z+2,___flsub@b+2
 11779  00257A  C1B7  F063         	movff	powf@z+3,___flsub@b+3
 11780  00257E  C1B0  F020         	movff	powf@t,___flmul@a
 11781  002582  C1B1  F021         	movff	powf@t+1,___flmul@a+1
 11782  002586  C1B2  F022         	movff	powf@t+2,___flmul@a+2
 11783  00258A  C1B3  F023         	movff	powf@t+3,___flmul@a+3
 11784  00258E  C138  F01C         	movff	_powf$2492,___flmul@b
 11785  002592  C139  F01D         	movff	_powf$2492+1,___flmul@b+1
 11786  002596  C13A  F01E         	movff	_powf$2492+2,___flmul@b+2
 11787  00259A  C13B  F01F         	movff	_powf$2492+3,___flmul@b+3
 11788  00259E  ECA5  F01A         	call	___flmul	;wreg free
 11789  0025A2  C01C  F064         	movff	?___flmul,___flsub@a
 11790  0025A6  C01D  F065         	movff	?___flmul+1,___flsub@a+1
 11791  0025AA  C01E  F066         	movff	?___flmul+2,___flsub@a+2
 11792  0025AE  C01F  F067         	movff	?___flmul+3,___flsub@a+3
 11793  0025B2  EC69  F02A         	call	___flsub	;wreg free
 11794  0025B6  C060  F180         	movff	?___flsub,powf@t1
 11795  0025BA  C061  F181         	movff	?___flsub+1,powf@t1+1
 11796  0025BE  C062  F182         	movff	?___flsub+2,powf@t1+2
 11797  0025C2  C063  F183         	movff	?___flsub+3,powf@t1+3
 11798  0025C6  0E00               	movlw	0
 11799  0025C8  6E10               	movwf	___fladd@a,c
 11800  0025CA  0E00               	movlw	0
 11801  0025CC  6E11               	movwf	___fladd@a+1,c
 11802  0025CE  0E00               	movlw	0
 11803  0025D0  6E12               	movwf	___fladd@a+2,c
 11804  0025D2  0EC0               	movlw	192
 11805  0025D4  6E13               	movwf	___fladd@a+3,c
 11806  0025D6  C180  F00C         	movff	powf@t1,___fladd@b
 11807  0025DA  C181  F00D         	movff	powf@t1+1,___fladd@b+1
 11808  0025DE  C182  F00E         	movff	powf@t1+2,___fladd@b+2
 11809  0025E2  C183  F00F         	movff	powf@t1+3,___fladd@b+3
 11810  0025E6  EC4E  F01C         	call	___fladd	;wreg free
 11811  0025EA  C00C  F06C         	movff	?___fladd,___fldiv@a
 11812  0025EE  C00D  F06D         	movff	?___fladd+1,___fldiv@a+1
 11813  0025F2  C00E  F06E         	movff	?___fladd+2,___fldiv@a+2
 11814  0025F6  C00F  F06F         	movff	?___fladd+3,___fldiv@a+3
 11815  0025FA  C180  F020         	movff	powf@t1,___flmul@a
 11816  0025FE  C181  F021         	movff	powf@t1+1,___flmul@a+1
 11817  002602  C182  F022         	movff	powf@t1+2,___flmul@a+2
 11818  002606  C183  F023         	movff	powf@t1+3,___flmul@a+3
 11819  00260A  C1B4  F01C         	movff	powf@z,___flmul@b
 11820  00260E  C1B5  F01D         	movff	powf@z+1,___flmul@b+1
 11821  002612  C1B6  F01E         	movff	powf@z+2,___flmul@b+2
 11822  002616  C1B7  F01F         	movff	powf@z+3,___flmul@b+3
 11823  00261A  ECA5  F01A         	call	___flmul	;wreg free
 11824  00261E  C01C  F068         	movff	?___flmul,___fldiv@b
 11825  002622  C01D  F069         	movff	?___flmul+1,___fldiv@b+1
 11826  002626  C01E  F06A         	movff	?___flmul+2,___fldiv@b+2
 11827  00262A  C01F  F06B         	movff	?___flmul+3,___fldiv@b+3
 11828  00262E  ECD4  F01D         	call	___fldiv	;wreg free
 11829  002632  C068  F13C         	movff	?___fldiv,_powf$2496
 11830  002636  C069  F13D         	movff	?___fldiv+1,_powf$2496+1
 11831  00263A  C06A  F13E         	movff	?___fldiv+2,_powf$2496+2
 11832  00263E  C06B  F13F         	movff	?___fldiv+3,_powf$2496+3
 11833  002642  C144  F010         	movff	powf@w,___fladd@a
 11834  002646  C145  F011         	movff	powf@w+1,___fladd@a+1
 11835  00264A  C146  F012         	movff	powf@w+2,___fladd@a+2
 11836  00264E  C147  F013         	movff	powf@w+3,___fladd@a+3
 11837  002652  C144  F020         	movff	powf@w,___flmul@a
 11838  002656  C145  F021         	movff	powf@w+1,___flmul@a+1
 11839  00265A  C146  F022         	movff	powf@w+2,___flmul@a+2
 11840  00265E  C147  F023         	movff	powf@w+3,___flmul@a+3
 11841  002662  C1B4  F01C         	movff	powf@z,___flmul@b
 11842  002666  C1B5  F01D         	movff	powf@z+1,___flmul@b+1
 11843  00266A  C1B6  F01E         	movff	powf@z+2,___flmul@b+2
 11844  00266E  C1B7  F01F         	movff	powf@z+3,___flmul@b+3
 11845  002672  ECA5  F01A         	call	___flmul	;wreg free
 11846  002676  C01C  F00C         	movff	?___flmul,___fladd@b
 11847  00267A  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 11848  00267E  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 11849  002682  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 11850  002686  EC4E  F01C         	call	___fladd	;wreg free
 11851  00268A  C00C  F118         	movff	?___fladd,_powf$2502
 11852  00268E  C00D  F119         	movff	?___fladd+1,_powf$2502+1
 11853  002692  C00E  F11A         	movff	?___fladd+2,_powf$2502+2
 11854  002696  C00F  F11B         	movff	?___fladd+3,_powf$2502+3
 11855  00269A  C13C  F060         	movff	_powf$2496,___flsub@b
 11856  00269E  C13D  F061         	movff	_powf$2496+1,___flsub@b+1
 11857  0026A2  C13E  F062         	movff	_powf$2496+2,___flsub@b+2
 11858  0026A6  C13F  F063         	movff	_powf$2496+3,___flsub@b+3
 11859  0026AA  C118  F064         	movff	_powf$2502,___flsub@a
 11860  0026AE  C119  F065         	movff	_powf$2502+1,___flsub@a+1
 11861  0026B2  C11A  F066         	movff	_powf$2502+2,___flsub@a+2
 11862  0026B6  C11B  F067         	movff	_powf$2502+3,___flsub@a+3
 11863  0026BA  EC69  F02A         	call	___flsub	;wreg free
 11864  0026BE  C060  F14C         	movff	?___flsub,powf@r
 11865  0026C2  C061  F14D         	movff	?___flsub+1,powf@r+1
 11866  0026C6  C062  F14E         	movff	?___flsub+2,powf@r+2
 11867  0026CA  C063  F14F         	movff	?___flsub+3,powf@r+3
 11868  0026CE  C1B4  F064         	movff	powf@z,___flsub@a
 11869  0026D2  C1B5  F065         	movff	powf@z+1,___flsub@a+1
 11870  0026D6  C1B6  F066         	movff	powf@z+2,___flsub@a+2
 11871  0026DA  C1B7  F067         	movff	powf@z+3,___flsub@a+3
 11872  0026DE  C14C  F060         	movff	powf@r,___flsub@b
 11873  0026E2  C14D  F061         	movff	powf@r+1,___flsub@b+1
 11874  0026E6  C14E  F062         	movff	powf@r+2,___flsub@b+2
 11875  0026EA  C14F  F063         	movff	powf@r+3,___flsub@b+3
 11876  0026EE  EC69  F02A         	call	___flsub	;wreg free
 11877  0026F2  C060  F198         	movff	?___flsub,_powf$2491
 11878  0026F6  C061  F199         	movff	?___flsub+1,_powf$2491+1
 11879  0026FA  C062  F19A         	movff	?___flsub+2,_powf$2491+2
 11880  0026FE  C063  F19B         	movff	?___flsub+3,_powf$2491+3
 11881  002702  0E00               	movlw	0
 11882  002704  0100               	movlb	0	; () banked
 11883  002706  6F60               	movwf	___flsub@b& (0+255),b
 11884  002708  0E00               	movlw	0
 11885  00270A  6F61               	movwf	(___flsub@b+1)& (0+255),b
 11886  00270C  0E80               	movlw	128
 11887  00270E  6F62               	movwf	(___flsub@b+2)& (0+255),b
 11888  002710  0E3F               	movlw	63
 11889  002712  6F63               	movwf	(___flsub@b+3)& (0+255),b
 11890  002714  C198  F064         	movff	_powf$2491,___flsub@a
 11891  002718  C199  F065         	movff	_powf$2491+1,___flsub@a+1
 11892  00271C  C19A  F066         	movff	_powf$2491+2,___flsub@a+2
 11893  002720  C19B  F067         	movff	_powf$2491+3,___flsub@a+3
 11894  002724  EC69  F02A         	call	___flsub	;wreg free
 11895  002728  C060  F1B4         	movff	?___flsub,powf@z
 11896  00272C  C061  F1B5         	movff	?___flsub+1,powf@z+1
 11897  002730  C062  F1B6         	movff	?___flsub+2,powf@z+2
 11898  002734  C063  F1B7         	movff	?___flsub+3,powf@z+3
 11899  002738  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
 11900  00273C  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
 11901  002740  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
 11902  002744  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
 11903  002748  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
 11904  00274C  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
 11905  002750  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
 11906  002754  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
 11907  002758  C188  F0A9         	movff	powf@n,??_powf
 11908  00275C  C189  F0AA         	movff	powf@n+1,??_powf+1
 11909  002760  C18A  F0AB         	movff	powf@n+2,??_powf+2
 11910  002764  C18B  F0AC         	movff	powf@n+3,??_powf+3
 11911  002768  0E17               	movlw	23
 11912  00276A                     u9855:
 11913  00276A  90D8               	bcf	status,0,c
 11914  00276C  0100               	movlb	0	; () banked
 11915  00276E  37A9               	rlcf	??_powf& (0+255),f,b
 11916  002770  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 11917  002772  37AB               	rlcf	(??_powf+2)& (0+255),f,b
 11918  002774  37AC               	rlcf	(??_powf+3)& (0+255),f,b
 11919  002776  2EE8               	decfsz	wreg,f,c
 11920  002778  D7F8               	goto	u9855
 11921  00277A  51A9               	movf	??_powf& (0+255),w,b
 11922  00277C  0101               	movlb	1	; () banked
 11923  00277E  27AC               	addwf	powf@j& (0+255),f,b
 11924  002780  0100               	movlb	0	; () banked
 11925  002782  51AA               	movf	(??_powf+1)& (0+255),w,b
 11926  002784  0101               	movlb	1	; () banked
 11927  002786  23AD               	addwfc	(powf@j+1)& (0+255),f,b
 11928  002788  0100               	movlb	0	; () banked
 11929  00278A  51AB               	movf	(??_powf+2)& (0+255),w,b
 11930  00278C  0101               	movlb	1	; () banked
 11931  00278E  23AE               	addwfc	(powf@j+2)& (0+255),f,b
 11932  002790  0100               	movlb	0	; () banked
 11933  002792  51AC               	movf	(??_powf+3)& (0+255),w,b
 11934  002794  0101               	movlb	1	; () banked
 11935  002796  23AF               	addwfc	(powf@j+3)& (0+255),f,b
 11936                           
 11937                           ; BSR set to: 1
 11938  002798  0E17               	movlw	23
 11939  00279A  0100               	movlb	0	; () banked
 11940  00279C  6FA9               	movwf	??_powf& (0+255),b
 11941  00279E  C1AC  F0AA         	movff	powf@j,??_powf+1
 11942  0027A2  C1AD  F0AB         	movff	powf@j+1,??_powf+2
 11943  0027A6  C1AE  F0AC         	movff	powf@j+2,??_powf+3
 11944  0027AA  C1AF  F0AD         	movff	powf@j+3,??_powf+4
 11945  0027AE                     u9865:
 11946  0027AE  67A9               	tstfsz	??_powf& (0+255),b
 11947  0027B0  D001               	goto	u9866
 11948  0027B2  D007               	goto	u9867
 11949  0027B4                     u9866:
 11950  0027B4  35AD               	rlcf	(??_powf+4)& (0+255),w,b
 11951  0027B6  33AD               	rrcf	(??_powf+4)& (0+255),f,b
 11952  0027B8  33AC               	rrcf	(??_powf+3)& (0+255),f,b
 11953  0027BA  33AB               	rrcf	(??_powf+2)& (0+255),f,b
 11954  0027BC  33AA               	rrcf	(??_powf+1)& (0+255),f,b
 11955  0027BE  2FA9               	decfsz	??_powf& (0+255),f,b
 11956  0027C0  D7F6               	goto	u9865
 11957  0027C2                     u9867:
 11958  0027C2  0100               	movlb	0	; () banked
 11959  0027C4  BFAD               	btfsc	(??_powf+4)& (0+255),7,b
 11960  0027C6  D007               	goto	u9870
 11961  0027C8  51AD               	movf	(??_powf+4)& (0+255),w,b
 11962  0027CA  11AC               	iorwf	(??_powf+3)& (0+255),w,b
 11963  0027CC  11AB               	iorwf	(??_powf+2)& (0+255),w,b
 11964  0027CE  E11A               	bnz	l1744
 11965  0027D0  05AA               	decf	(??_powf+1)& (0+255),w,b
 11966  0027D2  B0D8               	btfsc	status,0,c
 11967  0027D4  D017               	goto	l1744
 11968  0027D6                     u9870:
 11969                           
 11970                           ; BSR set to: 0
 11971  0027D6  C1B4  F035         	movff	powf@z,scalbnf@x
 11972  0027DA  C1B5  F036         	movff	powf@z+1,scalbnf@x+1
 11973  0027DE  C1B6  F037         	movff	powf@z+2,scalbnf@x+2
 11974  0027E2  C1B7  F038         	movff	powf@z+3,scalbnf@x+3
 11975  0027E6  C188  F039         	movff	powf@n,scalbnf@n
 11976  0027EA  C189  F03A         	movff	powf@n+1,scalbnf@n+1
 11977  0027EE  EC3D  F020         	call	_scalbnf	;wreg free
 11978  0027F2  C035  F1B4         	movff	?_scalbnf,powf@z
 11979  0027F6  C036  F1B5         	movff	?_scalbnf+1,powf@z+1
 11980  0027FA  C037  F1B6         	movff	?_scalbnf+2,powf@z+2
 11981  0027FE  C038  F1B7         	movff	?_scalbnf+3,powf@z+3
 11982  002802  D010               	goto	l9003
 11983  002804                     l1744:
 11984                           
 11985                           ; BSR set to: 0
 11986  002804  C1AC  F1B8         	movff	powf@j,powf@__xc8_float_word
 11987  002808  C1AD  F1B9         	movff	powf@j+1,powf@__xc8_float_word+1
 11988  00280C  C1AE  F1BA         	movff	powf@j+2,powf@__xc8_float_word+2
 11989  002810  C1AF  F1BB         	movff	powf@j+3,powf@__xc8_float_word+3
 11990  002814  C1B8  F1B4         	movff	powf@__xc8_float_word,powf@z
 11991  002818  C1B9  F1B5         	movff	powf@__xc8_float_word+1,powf@z+1
 11992  00281C  C1BA  F1B6         	movff	powf@__xc8_float_word+2,powf@z+2
 11993  002820  C1BB  F1B7         	movff	powf@__xc8_float_word+3,powf@z+3
 11994  002824                     l9003:
 11995  002824  C184  F01C         	movff	powf@sn,___flmul@b
 11996  002828  C185  F01D         	movff	powf@sn+1,___flmul@b+1
 11997  00282C  C186  F01E         	movff	powf@sn+2,___flmul@b+2
 11998  002830  C187  F01F         	movff	powf@sn+3,___flmul@b+3
 11999  002834  C1B4  F020         	movff	powf@z,___flmul@a
 12000  002838  C1B5  F021         	movff	powf@z+1,___flmul@a+1
 12001  00283C  C1B6  F022         	movff	powf@z+2,___flmul@a+2
 12002  002840  C1B7  F023         	movff	powf@z+3,___flmul@a+3
 12003  002844  ECA5  F01A         	call	___flmul	;wreg free
 12004  002848  C01C  F0A1         	movff	?___flmul,?_powf
 12005  00284C  C01D  F0A2         	movff	?___flmul+1,?_powf+1
 12006  002850  C01E  F0A3         	movff	?___flmul+2,?_powf+2
 12007  002854  C01F  F0A4         	movff	?___flmul+3,?_powf+3
 12008  002858  0012               	return		;funcret
 12009  00285A                     __end_of_powf:
 12010                           	opt callstack 0
 12011                           
 12012 ;; *************** function _sqrtf *****************
 12013 ;; Defined at:
 12014 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sqrtf.c"
 12015 ;; Parameters:    Size  Location     Type
 12016 ;;  x               4   16[BANK0 ] float 
 12017 ;; Auto vars:     Size  Location     Type
 12018 ;;  ix              4   61[BANK0 ] long 
 12019 ;;  r               4   57[BANK0 ] unsigned long 
 12020 ;;  m               4   53[BANK0 ] long 
 12021 ;;  z               4   49[BANK0 ] float 
 12022 ;;  t               4   45[BANK0 ] long 
 12023 ;;  q               4   41[BANK0 ] long 
 12024 ;;  __xc8_float_    4   37[BANK0 ] struct .
 12025 ;;  i               4   33[BANK0 ] long 
 12026 ;;  s               4   29[BANK0 ] long 
 12027 ;;  sign            4    0        long 
 12028 ;; Return value:  Size  Location     Type
 12029 ;;                  4   16[BANK0 ] float 
 12030 ;; Registers used:
 12031 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12032 ;; Tracked objects:
 12033 ;;		On entry : 0/0
 12034 ;;		On exit  : 0/0
 12035 ;;		Unchanged: 0/0
 12036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12037 ;;      Params:         0       4       0       0       0       0       0       0       0
 12038 ;;      Locals:         0      40       0       0       0       0       0       0       0
 12039 ;;      Temps:          0       5       0       0       0       0       0       0       0
 12040 ;;      Totals:         0      49       0       0       0       0       0       0       0
 12041 ;;Total ram usage:       49 bytes
 12042 ;; Hardware stack levels used:    1
 12043 ;; Hardware stack levels required when called:    8
 12044 ;; This function calls:
 12045 ;;		___fladd
 12046 ;;		___flge
 12047 ;;		___flmul
 12048 ;;		_nanf
 12049 ;; This function is called by:
 12050 ;;		_powf
 12051 ;; This function uses a non-reentrant model
 12052 ;;
 12053                           
 12054                           	psect	text48
 12055  002D38                     __ptext48:
 12056                           	opt callstack 0
 12057  002D38                     _sqrtf:
 12058                           	opt callstack 19
 12059                           
 12060                           ;incstack = 0
 12061  002D38  C070  F085         	movff	sqrtf@x,sqrtf@__xc8_float_word
 12062  002D3C  C071  F086         	movff	sqrtf@x+1,sqrtf@__xc8_float_word+1
 12063  002D40  C072  F087         	movff	sqrtf@x+2,sqrtf@__xc8_float_word+2
 12064  002D44  C073  F088         	movff	sqrtf@x+3,sqrtf@__xc8_float_word+3
 12065  002D48  C085  F09D         	movff	sqrtf@__xc8_float_word,sqrtf@ix
 12066  002D4C  C086  F09E         	movff	sqrtf@__xc8_float_word+1,sqrtf@ix+1
 12067  002D50  C087  F09F         	movff	sqrtf@__xc8_float_word+2,sqrtf@ix+2
 12068  002D54  C088  F0A0         	movff	sqrtf@__xc8_float_word+3,sqrtf@ix+3
 12069  002D58  0E00               	movlw	0
 12070  002D5A  0100               	movlb	0	; () banked
 12071  002D5C  159D               	andwf	sqrtf@ix& (0+255),w,b
 12072  002D5E  6F74               	movwf	??_sqrtf& (0+255),b
 12073  002D60  0E00               	movlw	0
 12074  002D62  159E               	andwf	(sqrtf@ix+1)& (0+255),w,b
 12075  002D64  6F75               	movwf	(??_sqrtf+1)& (0+255),b
 12076  002D66  0E80               	movlw	128
 12077  002D68  159F               	andwf	(sqrtf@ix+2)& (0+255),w,b
 12078  002D6A  6F76               	movwf	(??_sqrtf+2)& (0+255),b
 12079  002D6C  0E7F               	movlw	127
 12080  002D6E  15A0               	andwf	(sqrtf@ix+3)& (0+255),w,b
 12081  002D70  6F77               	movwf	(??_sqrtf+3)& (0+255),b
 12082  002D72  0E80               	movlw	128
 12083  002D74  1976               	xorwf	(??_sqrtf+2)& (0+255),w,b
 12084  002D76  E133               	bnz	l8495
 12085  002D78  0E7F               	movlw	127
 12086  002D7A  1977               	xorwf	(??_sqrtf+3)& (0+255),w,b
 12087  002D7C  1174               	iorwf	??_sqrtf& (0+255),w,b
 12088  002D7E  1175               	iorwf	(??_sqrtf+1)& (0+255),w,b
 12089  002D80  A4D8               	btfss	status,2,c
 12090  002D82  D02D               	goto	l8495
 12091                           
 12092                           ; BSR set to: 0
 12093  002D84  C070  F020         	movff	sqrtf@x,___flmul@a
 12094  002D88  C071  F021         	movff	sqrtf@x+1,___flmul@a+1
 12095  002D8C  C072  F022         	movff	sqrtf@x+2,___flmul@a+2
 12096  002D90  C073  F023         	movff	sqrtf@x+3,___flmul@a+3
 12097  002D94  C070  F01C         	movff	sqrtf@x,___flmul@b
 12098  002D98  C071  F01D         	movff	sqrtf@x+1,___flmul@b+1
 12099  002D9C  C072  F01E         	movff	sqrtf@x+2,___flmul@b+2
 12100  002DA0  C073  F01F         	movff	sqrtf@x+3,___flmul@b+3
 12101  002DA4  ECA5  F01A         	call	___flmul	;wreg free
 12102  002DA8  C01C  F00C         	movff	?___flmul,___fladd@b
 12103  002DAC  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 12104  002DB0  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 12105  002DB4  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 12106  002DB8  C070  F010         	movff	sqrtf@x,___fladd@a
 12107  002DBC  C071  F011         	movff	sqrtf@x+1,___fladd@a+1
 12108  002DC0  C072  F012         	movff	sqrtf@x+2,___fladd@a+2
 12109  002DC4  C073  F013         	movff	sqrtf@x+3,___fladd@a+3
 12110  002DC8  EC4E  F01C         	call	___fladd	;wreg free
 12111  002DCC  C00C  F070         	movff	?___fladd,?_sqrtf
 12112  002DD0  C00D  F071         	movff	?___fladd+1,?_sqrtf+1
 12113  002DD4  C00E  F072         	movff	?___fladd+2,?_sqrtf+2
 12114  002DD8  C00F  F073         	movff	?___fladd+3,?_sqrtf+3
 12115  002DDC  0012               	return	
 12116  002DDE                     l8495:
 12117                           
 12118                           ; BSR set to: 0
 12119  002DDE  BFA0               	btfsc	(sqrtf@ix+3)& (0+255),7,b
 12120  002DE0  D007               	goto	u9180
 12121  002DE2  51A0               	movf	(sqrtf@ix+3)& (0+255),w,b
 12122  002DE4  119F               	iorwf	(sqrtf@ix+2)& (0+255),w,b
 12123  002DE6  119E               	iorwf	(sqrtf@ix+1)& (0+255),w,b
 12124  002DE8  E133               	bnz	l8509
 12125  002DEA  059D               	decf	sqrtf@ix& (0+255),w,b
 12126  002DEC  B0D8               	btfsc	status,0,c
 12127  002DEE  D030               	goto	l8509
 12128  002DF0                     u9180:
 12129                           
 12130                           ; BSR set to: 0
 12131  002DF0  0EFF               	movlw	255
 12132  002DF2  159D               	andwf	sqrtf@ix& (0+255),w,b
 12133  002DF4  6F74               	movwf	??_sqrtf& (0+255),b
 12134  002DF6  0EFF               	movlw	255
 12135  002DF8  159E               	andwf	(sqrtf@ix+1)& (0+255),w,b
 12136  002DFA  6F75               	movwf	(??_sqrtf+1)& (0+255),b
 12137  002DFC  0EFF               	movlw	255
 12138  002DFE  159F               	andwf	(sqrtf@ix+2)& (0+255),w,b
 12139  002E00  6F76               	movwf	(??_sqrtf+2)& (0+255),b
 12140  002E02  0E7F               	movlw	127
 12141  002E04  15A0               	andwf	(sqrtf@ix+3)& (0+255),w,b
 12142  002E06  6F77               	movwf	(??_sqrtf+3)& (0+255),b
 12143  002E08  5174               	movf	??_sqrtf& (0+255),w,b
 12144  002E0A  1175               	iorwf	(??_sqrtf+1)& (0+255),w,b
 12145  002E0C  1176               	iorwf	(??_sqrtf+2)& (0+255),w,b
 12146  002E0E  1177               	iorwf	(??_sqrtf+3)& (0+255),w,b
 12147  002E10  A4D8               	btfss	status,2,c
 12148  002E12  D009               	goto	l8501
 12149                           
 12150                           ; BSR set to: 0
 12151  002E14  C070  F070         	movff	sqrtf@x,?_sqrtf
 12152  002E18  C071  F071         	movff	sqrtf@x+1,?_sqrtf+1
 12153  002E1C  C072  F072         	movff	sqrtf@x+2,?_sqrtf+2
 12154  002E20  C073  F073         	movff	sqrtf@x+3,?_sqrtf+3
 12155  002E24  0012               	return	
 12156  002E26                     l8501:
 12157                           
 12158                           ; BSR set to: 0
 12159  002E26  AFA0               	btfss	(sqrtf@ix+3)& (0+255),7,b
 12160  002E28  D013               	goto	l8509
 12161                           
 12162                           ; BSR set to: 0
 12163  002E2A  0E00               	movlw	0
 12164  002E2C  6FE6               	movwf	(_errno+1)& (0+255),b
 12165  002E2E  0E21               	movlw	33
 12166  002E30  6FE5               	movwf	_errno& (0+255),b
 12167                           
 12168                           ; BSR set to: 0
 12169  002E32  0E01               	movlw	low (STR_6+32)
 12170  002E34  6E0C               	movwf	nanf@s,c
 12171  002E36  0E7F               	movlw	high (STR_6+32)
 12172  002E38  6E0D               	movwf	nanf@s+1,c
 12173  002E3A  ECC6  F02C         	call	_nanf	;wreg free
 12174  002E3E  C00C  F070         	movff	?_nanf,?_sqrtf
 12175  002E42  C00D  F071         	movff	?_nanf+1,?_sqrtf+1
 12176  002E46  C00E  F072         	movff	?_nanf+2,?_sqrtf+2
 12177  002E4A  C00F  F073         	movff	?_nanf+3,?_sqrtf+3
 12178  002E4E  0012               	return	
 12179  002E50                     l8509:
 12180                           
 12181                           ; BSR set to: 0
 12182  002E50  0E17               	movlw	23
 12183  002E52  6F74               	movwf	??_sqrtf& (0+255),b
 12184  002E54  C09D  F075         	movff	sqrtf@ix,??_sqrtf+1
 12185  002E58  C09E  F076         	movff	sqrtf@ix+1,??_sqrtf+2
 12186  002E5C  C09F  F077         	movff	sqrtf@ix+2,??_sqrtf+3
 12187  002E60  C0A0  F078         	movff	sqrtf@ix+3,??_sqrtf+4
 12188  002E64                     u9215:
 12189  002E64  6774               	tstfsz	??_sqrtf& (0+255),b
 12190  002E66  D001               	goto	u9216
 12191  002E68  D007               	goto	u9217
 12192  002E6A                     u9216:
 12193  002E6A  3578               	rlcf	(??_sqrtf+4)& (0+255),w,b
 12194  002E6C  3378               	rrcf	(??_sqrtf+4)& (0+255),f,b
 12195  002E6E  3377               	rrcf	(??_sqrtf+3)& (0+255),f,b
 12196  002E70  3376               	rrcf	(??_sqrtf+2)& (0+255),f,b
 12197  002E72  3375               	rrcf	(??_sqrtf+1)& (0+255),f,b
 12198  002E74  2F74               	decfsz	??_sqrtf& (0+255),f,b
 12199  002E76  D7F6               	goto	u9215
 12200  002E78                     u9217:
 12201  002E78  C075  F095         	movff	??_sqrtf+1,sqrtf@m
 12202  002E7C  C076  F096         	movff	??_sqrtf+2,sqrtf@m+1
 12203  002E80  C077  F097         	movff	??_sqrtf+3,sqrtf@m+2
 12204  002E84  C078  F098         	movff	??_sqrtf+4,sqrtf@m+3
 12205  002E88  0100               	movlb	0	; () banked
 12206  002E8A  5195               	movf	sqrtf@m& (0+255),w,b
 12207  002E8C  1196               	iorwf	(sqrtf@m+1)& (0+255),w,b
 12208  002E8E  1197               	iorwf	(sqrtf@m+2)& (0+255),w,b
 12209  002E90  1198               	iorwf	(sqrtf@m+3)& (0+255),w,b
 12210  002E92  A4D8               	btfss	status,2,c
 12211  002E94  D02A               	goto	l1774
 12212                           
 12213                           ; BSR set to: 0
 12214  002E96  0E00               	movlw	0
 12215  002E98  6F81               	movwf	sqrtf@i& (0+255),b
 12216  002E9A  0E00               	movlw	0
 12217  002E9C  6F82               	movwf	(sqrtf@i+1)& (0+255),b
 12218  002E9E  0E00               	movlw	0
 12219  002EA0  6F83               	movwf	(sqrtf@i+2)& (0+255),b
 12220  002EA2  0E00               	movlw	0
 12221  002EA4  6F84               	movwf	(sqrtf@i+3)& (0+255),b
 12222  002EA6  D00B               	goto	l8517
 12223  002EA8                     l8513:
 12224                           
 12225                           ; BSR set to: 0
 12226  002EA8  90D8               	bcf	status,0,c
 12227  002EAA  379D               	rlcf	sqrtf@ix& (0+255),f,b
 12228  002EAC  379E               	rlcf	(sqrtf@ix+1)& (0+255),f,b
 12229  002EAE  379F               	rlcf	(sqrtf@ix+2)& (0+255),f,b
 12230  002EB0  37A0               	rlcf	(sqrtf@ix+3)& (0+255),f,b
 12231                           
 12232                           ; BSR set to: 0
 12233  002EB2  0E01               	movlw	1
 12234  002EB4  2781               	addwf	sqrtf@i& (0+255),f,b
 12235  002EB6  0E00               	movlw	0
 12236  002EB8  2382               	addwfc	(sqrtf@i+1)& (0+255),f,b
 12237  002EBA  2383               	addwfc	(sqrtf@i+2)& (0+255),f,b
 12238  002EBC  2384               	addwfc	(sqrtf@i+3)& (0+255),f,b
 12239  002EBE                     l8517:
 12240                           
 12241                           ; BSR set to: 0
 12242  002EBE  AF9F               	btfss	(sqrtf@ix+2)& (0+255),7,b
 12243  002EC0  D7F3               	goto	l8513
 12244                           
 12245                           ; BSR set to: 0
 12246  002EC2  0EFF               	movlw	255
 12247  002EC4  2581               	addwf	sqrtf@i& (0+255),w,b
 12248  002EC6  6F74               	movwf	??_sqrtf& (0+255),b
 12249  002EC8  0EFF               	movlw	255
 12250  002ECA  2182               	addwfc	(sqrtf@i+1)& (0+255),w,b
 12251  002ECC  6F75               	movwf	(??_sqrtf+1)& (0+255),b
 12252  002ECE  0EFF               	movlw	255
 12253  002ED0  2183               	addwfc	(sqrtf@i+2)& (0+255),w,b
 12254  002ED2  6F76               	movwf	(??_sqrtf+2)& (0+255),b
 12255  002ED4  0EFF               	movlw	255
 12256  002ED6  2184               	addwfc	(sqrtf@i+3)& (0+255),w,b
 12257  002ED8  6F77               	movwf	(??_sqrtf+3)& (0+255),b
 12258  002EDA  5174               	movf	??_sqrtf& (0+255),w,b
 12259  002EDC  5F95               	subwf	sqrtf@m& (0+255),f,b
 12260  002EDE  5175               	movf	(??_sqrtf+1)& (0+255),w,b
 12261  002EE0  5B96               	subwfb	(sqrtf@m+1)& (0+255),f,b
 12262  002EE2  5176               	movf	(??_sqrtf+2)& (0+255),w,b
 12263  002EE4  5B97               	subwfb	(sqrtf@m+2)& (0+255),f,b
 12264  002EE6  5177               	movf	(??_sqrtf+3)& (0+255),w,b
 12265  002EE8  5B98               	subwfb	(sqrtf@m+3)& (0+255),f,b
 12266  002EEA                     l1774:
 12267                           
 12268                           ; BSR set to: 0
 12269  002EEA  0E81               	movlw	129
 12270  002EEC  2795               	addwf	sqrtf@m& (0+255),f,b
 12271  002EEE  0EFF               	movlw	255
 12272  002EF0  2396               	addwfc	(sqrtf@m+1)& (0+255),f,b
 12273  002EF2  0EFF               	movlw	255
 12274  002EF4  2397               	addwfc	(sqrtf@m+2)& (0+255),f,b
 12275  002EF6  0EFF               	movlw	255
 12276  002EF8  2398               	addwfc	(sqrtf@m+3)& (0+255),f,b
 12277  002EFA  0EFF               	movlw	255
 12278  002EFC  159D               	andwf	sqrtf@ix& (0+255),w,b
 12279  002EFE  6F74               	movwf	??_sqrtf& (0+255),b
 12280  002F00  0EFF               	movlw	255
 12281  002F02  159E               	andwf	(sqrtf@ix+1)& (0+255),w,b
 12282  002F04  6F75               	movwf	(??_sqrtf+1)& (0+255),b
 12283  002F06  0E7F               	movlw	127
 12284  002F08  159F               	andwf	(sqrtf@ix+2)& (0+255),w,b
 12285  002F0A  6F76               	movwf	(??_sqrtf+2)& (0+255),b
 12286  002F0C  0E00               	movlw	0
 12287  002F0E  15A0               	andwf	(sqrtf@ix+3)& (0+255),w,b
 12288  002F10  6F77               	movwf	(??_sqrtf+3)& (0+255),b
 12289  002F12  0E00               	movlw	0
 12290  002F14  1174               	iorwf	??_sqrtf& (0+255),w,b
 12291  002F16  6F9D               	movwf	sqrtf@ix& (0+255),b
 12292  002F18  0E00               	movlw	0
 12293  002F1A  1175               	iorwf	(??_sqrtf+1)& (0+255),w,b
 12294  002F1C  6F9E               	movwf	(sqrtf@ix+1)& (0+255),b
 12295  002F1E  0E80               	movlw	128
 12296  002F20  1176               	iorwf	(??_sqrtf+2)& (0+255),w,b
 12297  002F22  6F9F               	movwf	(sqrtf@ix+2)& (0+255),b
 12298  002F24  0E00               	movlw	0
 12299  002F26  1177               	iorwf	(??_sqrtf+3)& (0+255),w,b
 12300  002F28  6FA0               	movwf	(sqrtf@ix+3)& (0+255),b
 12301                           
 12302                           ; BSR set to: 0
 12303  002F2A  A195               	btfss	sqrtf@m& (0+255),0,b
 12304  002F2C  D008               	goto	l1778
 12305                           
 12306                           ; BSR set to: 0
 12307  002F2E  519D               	movf	sqrtf@ix& (0+255),w,b
 12308  002F30  279D               	addwf	sqrtf@ix& (0+255),f,b
 12309  002F32  519E               	movf	(sqrtf@ix+1)& (0+255),w,b
 12310  002F34  239E               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 12311  002F36  519F               	movf	(sqrtf@ix+2)& (0+255),w,b
 12312  002F38  239F               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 12313  002F3A  51A0               	movf	(sqrtf@ix+3)& (0+255),w,b
 12314  002F3C  23A0               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 12315  002F3E                     l1778:
 12316                           
 12317                           ; BSR set to: 0
 12318  002F3E  3598               	rlcf	(sqrtf@m+3)& (0+255),w,b
 12319  002F40  3398               	rrcf	(sqrtf@m+3)& (0+255),f,b
 12320  002F42  3397               	rrcf	(sqrtf@m+2)& (0+255),f,b
 12321  002F44  3396               	rrcf	(sqrtf@m+1)& (0+255),f,b
 12322  002F46  3395               	rrcf	sqrtf@m& (0+255),f,b
 12323  002F48  519D               	movf	sqrtf@ix& (0+255),w,b
 12324  002F4A  279D               	addwf	sqrtf@ix& (0+255),f,b
 12325  002F4C  519E               	movf	(sqrtf@ix+1)& (0+255),w,b
 12326  002F4E  239E               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 12327  002F50  519F               	movf	(sqrtf@ix+2)& (0+255),w,b
 12328  002F52  239F               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 12329  002F54  51A0               	movf	(sqrtf@ix+3)& (0+255),w,b
 12330  002F56  23A0               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 12331                           
 12332                           ; BSR set to: 0
 12333  002F58  0E00               	movlw	0
 12334  002F5A  6F7D               	movwf	sqrtf@s& (0+255),b
 12335  002F5C  0E00               	movlw	0
 12336  002F5E  6F7E               	movwf	(sqrtf@s+1)& (0+255),b
 12337  002F60  0E00               	movlw	0
 12338  002F62  6F7F               	movwf	(sqrtf@s+2)& (0+255),b
 12339  002F64  0E00               	movlw	0
 12340  002F66  6F80               	movwf	(sqrtf@s+3)& (0+255),b
 12341  002F68  C07D  F089         	movff	sqrtf@s,sqrtf@q
 12342  002F6C  C07E  F08A         	movff	sqrtf@s+1,sqrtf@q+1
 12343  002F70  C07F  F08B         	movff	sqrtf@s+2,sqrtf@q+2
 12344  002F74  C080  F08C         	movff	sqrtf@s+3,sqrtf@q+3
 12345                           
 12346                           ; BSR set to: 0
 12347  002F78  0E00               	movlw	0
 12348  002F7A  6F99               	movwf	sqrtf@r& (0+255),b
 12349  002F7C  0E00               	movlw	0
 12350  002F7E  6F9A               	movwf	(sqrtf@r+1)& (0+255),b
 12351  002F80  0E00               	movlw	0
 12352  002F82  6F9B               	movwf	(sqrtf@r+2)& (0+255),b
 12353  002F84  0E01               	movlw	1
 12354  002F86  6F9C               	movwf	(sqrtf@r+3)& (0+255),b
 12355  002F88  D043               	goto	l8535
 12356  002F8A                     l8529:
 12357                           
 12358                           ; BSR set to: 0
 12359  002F8A  5199               	movf	sqrtf@r& (0+255),w,b
 12360  002F8C  257D               	addwf	sqrtf@s& (0+255),w,b
 12361  002F8E  6F8D               	movwf	sqrtf@t& (0+255),b
 12362  002F90  519A               	movf	(sqrtf@r+1)& (0+255),w,b
 12363  002F92  217E               	addwfc	(sqrtf@s+1)& (0+255),w,b
 12364  002F94  6F8E               	movwf	(sqrtf@t+1)& (0+255),b
 12365  002F96  519B               	movf	(sqrtf@r+2)& (0+255),w,b
 12366  002F98  217F               	addwfc	(sqrtf@s+2)& (0+255),w,b
 12367  002F9A  6F8F               	movwf	(sqrtf@t+2)& (0+255),b
 12368  002F9C  519C               	movf	(sqrtf@r+3)& (0+255),w,b
 12369  002F9E  2180               	addwfc	(sqrtf@s+3)& (0+255),w,b
 12370  002FA0  6F90               	movwf	(sqrtf@t+3)& (0+255),b
 12371  002FA2  518D               	movf	sqrtf@t& (0+255),w,b
 12372  002FA4  5D9D               	subwf	sqrtf@ix& (0+255),w,b
 12373  002FA6  518E               	movf	(sqrtf@t+1)& (0+255),w,b
 12374  002FA8  599E               	subwfb	(sqrtf@ix+1)& (0+255),w,b
 12375  002FAA  518F               	movf	(sqrtf@t+2)& (0+255),w,b
 12376  002FAC  599F               	subwfb	(sqrtf@ix+2)& (0+255),w,b
 12377  002FAE  51A0               	movf	(sqrtf@ix+3)& (0+255),w,b
 12378  002FB0  0A80               	xorlw	128
 12379  002FB2  6F74               	movwf	??_sqrtf& (0+255),b
 12380  002FB4  5190               	movf	(sqrtf@t+3)& (0+255),w,b
 12381  002FB6  0A80               	xorlw	128
 12382  002FB8  5974               	subwfb	??_sqrtf& (0+255),w,b
 12383  002FBA  A0D8               	btfss	status,0,c
 12384  002FBC  D01C               	goto	l1781
 12385                           
 12386                           ; BSR set to: 0
 12387  002FBE  5199               	movf	sqrtf@r& (0+255),w,b
 12388  002FC0  258D               	addwf	sqrtf@t& (0+255),w,b
 12389  002FC2  6F7D               	movwf	sqrtf@s& (0+255),b
 12390  002FC4  519A               	movf	(sqrtf@r+1)& (0+255),w,b
 12391  002FC6  218E               	addwfc	(sqrtf@t+1)& (0+255),w,b
 12392  002FC8  6F7E               	movwf	(sqrtf@s+1)& (0+255),b
 12393  002FCA  519B               	movf	(sqrtf@r+2)& (0+255),w,b
 12394  002FCC  218F               	addwfc	(sqrtf@t+2)& (0+255),w,b
 12395  002FCE  6F7F               	movwf	(sqrtf@s+2)& (0+255),b
 12396  002FD0  519C               	movf	(sqrtf@r+3)& (0+255),w,b
 12397  002FD2  2190               	addwfc	(sqrtf@t+3)& (0+255),w,b
 12398  002FD4  6F80               	movwf	(sqrtf@s+3)& (0+255),b
 12399  002FD6  518D               	movf	sqrtf@t& (0+255),w,b
 12400  002FD8  5F9D               	subwf	sqrtf@ix& (0+255),f,b
 12401  002FDA  518E               	movf	(sqrtf@t+1)& (0+255),w,b
 12402  002FDC  5B9E               	subwfb	(sqrtf@ix+1)& (0+255),f,b
 12403  002FDE  518F               	movf	(sqrtf@t+2)& (0+255),w,b
 12404  002FE0  5B9F               	subwfb	(sqrtf@ix+2)& (0+255),f,b
 12405  002FE2  5190               	movf	(sqrtf@t+3)& (0+255),w,b
 12406  002FE4  5BA0               	subwfb	(sqrtf@ix+3)& (0+255),f,b
 12407  002FE6  5199               	movf	sqrtf@r& (0+255),w,b
 12408  002FE8  2789               	addwf	sqrtf@q& (0+255),f,b
 12409  002FEA  519A               	movf	(sqrtf@r+1)& (0+255),w,b
 12410  002FEC  238A               	addwfc	(sqrtf@q+1)& (0+255),f,b
 12411  002FEE  519B               	movf	(sqrtf@r+2)& (0+255),w,b
 12412  002FF0  238B               	addwfc	(sqrtf@q+2)& (0+255),f,b
 12413  002FF2  519C               	movf	(sqrtf@r+3)& (0+255),w,b
 12414  002FF4  238C               	addwfc	(sqrtf@q+3)& (0+255),f,b
 12415  002FF6                     l1781:
 12416                           
 12417                           ; BSR set to: 0
 12418  002FF6  519D               	movf	sqrtf@ix& (0+255),w,b
 12419  002FF8  279D               	addwf	sqrtf@ix& (0+255),f,b
 12420  002FFA  519E               	movf	(sqrtf@ix+1)& (0+255),w,b
 12421  002FFC  239E               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 12422  002FFE  519F               	movf	(sqrtf@ix+2)& (0+255),w,b
 12423  003000  239F               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 12424  003002  51A0               	movf	(sqrtf@ix+3)& (0+255),w,b
 12425  003004  23A0               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 12426                           
 12427                           ; BSR set to: 0
 12428  003006  90D8               	bcf	status,0,c
 12429  003008  339C               	rrcf	(sqrtf@r+3)& (0+255),f,b
 12430  00300A  339B               	rrcf	(sqrtf@r+2)& (0+255),f,b
 12431  00300C  339A               	rrcf	(sqrtf@r+1)& (0+255),f,b
 12432  00300E  3399               	rrcf	sqrtf@r& (0+255),f,b
 12433  003010                     l8535:
 12434                           
 12435                           ; BSR set to: 0
 12436  003010  5199               	movf	sqrtf@r& (0+255),w,b
 12437  003012  119A               	iorwf	(sqrtf@r+1)& (0+255),w,b
 12438  003014  119B               	iorwf	(sqrtf@r+2)& (0+255),w,b
 12439  003016  119C               	iorwf	(sqrtf@r+3)& (0+255),w,b
 12440  003018  A4D8               	btfss	status,2,c
 12441  00301A  D7B7               	goto	l8529
 12442                           
 12443                           ; BSR set to: 0
 12444  00301C  519D               	movf	sqrtf@ix& (0+255),w,b
 12445  00301E  119E               	iorwf	(sqrtf@ix+1)& (0+255),w,b
 12446  003020  119F               	iorwf	(sqrtf@ix+2)& (0+255),w,b
 12447  003022  11A0               	iorwf	(sqrtf@ix+3)& (0+255),w,b
 12448  003024  B4D8               	btfsc	status,2,c
 12449  003026  D054               	goto	l1783
 12450                           
 12451                           ; BSR set to: 0
 12452  003028  0E00               	movlw	0
 12453  00302A  6F91               	movwf	sqrtf@z& (0+255),b
 12454  00302C  0E00               	movlw	0
 12455  00302E  6F92               	movwf	(sqrtf@z+1)& (0+255),b
 12456  003030  0E80               	movlw	128
 12457  003032  6F93               	movwf	(sqrtf@z+2)& (0+255),b
 12458  003034  0E3F               	movlw	63
 12459  003036  6F94               	movwf	(sqrtf@z+3)& (0+255),b
 12460                           
 12461                           ; BSR set to: 0
 12462  003038  C091  F068         	movff	sqrtf@z,___flge@ff1
 12463  00303C  C092  F069         	movff	sqrtf@z+1,___flge@ff1+1
 12464  003040  C093  F06A         	movff	sqrtf@z+2,___flge@ff1+2
 12465  003044  C094  F06B         	movff	sqrtf@z+3,___flge@ff1+3
 12466  003048  0E00               	movlw	0
 12467  00304A  6F6C               	movwf	___flge@ff2& (0+255),b
 12468  00304C  0E00               	movlw	0
 12469  00304E  6F6D               	movwf	(___flge@ff2+1)& (0+255),b
 12470  003050  0E80               	movlw	128
 12471  003052  6F6E               	movwf	(___flge@ff2+2)& (0+255),b
 12472  003054  0E3F               	movlw	63
 12473  003056  6F6F               	movwf	(___flge@ff2+3)& (0+255),b
 12474  003058  ECE3  F025         	call	___flge	;wreg free
 12475  00305C  0100               	movlb	0	; () banked
 12476  00305E  A0D8               	btfss	status,0,c
 12477  003060  D037               	goto	l1783
 12478                           
 12479                           ; BSR set to: 0
 12480  003062  0E00               	movlw	0
 12481  003064  6F91               	movwf	sqrtf@z& (0+255),b
 12482  003066  0E00               	movlw	0
 12483  003068  6F92               	movwf	(sqrtf@z+1)& (0+255),b
 12484  00306A  0E80               	movlw	128
 12485  00306C  6F93               	movwf	(sqrtf@z+2)& (0+255),b
 12486  00306E  0E3F               	movlw	63
 12487  003070  6F94               	movwf	(sqrtf@z+3)& (0+255),b
 12488                           
 12489                           ; BSR set to: 0
 12490  003072  0E00               	movlw	0
 12491  003074  6F68               	movwf	___flge@ff1& (0+255),b
 12492  003076  0E00               	movlw	0
 12493  003078  6F69               	movwf	(___flge@ff1+1)& (0+255),b
 12494  00307A  0E80               	movlw	128
 12495  00307C  6F6A               	movwf	(___flge@ff1+2)& (0+255),b
 12496  00307E  0E3F               	movlw	63
 12497  003080  6F6B               	movwf	(___flge@ff1+3)& (0+255),b
 12498  003082  C091  F06C         	movff	sqrtf@z,___flge@ff2
 12499  003086  C092  F06D         	movff	sqrtf@z+1,___flge@ff2+1
 12500  00308A  C093  F06E         	movff	sqrtf@z+2,___flge@ff2+2
 12501  00308E  C094  F06F         	movff	sqrtf@z+3,___flge@ff2+3
 12502  003092  ECE3  F025         	call	___flge	;wreg free
 12503  003096  0100               	movlb	0	; () banked
 12504  003098  B0D8               	btfsc	status,0,c
 12505  00309A  D006               	goto	l8549
 12506                           
 12507                           ; BSR set to: 0
 12508  00309C  0E02               	movlw	2
 12509  00309E  2789               	addwf	sqrtf@q& (0+255),f,b
 12510  0030A0  0E00               	movlw	0
 12511  0030A2  238A               	addwfc	(sqrtf@q+1)& (0+255),f,b
 12512  0030A4  238B               	addwfc	(sqrtf@q+2)& (0+255),f,b
 12513  0030A6  D013               	goto	L6
 12514  0030A8                     l8549:
 12515                           
 12516                           ; BSR set to: 0
 12517  0030A8  0E01               	movlw	1
 12518  0030AA  1589               	andwf	sqrtf@q& (0+255),w,b
 12519  0030AC  6F74               	movwf	??_sqrtf& (0+255),b
 12520  0030AE  0E00               	movlw	0
 12521  0030B0  158A               	andwf	(sqrtf@q+1)& (0+255),w,b
 12522  0030B2  6F75               	movwf	(??_sqrtf+1)& (0+255),b
 12523  0030B4  0E00               	movlw	0
 12524  0030B6  158B               	andwf	(sqrtf@q+2)& (0+255),w,b
 12525  0030B8  6F76               	movwf	(??_sqrtf+2)& (0+255),b
 12526  0030BA  0E00               	movlw	0
 12527  0030BC  158C               	andwf	(sqrtf@q+3)& (0+255),w,b
 12528  0030BE  6F77               	movwf	(??_sqrtf+3)& (0+255),b
 12529  0030C0  5174               	movf	??_sqrtf& (0+255),w,b
 12530  0030C2  2789               	addwf	sqrtf@q& (0+255),f,b
 12531  0030C4  5175               	movf	(??_sqrtf+1)& (0+255),w,b
 12532  0030C6  238A               	addwfc	(sqrtf@q+1)& (0+255),f,b
 12533  0030C8  5176               	movf	(??_sqrtf+2)& (0+255),w,b
 12534  0030CA  238B               	addwfc	(sqrtf@q+2)& (0+255),f,b
 12535  0030CC  5177               	movf	(??_sqrtf+3)& (0+255),w,b
 12536  0030CE                     L6:
 12537  0030CE  238C               	addwfc	(sqrtf@q+3)& (0+255),f,b
 12538  0030D0                     l1783:
 12539                           
 12540                           ; BSR set to: 0
 12541  0030D0  C089  F074         	movff	sqrtf@q,??_sqrtf
 12542  0030D4  C08A  F075         	movff	sqrtf@q+1,??_sqrtf+1
 12543  0030D8  C08B  F076         	movff	sqrtf@q+2,??_sqrtf+2
 12544  0030DC  C08C  F077         	movff	sqrtf@q+3,??_sqrtf+3
 12545  0030E0  3577               	rlcf	(??_sqrtf+3)& (0+255),w,b
 12546  0030E2  3377               	rrcf	(??_sqrtf+3)& (0+255),f,b
 12547  0030E4  3376               	rrcf	(??_sqrtf+2)& (0+255),f,b
 12548  0030E6  3375               	rrcf	(??_sqrtf+1)& (0+255),f,b
 12549  0030E8  3374               	rrcf	??_sqrtf& (0+255),f,b
 12550  0030EA  0E00               	movlw	0
 12551  0030EC  2574               	addwf	??_sqrtf& (0+255),w,b
 12552  0030EE  6F9D               	movwf	sqrtf@ix& (0+255),b
 12553  0030F0  0E00               	movlw	0
 12554  0030F2  2175               	addwfc	(??_sqrtf+1)& (0+255),w,b
 12555  0030F4  6F9E               	movwf	(sqrtf@ix+1)& (0+255),b
 12556  0030F6  0E00               	movlw	0
 12557  0030F8  2176               	addwfc	(??_sqrtf+2)& (0+255),w,b
 12558  0030FA  6F9F               	movwf	(sqrtf@ix+2)& (0+255),b
 12559  0030FC  0E3F               	movlw	63
 12560  0030FE  2177               	addwfc	(??_sqrtf+3)& (0+255),w,b
 12561  003100  6FA0               	movwf	(sqrtf@ix+3)& (0+255),b
 12562  003102  C095  F074         	movff	sqrtf@m,??_sqrtf
 12563  003106  C096  F075         	movff	sqrtf@m+1,??_sqrtf+1
 12564  00310A  C097  F076         	movff	sqrtf@m+2,??_sqrtf+2
 12565  00310E  C098  F077         	movff	sqrtf@m+3,??_sqrtf+3
 12566  003112  0E17               	movlw	23
 12567  003114                     u9305:
 12568  003114  90D8               	bcf	status,0,c
 12569  003116  3774               	rlcf	??_sqrtf& (0+255),f,b
 12570  003118  3775               	rlcf	(??_sqrtf+1)& (0+255),f,b
 12571  00311A  3776               	rlcf	(??_sqrtf+2)& (0+255),f,b
 12572  00311C  3777               	rlcf	(??_sqrtf+3)& (0+255),f,b
 12573  00311E  2EE8               	decfsz	wreg,f,c
 12574  003120  D7F9               	goto	u9305
 12575  003122  5174               	movf	??_sqrtf& (0+255),w,b
 12576  003124  279D               	addwf	sqrtf@ix& (0+255),f,b
 12577  003126  5175               	movf	(??_sqrtf+1)& (0+255),w,b
 12578  003128  239E               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 12579  00312A  5176               	movf	(??_sqrtf+2)& (0+255),w,b
 12580  00312C  239F               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 12581  00312E  5177               	movf	(??_sqrtf+3)& (0+255),w,b
 12582  003130  23A0               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 12583                           
 12584                           ; BSR set to: 0
 12585  003132  C09D  F085         	movff	sqrtf@ix,sqrtf@__xc8_float_word
 12586  003136  C09E  F086         	movff	sqrtf@ix+1,sqrtf@__xc8_float_word+1
 12587  00313A  C09F  F087         	movff	sqrtf@ix+2,sqrtf@__xc8_float_word+2
 12588  00313E  C0A0  F088         	movff	sqrtf@ix+3,sqrtf@__xc8_float_word+3
 12589                           
 12590                           ; BSR set to: 0
 12591  003142  C085  F091         	movff	sqrtf@__xc8_float_word,sqrtf@z
 12592  003146  C086  F092         	movff	sqrtf@__xc8_float_word+1,sqrtf@z+1
 12593  00314A  C087  F093         	movff	sqrtf@__xc8_float_word+2,sqrtf@z+2
 12594  00314E  C088  F094         	movff	sqrtf@__xc8_float_word+3,sqrtf@z+3
 12595                           
 12596                           ; BSR set to: 0
 12597  003152  C091  F070         	movff	sqrtf@z,?_sqrtf
 12598  003156  C092  F071         	movff	sqrtf@z+1,?_sqrtf+1
 12599  00315A  C093  F072         	movff	sqrtf@z+2,?_sqrtf+2
 12600  00315E  C094  F073         	movff	sqrtf@z+3,?_sqrtf+3
 12601  003162  0012               	return		;funcret
 12602  003164                     __end_of_sqrtf:
 12603                           	opt callstack 0
 12604                           
 12605 ;; *************** function _nanf *****************
 12606 ;; Defined at:
 12607 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nanf.c"
 12608 ;; Parameters:    Size  Location     Type
 12609 ;;  s               2   11[COMRAM] PTR const unsigned char 
 12610 ;;		 -> STR_32(1), 
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;  u               4   15[COMRAM] struct .
 12613 ;; Return value:  Size  Location     Type
 12614 ;;                  4   11[COMRAM] float 
 12615 ;; Registers used:
 12616 ;;		wreg, status,2
 12617 ;; Tracked objects:
 12618 ;;		On entry : 0/0
 12619 ;;		On exit  : 0/0
 12620 ;;		Unchanged: 0/0
 12621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12622 ;;      Params:         4       0       0       0       0       0       0       0       0
 12623 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12624 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12625 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12626 ;;Total ram usage:        8 bytes
 12627 ;; Hardware stack levels used:    1
 12628 ;; Hardware stack levels required when called:    7
 12629 ;; This function calls:
 12630 ;;		Nothing
 12631 ;; This function is called by:
 12632 ;;		_sqrtf
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636                           	psect	text49
 12637  00598C                     __ptext49:
 12638                           	opt callstack 0
 12639  00598C                     _nanf:
 12640                           	opt callstack 19
 12641                           
 12642                           ;incstack = 0
 12643  00598C  0EFF               	movlw	255
 12644  00598E  6E10               	movwf	nanf@u,c
 12645  005990  0EFF               	movlw	255
 12646  005992  6E11               	movwf	nanf@u+1,c
 12647  005994  0EFF               	movlw	255
 12648  005996  6E12               	movwf	nanf@u+2,c
 12649  005998  0E7F               	movlw	127
 12650  00599A  6E13               	movwf	nanf@u+3,c
 12651  00599C  C010  F00C         	movff	nanf@u,?_nanf
 12652  0059A0  C011  F00D         	movff	nanf@u+1,?_nanf+1
 12653  0059A4  C012  F00E         	movff	nanf@u+2,?_nanf+2
 12654  0059A8  C013  F00F         	movff	nanf@u+3,?_nanf+3
 12655  0059AC  0012               	return		;funcret
 12656  0059AE                     __end_of_nanf:
 12657                           	opt callstack 0
 12658                           
 12659 ;; *************** function ___flge *****************
 12660 ;; Defined at:
 12661 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 12662 ;; Parameters:    Size  Location     Type
 12663 ;;  ff1             4    8[BANK0 ] float 
 12664 ;;  ff2             4   12[BANK0 ] float 
 12665 ;; Auto vars:     Size  Location     Type
 12666 ;;		None
 12667 ;; Return value:  Size  Location     Type
 12668 ;;		None               void
 12669 ;; Registers used:
 12670 ;;		wreg, status,2, status,0
 12671 ;; Tracked objects:
 12672 ;;		On entry : 0/0
 12673 ;;		On exit  : 0/0
 12674 ;;		Unchanged: 0/0
 12675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12676 ;;      Params:         0       8       0       0       0       0       0       0       0
 12677 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12678 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12679 ;;      Totals:         4       8       0       0       0       0       0       0       0
 12680 ;;Total ram usage:       12 bytes
 12681 ;; Hardware stack levels used:    1
 12682 ;; Hardware stack levels required when called:    7
 12683 ;; This function calls:
 12684 ;;		Nothing
 12685 ;; This function is called by:
 12686 ;;		_powf
 12687 ;;		_sqrtf
 12688 ;; This function uses a non-reentrant model
 12689 ;;
 12690                           
 12691                           	psect	text50
 12692  004BC6                     __ptext50:
 12693                           	opt callstack 0
 12694  004BC6                     ___flge:
 12695                           	opt callstack 19
 12696                           
 12697                           ;incstack = 0
 12698  004BC6  0E00               	movlw	0
 12699  004BC8  0100               	movlb	0	; () banked
 12700  004BCA  1568               	andwf	___flge@ff1& (0+255),w,b
 12701  004BCC  6E35               	movwf	??___flge& (0+255),c
 12702  004BCE  0E00               	movlw	0
 12703  004BD0  1569               	andwf	(___flge@ff1+1)& (0+255),w,b
 12704  004BD2  6E36               	movwf	(??___flge+1)& (0+255),c
 12705  004BD4  0E80               	movlw	128
 12706  004BD6  156A               	andwf	(___flge@ff1+2)& (0+255),w,b
 12707  004BD8  6E37               	movwf	(??___flge+2)& (0+255),c
 12708  004BDA  0E7F               	movlw	127
 12709  004BDC  156B               	andwf	(___flge@ff1+3)& (0+255),w,b
 12710  004BDE  6E38               	movwf	(??___flge+3)& (0+255),c
 12711  004BE0  5035               	movf	??___flge,w,c
 12712  004BE2  1036               	iorwf	??___flge+1,w,c
 12713  004BE4  1037               	iorwf	??___flge+2,w,c
 12714  004BE6  1038               	iorwf	??___flge+3,w,c
 12715  004BE8  A4D8               	btfss	status,2,c
 12716  004BEA  D008               	goto	l8321
 12717                           
 12718                           ; BSR set to: 0
 12719  004BEC  0E00               	movlw	0
 12720  004BEE  6F68               	movwf	___flge@ff1& (0+255),b
 12721  004BF0  0E00               	movlw	0
 12722  004BF2  6F69               	movwf	(___flge@ff1+1)& (0+255),b
 12723  004BF4  0E00               	movlw	0
 12724  004BF6  6F6A               	movwf	(___flge@ff1+2)& (0+255),b
 12725  004BF8  0E00               	movlw	0
 12726  004BFA  6F6B               	movwf	(___flge@ff1+3)& (0+255),b
 12727  004BFC                     l8321:
 12728                           
 12729                           ; BSR set to: 0
 12730  004BFC  0E00               	movlw	0
 12731  004BFE  156C               	andwf	___flge@ff2& (0+255),w,b
 12732  004C00  6E35               	movwf	??___flge& (0+255),c
 12733  004C02  0E00               	movlw	0
 12734  004C04  156D               	andwf	(___flge@ff2+1)& (0+255),w,b
 12735  004C06  6E36               	movwf	(??___flge+1)& (0+255),c
 12736  004C08  0E80               	movlw	128
 12737  004C0A  156E               	andwf	(___flge@ff2+2)& (0+255),w,b
 12738  004C0C  6E37               	movwf	(??___flge+2)& (0+255),c
 12739  004C0E  0E7F               	movlw	127
 12740  004C10  156F               	andwf	(___flge@ff2+3)& (0+255),w,b
 12741  004C12  6E38               	movwf	(??___flge+3)& (0+255),c
 12742  004C14  5035               	movf	??___flge,w,c
 12743  004C16  1036               	iorwf	??___flge+1,w,c
 12744  004C18  1037               	iorwf	??___flge+2,w,c
 12745  004C1A  1038               	iorwf	??___flge+3,w,c
 12746  004C1C  A4D8               	btfss	status,2,c
 12747  004C1E  D008               	goto	l8325
 12748                           
 12749                           ; BSR set to: 0
 12750  004C20  0E00               	movlw	0
 12751  004C22  6F6C               	movwf	___flge@ff2& (0+255),b
 12752  004C24  0E00               	movlw	0
 12753  004C26  6F6D               	movwf	(___flge@ff2+1)& (0+255),b
 12754  004C28  0E00               	movlw	0
 12755  004C2A  6F6E               	movwf	(___flge@ff2+2)& (0+255),b
 12756  004C2C  0E00               	movlw	0
 12757  004C2E  6F6F               	movwf	(___flge@ff2+3)& (0+255),b
 12758  004C30                     l8325:
 12759                           
 12760                           ; BSR set to: 0
 12761  004C30  AF6B               	btfss	(___flge@ff1+3)& (0+255),7,b
 12762  004C32  D009               	goto	l8329
 12763                           
 12764                           ; BSR set to: 0
 12765  004C34  6D68               	negf	___flge@ff1& (0+255),b
 12766  004C36  1F69               	comf	(___flge@ff1+1)& (0+255),f,b
 12767  004C38  B0D8               	btfsc	status,0,c
 12768  004C3A  2B69               	incf	(___flge@ff1+1)& (0+255),f,b
 12769  004C3C  1F6A               	comf	(___flge@ff1+2)& (0+255),f,b
 12770  004C3E  B0D8               	btfsc	status,0,c
 12771  004C40  2B6A               	incf	(___flge@ff1+2)& (0+255),f,b
 12772  004C42  0E80               	movlw	128
 12773  004C44  576B               	subfwb	(___flge@ff1+3)& (0+255),f,b
 12774  004C46                     l8329:
 12775                           
 12776                           ; BSR set to: 0
 12777  004C46  AF6F               	btfss	(___flge@ff2+3)& (0+255),7,b
 12778  004C48  D009               	goto	l1048
 12779                           
 12780                           ; BSR set to: 0
 12781  004C4A  6D6C               	negf	___flge@ff2& (0+255),b
 12782  004C4C  1F6D               	comf	(___flge@ff2+1)& (0+255),f,b
 12783  004C4E  B0D8               	btfsc	status,0,c
 12784  004C50  2B6D               	incf	(___flge@ff2+1)& (0+255),f,b
 12785  004C52  1F6E               	comf	(___flge@ff2+2)& (0+255),f,b
 12786  004C54  B0D8               	btfsc	status,0,c
 12787  004C56  2B6E               	incf	(___flge@ff2+2)& (0+255),f,b
 12788  004C58  0E80               	movlw	128
 12789  004C5A  576F               	subfwb	(___flge@ff2+3)& (0+255),f,b
 12790  004C5C                     l1048:
 12791                           
 12792                           ; BSR set to: 0
 12793  004C5C  0E00               	movlw	0
 12794  004C5E  1B68               	xorwf	___flge@ff1& (0+255),f,b
 12795  004C60  0E00               	movlw	0
 12796  004C62  1B69               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12797  004C64  0E00               	movlw	0
 12798  004C66  1B6A               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12799  004C68  0E80               	movlw	128
 12800  004C6A  1B6B               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12801  004C6C  0E00               	movlw	0
 12802  004C6E  1B6C               	xorwf	___flge@ff2& (0+255),f,b
 12803  004C70  0E00               	movlw	0
 12804  004C72  1B6D               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12805  004C74  0E00               	movlw	0
 12806  004C76  1B6E               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12807  004C78  0E80               	movlw	128
 12808  004C7A  1B6F               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12809  004C7C  516C               	movf	___flge@ff2& (0+255),w,b
 12810  004C7E  5D68               	subwf	___flge@ff1& (0+255),w,b
 12811  004C80  516D               	movf	(___flge@ff2+1)& (0+255),w,b
 12812  004C82  5969               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12813  004C84  516E               	movf	(___flge@ff2+2)& (0+255),w,b
 12814  004C86  596A               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12815  004C88  516F               	movf	(___flge@ff2+3)& (0+255),w,b
 12816  004C8A  596B               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12817  004C8C  B0D8               	btfsc	status,0,c
 12818  004C8E  D002               	goto	l8335
 12819                           
 12820                           ; BSR set to: 0
 12821  004C90  90D8               	bcf	status,0,c
 12822  004C92  0012               	return	
 12823  004C94                     l8335:
 12824                           
 12825                           ; BSR set to: 0
 12826  004C94  80D8               	bsf	status,0,c
 12827                           
 12828                           ; BSR set to: 0
 12829  004C96  0012               	return		;funcret
 12830  004C98                     __end_of___flge:
 12831                           	opt callstack 0
 12832                           
 12833 ;; *************** function _scalbnf *****************
 12834 ;; Defined at:
 12835 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\scalbnf.c"
 12836 ;; Parameters:    Size  Location     Type
 12837 ;;  x               4   52[COMRAM] float 
 12838 ;;  n               2   56[COMRAM] int 
 12839 ;; Auto vars:     Size  Location     Type
 12840 ;;  y               4    8[BANK0 ] float 
 12841 ;;  u               4    4[BANK0 ] struct .
 12842 ;; Return value:  Size  Location     Type
 12843 ;;                  4   52[COMRAM] float 
 12844 ;; Registers used:
 12845 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12846 ;; Tracked objects:
 12847 ;;		On entry : 0/0
 12848 ;;		On exit  : 0/0
 12849 ;;		Unchanged: 0/0
 12850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12851 ;;      Params:         6       0       0       0       0       0       0       0       0
 12852 ;;      Locals:         0       8       0       0       0       0       0       0       0
 12853 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12854 ;;      Totals:         6      12       0       0       0       0       0       0       0
 12855 ;;Total ram usage:       18 bytes
 12856 ;; Hardware stack levels used:    1
 12857 ;; Hardware stack levels required when called:    8
 12858 ;; This function calls:
 12859 ;;		___flmul
 12860 ;; This function is called by:
 12861 ;;		_powf
 12862 ;; This function uses a non-reentrant model
 12863 ;;
 12864                           
 12865                           	psect	text51
 12866  00407A                     __ptext51:
 12867                           	opt callstack 0
 12868  00407A                     _scalbnf:
 12869                           	opt callstack 19
 12870                           
 12871                           ; BSR set to: 0
 12872                           ;incstack = 0
 12873  00407A  C035  F068         	movff	scalbnf@x,scalbnf@y
 12874  00407E  C036  F069         	movff	scalbnf@x+1,scalbnf@y+1
 12875  004082  C037  F06A         	movff	scalbnf@x+2,scalbnf@y+2
 12876  004086  C038  F06B         	movff	scalbnf@x+3,scalbnf@y+3
 12877  00408A  BE3A               	btfsc	scalbnf@n+1,7,c
 12878  00408C  D056               	goto	l5251
 12879  00408E  503A               	movf	scalbnf@n+1,w,c
 12880  004090  E104               	bnz	u5120
 12881  004092  0E80               	movlw	128
 12882  004094  5C39               	subwf	scalbnf@n,w,c
 12883  004096  A0D8               	btfss	status,0,c
 12884  004098  D050               	goto	l5251
 12885  00409A                     u5120:
 12886  00409A  C068  F01C         	movff	scalbnf@y,___flmul@b
 12887  00409E  C069  F01D         	movff	scalbnf@y+1,___flmul@b+1
 12888  0040A2  C06A  F01E         	movff	scalbnf@y+2,___flmul@b+2
 12889  0040A6  C06B  F01F         	movff	scalbnf@y+3,___flmul@b+3
 12890  0040AA  0E00               	movlw	0
 12891  0040AC  6E20               	movwf	___flmul@a,c
 12892  0040AE  0E00               	movlw	0
 12893  0040B0  6E21               	movwf	___flmul@a+1,c
 12894  0040B2  0E00               	movlw	0
 12895  0040B4  6E22               	movwf	___flmul@a+2,c
 12896  0040B6  0E7F               	movlw	127
 12897  0040B8  6E23               	movwf	___flmul@a+3,c
 12898  0040BA  ECA5  F01A         	call	___flmul	;wreg free
 12899  0040BE  C01C  F068         	movff	?___flmul,scalbnf@y
 12900  0040C2  C01D  F069         	movff	?___flmul+1,scalbnf@y+1
 12901  0040C6  C01E  F06A         	movff	?___flmul+2,scalbnf@y+2
 12902  0040CA  C01F  F06B         	movff	?___flmul+3,scalbnf@y+3
 12903  0040CE  0E81               	movlw	129
 12904  0040D0  2639               	addwf	scalbnf@n,f,c
 12905  0040D2  0EFF               	movlw	255
 12906  0040D4  223A               	addwfc	scalbnf@n+1,f,c
 12907  0040D6  BE3A               	btfsc	scalbnf@n+1,7,c
 12908  0040D8  D088               	goto	l5267
 12909  0040DA  503A               	movf	scalbnf@n+1,w,c
 12910  0040DC  E104               	bnz	u5130
 12911  0040DE  0E80               	movlw	128
 12912  0040E0  5C39               	subwf	scalbnf@n,w,c
 12913  0040E2  A0D8               	btfss	status,0,c
 12914  0040E4  D082               	goto	l5267
 12915  0040E6                     u5130:
 12916  0040E6  C068  F01C         	movff	scalbnf@y,___flmul@b
 12917  0040EA  C069  F01D         	movff	scalbnf@y+1,___flmul@b+1
 12918  0040EE  C06A  F01E         	movff	scalbnf@y+2,___flmul@b+2
 12919  0040F2  C06B  F01F         	movff	scalbnf@y+3,___flmul@b+3
 12920  0040F6  0E00               	movlw	0
 12921  0040F8  6E20               	movwf	___flmul@a,c
 12922  0040FA  0E00               	movlw	0
 12923  0040FC  6E21               	movwf	___flmul@a+1,c
 12924  0040FE  0E00               	movlw	0
 12925  004100  6E22               	movwf	___flmul@a+2,c
 12926  004102  0E7F               	movlw	127
 12927  004104  6E23               	movwf	___flmul@a+3,c
 12928  004106  ECA5  F01A         	call	___flmul	;wreg free
 12929  00410A  C01C  F068         	movff	?___flmul,scalbnf@y
 12930  00410E  C01D  F069         	movff	?___flmul+1,scalbnf@y+1
 12931  004112  C01E  F06A         	movff	?___flmul+2,scalbnf@y+2
 12932  004116  C01F  F06B         	movff	?___flmul+3,scalbnf@y+3
 12933  00411A  0E81               	movlw	129
 12934  00411C  2639               	addwf	scalbnf@n,f,c
 12935  00411E  0EFF               	movlw	255
 12936  004120  223A               	addwfc	scalbnf@n+1,f,c
 12937  004122  BE3A               	btfsc	scalbnf@n+1,7,c
 12938  004124  D062               	goto	l5267
 12939  004126  503A               	movf	scalbnf@n+1,w,c
 12940  004128  E104               	bnz	u5140
 12941  00412A  0E80               	movlw	128
 12942  00412C  5C39               	subwf	scalbnf@n,w,c
 12943  00412E  A0D8               	btfss	status,0,c
 12944  004130  D05C               	goto	l5267
 12945  004132                     u5140:
 12946  004132  0E00               	movlw	0
 12947  004134  6E3A               	movwf	scalbnf@n+1,c
 12948  004136  0E7F               	movlw	127
 12949  004138  D057               	goto	L7
 12950  00413A                     l5251:
 12951  00413A  AE3A               	btfss	scalbnf@n+1,7,c
 12952  00413C  D056               	goto	l5267
 12953  00413E  0E82               	movlw	130
 12954  004140  5C39               	subwf	scalbnf@n,w,c
 12955  004142  0EFF               	movlw	255
 12956  004144  583A               	subwfb	scalbnf@n+1,w,c
 12957  004146  B0D8               	btfsc	status,0,c
 12958  004148  D050               	goto	l5267
 12959  00414A  C068  F01C         	movff	scalbnf@y,___flmul@b
 12960  00414E  C069  F01D         	movff	scalbnf@y+1,___flmul@b+1
 12961  004152  C06A  F01E         	movff	scalbnf@y+2,___flmul@b+2
 12962  004156  C06B  F01F         	movff	scalbnf@y+3,___flmul@b+3
 12963  00415A  0E00               	movlw	0
 12964  00415C  6E20               	movwf	___flmul@a,c
 12965  00415E  0E00               	movlw	0
 12966  004160  6E21               	movwf	___flmul@a+1,c
 12967  004162  0E80               	movlw	128
 12968  004164  6E22               	movwf	___flmul@a+2,c
 12969  004166  0E0C               	movlw	12
 12970  004168  6E23               	movwf	___flmul@a+3,c
 12971  00416A  ECA5  F01A         	call	___flmul	;wreg free
 12972  00416E  C01C  F068         	movff	?___flmul,scalbnf@y
 12973  004172  C01D  F069         	movff	?___flmul+1,scalbnf@y+1
 12974  004176  C01E  F06A         	movff	?___flmul+2,scalbnf@y+2
 12975  00417A  C01F  F06B         	movff	?___flmul+3,scalbnf@y+3
 12976  00417E  0E66               	movlw	102
 12977  004180  2639               	addwf	scalbnf@n,f,c
 12978  004182  0E00               	movlw	0
 12979  004184  223A               	addwfc	scalbnf@n+1,f,c
 12980  004186  AE3A               	btfss	scalbnf@n+1,7,c
 12981  004188  D030               	goto	l5267
 12982  00418A  0E82               	movlw	130
 12983  00418C  5C39               	subwf	scalbnf@n,w,c
 12984  00418E  0EFF               	movlw	255
 12985  004190  583A               	subwfb	scalbnf@n+1,w,c
 12986  004192  B0D8               	btfsc	status,0,c
 12987  004194  D02A               	goto	l5267
 12988  004196  C068  F01C         	movff	scalbnf@y,___flmul@b
 12989  00419A  C069  F01D         	movff	scalbnf@y+1,___flmul@b+1
 12990  00419E  C06A  F01E         	movff	scalbnf@y+2,___flmul@b+2
 12991  0041A2  C06B  F01F         	movff	scalbnf@y+3,___flmul@b+3
 12992  0041A6  0E00               	movlw	0
 12993  0041A8  6E20               	movwf	___flmul@a,c
 12994  0041AA  0E00               	movlw	0
 12995  0041AC  6E21               	movwf	___flmul@a+1,c
 12996  0041AE  0E80               	movlw	128
 12997  0041B0  6E22               	movwf	___flmul@a+2,c
 12998  0041B2  0E0C               	movlw	12
 12999  0041B4  6E23               	movwf	___flmul@a+3,c
 13000  0041B6  ECA5  F01A         	call	___flmul	;wreg free
 13001  0041BA  C01C  F068         	movff	?___flmul,scalbnf@y
 13002  0041BE  C01D  F069         	movff	?___flmul+1,scalbnf@y+1
 13003  0041C2  C01E  F06A         	movff	?___flmul+2,scalbnf@y+2
 13004  0041C6  C01F  F06B         	movff	?___flmul+3,scalbnf@y+3
 13005  0041CA  0E66               	movlw	102
 13006  0041CC  2639               	addwf	scalbnf@n,f,c
 13007  0041CE  0E00               	movlw	0
 13008  0041D0  223A               	addwfc	scalbnf@n+1,f,c
 13009  0041D2  AE3A               	btfss	scalbnf@n+1,7,c
 13010  0041D4  D00A               	goto	l5267
 13011  0041D6  0E82               	movlw	130
 13012  0041D8  5C39               	subwf	scalbnf@n,w,c
 13013  0041DA  0EFF               	movlw	255
 13014  0041DC  583A               	subwfb	scalbnf@n+1,w,c
 13015  0041DE  B0D8               	btfsc	status,0,c
 13016  0041E0  D004               	goto	l5267
 13017  0041E2  0EFF               	movlw	255
 13018  0041E4  6E3A               	movwf	scalbnf@n+1,c
 13019  0041E6  0E82               	movlw	130
 13020  0041E8                     L7:
 13021  0041E8  6E39               	movwf	scalbnf@n,c
 13022  0041EA                     l5267:
 13023  0041EA  0E7F               	movlw	127
 13024  0041EC  2439               	addwf	scalbnf@n,w,c
 13025  0041EE  0100               	movlb	0	; () banked
 13026  0041F0  6F60               	movwf	??_scalbnf& (0+255),b
 13027  0041F2  0E00               	movlw	0
 13028  0041F4  203A               	addwfc	scalbnf@n+1,w,c
 13029  0041F6  6F61               	movwf	(??_scalbnf+1)& (0+255),b
 13030  0041F8  6B62               	clrf	(??_scalbnf+2)& (0+255),b
 13031  0041FA  6B63               	clrf	(??_scalbnf+3)& (0+255),b
 13032  0041FC  0E17               	movlw	23
 13033  0041FE                     u5185:
 13034  0041FE  90D8               	bcf	status,0,c
 13035  004200  3760               	rlcf	??_scalbnf& (0+255),f,b
 13036  004202  3761               	rlcf	(??_scalbnf+1)& (0+255),f,b
 13037  004204  3762               	rlcf	(??_scalbnf+2)& (0+255),f,b
 13038  004206  3763               	rlcf	(??_scalbnf+3)& (0+255),f,b
 13039  004208  2EE8               	decfsz	wreg,f,c
 13040  00420A  D7F9               	goto	u5185
 13041  00420C  C060  F064         	movff	??_scalbnf,scalbnf@u
 13042  004210  C061  F065         	movff	??_scalbnf+1,scalbnf@u+1
 13043  004214  C062  F066         	movff	??_scalbnf+2,scalbnf@u+2
 13044  004218  C063  F067         	movff	??_scalbnf+3,scalbnf@u+3
 13045                           
 13046                           ; BSR set to: 0
 13047  00421C  C064  F01C         	movff	scalbnf@u,___flmul@b
 13048  004220  C065  F01D         	movff	scalbnf@u+1,___flmul@b+1
 13049  004224  C066  F01E         	movff	scalbnf@u+2,___flmul@b+2
 13050  004228  C067  F01F         	movff	scalbnf@u+3,___flmul@b+3
 13051  00422C  C068  F020         	movff	scalbnf@y,___flmul@a
 13052  004230  C069  F021         	movff	scalbnf@y+1,___flmul@a+1
 13053  004234  C06A  F022         	movff	scalbnf@y+2,___flmul@a+2
 13054  004238  C06B  F023         	movff	scalbnf@y+3,___flmul@a+3
 13055  00423C  ECA5  F01A         	call	___flmul	;wreg free
 13056  004240  C01C  F035         	movff	?___flmul,scalbnf@x
 13057  004244  C01D  F036         	movff	?___flmul+1,scalbnf@x+1
 13058  004248  C01E  F037         	movff	?___flmul+2,scalbnf@x+2
 13059  00424C  C01F  F038         	movff	?___flmul+3,scalbnf@x+3
 13060  004250  C035  F035         	movff	scalbnf@x,?_scalbnf
 13061  004254  C036  F036         	movff	scalbnf@x+1,?_scalbnf+1
 13062  004258  C037  F037         	movff	scalbnf@x+2,?_scalbnf+2
 13063  00425C  C038  F038         	movff	scalbnf@x+3,?_scalbnf+3
 13064  004260  0012               	return		;funcret
 13065  004262                     __end_of_scalbnf:
 13066                           	opt callstack 0
 13067                           
 13068 ;; *************** function ___flmul *****************
 13069 ;; Defined at:
 13070 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 13071 ;; Parameters:    Size  Location     Type
 13072 ;;  b               4   27[COMRAM] float 
 13073 ;;  a               4   31[COMRAM] float 
 13074 ;; Auto vars:     Size  Location     Type
 13075 ;;  prod            4   46[COMRAM] struct .
 13076 ;;  grs             4   40[COMRAM] unsigned long 
 13077 ;;  temp            2   50[COMRAM] struct .
 13078 ;;  bexp            1   45[COMRAM] unsigned char 
 13079 ;;  aexp            1   44[COMRAM] unsigned char 
 13080 ;;  sign            1   39[COMRAM] unsigned char 
 13081 ;; Return value:  Size  Location     Type
 13082 ;;                  4   27[COMRAM] unsigned char 
 13083 ;; Registers used:
 13084 ;;		wreg, status,2, status,0, prodl, prodh
 13085 ;; Tracked objects:
 13086 ;;		On entry : 0/0
 13087 ;;		On exit  : 0/0
 13088 ;;		Unchanged: 0/0
 13089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13090 ;;      Params:         8       0       0       0       0       0       0       0       0
 13091 ;;      Locals:        13       0       0       0       0       0       0       0       0
 13092 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13093 ;;      Totals:        25       0       0       0       0       0       0       0       0
 13094 ;;Total ram usage:       25 bytes
 13095 ;; Hardware stack levels used:    1
 13096 ;; Hardware stack levels required when called:    7
 13097 ;; This function calls:
 13098 ;;		Nothing
 13099 ;; This function is called by:
 13100 ;;		_AD9833_SetFrequency
 13101 ;;		_powf
 13102 ;;		_scalbnf
 13103 ;;		_sqrtf
 13104 ;; This function uses a non-reentrant model
 13105 ;;
 13106                           
 13107                           	psect	text52
 13108  00354A                     __ptext52:
 13109                           	opt callstack 0
 13110  00354A                     ___flmul:
 13111                           	opt callstack 19
 13112                           
 13113                           ;incstack = 0
 13114  00354A  501F               	movf	___flmul@b+3,w,c
 13115  00354C  0B80               	andlw	128
 13116  00354E  6E28               	movwf	___flmul@sign,c
 13117  003550  501F               	movf	___flmul@b+3,w,c
 13118  003552  241F               	addwf	___flmul@b+3,w,c
 13119  003554  6E2E               	movwf	___flmul@bexp,c
 13120  003556  BE1E               	btfsc	___flmul@b+2,7,c
 13121  003558  802E               	bsf	___flmul@bexp,0,c
 13122  00355A  502E               	movf	___flmul@bexp,w,c
 13123  00355C  B4D8               	btfsc	status,2,c
 13124  00355E  D00D               	goto	l4731
 13125  003560  282E               	incf	___flmul@bexp,w,c
 13126  003562  A4D8               	btfss	status,2,c
 13127  003564  D008               	goto	l4729
 13128  003566  0E00               	movlw	0
 13129  003568  6E1C               	movwf	___flmul@b,c
 13130  00356A  0E00               	movlw	0
 13131  00356C  6E1D               	movwf	___flmul@b+1,c
 13132  00356E  0E00               	movlw	0
 13133  003570  6E1E               	movwf	___flmul@b+2,c
 13134  003572  0E00               	movlw	0
 13135  003574  6E1F               	movwf	___flmul@b+3,c
 13136  003576                     l4729:
 13137  003576  8E1E               	bsf	___flmul@b+2,7,c
 13138  003578  D008               	goto	l4733
 13139  00357A                     l4731:
 13140  00357A  0E00               	movlw	0
 13141  00357C  6E1C               	movwf	___flmul@b,c
 13142  00357E  0E00               	movlw	0
 13143  003580  6E1D               	movwf	___flmul@b+1,c
 13144  003582  0E00               	movlw	0
 13145  003584  6E1E               	movwf	___flmul@b+2,c
 13146  003586  0E00               	movlw	0
 13147  003588  6E1F               	movwf	___flmul@b+3,c
 13148  00358A                     l4733:
 13149  00358A  5023               	movf	___flmul@a+3,w,c
 13150  00358C  0B80               	andlw	128
 13151  00358E  1A28               	xorwf	___flmul@sign,f,c
 13152  003590  5023               	movf	___flmul@a+3,w,c
 13153  003592  2423               	addwf	___flmul@a+3,w,c
 13154  003594  6E2D               	movwf	___flmul@aexp,c
 13155  003596  BE22               	btfsc	___flmul@a+2,7,c
 13156  003598  802D               	bsf	___flmul@aexp,0,c
 13157  00359A  502D               	movf	___flmul@aexp,w,c
 13158  00359C  B4D8               	btfsc	status,2,c
 13159  00359E  D00D               	goto	l4749
 13160  0035A0  282D               	incf	___flmul@aexp,w,c
 13161  0035A2  A4D8               	btfss	status,2,c
 13162  0035A4  D008               	goto	l4747
 13163  0035A6  0E00               	movlw	0
 13164  0035A8  6E20               	movwf	___flmul@a,c
 13165  0035AA  0E00               	movlw	0
 13166  0035AC  6E21               	movwf	___flmul@a+1,c
 13167  0035AE  0E00               	movlw	0
 13168  0035B0  6E22               	movwf	___flmul@a+2,c
 13169  0035B2  0E00               	movlw	0
 13170  0035B4  6E23               	movwf	___flmul@a+3,c
 13171  0035B6                     l4747:
 13172  0035B6  8E22               	bsf	___flmul@a+2,7,c
 13173  0035B8  D008               	goto	l1397
 13174  0035BA                     l4749:
 13175  0035BA  0E00               	movlw	0
 13176  0035BC  6E20               	movwf	___flmul@a,c
 13177  0035BE  0E00               	movlw	0
 13178  0035C0  6E21               	movwf	___flmul@a+1,c
 13179  0035C2  0E00               	movlw	0
 13180  0035C4  6E22               	movwf	___flmul@a+2,c
 13181  0035C6  0E00               	movlw	0
 13182  0035C8  6E23               	movwf	___flmul@a+3,c
 13183  0035CA                     l1397:
 13184  0035CA  502D               	movf	___flmul@aexp,w,c
 13185  0035CC  B4D8               	btfsc	status,2,c
 13186  0035CE  D003               	goto	u4380
 13187  0035D0  502E               	movf	___flmul@bexp,w,c
 13188  0035D2  A4D8               	btfss	status,2,c
 13189  0035D4  D009               	goto	l4757
 13190  0035D6                     u4380:
 13191  0035D6  0E00               	movlw	0
 13192  0035D8  6E1C               	movwf	?___flmul,c
 13193  0035DA  0E00               	movlw	0
 13194  0035DC  6E1D               	movwf	?___flmul+1,c
 13195  0035DE  0E00               	movlw	0
 13196  0035E0  6E1E               	movwf	?___flmul+2,c
 13197  0035E2  0E00               	movlw	0
 13198  0035E4  6E1F               	movwf	?___flmul+3,c
 13199  0035E6  0012               	return	
 13200  0035E8                     l4757:
 13201  0035E8  5022               	movf	___flmul@a+2,w,c
 13202  0035EA  021C               	mulwf	___flmul@b,c
 13203  0035EC  CFF3 F033          	movff	prodl,___flmul@temp
 13204  0035F0  CFF4 F034          	movff	prodh,___flmul@temp+1
 13205  0035F4  5033               	movf	___flmul@temp,w,c
 13206  0035F6  6E29               	movwf	___flmul@grs,c
 13207  0035F8  6A2A               	clrf	___flmul@grs+1,c
 13208  0035FA  6A2B               	clrf	___flmul@grs+2,c
 13209  0035FC  6A2C               	clrf	___flmul@grs+3,c
 13210  0035FE  5034               	movf	___flmul@temp+1,w,c
 13211  003600  6E2F               	movwf	___flmul@prod,c
 13212  003602  6A30               	clrf	___flmul@prod+1,c
 13213  003604  6A31               	clrf	___flmul@prod+2,c
 13214  003606  6A32               	clrf	___flmul@prod+3,c
 13215  003608  5021               	movf	___flmul@a+1,w,c
 13216  00360A  021D               	mulwf	___flmul@b+1,c
 13217  00360C  CFF3 F033          	movff	prodl,___flmul@temp
 13218  003610  CFF4 F034          	movff	prodh,___flmul@temp+1
 13219  003614  5033               	movf	___flmul@temp,w,c
 13220  003616  2629               	addwf	___flmul@grs,f,c
 13221  003618  0E00               	movlw	0
 13222  00361A  222A               	addwfc	___flmul@grs+1,f,c
 13223  00361C  222B               	addwfc	___flmul@grs+2,f,c
 13224  00361E  222C               	addwfc	___flmul@grs+3,f,c
 13225  003620  5034               	movf	___flmul@temp+1,w,c
 13226  003622  262F               	addwf	___flmul@prod,f,c
 13227  003624  0E00               	movlw	0
 13228  003626  2230               	addwfc	___flmul@prod+1,f,c
 13229  003628  2231               	addwfc	___flmul@prod+2,f,c
 13230  00362A  2232               	addwfc	___flmul@prod+3,f,c
 13231  00362C  5020               	movf	___flmul@a,w,c
 13232  00362E  021E               	mulwf	___flmul@b+2,c
 13233  003630  CFF3 F033          	movff	prodl,___flmul@temp
 13234  003634  CFF4 F034          	movff	prodh,___flmul@temp+1
 13235  003638  5033               	movf	___flmul@temp,w,c
 13236  00363A  2629               	addwf	___flmul@grs,f,c
 13237  00363C  0E00               	movlw	0
 13238  00363E  222A               	addwfc	___flmul@grs+1,f,c
 13239  003640  222B               	addwfc	___flmul@grs+2,f,c
 13240  003642  222C               	addwfc	___flmul@grs+3,f,c
 13241  003644  5034               	movf	___flmul@temp+1,w,c
 13242  003646  262F               	addwf	___flmul@prod,f,c
 13243  003648  0E00               	movlw	0
 13244  00364A  2230               	addwfc	___flmul@prod+1,f,c
 13245  00364C  2231               	addwfc	___flmul@prod+2,f,c
 13246  00364E  2232               	addwfc	___flmul@prod+3,f,c
 13247  003650  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 13248  003654  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 13249  003658  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 13250  00365C  6A29               	clrf	___flmul@grs,c
 13251  00365E  5020               	movf	___flmul@a,w,c
 13252  003660  021D               	mulwf	___flmul@b+1,c
 13253  003662  CFF3 F033          	movff	prodl,___flmul@temp
 13254  003666  CFF4 F034          	movff	prodh,___flmul@temp+1
 13255  00366A  5033               	movf	___flmul@temp,w,c
 13256  00366C  2629               	addwf	___flmul@grs,f,c
 13257  00366E  5034               	movf	___flmul@temp+1,w,c
 13258  003670  222A               	addwfc	___flmul@grs+1,f,c
 13259  003672  0E00               	movlw	0
 13260  003674  222B               	addwfc	___flmul@grs+2,f,c
 13261  003676  0E00               	movlw	0
 13262  003678  222C               	addwfc	___flmul@grs+3,f,c
 13263  00367A  5021               	movf	___flmul@a+1,w,c
 13264  00367C  021C               	mulwf	___flmul@b,c
 13265  00367E  CFF3 F033          	movff	prodl,___flmul@temp
 13266  003682  CFF4 F034          	movff	prodh,___flmul@temp+1
 13267  003686  5033               	movf	___flmul@temp,w,c
 13268  003688  2629               	addwf	___flmul@grs,f,c
 13269  00368A  5034               	movf	___flmul@temp+1,w,c
 13270  00368C  222A               	addwfc	___flmul@grs+1,f,c
 13271  00368E  0E00               	movlw	0
 13272  003690  222B               	addwfc	___flmul@grs+2,f,c
 13273  003692  0E00               	movlw	0
 13274  003694  222C               	addwfc	___flmul@grs+3,f,c
 13275  003696  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 13276  00369A  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 13277  00369E  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 13278  0036A2  6A29               	clrf	___flmul@grs,c
 13279  0036A4  5020               	movf	___flmul@a,w,c
 13280  0036A6  021C               	mulwf	___flmul@b,c
 13281  0036A8  CFF3 F033          	movff	prodl,___flmul@temp
 13282  0036AC  CFF4 F034          	movff	prodh,___flmul@temp+1
 13283  0036B0  5033               	movf	___flmul@temp,w,c
 13284  0036B2  2629               	addwf	___flmul@grs,f,c
 13285  0036B4  5034               	movf	___flmul@temp+1,w,c
 13286  0036B6  222A               	addwfc	___flmul@grs+1,f,c
 13287  0036B8  0E00               	movlw	0
 13288  0036BA  222B               	addwfc	___flmul@grs+2,f,c
 13289  0036BC  0E00               	movlw	0
 13290  0036BE  222C               	addwfc	___flmul@grs+3,f,c
 13291  0036C0  5022               	movf	___flmul@a+2,w,c
 13292  0036C2  021D               	mulwf	___flmul@b+1,c
 13293  0036C4  CFF3 F033          	movff	prodl,___flmul@temp
 13294  0036C8  CFF4 F034          	movff	prodh,___flmul@temp+1
 13295  0036CC  5033               	movf	___flmul@temp,w,c
 13296  0036CE  262F               	addwf	___flmul@prod,f,c
 13297  0036D0  5034               	movf	___flmul@temp+1,w,c
 13298  0036D2  2230               	addwfc	___flmul@prod+1,f,c
 13299  0036D4  0E00               	movlw	0
 13300  0036D6  2231               	addwfc	___flmul@prod+2,f,c
 13301  0036D8  0E00               	movlw	0
 13302  0036DA  2232               	addwfc	___flmul@prod+3,f,c
 13303  0036DC  5021               	movf	___flmul@a+1,w,c
 13304  0036DE  021E               	mulwf	___flmul@b+2,c
 13305  0036E0  CFF3 F033          	movff	prodl,___flmul@temp
 13306  0036E4  CFF4 F034          	movff	prodh,___flmul@temp+1
 13307  0036E8  5033               	movf	___flmul@temp,w,c
 13308  0036EA  262F               	addwf	___flmul@prod,f,c
 13309  0036EC  5034               	movf	___flmul@temp+1,w,c
 13310  0036EE  2230               	addwfc	___flmul@prod+1,f,c
 13311  0036F0  0E00               	movlw	0
 13312  0036F2  2231               	addwfc	___flmul@prod+2,f,c
 13313  0036F4  0E00               	movlw	0
 13314  0036F6  2232               	addwfc	___flmul@prod+3,f,c
 13315  0036F8  5022               	movf	___flmul@a+2,w,c
 13316  0036FA  021E               	mulwf	___flmul@b+2,c
 13317  0036FC  CFF3 F033          	movff	prodl,___flmul@temp
 13318  003700  CFF4 F034          	movff	prodh,___flmul@temp+1
 13319  003704  5033               	movf	___flmul@temp,w,c
 13320  003706  6E24               	movwf	??___flmul& (0+255),c
 13321  003708  5034               	movf	___flmul@temp+1,w,c
 13322  00370A  6E25               	movwf	(??___flmul+1)& (0+255),c
 13323  00370C  6A26               	clrf	(??___flmul+2)& (0+255),c
 13324  00370E  6A27               	clrf	(??___flmul+3)& (0+255),c
 13325  003710  C026  F027         	movff	??___flmul+2,??___flmul+3
 13326  003714  C025  F026         	movff	??___flmul+1,??___flmul+2
 13327  003718  C024  F025         	movff	??___flmul,??___flmul+1
 13328  00371C  6A24               	clrf	??___flmul,c
 13329  00371E  5024               	movf	??___flmul,w,c
 13330  003720  262F               	addwf	___flmul@prod,f,c
 13331  003722  5025               	movf	??___flmul+1,w,c
 13332  003724  2230               	addwfc	___flmul@prod+1,f,c
 13333  003726  5026               	movf	??___flmul+2,w,c
 13334  003728  2231               	addwfc	___flmul@prod+2,f,c
 13335  00372A  5027               	movf	??___flmul+3,w,c
 13336  00372C  2232               	addwfc	___flmul@prod+3,f,c
 13337  00372E  C029  F024         	movff	___flmul@grs,??___flmul
 13338  003732  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
 13339  003736  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
 13340  00373A  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
 13341  00373E  0E19               	movlw	25
 13342  003740  D005               	goto	u4390
 13343  003742                     u4395:
 13344  003742  90D8               	bcf	status,0,c
 13345  003744  3227               	rrcf	??___flmul+3,f,c
 13346  003746  3226               	rrcf	??___flmul+2,f,c
 13347  003748  3225               	rrcf	??___flmul+1,f,c
 13348  00374A  3224               	rrcf	??___flmul,f,c
 13349  00374C                     u4390:
 13350  00374C  2EE8               	decfsz	wreg,f,c
 13351  00374E  D7F9               	goto	u4395
 13352  003750  5024               	movf	??___flmul,w,c
 13353  003752  262F               	addwf	___flmul@prod,f,c
 13354  003754  5025               	movf	??___flmul+1,w,c
 13355  003756  2230               	addwfc	___flmul@prod+1,f,c
 13356  003758  5026               	movf	??___flmul+2,w,c
 13357  00375A  2231               	addwfc	___flmul@prod+2,f,c
 13358  00375C  5027               	movf	??___flmul+3,w,c
 13359  00375E  2232               	addwfc	___flmul@prod+3,f,c
 13360  003760  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 13361  003764  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 13362  003768  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 13363  00376C  6A29               	clrf	___flmul@grs,c
 13364  00376E  502D               	movf	___flmul@aexp,w,c
 13365  003770  C02E  F024         	movff	___flmul@bexp,??___flmul
 13366  003774  6A25               	clrf	(??___flmul+1)& (0+255),c
 13367  003776  2624               	addwf	??___flmul,f,c
 13368  003778  0E00               	movlw	0
 13369  00377A  2225               	addwfc	??___flmul+1,f,c
 13370  00377C  0E82               	movlw	130
 13371  00377E  2424               	addwf	??___flmul,w,c
 13372  003780  6E33               	movwf	___flmul@temp,c
 13373  003782  0EFF               	movlw	255
 13374  003784  2025               	addwfc	??___flmul+1,w,c
 13375  003786  6E34               	movwf	___flmul@temp+1,c
 13376  003788  D00F               	goto	l4805
 13377  00378A                     l4799:
 13378  00378A  90D8               	bcf	status,0,c
 13379  00378C  362F               	rlcf	___flmul@prod,f,c
 13380  00378E  3630               	rlcf	___flmul@prod+1,f,c
 13381  003790  3631               	rlcf	___flmul@prod+2,f,c
 13382  003792  3632               	rlcf	___flmul@prod+3,f,c
 13383  003794  BE2C               	btfsc	___flmul@grs+3,7,c
 13384  003796  802F               	bsf	___flmul@prod,0,c
 13385  003798  90D8               	bcf	status,0,c
 13386  00379A  3629               	rlcf	___flmul@grs,f,c
 13387  00379C  362A               	rlcf	___flmul@grs+1,f,c
 13388  00379E  362B               	rlcf	___flmul@grs+2,f,c
 13389  0037A0  362C               	rlcf	___flmul@grs+3,f,c
 13390  0037A2  0633               	decf	___flmul@temp,f,c
 13391  0037A4  A0D8               	btfss	status,0,c
 13392  0037A6  0634               	decf	___flmul@temp+1,f,c
 13393  0037A8                     l4805:
 13394  0037A8  AE31               	btfss	___flmul@prod+2,7,c
 13395  0037AA  D7EF               	goto	l4799
 13396  0037AC  0E00               	movlw	0
 13397  0037AE  6E2D               	movwf	___flmul@aexp,c
 13398  0037B0  AE2C               	btfss	___flmul@grs+3,7,c
 13399  0037B2  D017               	goto	l1406
 13400  0037B4  0EFF               	movlw	255
 13401  0037B6  1429               	andwf	___flmul@grs,w,c
 13402  0037B8  6E24               	movwf	??___flmul& (0+255),c
 13403  0037BA  0EFF               	movlw	255
 13404  0037BC  142A               	andwf	___flmul@grs+1,w,c
 13405  0037BE  6E25               	movwf	(??___flmul+1)& (0+255),c
 13406  0037C0  0EFF               	movlw	255
 13407  0037C2  142B               	andwf	___flmul@grs+2,w,c
 13408  0037C4  6E26               	movwf	(??___flmul+2)& (0+255),c
 13409  0037C6  0E7F               	movlw	127
 13410  0037C8  142C               	andwf	___flmul@grs+3,w,c
 13411  0037CA  6E27               	movwf	(??___flmul+3)& (0+255),c
 13412  0037CC  5024               	movf	??___flmul,w,c
 13413  0037CE  1025               	iorwf	??___flmul+1,w,c
 13414  0037D0  1026               	iorwf	??___flmul+2,w,c
 13415  0037D2  1027               	iorwf	??___flmul+3,w,c
 13416  0037D4  B4D8               	btfsc	status,2,c
 13417  0037D6  D003               	goto	l1407
 13418  0037D8                     u4430:
 13419  0037D8  0E01               	movlw	1
 13420  0037DA  6E2D               	movwf	___flmul@aexp,c
 13421  0037DC  D002               	goto	l1406
 13422  0037DE                     l1407:
 13423  0037DE  B02F               	btfsc	___flmul@prod,0,c
 13424  0037E0  D7FB               	goto	u4430
 13425  0037E2                     l1406:
 13426  0037E2  502D               	movf	___flmul@aexp,w,c
 13427  0037E4  B4D8               	btfsc	status,2,c
 13428  0037E6  D01F               	goto	l4825
 13429  0037E8  0E01               	movlw	1
 13430  0037EA  262F               	addwf	___flmul@prod,f,c
 13431  0037EC  0E00               	movlw	0
 13432  0037EE  2230               	addwfc	___flmul@prod+1,f,c
 13433  0037F0  2231               	addwfc	___flmul@prod+2,f,c
 13434  0037F2  2232               	addwfc	___flmul@prod+3,f,c
 13435  0037F4  A032               	btfss	___flmul@prod+3,0,c
 13436  0037F6  D017               	goto	l4825
 13437  0037F8  C02F  F024         	movff	___flmul@prod,??___flmul
 13438  0037FC  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 13439  003800  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 13440  003804  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 13441  003808  3427               	rlcf	??___flmul+3,w,c
 13442  00380A  3227               	rrcf	??___flmul+3,f,c
 13443  00380C  3226               	rrcf	??___flmul+2,f,c
 13444  00380E  3225               	rrcf	??___flmul+1,f,c
 13445  003810  3224               	rrcf	??___flmul,f,c
 13446  003812  C024  F02F         	movff	??___flmul,___flmul@prod
 13447  003816  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 13448  00381A  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 13449  00381E  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 13450  003822  4A33               	infsnz	___flmul@temp,f,c
 13451  003824  2A34               	incf	___flmul@temp+1,f,c
 13452  003826                     l4825:
 13453  003826  BE34               	btfsc	___flmul@temp+1,7,c
 13454  003828  D00D               	goto	l4829
 13455  00382A  5034               	movf	___flmul@temp+1,w,c
 13456  00382C  E103               	bnz	u4470
 13457  00382E  2833               	incf	___flmul@temp,w,c
 13458  003830  A0D8               	btfss	status,0,c
 13459  003832  D008               	goto	l4829
 13460  003834                     u4470:
 13461  003834  0E00               	movlw	0
 13462  003836  6E2F               	movwf	___flmul@prod,c
 13463  003838  0E00               	movlw	0
 13464  00383A  6E30               	movwf	___flmul@prod+1,c
 13465  00383C  0E80               	movlw	128
 13466  00383E  6E31               	movwf	___flmul@prod+2,c
 13467  003840  0E7F               	movlw	127
 13468  003842  D020               	goto	L8
 13469  003844                     l4829:
 13470  003844  BE34               	btfsc	___flmul@temp+1,7,c
 13471  003846  D005               	goto	u4480
 13472  003848  5034               	movf	___flmul@temp+1,w,c
 13473  00384A  E10E               	bnz	l1414
 13474  00384C  0433               	decf	___flmul@temp,w,c
 13475  00384E  B0D8               	btfsc	status,0,c
 13476  003850  D00B               	goto	l1414
 13477  003852                     u4480:
 13478  003852  0E00               	movlw	0
 13479  003854  6E2F               	movwf	___flmul@prod,c
 13480  003856  0E00               	movlw	0
 13481  003858  6E30               	movwf	___flmul@prod+1,c
 13482  00385A  0E00               	movlw	0
 13483  00385C  6E31               	movwf	___flmul@prod+2,c
 13484  00385E  0E00               	movlw	0
 13485  003860  6E32               	movwf	___flmul@prod+3,c
 13486  003862  0E00               	movlw	0
 13487  003864  6E28               	movwf	___flmul@sign,c
 13488  003866  D00F               	goto	l4841
 13489  003868                     l1414:
 13490  003868  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 13491  00386C  0EFF               	movlw	255
 13492  00386E  162F               	andwf	___flmul@prod,f,c
 13493  003870  0EFF               	movlw	255
 13494  003872  1630               	andwf	___flmul@prod+1,f,c
 13495  003874  0E7F               	movlw	127
 13496  003876  1631               	andwf	___flmul@prod+2,f,c
 13497  003878  0E00               	movlw	0
 13498  00387A  1632               	andwf	___flmul@prod+3,f,c
 13499  00387C  B02E               	btfsc	___flmul@bexp,0,c
 13500  00387E  8E31               	bsf	___flmul@prod+2,7,c
 13501  003880  90D8               	bcf	status,0,c
 13502  003882  302E               	rrcf	___flmul@bexp,w,c
 13503  003884                     L8:
 13504  003884  6E32               	movwf	___flmul@prod+3,c
 13505  003886                     l4841:
 13506  003886  5028               	movf	___flmul@sign,w,c
 13507  003888  1232               	iorwf	___flmul@prod+3,f,c
 13508  00388A  C02F  F01C         	movff	___flmul@prod,?___flmul
 13509  00388E  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 13510  003892  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 13511  003896  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 13512  00389A  0012               	return		;funcret
 13513  00389C                     __end_of___flmul:
 13514                           	opt callstack 0
 13515                           
 13516 ;; *************** function _fabsf *****************
 13517 ;; Defined at:
 13518 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fabsf.c"
 13519 ;; Parameters:    Size  Location     Type
 13520 ;;  x               4   11[COMRAM] float 
 13521 ;; Auto vars:     Size  Location     Type
 13522 ;;  u               4   15[COMRAM] struct .
 13523 ;; Return value:  Size  Location     Type
 13524 ;;                  4   11[COMRAM] float 
 13525 ;; Registers used:
 13526 ;;		status,2, status,0
 13527 ;; Tracked objects:
 13528 ;;		On entry : 0/0
 13529 ;;		On exit  : 0/0
 13530 ;;		Unchanged: 0/0
 13531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13532 ;;      Params:         4       0       0       0       0       0       0       0       0
 13533 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13534 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13535 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13536 ;;Total ram usage:        8 bytes
 13537 ;; Hardware stack levels used:    1
 13538 ;; Hardware stack levels required when called:    7
 13539 ;; This function calls:
 13540 ;;		Nothing
 13541 ;; This function is called by:
 13542 ;;		_powf
 13543 ;; This function uses a non-reentrant model
 13544 ;;
 13545                           
 13546                           	psect	text53
 13547  0056B2                     __ptext53:
 13548                           	opt callstack 0
 13549  0056B2                     _fabsf:
 13550                           	opt callstack 20
 13551                           
 13552                           ;incstack = 0
 13553  0056B2  C0DD  F010         	movff	fabsf@F463,fabsf@u
 13554  0056B6  C0DE  F011         	movff	fabsf@F463+1,fabsf@u+1
 13555  0056BA  C0DF  F012         	movff	fabsf@F463+2,fabsf@u+2
 13556  0056BE  C0E0  F013         	movff	fabsf@F463+3,fabsf@u+3
 13557  0056C2  C00C  F010         	movff	fabsf@x,fabsf@u
 13558  0056C6  C00D  F011         	movff	fabsf@x+1,fabsf@u+1
 13559  0056CA  C00E  F012         	movff	fabsf@x+2,fabsf@u+2
 13560  0056CE  C00F  F013         	movff	fabsf@x+3,fabsf@u+3
 13561  0056D2  9E13               	bcf	fabsf@u+3,7,c
 13562  0056D4  C010  F00C         	movff	fabsf@u,?_fabsf
 13563  0056D8  C011  F00D         	movff	fabsf@u+1,?_fabsf+1
 13564  0056DC  C012  F00E         	movff	fabsf@u+2,?_fabsf+2
 13565  0056E0  C013  F00F         	movff	fabsf@u+3,?_fabsf+3
 13566  0056E4  0012               	return		;funcret
 13567  0056E6                     __end_of_fabsf:
 13568                           	opt callstack 0
 13569                           
 13570 ;; *************** function ___xxtofl *****************
 13571 ;; Defined at:
 13572 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 13573 ;; Parameters:    Size  Location     Type
 13574 ;;  sign            1    wreg     unsigned char 
 13575 ;;  val             4   11[COMRAM] long 
 13576 ;; Auto vars:     Size  Location     Type
 13577 ;;  sign            1   19[COMRAM] unsigned char 
 13578 ;;  arg             4   21[COMRAM] unsigned long 
 13579 ;;  exp             1   20[COMRAM] unsigned char 
 13580 ;; Return value:  Size  Location     Type
 13581 ;;                  4   11[COMRAM] unsigned char 
 13582 ;; Registers used:
 13583 ;;		wreg, status,2, status,0
 13584 ;; Tracked objects:
 13585 ;;		On entry : 0/0
 13586 ;;		On exit  : 0/0
 13587 ;;		Unchanged: 0/0
 13588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13589 ;;      Params:         4       0       0       0       0       0       0       0       0
 13590 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13591 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13592 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13593 ;;Total ram usage:       14 bytes
 13594 ;; Hardware stack levels used:    1
 13595 ;; Hardware stack levels required when called:    7
 13596 ;; This function calls:
 13597 ;;		Nothing
 13598 ;; This function is called by:
 13599 ;;		_AD9833_SetFrequency
 13600 ;;		_powf
 13601 ;; This function uses a non-reentrant model
 13602 ;;
 13603                           
 13604                           	psect	text54
 13605  004828                     __ptext54:
 13606                           	opt callstack 0
 13607  004828                     ___xxtofl:
 13608                           	opt callstack 20
 13609                           
 13610                           ;incstack = 0
 13611                           ;___xxtofl@sign stored from wreg
 13612  004828  6E14               	movwf	___xxtofl@sign,c
 13613  00482A  5014               	movf	___xxtofl@sign,w,c
 13614  00482C  A4D8               	btfss	status,2,c
 13615  00482E  AE0F               	btfss	___xxtofl@val+3,7,c
 13616  004830  D01A               	goto	l1438
 13617  004832  C00C  F010         	movff	___xxtofl@val,??___xxtofl
 13618  004836  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
 13619  00483A  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
 13620  00483E  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
 13621  004842  1E10               	comf	??___xxtofl,f,c
 13622  004844  1E11               	comf	??___xxtofl+1,f,c
 13623  004846  1E12               	comf	??___xxtofl+2,f,c
 13624  004848  1E13               	comf	??___xxtofl+3,f,c
 13625  00484A  2A10               	incf	??___xxtofl,f,c
 13626  00484C  0E00               	movlw	0
 13627  00484E  2211               	addwfc	??___xxtofl+1,f,c
 13628  004850  2212               	addwfc	??___xxtofl+2,f,c
 13629  004852  2213               	addwfc	??___xxtofl+3,f,c
 13630  004854  C010  F016         	movff	??___xxtofl,___xxtofl@arg
 13631  004858  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
 13632  00485C  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
 13633  004860  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
 13634  004864  D008               	goto	l5109
 13635  004866                     l1438:
 13636  004866  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
 13637  00486A  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13638  00486E  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13639  004872  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13640  004876                     l5109:
 13641  004876  500C               	movf	___xxtofl@val,w,c
 13642  004878  100D               	iorwf	___xxtofl@val+1,w,c
 13643  00487A  100E               	iorwf	___xxtofl@val+2,w,c
 13644  00487C  100F               	iorwf	___xxtofl@val+3,w,c
 13645  00487E  A4D8               	btfss	status,2,c
 13646  004880  D009               	goto	l5115
 13647  004882  0E00               	movlw	0
 13648  004884  6E0C               	movwf	?___xxtofl,c
 13649  004886  0E00               	movlw	0
 13650  004888  6E0D               	movwf	?___xxtofl+1,c
 13651  00488A  0E00               	movlw	0
 13652  00488C  6E0E               	movwf	?___xxtofl+2,c
 13653  00488E  0E00               	movlw	0
 13654  004890  6E0F               	movwf	?___xxtofl+3,c
 13655  004892  0012               	return	
 13656  004894                     l5115:
 13657  004894  0E96               	movlw	150
 13658  004896  6E15               	movwf	___xxtofl@exp,c
 13659  004898  D006               	goto	l5119
 13660  00489A                     l5117:
 13661  00489A  2A15               	incf	___xxtofl@exp,f,c
 13662  00489C  90D8               	bcf	status,0,c
 13663  00489E  3219               	rrcf	___xxtofl@arg+3,f,c
 13664  0048A0  3218               	rrcf	___xxtofl@arg+2,f,c
 13665  0048A2  3217               	rrcf	___xxtofl@arg+1,f,c
 13666  0048A4  3216               	rrcf	___xxtofl@arg,f,c
 13667  0048A6                     l5119:
 13668  0048A6  0E00               	movlw	0
 13669  0048A8  1416               	andwf	___xxtofl@arg,w,c
 13670  0048AA  6E10               	movwf	??___xxtofl& (0+255),c
 13671  0048AC  0E00               	movlw	0
 13672  0048AE  1417               	andwf	___xxtofl@arg+1,w,c
 13673  0048B0  6E11               	movwf	(??___xxtofl+1)& (0+255),c
 13674  0048B2  0E00               	movlw	0
 13675  0048B4  1418               	andwf	___xxtofl@arg+2,w,c
 13676  0048B6  6E12               	movwf	(??___xxtofl+2)& (0+255),c
 13677  0048B8  0EFE               	movlw	254
 13678  0048BA  1419               	andwf	___xxtofl@arg+3,w,c
 13679  0048BC  6E13               	movwf	(??___xxtofl+3)& (0+255),c
 13680  0048BE  5010               	movf	??___xxtofl,w,c
 13681  0048C0  1011               	iorwf	??___xxtofl+1,w,c
 13682  0048C2  1012               	iorwf	??___xxtofl+2,w,c
 13683  0048C4  1013               	iorwf	??___xxtofl+3,w,c
 13684  0048C6  B4D8               	btfsc	status,2,c
 13685  0048C8  D00D               	goto	l1445
 13686  0048CA  D7E7               	goto	l5117
 13687  0048CC                     l5121:
 13688  0048CC  2A15               	incf	___xxtofl@exp,f,c
 13689  0048CE  0E01               	movlw	1
 13690  0048D0  2616               	addwf	___xxtofl@arg,f,c
 13691  0048D2  0E00               	movlw	0
 13692  0048D4  2217               	addwfc	___xxtofl@arg+1,f,c
 13693  0048D6  2218               	addwfc	___xxtofl@arg+2,f,c
 13694  0048D8  2219               	addwfc	___xxtofl@arg+3,f,c
 13695  0048DA  90D8               	bcf	status,0,c
 13696  0048DC  3219               	rrcf	___xxtofl@arg+3,f,c
 13697  0048DE  3218               	rrcf	___xxtofl@arg+2,f,c
 13698  0048E0  3217               	rrcf	___xxtofl@arg+1,f,c
 13699  0048E2  3216               	rrcf	___xxtofl@arg,f,c
 13700  0048E4                     l1445:
 13701  0048E4  0E00               	movlw	0
 13702  0048E6  1416               	andwf	___xxtofl@arg,w,c
 13703  0048E8  6E10               	movwf	??___xxtofl& (0+255),c
 13704  0048EA  0E00               	movlw	0
 13705  0048EC  1417               	andwf	___xxtofl@arg+1,w,c
 13706  0048EE  6E11               	movwf	(??___xxtofl+1)& (0+255),c
 13707  0048F0  0E00               	movlw	0
 13708  0048F2  1418               	andwf	___xxtofl@arg+2,w,c
 13709  0048F4  6E12               	movwf	(??___xxtofl+2)& (0+255),c
 13710  0048F6  0EFF               	movlw	255
 13711  0048F8  1419               	andwf	___xxtofl@arg+3,w,c
 13712  0048FA  6E13               	movwf	(??___xxtofl+3)& (0+255),c
 13713  0048FC  5010               	movf	??___xxtofl,w,c
 13714  0048FE  1011               	iorwf	??___xxtofl+1,w,c
 13715  004900  1012               	iorwf	??___xxtofl+2,w,c
 13716  004902  1013               	iorwf	??___xxtofl+3,w,c
 13717  004904  B4D8               	btfsc	status,2,c
 13718  004906  D007               	goto	l5129
 13719  004908  D7E1               	goto	l5121
 13720  00490A                     l5127:
 13721  00490A  0615               	decf	___xxtofl@exp,f,c
 13722  00490C  90D8               	bcf	status,0,c
 13723  00490E  3616               	rlcf	___xxtofl@arg,f,c
 13724  004910  3617               	rlcf	___xxtofl@arg+1,f,c
 13725  004912  3618               	rlcf	___xxtofl@arg+2,f,c
 13726  004914  3619               	rlcf	___xxtofl@arg+3,f,c
 13727  004916                     l5129:
 13728  004916  BE18               	btfsc	___xxtofl@arg+2,7,c
 13729  004918  D003               	goto	u4940
 13730  00491A  0E02               	movlw	2
 13731  00491C  6015               	cpfslt	___xxtofl@exp,c
 13732  00491E  D7F5               	goto	l5127
 13733  004920                     u4940:
 13734  004920  A015               	btfss	___xxtofl@exp,0,c
 13735  004922  9E18               	bcf	___xxtofl@arg+2,7,c
 13736  004924  90D8               	bcf	status,0,c
 13737  004926  3215               	rrcf	___xxtofl@exp,f,c
 13738  004928  C015  F010         	movff	___xxtofl@exp,??___xxtofl
 13739  00492C  6A11               	clrf	(??___xxtofl+1)& (0+255),c
 13740  00492E  6A12               	clrf	(??___xxtofl+2)& (0+255),c
 13741  004930  6A13               	clrf	(??___xxtofl+3)& (0+255),c
 13742  004932  C010  F013         	movff	??___xxtofl,??___xxtofl+3
 13743  004936  6A12               	clrf	??___xxtofl+2,c
 13744  004938  6A11               	clrf	??___xxtofl+1,c
 13745  00493A  6A10               	clrf	??___xxtofl,c
 13746  00493C  5010               	movf	??___xxtofl,w,c
 13747  00493E  1216               	iorwf	___xxtofl@arg,f,c
 13748  004940  5011               	movf	??___xxtofl+1,w,c
 13749  004942  1217               	iorwf	___xxtofl@arg+1,f,c
 13750  004944  5012               	movf	??___xxtofl+2,w,c
 13751  004946  1218               	iorwf	___xxtofl@arg+2,f,c
 13752  004948  5013               	movf	??___xxtofl+3,w,c
 13753  00494A  1219               	iorwf	___xxtofl@arg+3,f,c
 13754  00494C  5014               	movf	___xxtofl@sign,w,c
 13755  00494E  A4D8               	btfss	status,2,c
 13756  004950  AE0F               	btfss	___xxtofl@val+3,7,c
 13757  004952  D001               	goto	l5145
 13758  004954  8E19               	bsf	___xxtofl@arg+3,7,c
 13759  004956                     l5145:
 13760  004956  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
 13761  00495A  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
 13762  00495E  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
 13763  004962  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
 13764  004966  0012               	return		;funcret
 13765  004968                     __end_of___xxtofl:
 13766                           	opt callstack 0
 13767                           
 13768 ;; *************** function ___flsub *****************
 13769 ;; Defined at:
 13770 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 13771 ;; Parameters:    Size  Location     Type
 13772 ;;  b               4    0[BANK0 ] unsigned char 
 13773 ;;  a               4    4[BANK0 ] unsigned char 
 13774 ;; Auto vars:     Size  Location     Type
 13775 ;;		None
 13776 ;; Return value:  Size  Location     Type
 13777 ;;                  4    0[BANK0 ] unsigned char 
 13778 ;; Registers used:
 13779 ;;		wreg, status,2, status,0, cstack
 13780 ;; Tracked objects:
 13781 ;;		On entry : 0/0
 13782 ;;		On exit  : 0/0
 13783 ;;		Unchanged: 0/0
 13784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13785 ;;      Params:         0       8       0       0       0       0       0       0       0
 13786 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13787 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13788 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13789 ;;Total ram usage:        8 bytes
 13790 ;; Hardware stack levels used:    1
 13791 ;; Hardware stack levels required when called:    8
 13792 ;; This function calls:
 13793 ;;		___fladd
 13794 ;; This function is called by:
 13795 ;;		_powf
 13796 ;; This function uses a non-reentrant model
 13797 ;;
 13798                           
 13799                           	psect	text55
 13800  0054D2                     __ptext55:
 13801                           	opt callstack 0
 13802  0054D2                     ___flsub:
 13803                           	opt callstack 19
 13804                           
 13805                           ;incstack = 0
 13806  0054D2  0E00               	movlw	0
 13807  0054D4  0100               	movlb	0	; () banked
 13808  0054D6  1B64               	xorwf	___flsub@a& (0+255),f,b
 13809  0054D8  0E00               	movlw	0
 13810  0054DA  1B65               	xorwf	(___flsub@a+1)& (0+255),f,b
 13811  0054DC  0E00               	movlw	0
 13812  0054DE  1B66               	xorwf	(___flsub@a+2)& (0+255),f,b
 13813  0054E0  0E80               	movlw	128
 13814  0054E2  1B67               	xorwf	(___flsub@a+3)& (0+255),f,b
 13815                           
 13816                           ; BSR set to: 0
 13817  0054E4  C060  F00C         	movff	___flsub@b,___fladd@b
 13818  0054E8  C061  F00D         	movff	___flsub@b+1,___fladd@b+1
 13819  0054EC  C062  F00E         	movff	___flsub@b+2,___fladd@b+2
 13820  0054F0  C063  F00F         	movff	___flsub@b+3,___fladd@b+3
 13821  0054F4  C064  F010         	movff	___flsub@a,___fladd@a
 13822  0054F8  C065  F011         	movff	___flsub@a+1,___fladd@a+1
 13823  0054FC  C066  F012         	movff	___flsub@a+2,___fladd@a+2
 13824  005500  C067  F013         	movff	___flsub@a+3,___fladd@a+3
 13825  005504  EC4E  F01C         	call	___fladd	;wreg free
 13826  005508  C00C  F060         	movff	?___fladd,?___flsub
 13827  00550C  C00D  F061         	movff	?___fladd+1,?___flsub+1
 13828  005510  C00E  F062         	movff	?___fladd+2,?___flsub+2
 13829  005514  C00F  F063         	movff	?___fladd+3,?___flsub+3
 13830  005518  0012               	return		;funcret
 13831  00551A                     __end_of___flsub:
 13832                           	opt callstack 0
 13833                           
 13834 ;; *************** function ___fladd *****************
 13835 ;; Defined at:
 13836 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 13837 ;; Parameters:    Size  Location     Type
 13838 ;;  b               4   11[COMRAM] unsigned char 
 13839 ;;  a               4   15[COMRAM] unsigned char 
 13840 ;; Auto vars:     Size  Location     Type
 13841 ;;  grs             1   26[COMRAM] unsigned char 
 13842 ;;  bexp            1   25[COMRAM] unsigned char 
 13843 ;;  aexp            1   24[COMRAM] unsigned char 
 13844 ;;  signs           1   23[COMRAM] unsigned char 
 13845 ;; Return value:  Size  Location     Type
 13846 ;;                  4   11[COMRAM] unsigned char 
 13847 ;; Registers used:
 13848 ;;		wreg, status,2, status,0
 13849 ;; Tracked objects:
 13850 ;;		On entry : 0/0
 13851 ;;		On exit  : 0/0
 13852 ;;		Unchanged: 0/0
 13853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13854 ;;      Params:         8       0       0       0       0       0       0       0       0
 13855 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13856 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13857 ;;      Totals:        16       0       0       0       0       0       0       0       0
 13858 ;;Total ram usage:       16 bytes
 13859 ;; Hardware stack levels used:    1
 13860 ;; Hardware stack levels required when called:    7
 13861 ;; This function calls:
 13862 ;;		Nothing
 13863 ;; This function is called by:
 13864 ;;		___flsub
 13865 ;;		_powf
 13866 ;;		_sqrtf
 13867 ;; This function uses a non-reentrant model
 13868 ;;
 13869                           
 13870                           	psect	text56
 13871  00389C                     __ptext56:
 13872                           	opt callstack 0
 13873  00389C                     ___fladd:
 13874                           	opt callstack 19
 13875                           
 13876                           ;incstack = 0
 13877  00389C  500F               	movf	___fladd@b+3,w,c
 13878  00389E  0B80               	andlw	128
 13879  0038A0  6E18               	movwf	___fladd@signs,c
 13880  0038A2  500F               	movf	___fladd@b+3,w,c
 13881  0038A4  240F               	addwf	___fladd@b+3,w,c
 13882  0038A6  6E1A               	movwf	___fladd@bexp,c
 13883  0038A8  BE0E               	btfsc	___fladd@b+2,7,c
 13884  0038AA  801A               	bsf	___fladd@bexp,0,c
 13885  0038AC  501A               	movf	___fladd@bexp,w,c
 13886  0038AE  B4D8               	btfsc	status,2,c
 13887  0038B0  D00D               	goto	l8131
 13888  0038B2  281A               	incf	___fladd@bexp,w,c
 13889  0038B4  A4D8               	btfss	status,2,c
 13890  0038B6  D008               	goto	l8127
 13891  0038B8  0E00               	movlw	0
 13892  0038BA  6E0C               	movwf	___fladd@b,c
 13893  0038BC  0E00               	movlw	0
 13894  0038BE  6E0D               	movwf	___fladd@b+1,c
 13895  0038C0  0E00               	movlw	0
 13896  0038C2  6E0E               	movwf	___fladd@b+2,c
 13897  0038C4  0E00               	movlw	0
 13898  0038C6  6E0F               	movwf	___fladd@b+3,c
 13899  0038C8                     l8127:
 13900  0038C8  8E0E               	bsf	___fladd@b+2,7,c
 13901  0038CA  D006               	goto	L9
 13902  0038CC                     l8131:
 13903  0038CC  0E00               	movlw	0
 13904  0038CE  6E0C               	movwf	___fladd@b,c
 13905  0038D0  0E00               	movlw	0
 13906  0038D2  6E0D               	movwf	___fladd@b+1,c
 13907  0038D4  0E00               	movlw	0
 13908  0038D6  6E0E               	movwf	___fladd@b+2,c
 13909  0038D8                     L9:
 13910  0038D8  0E00               	movlw	0
 13911  0038DA  6E0F               	movwf	___fladd@b+3,c
 13912  0038DC  5013               	movf	___fladd@a+3,w,c
 13913  0038DE  0B80               	andlw	128
 13914  0038E0  6E19               	movwf	___fladd@aexp,c
 13915  0038E2  5018               	movf	___fladd@signs,w,c
 13916  0038E4  1819               	xorwf	___fladd@aexp,w,c
 13917  0038E6  A4D8               	btfss	status,2,c
 13918  0038E8  8C18               	bsf	___fladd@signs,6,c
 13919  0038EA  5013               	movf	___fladd@a+3,w,c
 13920  0038EC  2413               	addwf	___fladd@a+3,w,c
 13921  0038EE  6E19               	movwf	___fladd@aexp,c
 13922  0038F0  BE12               	btfsc	___fladd@a+2,7,c
 13923  0038F2  8019               	bsf	___fladd@aexp,0,c
 13924  0038F4  5019               	movf	___fladd@aexp,w,c
 13925  0038F6  B4D8               	btfsc	status,2,c
 13926  0038F8  D00D               	goto	l8155
 13927  0038FA  2819               	incf	___fladd@aexp,w,c
 13928  0038FC  A4D8               	btfss	status,2,c
 13929  0038FE  D008               	goto	l8151
 13930  003900  0E00               	movlw	0
 13931  003902  6E10               	movwf	___fladd@a,c
 13932  003904  0E00               	movlw	0
 13933  003906  6E11               	movwf	___fladd@a+1,c
 13934  003908  0E00               	movlw	0
 13935  00390A  6E12               	movwf	___fladd@a+2,c
 13936  00390C  0E00               	movlw	0
 13937  00390E  6E13               	movwf	___fladd@a+3,c
 13938  003910                     l8151:
 13939  003910  8E12               	bsf	___fladd@a+2,7,c
 13940  003912  D006               	goto	L10
 13941  003914                     l8155:
 13942  003914  0E00               	movlw	0
 13943  003916  6E10               	movwf	___fladd@a,c
 13944  003918  0E00               	movlw	0
 13945  00391A  6E11               	movwf	___fladd@a+1,c
 13946  00391C  0E00               	movlw	0
 13947  00391E  6E12               	movwf	___fladd@a+2,c
 13948  003920                     L10:
 13949  003920  0E00               	movlw	0
 13950  003922  6E13               	movwf	___fladd@a+3,c
 13951  003924  501A               	movf	___fladd@bexp,w,c
 13952  003926  5C19               	subwf	___fladd@aexp,w,c
 13953  003928  B0D8               	btfsc	status,0,c
 13954  00392A  D022               	goto	l8193
 13955  00392C  AC18               	btfss	___fladd@signs,6,c
 13956  00392E  D002               	goto	l8163
 13957  003930  0E80               	movlw	128
 13958  003932  1A18               	xorwf	___fladd@signs,f,c
 13959  003934                     l8163:
 13960  003934  C01A  F01B         	movff	___fladd@bexp,___fladd@grs
 13961  003938  C019  F01A         	movff	___fladd@aexp,___fladd@bexp
 13962  00393C  C01B  F019         	movff	___fladd@grs,___fladd@aexp
 13963  003940  C00C  F01B         	movff	___fladd@b,___fladd@grs
 13964  003944  C010  F00C         	movff	___fladd@a,___fladd@b
 13965  003948  C01B  F010         	movff	___fladd@grs,___fladd@a
 13966  00394C  C00D  F01B         	movff	___fladd@b+1,___fladd@grs
 13967  003950  C011  F00D         	movff	___fladd@a+1,___fladd@b+1
 13968  003954  C01B  F011         	movff	___fladd@grs,___fladd@a+1
 13969  003958  C00E  F01B         	movff	___fladd@b+2,___fladd@grs
 13970  00395C  C012  F00E         	movff	___fladd@a+2,___fladd@b+2
 13971  003960  C01B  F012         	movff	___fladd@grs,___fladd@a+2
 13972  003964  C00F  F01B         	movff	___fladd@b+3,___fladd@grs
 13973  003968  C013  F00F         	movff	___fladd@a+3,___fladd@b+3
 13974  00396C  C01B  F013         	movff	___fladd@grs,___fladd@a+3
 13975  003970                     l8193:
 13976  003970  0E00               	movlw	0
 13977  003972  6E1B               	movwf	___fladd@grs,c
 13978  003974  501A               	movf	___fladd@bexp,w,c
 13979  003976  C019  F014         	movff	___fladd@aexp,??___fladd
 13980  00397A  6A15               	clrf	(??___fladd+1)& (0+255),c
 13981  00397C  5E14               	subwf	??___fladd,f,c
 13982  00397E  0E00               	movlw	0
 13983  003980  5A15               	subwfb	??___fladd+1,f,c
 13984  003982  BE15               	btfsc	??___fladd+1,7,c
 13985  003984  D02C               	goto	l1312
 13986  003986  5015               	movf	??___fladd+1,w,c
 13987  003988  E104               	bnz	u8590
 13988  00398A  0E1A               	movlw	26
 13989  00398C  5C14               	subwf	??___fladd,w,c
 13990  00398E  A0D8               	btfss	status,0,c
 13991  003990  D026               	goto	l1312
 13992  003992                     u8590:
 13993  003992  500C               	movf	___fladd@b,w,c
 13994  003994  100D               	iorwf	___fladd@b+1,w,c
 13995  003996  100E               	iorwf	___fladd@b+2,w,c
 13996  003998  100F               	iorwf	___fladd@b+3,w,c
 13997  00399A  B4D8               	btfsc	status,2,c
 13998  00399C  D002               	goto	u8600
 13999  00399E  0E01               	movlw	1
 14000  0039A0  D001               	goto	u8610
 14001  0039A2                     u8600:
 14002  0039A2  0E00               	movlw	0
 14003  0039A4                     u8610:
 14004  0039A4  6E1B               	movwf	___fladd@grs,c
 14005  0039A6  0E00               	movlw	0
 14006  0039A8  6E0C               	movwf	___fladd@b,c
 14007  0039AA  0E00               	movlw	0
 14008  0039AC  6E0D               	movwf	___fladd@b+1,c
 14009  0039AE  0E00               	movlw	0
 14010  0039B0  6E0E               	movwf	___fladd@b+2,c
 14011  0039B2  0E00               	movlw	0
 14012  0039B4  6E0F               	movwf	___fladd@b+3,c
 14013  0039B6  C019  F01A         	movff	___fladd@aexp,___fladd@bexp
 14014  0039BA  D015               	goto	u8640
 14015  0039BC                     l1313:
 14016  0039BC  A01B               	btfss	___fladd@grs,0,c
 14017  0039BE  D005               	goto	l8205
 14018  0039C0  90D8               	bcf	status,0,c
 14019  0039C2  301B               	rrcf	___fladd@grs,w,c
 14020  0039C4  0901               	iorlw	1
 14021  0039C6  6E1B               	movwf	___fladd@grs,c
 14022  0039C8  D002               	goto	l8207
 14023  0039CA                     l8205:
 14024  0039CA  90D8               	bcf	status,0,c
 14025  0039CC  321B               	rrcf	___fladd@grs,f,c
 14026  0039CE                     l8207:
 14027  0039CE  B00C               	btfsc	___fladd@b,0,c
 14028  0039D0  8E1B               	bsf	___fladd@grs,7,c
 14029  0039D2  340F               	rlcf	___fladd@b+3,w,c
 14030  0039D4  320F               	rrcf	___fladd@b+3,f,c
 14031  0039D6  320E               	rrcf	___fladd@b+2,f,c
 14032  0039D8  320D               	rrcf	___fladd@b+1,f,c
 14033  0039DA  320C               	rrcf	___fladd@b,f,c
 14034  0039DC  2A1A               	incf	___fladd@bexp,f,c
 14035  0039DE                     l1312:
 14036  0039DE  5019               	movf	___fladd@aexp,w,c
 14037  0039E0  5C1A               	subwf	___fladd@bexp,w,c
 14038  0039E2  A0D8               	btfss	status,0,c
 14039  0039E4  D7EB               	goto	l1313
 14040  0039E6                     u8640:
 14041  0039E6  BC18               	btfsc	___fladd@signs,6,c
 14042  0039E8  D028               	goto	l8239
 14043  0039EA  501A               	movf	___fladd@bexp,w,c
 14044  0039EC  A4D8               	btfss	status,2,c
 14045  0039EE  D009               	goto	l8221
 14046  0039F0  0E00               	movlw	0
 14047  0039F2  6E0C               	movwf	?___fladd,c
 14048  0039F4  0E00               	movlw	0
 14049  0039F6  6E0D               	movwf	?___fladd+1,c
 14050  0039F8  0E00               	movlw	0
 14051  0039FA  6E0E               	movwf	?___fladd+2,c
 14052  0039FC  0E00               	movlw	0
 14053  0039FE  6E0F               	movwf	?___fladd+3,c
 14054  003A00  0012               	return	
 14055  003A02                     l8221:
 14056  003A02  5010               	movf	___fladd@a,w,c
 14057  003A04  260C               	addwf	___fladd@b,f,c
 14058  003A06  5011               	movf	___fladd@a+1,w,c
 14059  003A08  220D               	addwfc	___fladd@b+1,f,c
 14060  003A0A  5012               	movf	___fladd@a+2,w,c
 14061  003A0C  220E               	addwfc	___fladd@b+2,f,c
 14062  003A0E  5013               	movf	___fladd@a+3,w,c
 14063  003A10  220F               	addwfc	___fladd@b+3,f,c
 14064  003A12  A00F               	btfss	___fladd@b+3,0,c
 14065  003A14  D071               	goto	u8770
 14066  003A16  A01B               	btfss	___fladd@grs,0,c
 14067  003A18  D005               	goto	l8229
 14068  003A1A  90D8               	bcf	status,0,c
 14069  003A1C  301B               	rrcf	___fladd@grs,w,c
 14070  003A1E  0901               	iorlw	1
 14071  003A20  6E1B               	movwf	___fladd@grs,c
 14072  003A22  D002               	goto	l8231
 14073  003A24                     l8229:
 14074  003A24  90D8               	bcf	status,0,c
 14075  003A26  321B               	rrcf	___fladd@grs,f,c
 14076  003A28                     l8231:
 14077  003A28  B00C               	btfsc	___fladd@b,0,c
 14078  003A2A  8E1B               	bsf	___fladd@grs,7,c
 14079  003A2C  340F               	rlcf	___fladd@b+3,w,c
 14080  003A2E  320F               	rrcf	___fladd@b+3,f,c
 14081  003A30  320E               	rrcf	___fladd@b+2,f,c
 14082  003A32  320D               	rrcf	___fladd@b+1,f,c
 14083  003A34  320C               	rrcf	___fladd@b,f,c
 14084  003A36  2A1A               	incf	___fladd@bexp,f,c
 14085  003A38  D05F               	goto	u8770
 14086  003A3A                     l8239:
 14087  003A3A  5010               	movf	___fladd@a,w,c
 14088  003A3C  5C0C               	subwf	___fladd@b,w,c
 14089  003A3E  5011               	movf	___fladd@a+1,w,c
 14090  003A40  580D               	subwfb	___fladd@b+1,w,c
 14091  003A42  5012               	movf	___fladd@a+2,w,c
 14092  003A44  580E               	subwfb	___fladd@b+2,w,c
 14093  003A46  500F               	movf	___fladd@b+3,w,c
 14094  003A48  0A80               	xorlw	128
 14095  003A4A  6E14               	movwf	??___fladd& (0+255),c
 14096  003A4C  5013               	movf	___fladd@a+3,w,c
 14097  003A4E  0A80               	xorlw	128
 14098  003A50  5814               	subwfb	??___fladd& (0+255),w,c
 14099  003A52  B0D8               	btfsc	status,0,c
 14100  003A54  D025               	goto	l8249
 14101  003A56  500C               	movf	___fladd@b,w,c
 14102  003A58  5C10               	subwf	___fladd@a,w,c
 14103  003A5A  6E14               	movwf	??___fladd& (0+255),c
 14104  003A5C  500D               	movf	___fladd@b+1,w,c
 14105  003A5E  5811               	subwfb	___fladd@a+1,w,c
 14106  003A60  6E15               	movwf	(??___fladd+1)& (0+255),c
 14107  003A62  500E               	movf	___fladd@b+2,w,c
 14108  003A64  5812               	subwfb	___fladd@a+2,w,c
 14109  003A66  6E16               	movwf	(??___fladd+2)& (0+255),c
 14110  003A68  500F               	movf	___fladd@b+3,w,c
 14111  003A6A  5813               	subwfb	___fladd@a+3,w,c
 14112  003A6C  6E17               	movwf	(??___fladd+3)& (0+255),c
 14113  003A6E  0EFF               	movlw	255
 14114  003A70  2414               	addwf	??___fladd,w,c
 14115  003A72  6E0C               	movwf	___fladd@b,c
 14116  003A74  0EFF               	movlw	255
 14117  003A76  2015               	addwfc	??___fladd+1,w,c
 14118  003A78  6E0D               	movwf	___fladd@b+1,c
 14119  003A7A  0EFF               	movlw	255
 14120  003A7C  2016               	addwfc	??___fladd+2,w,c
 14121  003A7E  6E0E               	movwf	___fladd@b+2,c
 14122  003A80  0EFF               	movlw	255
 14123  003A82  2017               	addwfc	??___fladd+3,w,c
 14124  003A84  6E0F               	movwf	___fladd@b+3,c
 14125  003A86  0E80               	movlw	128
 14126  003A88  1A18               	xorwf	___fladd@signs,f,c
 14127  003A8A  6C1B               	negf	___fladd@grs,c
 14128  003A8C  501B               	movf	___fladd@grs,w,c
 14129  003A8E  A4D8               	btfss	status,2,c
 14130  003A90  D00F               	goto	l1328
 14131  003A92  0E01               	movlw	1
 14132  003A94  260C               	addwf	___fladd@b,f,c
 14133  003A96  0E00               	movlw	0
 14134  003A98  220D               	addwfc	___fladd@b+1,f,c
 14135  003A9A  220E               	addwfc	___fladd@b+2,f,c
 14136  003A9C  220F               	addwfc	___fladd@b+3,f,c
 14137  003A9E  D008               	goto	l1328
 14138  003AA0                     l8249:
 14139  003AA0  5010               	movf	___fladd@a,w,c
 14140  003AA2  5E0C               	subwf	___fladd@b,f,c
 14141  003AA4  5011               	movf	___fladd@a+1,w,c
 14142  003AA6  5A0D               	subwfb	___fladd@b+1,f,c
 14143  003AA8  5012               	movf	___fladd@a+2,w,c
 14144  003AAA  5A0E               	subwfb	___fladd@b+2,f,c
 14145  003AAC  5013               	movf	___fladd@a+3,w,c
 14146  003AAE  5A0F               	subwfb	___fladd@b+3,f,c
 14147  003AB0                     l1328:
 14148  003AB0  500C               	movf	___fladd@b,w,c
 14149  003AB2  100D               	iorwf	___fladd@b+1,w,c
 14150  003AB4  100E               	iorwf	___fladd@b+2,w,c
 14151  003AB6  100F               	iorwf	___fladd@b+3,w,c
 14152  003AB8  A4D8               	btfss	status,2,c
 14153  003ABA  D01C               	goto	l8273
 14154  003ABC  501B               	movf	___fladd@grs,w,c
 14155  003ABE  A4D8               	btfss	status,2,c
 14156  003AC0  D019               	goto	l8273
 14157  003AC2  0E00               	movlw	0
 14158  003AC4  6E0C               	movwf	?___fladd,c
 14159  003AC6  0E00               	movlw	0
 14160  003AC8  6E0D               	movwf	?___fladd+1,c
 14161  003ACA  0E00               	movlw	0
 14162  003ACC  6E0E               	movwf	?___fladd+2,c
 14163  003ACE  0E00               	movlw	0
 14164  003AD0  6E0F               	movwf	?___fladd+3,c
 14165  003AD2  0012               	return	
 14166  003AD4                     l8257:
 14167  003AD4  90D8               	bcf	status,0,c
 14168  003AD6  360C               	rlcf	___fladd@b,f,c
 14169  003AD8  360D               	rlcf	___fladd@b+1,f,c
 14170  003ADA  360E               	rlcf	___fladd@b+2,f,c
 14171  003ADC  360F               	rlcf	___fladd@b+3,f,c
 14172  003ADE  BE1B               	btfsc	___fladd@grs,7,c
 14173  003AE0  800C               	bsf	___fladd@b,0,c
 14174  003AE2  A01B               	btfss	___fladd@grs,0,c
 14175  003AE4  D002               	goto	l8267
 14176  003AE6  80D8               	bsf	status,0,c
 14177  003AE8  D001               	goto	L11
 14178  003AEA                     l8267:
 14179  003AEA  90D8               	bcf	status,0,c
 14180  003AEC                     L11:
 14181  003AEC  361B               	rlcf	___fladd@grs,f,c
 14182  003AEE  501A               	movf	___fladd@bexp,w,c
 14183  003AF0  A4D8               	btfss	status,2,c
 14184  003AF2  061A               	decf	___fladd@bexp,f,c
 14185  003AF4                     l8273:
 14186  003AF4  AE0E               	btfss	___fladd@b+2,7,c
 14187  003AF6  D7EE               	goto	l8257
 14188  003AF8                     u8770:
 14189  003AF8  0E00               	movlw	0
 14190  003AFA  6E19               	movwf	___fladd@aexp,c
 14191  003AFC  AE1B               	btfss	___fladd@grs,7,c
 14192  003AFE  D00B               	goto	l1337
 14193  003B00  C01B  F014         	movff	___fladd@grs,??___fladd
 14194  003B04  0E7F               	movlw	127
 14195  003B06  1614               	andwf	??___fladd,f,c
 14196  003B08  B4D8               	btfsc	status,2,c
 14197  003B0A  D003               	goto	l1338
 14198  003B0C                     u8790:
 14199  003B0C  0E01               	movlw	1
 14200  003B0E  6E19               	movwf	___fladd@aexp,c
 14201  003B10  D002               	goto	l1337
 14202  003B12                     l1338:
 14203  003B12  B00C               	btfsc	___fladd@b,0,c
 14204  003B14  D7FB               	goto	u8790
 14205  003B16                     l1337:
 14206  003B16  5019               	movf	___fladd@aexp,w,c
 14207  003B18  B4D8               	btfsc	status,2,c
 14208  003B1A  D020               	goto	l8293
 14209  003B1C  0E01               	movlw	1
 14210  003B1E  260C               	addwf	___fladd@b,f,c
 14211  003B20  0E00               	movlw	0
 14212  003B22  220D               	addwfc	___fladd@b+1,f,c
 14213  003B24  220E               	addwfc	___fladd@b+2,f,c
 14214  003B26  220F               	addwfc	___fladd@b+3,f,c
 14215  003B28  A00F               	btfss	___fladd@b+3,0,c
 14216  003B2A  D018               	goto	l8293
 14217  003B2C  C00C  F014         	movff	___fladd@b,??___fladd
 14218  003B30  C00D  F015         	movff	___fladd@b+1,??___fladd+1
 14219  003B34  C00E  F016         	movff	___fladd@b+2,??___fladd+2
 14220  003B38  C00F  F017         	movff	___fladd@b+3,??___fladd+3
 14221  003B3C  3417               	rlcf	??___fladd+3,w,c
 14222  003B3E  3217               	rrcf	??___fladd+3,f,c
 14223  003B40  3216               	rrcf	??___fladd+2,f,c
 14224  003B42  3215               	rrcf	??___fladd+1,f,c
 14225  003B44  3214               	rrcf	??___fladd,f,c
 14226  003B46  C014  F00C         	movff	??___fladd,___fladd@b
 14227  003B4A  C015  F00D         	movff	??___fladd+1,___fladd@b+1
 14228  003B4E  C016  F00E         	movff	??___fladd+2,___fladd@b+2
 14229  003B52  C017  F00F         	movff	??___fladd+3,___fladd@b+3
 14230  003B56  281A               	incf	___fladd@bexp,w,c
 14231  003B58  A4D8               	btfss	status,2,c
 14232  003B5A  2A1A               	incf	___fladd@bexp,f,c
 14233  003B5C                     l8293:
 14234  003B5C  281A               	incf	___fladd@bexp,w,c
 14235  003B5E  B4D8               	btfsc	status,2,c
 14236  003B60  D003               	goto	u8850
 14237  003B62  501A               	movf	___fladd@bexp,w,c
 14238  003B64  A4D8               	btfss	status,2,c
 14239  003B66  D00D               	goto	l8301
 14240  003B68                     u8850:
 14241  003B68  0E00               	movlw	0
 14242  003B6A  6E0C               	movwf	___fladd@b,c
 14243  003B6C  0E00               	movlw	0
 14244  003B6E  6E0D               	movwf	___fladd@b+1,c
 14245  003B70  0E00               	movlw	0
 14246  003B72  6E0E               	movwf	___fladd@b+2,c
 14247  003B74  0E00               	movlw	0
 14248  003B76  6E0F               	movwf	___fladd@b+3,c
 14249  003B78  501A               	movf	___fladd@bexp,w,c
 14250  003B7A  A4D8               	btfss	status,2,c
 14251  003B7C  D002               	goto	l8301
 14252  003B7E  0E00               	movlw	0
 14253  003B80  6E18               	movwf	___fladd@signs,c
 14254  003B82                     l8301:
 14255  003B82  A01A               	btfss	___fladd@bexp,0,c
 14256  003B84  D002               	goto	l8305
 14257  003B86  8E0E               	bsf	___fladd@b+2,7,c
 14258  003B88  D001               	goto	l8307
 14259  003B8A                     l8305:
 14260  003B8A  9E0E               	bcf	___fladd@b+2,7,c
 14261  003B8C                     l8307:
 14262  003B8C  90D8               	bcf	status,0,c
 14263  003B8E  301A               	rrcf	___fladd@bexp,w,c
 14264  003B90  6E0F               	movwf	___fladd@b+3,c
 14265  003B92  BE18               	btfsc	___fladd@signs,7,c
 14266  003B94  8E0F               	bsf	___fladd@b+3,7,c
 14267  003B96  C00C  F00C         	movff	___fladd@b,?___fladd
 14268  003B9A  C00D  F00D         	movff	___fladd@b+1,?___fladd+1
 14269  003B9E  C00E  F00E         	movff	___fladd@b+2,?___fladd+2
 14270  003BA2  C00F  F00F         	movff	___fladd@b+3,?___fladd+3
 14271  003BA6  0012               	return		;funcret
 14272  003BA8                     __end_of___fladd:
 14273                           	opt callstack 0
 14274                           
 14275 ;; *************** function ___flneg *****************
 14276 ;; Defined at:
 14277 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 14278 ;; Parameters:    Size  Location     Type
 14279 ;;  f1              4   11[COMRAM] unsigned char 
 14280 ;; Auto vars:     Size  Location     Type
 14281 ;;		None
 14282 ;; Return value:  Size  Location     Type
 14283 ;;                  4   11[COMRAM] unsigned char 
 14284 ;; Registers used:
 14285 ;;		wreg, status,2, status,0
 14286 ;; Tracked objects:
 14287 ;;		On entry : 0/0
 14288 ;;		On exit  : 0/0
 14289 ;;		Unchanged: 0/0
 14290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14291 ;;      Params:         4       0       0       0       0       0       0       0       0
 14292 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14293 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14294 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14295 ;;Total ram usage:        4 bytes
 14296 ;; Hardware stack levels used:    1
 14297 ;; Hardware stack levels required when called:    7
 14298 ;; This function calls:
 14299 ;;		Nothing
 14300 ;; This function is called by:
 14301 ;;		_powf
 14302 ;; This function uses a non-reentrant model
 14303 ;;
 14304                           
 14305                           	psect	text57
 14306  0057DE                     __ptext57:
 14307                           	opt callstack 0
 14308  0057DE                     ___flneg:
 14309                           	opt callstack 20
 14310                           
 14311                           ;incstack = 0
 14312  0057DE  500C               	movf	___flneg@f1,w,c
 14313  0057E0  100D               	iorwf	___flneg@f1+1,w,c
 14314  0057E2  100E               	iorwf	___flneg@f1+2,w,c
 14315  0057E4  100F               	iorwf	___flneg@f1+3,w,c
 14316  0057E6  B4D8               	btfsc	status,2,c
 14317  0057E8  D008               	goto	l5099
 14318  0057EA  0E00               	movlw	0
 14319  0057EC  1A0C               	xorwf	___flneg@f1,f,c
 14320  0057EE  0E00               	movlw	0
 14321  0057F0  1A0D               	xorwf	___flneg@f1+1,f,c
 14322  0057F2  0E00               	movlw	0
 14323  0057F4  1A0E               	xorwf	___flneg@f1+2,f,c
 14324  0057F6  0E80               	movlw	128
 14325  0057F8  1A0F               	xorwf	___flneg@f1+3,f,c
 14326  0057FA                     l5099:
 14327  0057FA  C00C  F00C         	movff	___flneg@f1,?___flneg
 14328  0057FE  C00D  F00D         	movff	___flneg@f1+1,?___flneg+1
 14329  005802  C00E  F00E         	movff	___flneg@f1+2,?___flneg+2
 14330  005806  C00F  F00F         	movff	___flneg@f1+3,?___flneg+3
 14331  00580A  0012               	return		;funcret
 14332  00580C                     __end_of___flneg:
 14333                           	opt callstack 0
 14334                           
 14335 ;; *************** function ___fldiv *****************
 14336 ;; Defined at:
 14337 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 14338 ;; Parameters:    Size  Location     Type
 14339 ;;  b               4    8[BANK0 ] unsigned char 
 14340 ;;  a               4   12[BANK0 ] unsigned char 
 14341 ;; Auto vars:     Size  Location     Type
 14342 ;;  grs             4   23[BANK0 ] unsigned long 
 14343 ;;  rem             4   16[BANK0 ] unsigned long 
 14344 ;;  new_exp         2   21[BANK0 ] short 
 14345 ;;  aexp            1   28[BANK0 ] unsigned char 
 14346 ;;  bexp            1   27[BANK0 ] unsigned char 
 14347 ;;  sign            1   20[BANK0 ] unsigned char 
 14348 ;; Return value:  Size  Location     Type
 14349 ;;                  4    8[BANK0 ] unsigned char 
 14350 ;; Registers used:
 14351 ;;		wreg, status,2, status,0
 14352 ;; Tracked objects:
 14353 ;;		On entry : 0/0
 14354 ;;		On exit  : 0/0
 14355 ;;		Unchanged: 0/0
 14356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14357 ;;      Params:         0       8       0       0       0       0       0       0       0
 14358 ;;      Locals:         0      13       0       0       0       0       0       0       0
 14359 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14360 ;;      Totals:         4      21       0       0       0       0       0       0       0
 14361 ;;Total ram usage:       25 bytes
 14362 ;; Hardware stack levels used:    1
 14363 ;; Hardware stack levels required when called:    7
 14364 ;; This function calls:
 14365 ;;		Nothing
 14366 ;; This function is called by:
 14367 ;;		_AD9833_SetFrequency
 14368 ;;		_powf
 14369 ;; This function uses a non-reentrant model
 14370 ;;
 14371                           
 14372                           	psect	text58
 14373  003BA8                     __ptext58:
 14374                           	opt callstack 0
 14375  003BA8                     ___fldiv:
 14376                           	opt callstack 20
 14377                           
 14378                           ;incstack = 0
 14379  003BA8  0100               	movlb	0	; () banked
 14380  003BAA  516B               	movf	(___fldiv@b+3)& (0+255),w,b
 14381  003BAC  0B80               	andlw	128
 14382  003BAE  6F74               	movwf	___fldiv@sign& (0+255),b
 14383  003BB0  516B               	movf	(___fldiv@b+3)& (0+255),w,b
 14384  003BB2  256B               	addwf	(___fldiv@b+3)& (0+255),w,b
 14385  003BB4  6F7B               	movwf	___fldiv@bexp& (0+255),b
 14386                           
 14387                           ; BSR set to: 0
 14388  003BB6  BF6A               	btfsc	(___fldiv@b+2)& (0+255),7,b
 14389                           
 14390                           ; BSR set to: 0
 14391  003BB8  817B               	bsf	___fldiv@bexp& (0+255),0,b
 14392                           
 14393                           ; BSR set to: 0
 14394  003BBA  517B               	movf	___fldiv@bexp& (0+255),w,b
 14395  003BBC  B4D8               	btfsc	status,2,c
 14396  003BBE  D00D               	goto	l8355
 14397                           
 14398                           ; BSR set to: 0
 14399  003BC0  297B               	incf	___fldiv@bexp& (0+255),w,b
 14400  003BC2  A4D8               	btfss	status,2,c
 14401  003BC4  D008               	goto	l8351
 14402                           
 14403                           ; BSR set to: 0
 14404  003BC6  0E00               	movlw	0
 14405  003BC8  6F68               	movwf	___fldiv@b& (0+255),b
 14406  003BCA  0E00               	movlw	0
 14407  003BCC  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 14408  003BCE  0E00               	movlw	0
 14409  003BD0  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 14410  003BD2  0E00               	movlw	0
 14411  003BD4  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 14412  003BD6                     l8351:
 14413                           
 14414                           ; BSR set to: 0
 14415  003BD6  8F6A               	bsf	(___fldiv@b+2)& (0+255),7,b
 14416  003BD8  D006               	goto	L12
 14417  003BDA                     l8355:
 14418                           
 14419                           ; BSR set to: 0
 14420  003BDA  0E00               	movlw	0
 14421  003BDC  6F68               	movwf	___fldiv@b& (0+255),b
 14422  003BDE  0E00               	movlw	0
 14423  003BE0  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 14424  003BE2  0E00               	movlw	0
 14425  003BE4  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 14426  003BE6                     L12:
 14427  003BE6  0E00               	movlw	0
 14428  003BE8  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 14429                           
 14430                           ; BSR set to: 0
 14431  003BEA  516F               	movf	(___fldiv@a+3)& (0+255),w,b
 14432  003BEC  0B80               	andlw	128
 14433  003BEE  1B74               	xorwf	___fldiv@sign& (0+255),f,b
 14434                           
 14435                           ; BSR set to: 0
 14436  003BF0  516F               	movf	(___fldiv@a+3)& (0+255),w,b
 14437  003BF2  256F               	addwf	(___fldiv@a+3)& (0+255),w,b
 14438  003BF4  6F7C               	movwf	___fldiv@aexp& (0+255),b
 14439                           
 14440                           ; BSR set to: 0
 14441  003BF6  BF6E               	btfsc	(___fldiv@a+2)& (0+255),7,b
 14442                           
 14443                           ; BSR set to: 0
 14444  003BF8  817C               	bsf	___fldiv@aexp& (0+255),0,b
 14445                           
 14446                           ; BSR set to: 0
 14447  003BFA  517C               	movf	___fldiv@aexp& (0+255),w,b
 14448  003BFC  B4D8               	btfsc	status,2,c
 14449  003BFE  D00D               	goto	l8375
 14450                           
 14451                           ; BSR set to: 0
 14452  003C00  297C               	incf	___fldiv@aexp& (0+255),w,b
 14453  003C02  A4D8               	btfss	status,2,c
 14454  003C04  D008               	goto	l8371
 14455                           
 14456                           ; BSR set to: 0
 14457  003C06  0E00               	movlw	0
 14458  003C08  6F6C               	movwf	___fldiv@a& (0+255),b
 14459  003C0A  0E00               	movlw	0
 14460  003C0C  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
 14461  003C0E  0E00               	movlw	0
 14462  003C10  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
 14463  003C12  0E00               	movlw	0
 14464  003C14  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
 14465  003C16                     l8371:
 14466                           
 14467                           ; BSR set to: 0
 14468  003C16  8F6E               	bsf	(___fldiv@a+2)& (0+255),7,b
 14469  003C18  D006               	goto	L13
 14470  003C1A                     l8375:
 14471                           
 14472                           ; BSR set to: 0
 14473  003C1A  0E00               	movlw	0
 14474  003C1C  6F6C               	movwf	___fldiv@a& (0+255),b
 14475  003C1E  0E00               	movlw	0
 14476  003C20  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
 14477  003C22  0E00               	movlw	0
 14478  003C24  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
 14479  003C26                     L13:
 14480  003C26  0E00               	movlw	0
 14481  003C28  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
 14482                           
 14483                           ; BSR set to: 0
 14484  003C2A  516C               	movf	___fldiv@a& (0+255),w,b
 14485  003C2C  116D               	iorwf	(___fldiv@a+1)& (0+255),w,b
 14486  003C2E  116E               	iorwf	(___fldiv@a+2)& (0+255),w,b
 14487  003C30  116F               	iorwf	(___fldiv@a+3)& (0+255),w,b
 14488  003C32  A4D8               	btfss	status,2,c
 14489  003C34  D017               	goto	l8389
 14490                           
 14491                           ; BSR set to: 0
 14492  003C36  0E00               	movlw	0
 14493  003C38  6F68               	movwf	___fldiv@b& (0+255),b
 14494  003C3A  0E00               	movlw	0
 14495  003C3C  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 14496  003C3E  0E00               	movlw	0
 14497  003C40  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 14498  003C42  0E00               	movlw	0
 14499  003C44  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 14500                           
 14501                           ; BSR set to: 0
 14502  003C46  0E80               	movlw	128
 14503  003C48  136A               	iorwf	(___fldiv@b+2)& (0+255),f,b
 14504  003C4A  0E7F               	movlw	127
 14505  003C4C  136B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14506  003C4E                     l8383:
 14507                           
 14508                           ; BSR set to: 0
 14509  003C4E  5174               	movf	___fldiv@sign& (0+255),w,b
 14510  003C50  136B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14511                           
 14512                           ; BSR set to: 0
 14513  003C52  C068  F068         	movff	___fldiv@b,?___fldiv
 14514  003C56  C069  F069         	movff	___fldiv@b+1,?___fldiv+1
 14515  003C5A  C06A  F06A         	movff	___fldiv@b+2,?___fldiv+2
 14516  003C5E  C06B  F06B         	movff	___fldiv@b+3,?___fldiv+3
 14517  003C62  0012               	return	
 14518  003C64                     l8389:
 14519                           
 14520                           ; BSR set to: 0
 14521  003C64  517B               	movf	___fldiv@bexp& (0+255),w,b
 14522  003C66  A4D8               	btfss	status,2,c
 14523  003C68  D009               	goto	l8397
 14524                           
 14525                           ; BSR set to: 0
 14526                           
 14527                           ; BSR set to: 0
 14528  003C6A  0E00               	movlw	0
 14529  003C6C  6F68               	movwf	?___fldiv& (0+255),b
 14530  003C6E  0E00               	movlw	0
 14531  003C70  6F69               	movwf	(?___fldiv+1)& (0+255),b
 14532  003C72  0E00               	movlw	0
 14533  003C74  6F6A               	movwf	(?___fldiv+2)& (0+255),b
 14534  003C76  0E00               	movlw	0
 14535  003C78  6F6B               	movwf	(?___fldiv+3)& (0+255),b
 14536  003C7A  0012               	return	
 14537  003C7C                     l8397:
 14538                           
 14539                           ; BSR set to: 0
 14540  003C7C  517C               	movf	___fldiv@aexp& (0+255),w,b
 14541  003C7E  C07B  F035         	movff	___fldiv@bexp,??___fldiv
 14542  003C82  6A36               	clrf	(??___fldiv+1)& (0+255),c
 14543  003C84  5E35               	subwf	??___fldiv,f,c
 14544  003C86  0E00               	movlw	0
 14545  003C88  5A36               	subwfb	??___fldiv+1,f,c
 14546  003C8A  0E7F               	movlw	127
 14547  003C8C  2435               	addwf	??___fldiv,w,c
 14548  003C8E  6F75               	movwf	___fldiv@new_exp& (0+255),b
 14549  003C90  0E00               	movlw	0
 14550  003C92  2036               	addwfc	??___fldiv+1,w,c
 14551  003C94  6F76               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14552                           
 14553                           ; BSR set to: 0
 14554  003C96  C068  F070         	movff	___fldiv@b,___fldiv@rem
 14555  003C9A  C069  F071         	movff	___fldiv@b+1,___fldiv@rem+1
 14556  003C9E  C06A  F072         	movff	___fldiv@b+2,___fldiv@rem+2
 14557  003CA2  C06B  F073         	movff	___fldiv@b+3,___fldiv@rem+3
 14558                           
 14559                           ; BSR set to: 0
 14560  003CA6  0E00               	movlw	0
 14561  003CA8  6F68               	movwf	___fldiv@b& (0+255),b
 14562  003CAA  0E00               	movlw	0
 14563  003CAC  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 14564  003CAE  0E00               	movlw	0
 14565  003CB0  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 14566  003CB2  0E00               	movlw	0
 14567  003CB4  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 14568                           
 14569                           ; BSR set to: 0
 14570  003CB6  0E00               	movlw	0
 14571  003CB8  6F77               	movwf	___fldiv@grs& (0+255),b
 14572  003CBA  0E00               	movlw	0
 14573  003CBC  6F78               	movwf	(___fldiv@grs+1)& (0+255),b
 14574  003CBE  0E00               	movlw	0
 14575  003CC0  6F79               	movwf	(___fldiv@grs+2)& (0+255),b
 14576  003CC2  0E00               	movlw	0
 14577  003CC4  6F7A               	movwf	(___fldiv@grs+3)& (0+255),b
 14578                           
 14579                           ; BSR set to: 0
 14580  003CC6  0E00               	movlw	0
 14581  003CC8  6F7C               	movwf	___fldiv@aexp& (0+255),b
 14582  003CCA  D028               	goto	l1367
 14583  003CCC                     l8407:
 14584                           
 14585                           ; BSR set to: 0
 14586  003CCC  517C               	movf	___fldiv@aexp& (0+255),w,b
 14587  003CCE  B4D8               	btfsc	status,2,c
 14588  003CD0  D011               	goto	l8415
 14589                           
 14590                           ; BSR set to: 0
 14591  003CD2  90D8               	bcf	status,0,c
 14592  003CD4  3770               	rlcf	___fldiv@rem& (0+255),f,b
 14593  003CD6  3771               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 14594  003CD8  3772               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 14595  003CDA  3773               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 14596  003CDC  90D8               	bcf	status,0,c
 14597  003CDE  3768               	rlcf	___fldiv@b& (0+255),f,b
 14598  003CE0  3769               	rlcf	(___fldiv@b+1)& (0+255),f,b
 14599  003CE2  376A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 14600  003CE4  376B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 14601                           
 14602                           ; BSR set to: 0
 14603  003CE6  BF7A               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 14604                           
 14605                           ; BSR set to: 0
 14606  003CE8  8168               	bsf	___fldiv@b& (0+255),0,b
 14607                           
 14608                           ; BSR set to: 0
 14609  003CEA  90D8               	bcf	status,0,c
 14610  003CEC  3777               	rlcf	___fldiv@grs& (0+255),f,b
 14611  003CEE  3778               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14612  003CF0  3779               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14613  003CF2  377A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14614  003CF4                     l8415:
 14615                           
 14616                           ; BSR set to: 0
 14617  003CF4  516C               	movf	___fldiv@a& (0+255),w,b
 14618  003CF6  5D70               	subwf	___fldiv@rem& (0+255),w,b
 14619  003CF8  516D               	movf	(___fldiv@a+1)& (0+255),w,b
 14620  003CFA  5971               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 14621  003CFC  516E               	movf	(___fldiv@a+2)& (0+255),w,b
 14622  003CFE  5972               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 14623  003D00  516F               	movf	(___fldiv@a+3)& (0+255),w,b
 14624  003D02  5973               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 14625  003D04  A0D8               	btfss	status,0,c
 14626  003D06  D009               	goto	l8421
 14627                           
 14628                           ; BSR set to: 0
 14629  003D08  8D7A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 14630                           
 14631                           ; BSR set to: 0
 14632  003D0A  516C               	movf	___fldiv@a& (0+255),w,b
 14633  003D0C  5F70               	subwf	___fldiv@rem& (0+255),f,b
 14634  003D0E  516D               	movf	(___fldiv@a+1)& (0+255),w,b
 14635  003D10  5B71               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 14636  003D12  516E               	movf	(___fldiv@a+2)& (0+255),w,b
 14637  003D14  5B72               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 14638  003D16  516F               	movf	(___fldiv@a+3)& (0+255),w,b
 14639  003D18  5B73               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 14640  003D1A                     l8421:
 14641                           
 14642                           ; BSR set to: 0
 14643  003D1A  2B7C               	incf	___fldiv@aexp& (0+255),f,b
 14644  003D1C                     l1367:
 14645                           
 14646                           ; BSR set to: 0
 14647  003D1C  0E19               	movlw	25
 14648  003D1E  657C               	cpfsgt	___fldiv@aexp& (0+255),b
 14649  003D20  D7D5               	goto	l8407
 14650                           
 14651                           ; BSR set to: 0
 14652  003D22  5170               	movf	___fldiv@rem& (0+255),w,b
 14653  003D24  1171               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 14654  003D26  1172               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 14655  003D28  1173               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 14656  003D2A  B4D8               	btfsc	status,2,c
 14657  003D2C  D011               	goto	l8433
 14658                           
 14659                           ; BSR set to: 0
 14660  003D2E  8177               	bsf	___fldiv@grs& (0+255),0,b
 14661  003D30  D00F               	goto	l8433
 14662  003D32                     l8427:
 14663                           
 14664                           ; BSR set to: 0
 14665  003D32  90D8               	bcf	status,0,c
 14666  003D34  3768               	rlcf	___fldiv@b& (0+255),f,b
 14667  003D36  3769               	rlcf	(___fldiv@b+1)& (0+255),f,b
 14668  003D38  376A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 14669  003D3A  376B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 14670                           
 14671                           ; BSR set to: 0
 14672  003D3C  BF7A               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 14673                           
 14674                           ; BSR set to: 0
 14675  003D3E  8168               	bsf	___fldiv@b& (0+255),0,b
 14676                           
 14677                           ; BSR set to: 0
 14678  003D40  90D8               	bcf	status,0,c
 14679  003D42  3777               	rlcf	___fldiv@grs& (0+255),f,b
 14680  003D44  3778               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14681  003D46  3779               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14682  003D48  377A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14683  003D4A  0775               	decf	___fldiv@new_exp& (0+255),f,b
 14684  003D4C  A0D8               	btfss	status,0,c
 14685  003D4E  0776               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 14686  003D50                     l8433:
 14687                           
 14688                           ; BSR set to: 0
 14689  003D50  AF6A               	btfss	(___fldiv@b+2)& (0+255),7,b
 14690  003D52  D7EF               	goto	l8427
 14691                           
 14692                           ; BSR set to: 0
 14693  003D54  0E00               	movlw	0
 14694  003D56  6F7C               	movwf	___fldiv@aexp& (0+255),b
 14695                           
 14696                           ; BSR set to: 0
 14697  003D58  AF7A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14698  003D5A  D017               	goto	l1378
 14699                           
 14700                           ; BSR set to: 0
 14701  003D5C  0EFF               	movlw	255
 14702  003D5E  1577               	andwf	___fldiv@grs& (0+255),w,b
 14703  003D60  6E35               	movwf	??___fldiv& (0+255),c
 14704  003D62  0EFF               	movlw	255
 14705  003D64  1578               	andwf	(___fldiv@grs+1)& (0+255),w,b
 14706  003D66  6E36               	movwf	(??___fldiv+1)& (0+255),c
 14707  003D68  0EFF               	movlw	255
 14708  003D6A  1579               	andwf	(___fldiv@grs+2)& (0+255),w,b
 14709  003D6C  6E37               	movwf	(??___fldiv+2)& (0+255),c
 14710  003D6E  0E7F               	movlw	127
 14711  003D70  157A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 14712  003D72  6E38               	movwf	(??___fldiv+3)& (0+255),c
 14713  003D74  5035               	movf	??___fldiv,w,c
 14714  003D76  1036               	iorwf	??___fldiv+1,w,c
 14715  003D78  1037               	iorwf	??___fldiv+2,w,c
 14716  003D7A  1038               	iorwf	??___fldiv+3,w,c
 14717  003D7C  B4D8               	btfsc	status,2,c
 14718  003D7E  D003               	goto	l1379
 14719  003D80                     u9100:
 14720                           
 14721                           ; BSR set to: 0
 14722  003D80  0E01               	movlw	1
 14723  003D82  6F7C               	movwf	___fldiv@aexp& (0+255),b
 14724  003D84  D002               	goto	l1378
 14725  003D86                     l1379:
 14726                           
 14727                           ; BSR set to: 0
 14728  003D86  B168               	btfsc	___fldiv@b& (0+255),0,b
 14729  003D88  D7FB               	goto	u9100
 14730  003D8A                     l1378:
 14731                           
 14732                           ; BSR set to: 0
 14733  003D8A  517C               	movf	___fldiv@aexp& (0+255),w,b
 14734  003D8C  B4D8               	btfsc	status,2,c
 14735  003D8E  D01F               	goto	l8453
 14736                           
 14737                           ; BSR set to: 0
 14738  003D90  0E01               	movlw	1
 14739  003D92  2768               	addwf	___fldiv@b& (0+255),f,b
 14740  003D94  0E00               	movlw	0
 14741  003D96  2369               	addwfc	(___fldiv@b+1)& (0+255),f,b
 14742  003D98  236A               	addwfc	(___fldiv@b+2)& (0+255),f,b
 14743  003D9A  236B               	addwfc	(___fldiv@b+3)& (0+255),f,b
 14744                           
 14745                           ; BSR set to: 0
 14746  003D9C  A16B               	btfss	(___fldiv@b+3)& (0+255),0,b
 14747  003D9E  D017               	goto	l8453
 14748                           
 14749                           ; BSR set to: 0
 14750  003DA0  C068  F035         	movff	___fldiv@b,??___fldiv
 14751  003DA4  C069  F036         	movff	___fldiv@b+1,??___fldiv+1
 14752  003DA8  C06A  F037         	movff	___fldiv@b+2,??___fldiv+2
 14753  003DAC  C06B  F038         	movff	___fldiv@b+3,??___fldiv+3
 14754  003DB0  3438               	rlcf	??___fldiv+3,w,c
 14755  003DB2  3238               	rrcf	??___fldiv+3,f,c
 14756  003DB4  3237               	rrcf	??___fldiv+2,f,c
 14757  003DB6  3236               	rrcf	??___fldiv+1,f,c
 14758  003DB8  3235               	rrcf	??___fldiv,f,c
 14759  003DBA  C035  F068         	movff	??___fldiv,___fldiv@b
 14760  003DBE  C036  F069         	movff	??___fldiv+1,___fldiv@b+1
 14761  003DC2  C037  F06A         	movff	??___fldiv+2,___fldiv@b+2
 14762  003DC6  C038  F06B         	movff	??___fldiv+3,___fldiv@b+3
 14763                           
 14764                           ; BSR set to: 0
 14765  003DCA  4B75               	infsnz	___fldiv@new_exp& (0+255),f,b
 14766  003DCC  2B76               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 14767  003DCE                     l8453:
 14768                           
 14769                           ; BSR set to: 0
 14770  003DCE  BF76               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14771  003DD0  D010               	goto	l8457
 14772  003DD2  5176               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14773  003DD4  E103               	bnz	u9140
 14774  003DD6  2975               	incf	___fldiv@new_exp& (0+255),w,b
 14775  003DD8  A0D8               	btfss	status,0,c
 14776  003DDA  D00B               	goto	l8457
 14777  003DDC                     u9140:
 14778                           
 14779                           ; BSR set to: 0
 14780  003DDC  0E00               	movlw	0
 14781  003DDE  6F76               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14782  003DE0  6975               	setf	___fldiv@new_exp& (0+255),b
 14783  003DE2  0E00               	movlw	0
 14784  003DE4  6F68               	movwf	___fldiv@b& (0+255),b
 14785  003DE6  0E00               	movlw	0
 14786  003DE8  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 14787  003DEA  0E00               	movlw	0
 14788  003DEC  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 14789  003DEE  0E00               	movlw	0
 14790  003DF0  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 14791  003DF2                     l8457:
 14792                           
 14793                           ; BSR set to: 0
 14794  003DF2  BF76               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14795  003DF4  D005               	goto	u9150
 14796  003DF6  5176               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14797  003DF8  E111               	bnz	l8461
 14798  003DFA  0575               	decf	___fldiv@new_exp& (0+255),w,b
 14799  003DFC  B0D8               	btfsc	status,0,c
 14800  003DFE  D00E               	goto	l8461
 14801  003E00                     u9150:
 14802                           
 14803                           ; BSR set to: 0
 14804  003E00  0E00               	movlw	0
 14805  003E02  6F76               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14806  003E04  0E00               	movlw	0
 14807  003E06  6F75               	movwf	___fldiv@new_exp& (0+255),b
 14808  003E08  0E00               	movlw	0
 14809  003E0A  6F68               	movwf	___fldiv@b& (0+255),b
 14810  003E0C  0E00               	movlw	0
 14811  003E0E  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 14812  003E10  0E00               	movlw	0
 14813  003E12  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 14814  003E14  0E00               	movlw	0
 14815  003E16  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 14816  003E18  0E00               	movlw	0
 14817  003E1A  6F74               	movwf	___fldiv@sign& (0+255),b
 14818  003E1C                     l8461:
 14819                           
 14820                           ; BSR set to: 0
 14821  003E1C  C075  F07B         	movff	___fldiv@new_exp,___fldiv@bexp
 14822                           
 14823                           ; BSR set to: 0
 14824  003E20  A17B               	btfss	___fldiv@bexp& (0+255),0,b
 14825  003E22  D002               	goto	l8467
 14826                           
 14827                           ; BSR set to: 0
 14828  003E24  8F6A               	bsf	(___fldiv@b+2)& (0+255),7,b
 14829  003E26  D001               	goto	l8469
 14830  003E28                     l8467:
 14831                           
 14832                           ; BSR set to: 0
 14833  003E28  9F6A               	bcf	(___fldiv@b+2)& (0+255),7,b
 14834  003E2A                     l8469:
 14835                           
 14836                           ; BSR set to: 0
 14837  003E2A  90D8               	bcf	status,0,c
 14838  003E2C  317B               	rrcf	___fldiv@bexp& (0+255),w,b
 14839  003E2E  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 14840  003E30  D70E               	goto	l8383
 14841  003E32                     __end_of___fldiv:
 14842                           	opt callstack 0
 14843                           
 14844 ;; *************** function ___fltol *****************
 14845 ;; Defined at:
 14846 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 14847 ;; Parameters:    Size  Location     Type
 14848 ;;  f1              4   82[BANK0 ] unsigned char 
 14849 ;; Auto vars:     Size  Location     Type
 14850 ;;  exp1            1   91[BANK0 ] unsigned char 
 14851 ;;  sign1           1   90[BANK0 ] unsigned char 
 14852 ;; Return value:  Size  Location     Type
 14853 ;;                  4   82[BANK0 ] long 
 14854 ;; Registers used:
 14855 ;;		wreg, status,2, status,0
 14856 ;; Tracked objects:
 14857 ;;		On entry : 0/0
 14858 ;;		On exit  : 0/0
 14859 ;;		Unchanged: 0/0
 14860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14861 ;;      Params:         0       4       0       0       0       0       0       0       0
 14862 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14863 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14864 ;;      Totals:         0      10       0       0       0       0       0       0       0
 14865 ;;Total ram usage:       10 bytes
 14866 ;; Hardware stack levels used:    1
 14867 ;; Hardware stack levels required when called:    7
 14868 ;; This function calls:
 14869 ;;		Nothing
 14870 ;; This function is called by:
 14871 ;;		_AD9833_SetFrequency
 14872 ;; This function uses a non-reentrant model
 14873 ;;
 14874                           
 14875                           	psect	text59
 14876  004D66                     __ptext59:
 14877                           	opt callstack 0
 14878  004D66                     ___fltol:
 14879                           	opt callstack 21
 14880                           
 14881                           ; BSR set to: 0
 14882                           ;incstack = 0
 14883  004D66  0100               	movlb	0	; () banked
 14884  004D68  35B4               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14885  004D6A  35B5               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14886  004D6C  6FBB               	movwf	___fltol@exp1& (0+255),b
 14887  004D6E  51BB               	movf	___fltol@exp1& (0+255),w,b
 14888  004D70  A4D8               	btfss	status,2,c
 14889  004D72  D009               	goto	l5827
 14890  004D74                     u5840:
 14891                           
 14892                           ; BSR set to: 0
 14893  004D74  0E00               	movlw	0
 14894  004D76  6FB2               	movwf	?___fltol& (0+255),b
 14895  004D78  0E00               	movlw	0
 14896  004D7A  6FB3               	movwf	(?___fltol+1)& (0+255),b
 14897  004D7C  0E00               	movlw	0
 14898  004D7E  6FB4               	movwf	(?___fltol+2)& (0+255),b
 14899  004D80  0E00               	movlw	0
 14900  004D82  6FB5               	movwf	(?___fltol+3)& (0+255),b
 14901  004D84  0012               	return	
 14902  004D86                     l5827:
 14903                           
 14904                           ; BSR set to: 0
 14905  004D86  C0B2  F0B6         	movff	___fltol@f1,??___fltol
 14906  004D8A  C0B3  F0B7         	movff	___fltol@f1+1,??___fltol+1
 14907  004D8E  C0B4  F0B8         	movff	___fltol@f1+2,??___fltol+2
 14908  004D92  C0B5  F0B9         	movff	___fltol@f1+3,??___fltol+3
 14909  004D96  0E20               	movlw	32
 14910  004D98  D005               	goto	u5850
 14911  004D9A                     u5855:
 14912  004D9A  90D8               	bcf	status,0,c
 14913  004D9C  33B9               	rrcf	(??___fltol+3)& (0+255),f,b
 14914  004D9E  33B8               	rrcf	(??___fltol+2)& (0+255),f,b
 14915  004DA0  33B7               	rrcf	(??___fltol+1)& (0+255),f,b
 14916  004DA2  33B6               	rrcf	??___fltol& (0+255),f,b
 14917  004DA4                     u5850:
 14918  004DA4  2EE8               	decfsz	wreg,f,c
 14919  004DA6  D7F9               	goto	u5855
 14920  004DA8  51B6               	movf	??___fltol& (0+255),w,b
 14921  004DAA  6FBA               	movwf	___fltol@sign1& (0+255),b
 14922                           
 14923                           ; BSR set to: 0
 14924  004DAC  8FB4               	bsf	(___fltol@f1+2)& (0+255),7,b
 14925                           
 14926                           ; BSR set to: 0
 14927  004DAE  0EFF               	movlw	255
 14928  004DB0  17B2               	andwf	___fltol@f1& (0+255),f,b
 14929  004DB2  0EFF               	movlw	255
 14930  004DB4  17B3               	andwf	(___fltol@f1+1)& (0+255),f,b
 14931  004DB6  0EFF               	movlw	255
 14932  004DB8  17B4               	andwf	(___fltol@f1+2)& (0+255),f,b
 14933  004DBA  0E00               	movlw	0
 14934  004DBC  17B5               	andwf	(___fltol@f1+3)& (0+255),f,b
 14935                           
 14936                           ; BSR set to: 0
 14937  004DBE  0E96               	movlw	150
 14938  004DC0  5FBB               	subwf	___fltol@exp1& (0+255),f,b
 14939                           
 14940                           ; BSR set to: 0
 14941  004DC2  AFBB               	btfss	___fltol@exp1& (0+255),7,b
 14942  004DC4  D00D               	goto	l5847
 14943                           
 14944                           ; BSR set to: 0
 14945  004DC6  51BB               	movf	___fltol@exp1& (0+255),w,b
 14946  004DC8  0A80               	xorlw	128
 14947  004DCA  0F97               	addlw	151
 14948  004DCC  A0D8               	btfss	status,0,c
 14949  004DCE  D7D2               	goto	u5840
 14950  004DD0                     l5843:
 14951                           
 14952                           ; BSR set to: 0
 14953  004DD0  90D8               	bcf	status,0,c
 14954  004DD2  33B5               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14955  004DD4  33B4               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14956  004DD6  33B3               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14957  004DD8  33B2               	rrcf	___fltol@f1& (0+255),f,b
 14958                           
 14959                           ; BSR set to: 0
 14960  004DDA  3FBB               	incfsz	___fltol@exp1& (0+255),f,b
 14961  004DDC  D7F9               	goto	l5843
 14962  004DDE  D00D               	goto	u5890
 14963  004DE0                     l5847:
 14964                           
 14965                           ; BSR set to: 0
 14966  004DE0  0E1F               	movlw	31
 14967  004DE2  65BB               	cpfsgt	___fltol@exp1& (0+255),b
 14968  004DE4  D007               	goto	l5855
 14969  004DE6  D7C6               	goto	u5840
 14970  004DE8                     l5853:
 14971                           
 14972                           ; BSR set to: 0
 14973  004DE8  90D8               	bcf	status,0,c
 14974  004DEA  37B2               	rlcf	___fltol@f1& (0+255),f,b
 14975  004DEC  37B3               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14976  004DEE  37B4               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14977  004DF0  37B5               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14978  004DF2  07BB               	decf	___fltol@exp1& (0+255),f,b
 14979  004DF4                     l5855:
 14980                           
 14981                           ; BSR set to: 0
 14982  004DF4  51BB               	movf	___fltol@exp1& (0+255),w,b
 14983  004DF6  A4D8               	btfss	status,2,c
 14984  004DF8  D7F7               	goto	l5853
 14985  004DFA                     u5890:
 14986                           
 14987                           ; BSR set to: 0
 14988  004DFA  51BA               	movf	___fltol@sign1& (0+255),w,b
 14989  004DFC  B4D8               	btfsc	status,2,c
 14990  004DFE  D008               	goto	l5861
 14991                           
 14992                           ; BSR set to: 0
 14993  004E00  1FB5               	comf	(___fltol@f1+3)& (0+255),f,b
 14994  004E02  1FB4               	comf	(___fltol@f1+2)& (0+255),f,b
 14995  004E04  1FB3               	comf	(___fltol@f1+1)& (0+255),f,b
 14996  004E06  6DB2               	negf	___fltol@f1& (0+255),b
 14997  004E08  0E00               	movlw	0
 14998  004E0A  23B3               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14999  004E0C  23B4               	addwfc	(___fltol@f1+2)& (0+255),f,b
 15000  004E0E  23B5               	addwfc	(___fltol@f1+3)& (0+255),f,b
 15001  004E10                     l5861:
 15002                           
 15003                           ; BSR set to: 0
 15004  004E10  C0B2  F0B2         	movff	___fltol@f1,?___fltol
 15005  004E14  C0B3  F0B3         	movff	___fltol@f1+1,?___fltol+1
 15006  004E18  C0B4  F0B4         	movff	___fltol@f1+2,?___fltol+2
 15007  004E1C  C0B5  F0B5         	movff	___fltol@f1+3,?___fltol+3
 15008                           
 15009                           ; BSR set to: 0
 15010  004E20  0012               	return		;funcret
 15011  004E22                     __end_of___fltol:
 15012                           	opt callstack 0
 15013                           
 15014 ;; *************** function _SPI1_WriteWord *****************
 15015 ;; Defined at:
 15016 ;;		line 84 in file "mcc_generated_files/spi1.c"
 15017 ;; Parameters:    Size  Location     Type
 15018 ;;  word            2   11[COMRAM] unsigned short 
 15019 ;; Auto vars:     Size  Location     Type
 15020 ;;  byteh           1   14[COMRAM] unsigned char 
 15021 ;;  bytel           1   13[COMRAM] unsigned char 
 15022 ;; Return value:  Size  Location     Type
 15023 ;;                  1    wreg      void 
 15024 ;; Registers used:
 15025 ;;		wreg, status,2
 15026 ;; Tracked objects:
 15027 ;;		On entry : 0/0
 15028 ;;		On exit  : 0/0
 15029 ;;		Unchanged: 0/0
 15030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15031 ;;      Params:         2       0       0       0       0       0       0       0       0
 15032 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15033 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15034 ;;      Totals:         4       0       0       0       0       0       0       0       0
 15035 ;;Total ram usage:        4 bytes
 15036 ;; Hardware stack levels used:    1
 15037 ;; Hardware stack levels required when called:    7
 15038 ;; This function calls:
 15039 ;;		Nothing
 15040 ;; This function is called by:
 15041 ;;		_AD9833_Init
 15042 ;;		_AD9833_SetFrequency
 15043 ;; This function uses a non-reentrant model
 15044 ;;
 15045                           
 15046                           	psect	text60
 15047  005918                     __ptext60:
 15048                           	opt callstack 0
 15049  005918                     _SPI1_WriteWord:
 15050                           	opt callstack 21
 15051                           
 15052                           ;mcc_generated_files/spi1.c: 84: void SPI1_WriteWord(uint16_t word);mcc_generated_files/
      +                          spi1.c: 85: {;mcc_generated_files/spi1.c: 87:     uint8_t bytel = word;
 15053                           
 15054                           ; BSR set to: 0
 15055                           ;incstack = 0
 15056  005918  C00C  F00E         	movff	SPI1_WriteWord@word,SPI1_WriteWord@bytel
 15057                           
 15058                           ;mcc_generated_files/spi1.c: 88:     uint8_t byteh = word >> 8;
 15059  00591C  500D               	movf	SPI1_WriteWord@word+1,w,c
 15060  00591E  6E0F               	movwf	SPI1_WriteWord@byteh,c
 15061                           
 15062                           ;mcc_generated_files/spi1.c: 91:     PORTCbits.RC0 = 0;
 15063  005920  908F               	bcf	3983,0,c	;volatile
 15064                           
 15065                           ;mcc_generated_files/spi1.c: 93:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 15066  005922  0E35               	movlw	53
 15067  005924                     u10147:
 15068  005924  2EE8               	decfsz	wreg,f,c
 15069  005926  D7FE               	bra	u10147
 15070  005928  F000               	nop	
 15071                           
 15072                           ;mcc_generated_files/spi1.c: 95:     SSP1BUF = byteh;
 15073  00592A  C00F  FF92         	movff	SPI1_WriteWord@byteh,3986	;volatile
 15074                           
 15075                           ;mcc_generated_files/spi1.c: 97:     _delay((unsigned long)((33)*(64000000/4000000.0)));
 15076  00592E  0EB0               	movlw	176
 15077  005930                     u10157:
 15078  005930  2EE8               	decfsz	wreg,f,c
 15079  005932  D7FE               	bra	u10157
 15080                           
 15081                           ;mcc_generated_files/spi1.c: 99:     SSP1BUF = bytel;
 15082  005934  C00E  FF92         	movff	SPI1_WriteWord@bytel,3986	;volatile
 15083                           
 15084                           ;mcc_generated_files/spi1.c: 101:     _delay((unsigned long)((33)*(64000000/4000000.0)))
      +                          ;
 15085  005938  0EB0               	movlw	176
 15086  00593A                     u10167:
 15087  00593A  2EE8               	decfsz	wreg,f,c
 15088  00593C  D7FE               	bra	u10167
 15089                           
 15090                           ;mcc_generated_files/spi1.c: 103:     PORTCbits.RC0 = 1;
 15091  00593E  808F               	bsf	3983,0,c	;volatile
 15092  005940  0012               	return		;funcret
 15093  005942                     __end_of_SPI1_WriteWord:
 15094                           	opt callstack 0
 15095                           
 15096 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 15097 ;; Defined at:
 15098 ;;		line 108 in file "mcc_generated_files/interrupt_manager.c"
 15099 ;; Parameters:    Size  Location     Type
 15100 ;;		None
 15101 ;; Auto vars:     Size  Location     Type
 15102 ;;		None
 15103 ;; Return value:  Size  Location     Type
 15104 ;;                  1    wreg      void 
 15105 ;; Registers used:
 15106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15107 ;; Tracked objects:
 15108 ;;		On entry : 0/0
 15109 ;;		On exit  : 0/0
 15110 ;;		Unchanged: 0/0
 15111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15112 ;;      Params:         0       0       0       0       0       0       0       0       0
 15113 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15114 ;;      Temps:          7       0       0       0       0       0       0       0       0
 15115 ;;      Totals:         7       0       0       0       0       0       0       0       0
 15116 ;;Total ram usage:        7 bytes
 15117 ;; Hardware stack levels used:    1
 15118 ;; Hardware stack levels required when called:    6
 15119 ;; This function calls:
 15120 ;;		Absolute function
 15121 ;;		_EUSART_Receive_ISR
 15122 ;;		_EUSART_Transmit_ISR
 15123 ;;		_INT0_ISR
 15124 ;;		_TMR1_ISR
 15125 ;;		_TMR3_ISR
 15126 ;; This function is called by:
 15127 ;;		Interrupt level 1
 15128 ;; This function uses a non-reentrant model
 15129 ;;
 15130                           
 15131                           	psect	intcodelo
 15132  000018                     __pintcodelo:
 15133                           	opt callstack 0
 15134  000018                     _INTERRUPT_InterruptManagerLow:
 15135                           	opt callstack 15
 15136                           
 15137                           ;incstack = 0
 15138  000018  8054               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 15139  00001A  CFD8 F005          	movff	status,??_INTERRUPT_InterruptManagerLow
 15140  00001E  CFE8 F006          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 15141  000022  CFE0 F007          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 15142  000026  CFFA F008          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 15143  00002A  CFFB F009          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 15144  00002E  CFD9 F00A          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+5
 15145  000032  CFDA F00B          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+6
 15146                           
 15147                           ;mcc_generated_files/interrupt_manager.c: 111:     if(PIE4bits.TMR3IE == 1 && PIR4bits.T
      +                          MR3IF == 1)
 15148  000036  010E               	movlb	14	; () banked
 15149  000038  B5C6               	btfsc	198,2,b	;volatile
 15150                           
 15151                           ; BSR set to: 14
 15152  00003A  A5CE               	btfss	206,2,b	;volatile
 15153  00003C  D003               	goto	i1l207
 15154                           
 15155                           ; BSR set to: 14
 15156                           ;mcc_generated_files/interrupt_manager.c: 112:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 114:         TMR3_ISR();
 15157  00003E  EC06  F02C         	call	_TMR3_ISR	;wreg free
 15158                           
 15159                           ;mcc_generated_files/interrupt_manager.c: 115:     }
 15160  000042  D027               	goto	i1l212
 15161  000044                     i1l207:
 15162                           
 15163                           ; BSR set to: 14
 15164  000044  B1C6               	btfsc	198,0,b	;volatile
 15165                           
 15166                           ; BSR set to: 14
 15167  000046  A1CE               	btfss	206,0,b	;volatile
 15168  000048  D003               	goto	i1l209
 15169                           
 15170                           ; BSR set to: 14
 15171                           ;mcc_generated_files/interrupt_manager.c: 117:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 119:         TMR1_ISR();
 15172  00004A  EC1B  F02D         	call	_TMR1_ISR	;wreg free
 15173                           
 15174                           ;mcc_generated_files/interrupt_manager.c: 120:     }
 15175  00004E  D021               	goto	i1l212
 15176  000050                     i1l209:
 15177                           
 15178                           ; BSR set to: 14
 15179  000050  B9C5               	btfsc	197,4,b	;volatile
 15180                           
 15181                           ; BSR set to: 14
 15182  000052  A9CD               	btfss	205,4,b	;volatile
 15183  000054  D009               	goto	i1l211
 15184                           
 15185                           ; BSR set to: 14
 15186                           ;mcc_generated_files/interrupt_manager.c: 122:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 124:         EUSART_TxDefaultInterruptHandler();
 15187  000056  D801               	call	i1u658_28
 15188  000058  D01C               	goto	i1l212
 15189  00005A                     i1u658_28:
 15190  00005A  0005               	push	
 15191  00005C  0100               	movlb	0	; () banked
 15192  00005E  6EFA               	movwf	pclath,c
 15193  000060  51F3               	movf	_EUSART_TxDefaultInterruptHandler& (0+255),w,b
 15194  000062  6EFD               	movwf	tosl,c
 15195  000064  51F4               	movf	(_EUSART_TxDefaultInterruptHandler+1)& (0+255),w,b
 15196  000066  D00B               	goto	L14
 15197  000068                     i1l211:
 15198                           
 15199                           ; BSR set to: 14
 15200  000068  BBC5               	btfsc	197,5,b	;volatile
 15201                           
 15202                           ; BSR set to: 14
 15203  00006A  ABCD               	btfss	205,5,b	;volatile
 15204  00006C  D00D               	goto	i1l213
 15205                           
 15206                           ; BSR set to: 14
 15207                           ;mcc_generated_files/interrupt_manager.c: 127:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 129:         EUSART_RxDefaultInterruptHandler();
 15208  00006E  D801               	call	i1u661_28
 15209  000070  D010               	goto	i1l212
 15210  000072                     i1u661_28:
 15211  000072  0005               	push	
 15212  000074  0101               	movlb	1	; () banked
 15213  000076  6EFA               	movwf	pclath,c
 15214  000078  51FE               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
 15215  00007A  6EFD               	movwf	tosl,c
 15216  00007C  51FF               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
 15217  00007E                     L14:
 15218  00007E  6EFE               	movwf	tosh,c
 15219  000080  50F8               	movf	tblptru,w,c
 15220  000082  6EFF               	movwf	tosu,c
 15221  000084  50FA               	movf	pclath,w,c
 15222  000086  0012               	return		;indir
 15223  000088                     i1l213:
 15224                           
 15225                           ; BSR set to: 14
 15226  000088  B1C2               	btfsc	194,0,b	;volatile
 15227                           
 15228                           ; BSR set to: 14
 15229  00008A  A1CA               	btfss	202,0,b	;volatile
 15230  00008C  D002               	goto	i1l212
 15231                           
 15232                           ; BSR set to: 14
 15233                           ;mcc_generated_files/interrupt_manager.c: 132:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 134:         INT0_ISR();
 15234  00008E  ECA6  F02B         	call	_INT0_ISR	;wreg free
 15235  000092                     i1l212:
 15236                           
 15237                           ; BSR set to: 14
 15238  000092  C00B  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr2h
 15239  000096  C00A  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr2l
 15240  00009A  C009  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 15241  00009E  C008  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 15242  0000A2  C007  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 15243  0000A6  C006  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 15244  0000AA  C005  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 15245  0000AE  9054               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 15246  0000B0  0010               	retfie	
 15247  0000B2                     __end_of_INTERRUPT_InterruptManagerLow:
 15248                           	opt callstack 0
 15249                           
 15250 ;; *************** function _TMR3_ISR *****************
 15251 ;; Defined at:
 15252 ;;		line 106 in file "mcc_generated_files/tmr3.c"
 15253 ;; Parameters:    Size  Location     Type
 15254 ;;		None
 15255 ;; Auto vars:     Size  Location     Type
 15256 ;;		None
 15257 ;; Return value:  Size  Location     Type
 15258 ;;                  1    wreg      void 
 15259 ;; Registers used:
 15260 ;;		wreg, status,2, status,0, cstack
 15261 ;; Tracked objects:
 15262 ;;		On entry : 0/0
 15263 ;;		On exit  : 0/0
 15264 ;;		Unchanged: 0/0
 15265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15266 ;;      Params:         0       0       0       0       0       0       0       0       0
 15267 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15268 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15269 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15270 ;;Total ram usage:        0 bytes
 15271 ;; Hardware stack levels used:    1
 15272 ;; Hardware stack levels required when called:    5
 15273 ;; This function calls:
 15274 ;;		_TMR0_StartTimer
 15275 ;;		_TMR3_StartTimer
 15276 ;;		_TMR3_StopTimer
 15277 ;;		_TMR3_WriteTimer
 15278 ;; This function is called by:
 15279 ;;		_INTERRUPT_InterruptManagerLow
 15280 ;; This function uses a non-reentrant model
 15281 ;;
 15282                           
 15283                           	psect	text62
 15284  00580C                     __ptext62:
 15285                           	opt callstack 0
 15286  00580C                     _TMR3_ISR:
 15287                           	opt callstack 15
 15288                           
 15289                           ;mcc_generated_files/tmr3.c: 109:     TMR3_StopTimer();
 15290                           
 15291                           ;incstack = 0
 15292  00580C  EC8E  F02D         	call	_TMR3_StopTimer	;wreg free
 15293                           
 15294                           ;mcc_generated_files/tmr3.c: 111:     PIR4bits.TMR3IF = 0;
 15295  005810  010E               	movlb	14	; () banked
 15296  005812  95CE               	bcf	206,2,b	;volatile
 15297                           
 15298                           ; BSR set to: 14
 15299                           ;mcc_generated_files/tmr3.c: 113:     TMR3_WriteTimer(timer3ReloadVal);
 15300  005814  C0EF  F003         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 15301  005818  C0F0  F004         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 15302  00581C  ECE5  F02C         	call	_TMR3_WriteTimer	;wreg free
 15303                           
 15304                           ;mcc_generated_files/tmr3.c: 115:     temp_break_duration--;
 15305  005820  0642               	decf	_temp_break_duration,f,c	;volatile
 15306  005822  A0D8               	btfss	status,0,c
 15307  005824  0643               	decf	_temp_break_duration+1,f,c	;volatile
 15308                           
 15309                           ;mcc_generated_files/tmr3.c: 117:     if(temp_break_duration > 0){
 15310  005826  5042               	movf	_temp_break_duration,w,c	;volatile
 15311  005828  1043               	iorwf	_temp_break_duration+1,w,c	;volatile
 15312  00582A  B4D8               	btfsc	status,2,c
 15313  00582C  D003               	goto	i1l6205
 15314                           
 15315                           ;mcc_generated_files/tmr3.c: 119:         TMR3_StartTimer();
 15316  00582E  EC2F  F02D         	call	_TMR3_StartTimer	;wreg free
 15317                           
 15318                           ;mcc_generated_files/tmr3.c: 120:     }else{
 15319  005832  0012               	return	
 15320  005834                     i1l6205:
 15321                           
 15322                           ;mcc_generated_files/tmr3.c: 122:         TMR0_StartTimer();
 15323  005834  EC3F  F02D         	call	_TMR0_StartTimer	;wreg free
 15324  005838  0012               	return		;funcret
 15325  00583A                     __end_of_TMR3_ISR:
 15326                           	opt callstack 0
 15327                           
 15328 ;; *************** function _TMR3_StopTimer *****************
 15329 ;; Defined at:
 15330 ;;		line 78 in file "mcc_generated_files/tmr3.c"
 15331 ;; Parameters:    Size  Location     Type
 15332 ;;		None
 15333 ;; Auto vars:     Size  Location     Type
 15334 ;;		None
 15335 ;; Return value:  Size  Location     Type
 15336 ;;                  1    wreg      void 
 15337 ;; Registers used:
 15338 ;;		None
 15339 ;; Tracked objects:
 15340 ;;		On entry : 0/0
 15341 ;;		On exit  : 0/0
 15342 ;;		Unchanged: 0/0
 15343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15344 ;;      Params:         0       0       0       0       0       0       0       0       0
 15345 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15346 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15347 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15348 ;;Total ram usage:        0 bytes
 15349 ;; Hardware stack levels used:    1
 15350 ;; Hardware stack levels required when called:    3
 15351 ;; This function calls:
 15352 ;;		Nothing
 15353 ;; This function is called by:
 15354 ;;		_TMR3_ISR
 15355 ;; This function uses a non-reentrant model
 15356 ;;
 15357                           
 15358                           	psect	text63
 15359  005B1C                     __ptext63:
 15360                           	opt callstack 0
 15361  005B1C                     _TMR3_StopTimer:
 15362                           	opt callstack 16
 15363                           
 15364                           ;mcc_generated_files/tmr3.c: 81:     T3CONbits.TMR3ON = 0;
 15365                           
 15366                           ;incstack = 0
 15367  005B1C  90C9               	bcf	4041,0,c	;volatile
 15368  005B1E  0012               	return		;funcret
 15369  005B20                     __end_of_TMR3_StopTimer:
 15370                           	opt callstack 0
 15371                           
 15372 ;; *************** function _TMR3_StartTimer *****************
 15373 ;; Defined at:
 15374 ;;		line 71 in file "mcc_generated_files/tmr3.c"
 15375 ;; Parameters:    Size  Location     Type
 15376 ;;		None
 15377 ;; Auto vars:     Size  Location     Type
 15378 ;;		None
 15379 ;; Return value:  Size  Location     Type
 15380 ;;                  1    wreg      void 
 15381 ;; Registers used:
 15382 ;;		wreg, status,2, cstack
 15383 ;; Tracked objects:
 15384 ;;		On entry : 0/0
 15385 ;;		On exit  : 0/0
 15386 ;;		Unchanged: 0/0
 15387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15388 ;;      Params:         0       0       0       0       0       0       0       0       0
 15389 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15390 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15391 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15392 ;;Total ram usage:        0 bytes
 15393 ;; Hardware stack levels used:    1
 15394 ;; Hardware stack levels required when called:    4
 15395 ;; This function calls:
 15396 ;;		_TMR3_WriteTimer
 15397 ;; This function is called by:
 15398 ;;		_TMR3_ISR
 15399 ;; This function uses a non-reentrant model
 15400 ;;
 15401                           
 15402                           	psect	text64
 15403  005A5E                     __ptext64:
 15404                           	opt callstack 0
 15405  005A5E                     _TMR3_StartTimer:
 15406                           	opt callstack 15
 15407                           
 15408                           ;mcc_generated_files/tmr3.c: 73:     TMR3_WriteTimer(timer3ReloadVal);
 15409                           
 15410                           ;incstack = 0
 15411  005A5E  C0EF  F003         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 15412  005A62  C0F0  F004         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 15413  005A66  ECE5  F02C         	call	_TMR3_WriteTimer	;wreg free
 15414                           
 15415                           ;mcc_generated_files/tmr3.c: 75:     T3CONbits.TMR3ON = 1;
 15416  005A6A  80C9               	bsf	4041,0,c	;volatile
 15417  005A6C  0012               	return		;funcret
 15418  005A6E                     __end_of_TMR3_StartTimer:
 15419                           	opt callstack 0
 15420                           
 15421 ;; *************** function _TMR3_WriteTimer *****************
 15422 ;; Defined at:
 15423 ;;		line 84 in file "mcc_generated_files/tmr3.c"
 15424 ;; Parameters:    Size  Location     Type
 15425 ;;  timerVal        2    2[COMRAM] unsigned short 
 15426 ;; Auto vars:     Size  Location     Type
 15427 ;;		None
 15428 ;; Return value:  Size  Location     Type
 15429 ;;                  1    wreg      void 
 15430 ;; Registers used:
 15431 ;;		wreg, status,2
 15432 ;; Tracked objects:
 15433 ;;		On entry : 0/0
 15434 ;;		On exit  : 0/0
 15435 ;;		Unchanged: 0/0
 15436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15437 ;;      Params:         2       0       0       0       0       0       0       0       0
 15438 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15439 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15440 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15441 ;;Total ram usage:        2 bytes
 15442 ;; Hardware stack levels used:    1
 15443 ;; Hardware stack levels required when called:    3
 15444 ;; This function calls:
 15445 ;;		Nothing
 15446 ;; This function is called by:
 15447 ;;		_TMR3_StartTimer
 15448 ;;		_TMR3_ISR
 15449 ;; This function uses a non-reentrant model
 15450 ;;
 15451                           
 15452                           	psect	text65
 15453  0059CA                     __ptext65:
 15454                           	opt callstack 0
 15455  0059CA                     _TMR3_WriteTimer:
 15456                           	opt callstack 16
 15457                           
 15458                           ;mcc_generated_files/tmr3.c: 84: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_f
      +                          iles/tmr3.c: 85: {;mcc_generated_files/tmr3.c: 86:     if (T3CONbits.nT3SYNC == 1)
 15459                           
 15460                           ;incstack = 0
 15461  0059CA  A4C9               	btfss	4041,2,c	;volatile
 15462  0059CC  D007               	goto	i1l5345
 15463                           
 15464                           ;mcc_generated_files/tmr3.c: 87:     {;mcc_generated_files/tmr3.c: 89:         T3CONbits
      +                          .TMR3ON = 0;
 15465  0059CE  90C9               	bcf	4041,0,c	;volatile
 15466                           
 15467                           ;mcc_generated_files/tmr3.c: 92:         TMR3H = (timerVal >> 8);
 15468  0059D0  5004               	movf	TMR3_WriteTimer@timerVal+1,w,c
 15469  0059D2  6EC8               	movwf	4040,c	;volatile
 15470                           
 15471                           ;mcc_generated_files/tmr3.c: 93:         TMR3L = timerVal;
 15472  0059D4  C003  FFC7         	movff	TMR3_WriteTimer@timerVal,4039	;volatile
 15473                           
 15474                           ;mcc_generated_files/tmr3.c: 96:         T3CONbits.TMR3ON =1;
 15475  0059D8  80C9               	bsf	4041,0,c	;volatile
 15476                           
 15477                           ;mcc_generated_files/tmr3.c: 97:     }
 15478  0059DA  0012               	return	
 15479  0059DC                     i1l5345:
 15480                           
 15481                           ;mcc_generated_files/tmr3.c: 99:     {;mcc_generated_files/tmr3.c: 101:         TMR3H = 
      +                          (timerVal >> 8);
 15482  0059DC  5004               	movf	TMR3_WriteTimer@timerVal+1,w,c
 15483  0059DE  6EC8               	movwf	4040,c	;volatile
 15484                           
 15485                           ;mcc_generated_files/tmr3.c: 102:         TMR3L = timerVal;
 15486  0059E0  C003  FFC7         	movff	TMR3_WriteTimer@timerVal,4039	;volatile
 15487  0059E4  0012               	return		;funcret
 15488  0059E6                     __end_of_TMR3_WriteTimer:
 15489                           	opt callstack 0
 15490                           
 15491 ;; *************** function _TMR1_ISR *****************
 15492 ;; Defined at:
 15493 ;;		line 107 in file "mcc_generated_files/tmr1.c"
 15494 ;; Parameters:    Size  Location     Type
 15495 ;;		None
 15496 ;; Auto vars:     Size  Location     Type
 15497 ;;		None
 15498 ;; Return value:  Size  Location     Type
 15499 ;;                  1    wreg      void 
 15500 ;; Registers used:
 15501 ;;		wreg, status,2, cstack
 15502 ;; Tracked objects:
 15503 ;;		On entry : 0/0
 15504 ;;		On exit  : 0/0
 15505 ;;		Unchanged: 0/0
 15506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15507 ;;      Params:         0       0       0       0       0       0       0       0       0
 15508 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15509 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15510 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15511 ;;Total ram usage:        0 bytes
 15512 ;; Hardware stack levels used:    1
 15513 ;; Hardware stack levels required when called:    4
 15514 ;; This function calls:
 15515 ;;		_TMR1_WriteTimer
 15516 ;; This function is called by:
 15517 ;;		_INTERRUPT_InterruptManagerLow
 15518 ;; This function uses a non-reentrant model
 15519 ;;
 15520                           
 15521                           	psect	text66
 15522  005A36                     __ptext66:
 15523                           	opt callstack 0
 15524  005A36                     _TMR1_ISR:
 15525                           	opt callstack 16
 15526                           
 15527                           ;mcc_generated_files/tmr1.c: 111:     PIR4bits.TMR1IF = 0;
 15528                           
 15529                           ;incstack = 0
 15530  005A36  010E               	movlb	14	; () banked
 15531  005A38  91CE               	bcf	206,0,b	;volatile
 15532                           
 15533                           ; BSR set to: 14
 15534                           ;mcc_generated_files/tmr1.c: 112:     TMR1_WriteTimer(timer1ReloadVal);
 15535  005A3A  C0F1  F003         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 15536  005A3E  C0F2  F004         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 15537  005A42  ECF3  F02C         	call	_TMR1_WriteTimer	;wreg free
 15538                           
 15539                           ;mcc_generated_files/tmr1.c: 115:     sec = 1;
 15540  005A46  0E01               	movlw	1
 15541  005A48  6E47               	movwf	_sec,c
 15542  005A4A  0012               	return		;funcret
 15543  005A4C                     __end_of_TMR1_ISR:
 15544                           	opt callstack 0
 15545                           
 15546 ;; *************** function _INT0_ISR *****************
 15547 ;; Defined at:
 15548 ;;		line 37 in file "mcc_generated_files/ext_int.c"
 15549 ;; Parameters:    Size  Location     Type
 15550 ;;		None
 15551 ;; Auto vars:     Size  Location     Type
 15552 ;;		None
 15553 ;; Return value:  Size  Location     Type
 15554 ;;                  1    wreg      void 
 15555 ;; Registers used:
 15556 ;;		wreg, status,2, status,0, cstack
 15557 ;; Tracked objects:
 15558 ;;		On entry : 0/0
 15559 ;;		On exit  : 0/0
 15560 ;;		Unchanged: 0/0
 15561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15562 ;;      Params:         0       0       0       0       0       0       0       0       0
 15563 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15564 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15565 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15566 ;;Total ram usage:        0 bytes
 15567 ;; Hardware stack levels used:    1
 15568 ;; Hardware stack levels required when called:    5
 15569 ;; This function calls:
 15570 ;;		_SPI1_Close
 15571 ;;		_TMR0_Reload
 15572 ;;		_TMR0_StartTimer
 15573 ;; This function is called by:
 15574 ;;		_INTERRUPT_InterruptManagerLow
 15575 ;; This function uses a non-reentrant model
 15576 ;;
 15577                           
 15578                           	psect	text67
 15579  00574C                     __ptext67:
 15580                           	opt callstack 0
 15581  00574C                     _INT0_ISR:
 15582                           	opt callstack 15
 15583                           
 15584                           ;mcc_generated_files/ext_int.c: 40:     (PIR0bits.INT0IF = 0);
 15585                           
 15586                           ;incstack = 0
 15587  00574C  010E               	movlb	14	; () banked
 15588  00574E  91CA               	bcf	202,0,b	;volatile
 15589                           
 15590                           ;mcc_generated_files/ext_int.c: 42:     (PIE0bits.INT0IE = 0);
 15591  005750  91C2               	bcf	194,0,b	;volatile
 15592                           
 15593                           ;mcc_generated_files/ext_int.c: 44:     PIE3bits.RCIE = 0;
 15594  005752  9BC5               	bcf	197,5,b	;volatile
 15595                           
 15596                           ;mcc_generated_files/ext_int.c: 45:     PIE3bits.TXIE = 0;
 15597  005754  99C5               	bcf	197,4,b	;volatile
 15598                           
 15599                           ; BSR set to: 14
 15600                           ;mcc_generated_files/ext_int.c: 47:     SPI1_Close();
 15601  005756  EC90  F02D         	call	_SPI1_Close	;wreg free
 15602                           
 15603                           ;mcc_generated_files/ext_int.c: 49:     state = 2;
 15604  00575A  0E00               	movlw	0
 15605  00575C  0100               	movlb	0	; () banked
 15606  00575E  6FFB               	movwf	(_state+1)& (0+255),b	;volatile
 15607  005760  0E02               	movlw	2
 15608  005762  6FFA               	movwf	_state& (0+255),b	;volatile
 15609                           
 15610                           ; BSR set to: 0
 15611                           ;mcc_generated_files/ext_int.c: 51:     temp_packages = packages;
 15612  005764  C050  F052         	movff	_packages,_temp_packages	;volatile
 15613  005768  C051  F053         	movff	_packages+1,_temp_packages+1	;volatile
 15614                           
 15615                           ; BSR set to: 0
 15616                           ;mcc_generated_files/ext_int.c: 52:     temp_break_duration = break_duration;
 15617  00576C  C040  F042         	movff	_break_duration,_temp_break_duration	;volatile
 15618  005770  C041  F043         	movff	_break_duration+1,_temp_break_duration+1	;volatile
 15619                           
 15620                           ; BSR set to: 0
 15621                           ;mcc_generated_files/ext_int.c: 54:     TMR0_Reload();
 15622  005774  EC1D  F02C         	call	_TMR0_Reload	;wreg free
 15623                           
 15624                           ;mcc_generated_files/ext_int.c: 56:     TMR0_StartTimer();
 15625  005778  EC3F  F02D         	call	_TMR0_StartTimer	;wreg free
 15626  00577C  0012               	return		;funcret
 15627  00577E                     __end_of_INT0_ISR:
 15628                           	opt callstack 0
 15629                           
 15630 ;; *************** function _TMR0_StartTimer *****************
 15631 ;; Defined at:
 15632 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 15633 ;; Parameters:    Size  Location     Type
 15634 ;;		None
 15635 ;; Auto vars:     Size  Location     Type
 15636 ;;		None
 15637 ;; Return value:  Size  Location     Type
 15638 ;;                  1    wreg      void 
 15639 ;; Registers used:
 15640 ;;		None
 15641 ;; Tracked objects:
 15642 ;;		On entry : 0/0
 15643 ;;		On exit  : 0/0
 15644 ;;		Unchanged: 0/0
 15645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15646 ;;      Params:         0       0       0       0       0       0       0       0       0
 15647 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15648 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15649 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15650 ;;Total ram usage:        0 bytes
 15651 ;; Hardware stack levels used:    1
 15652 ;; Hardware stack levels required when called:    3
 15653 ;; This function calls:
 15654 ;;		Nothing
 15655 ;; This function is called by:
 15656 ;;		_INT0_ISR
 15657 ;;		_TMR3_ISR
 15658 ;; This function uses a non-reentrant model
 15659 ;;
 15660                           
 15661                           	psect	text68
 15662  005A7E                     __ptext68:
 15663                           	opt callstack 0
 15664  005A7E                     _TMR0_StartTimer:
 15665                           	opt callstack 16
 15666                           
 15667                           ;mcc_generated_files/tmr0.c: 70:     while(PORTAbits.RA7 == 0);
 15668                           
 15669                           ;incstack = 0
 15670  005A7E  AE8D               	btfss	3981,7,c	;volatile
 15671  005A80  D7FE               	goto	_TMR0_StartTimer
 15672  005A82                     i1u597_20:
 15673  005A82  BE8D               	btfsc	3981,7,c	;volatile
 15674  005A84  D7FE               	goto	i1u597_20
 15675                           
 15676                           ;mcc_generated_files/tmr0.c: 74:     T0CON0bits.T0EN = 1;
 15677  005A86  8ED5               	bsf	4053,7,c	;volatile
 15678                           
 15679                           ;mcc_generated_files/tmr0.c: 76:     PORTBbits.RB3 = 1;
 15680  005A88  868E               	bsf	3982,3,c	;volatile
 15681  005A8A  0012               	return		;funcret
 15682  005A8C                     __end_of_TMR0_StartTimer:
 15683                           	opt callstack 0
 15684                           
 15685 ;; *************** function _TMR0_Reload *****************
 15686 ;; Defined at:
 15687 ;;		line 93 in file "mcc_generated_files/tmr0.c"
 15688 ;; Parameters:    Size  Location     Type
 15689 ;;		None
 15690 ;; Auto vars:     Size  Location     Type
 15691 ;;		None
 15692 ;; Return value:  Size  Location     Type
 15693 ;;                  1    wreg      void 
 15694 ;; Registers used:
 15695 ;;		wreg, status,2, status,0, cstack
 15696 ;; Tracked objects:
 15697 ;;		On entry : 0/0
 15698 ;;		On exit  : 0/0
 15699 ;;		Unchanged: 0/0
 15700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15701 ;;      Params:         0       0       0       0       0       0       0       0       0
 15702 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15703 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15704 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15705 ;;Total ram usage:        0 bytes
 15706 ;; Hardware stack levels used:    1
 15707 ;; Hardware stack levels required when called:    4
 15708 ;; This function calls:
 15709 ;;		_TMR0_WriteTimer
 15710 ;; This function is called by:
 15711 ;;		_INT0_ISR
 15712 ;; This function uses a non-reentrant model
 15713 ;;
 15714                           
 15715                           	psect	text69
 15716  00583A                     __ptext69:
 15717                           	opt callstack 0
 15718  00583A                     _TMR0_Reload:
 15719                           	opt callstack 15
 15720                           
 15721                           ;mcc_generated_files/tmr0.c: 96:     temp_cycle = cycle - 1;
 15722                           
 15723                           ;incstack = 0
 15724  00583A  0EFF               	movlw	255
 15725  00583C  2448               	addwf	_cycle,w,c	;volatile
 15726  00583E  6E4C               	movwf	_temp_cycle,c	;volatile
 15727  005840  0EFF               	movlw	255
 15728  005842  2049               	addwfc	_cycle+1,w,c	;volatile
 15729  005844  6E4D               	movwf	_temp_cycle+1,c	;volatile
 15730  005846  0EFF               	movlw	255
 15731  005848  204A               	addwfc	_cycle+2,w,c	;volatile
 15732  00584A  6E4E               	movwf	_temp_cycle+2,c	;volatile
 15733  00584C  0EFF               	movlw	255
 15734  00584E  204B               	addwfc	_cycle+3,w,c	;volatile
 15735  005850  6E4F               	movwf	_temp_cycle+3,c	;volatile
 15736                           
 15737                           ;mcc_generated_files/tmr0.c: 97:     TMR0_WriteTimer((0xFFFF - temp_cycle)+1);
 15738  005852  504C               	movf	_temp_cycle,w,c	;volatile
 15739  005854  0800               	sublw	0
 15740  005856  6E03               	movwf	TMR0_WriteTimer@timerVal,c
 15741  005858  504D               	movf	_temp_cycle+1,w,c	;volatile
 15742  00585A  A0D8               	btfss	status,0,c
 15743  00585C  2AE8               	incf	wreg,f,c
 15744  00585E  0800               	sublw	0
 15745  005860  6E04               	movwf	TMR0_WriteTimer@timerVal+1,c
 15746  005862  EC71  F02D         	call	_TMR0_WriteTimer	;wreg free
 15747  005866  0012               	return		;funcret
 15748  005868                     __end_of_TMR0_Reload:
 15749                           	opt callstack 0
 15750                           
 15751 ;; *************** function _TMR0_WriteTimer *****************
 15752 ;; Defined at:
 15753 ;;		line 86 in file "mcc_generated_files/tmr0.c"
 15754 ;; Parameters:    Size  Location     Type
 15755 ;;  timerVal        2    2[COMRAM] unsigned short 
 15756 ;; Auto vars:     Size  Location     Type
 15757 ;;		None
 15758 ;; Return value:  Size  Location     Type
 15759 ;;                  1    wreg      void 
 15760 ;; Registers used:
 15761 ;;		wreg, status,2
 15762 ;; Tracked objects:
 15763 ;;		On entry : 0/0
 15764 ;;		On exit  : 0/0
 15765 ;;		Unchanged: 0/0
 15766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15767 ;;      Params:         2       0       0       0       0       0       0       0       0
 15768 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15769 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15770 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15771 ;;Total ram usage:        2 bytes
 15772 ;; Hardware stack levels used:    1
 15773 ;; Hardware stack levels required when called:    3
 15774 ;; This function calls:
 15775 ;;		Nothing
 15776 ;; This function is called by:
 15777 ;;		_TMR0_Reload
 15778 ;; This function uses a non-reentrant model
 15779 ;;
 15780                           
 15781                           	psect	text70
 15782  005AE2                     __ptext70:
 15783                           	opt callstack 0
 15784  005AE2                     _TMR0_WriteTimer:
 15785                           	opt callstack 15
 15786                           
 15787                           ;mcc_generated_files/tmr0.c: 86: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_f
      +                          iles/tmr0.c: 87: {;mcc_generated_files/tmr0.c: 89:     TMR0H = timerVal >> 8;
 15788                           
 15789                           ;incstack = 0
 15790  005AE2  5004               	movf	TMR0_WriteTimer@timerVal+1,w,c
 15791  005AE4  6ED4               	movwf	4052,c	;volatile
 15792                           
 15793                           ;mcc_generated_files/tmr0.c: 90:     TMR0L = (uint8_t) timerVal;
 15794  005AE6  C003  FFD3         	movff	TMR0_WriteTimer@timerVal,4051	;volatile
 15795  005AEA  0012               	return		;funcret
 15796  005AEC                     __end_of_TMR0_WriteTimer:
 15797                           	opt callstack 0
 15798                           
 15799 ;; *************** function _SPI1_Close *****************
 15800 ;; Defined at:
 15801 ;;		line 63 in file "mcc_generated_files/spi1.c"
 15802 ;; Parameters:    Size  Location     Type
 15803 ;;		None
 15804 ;; Auto vars:     Size  Location     Type
 15805 ;;		None
 15806 ;; Return value:  Size  Location     Type
 15807 ;;                  1    wreg      void 
 15808 ;; Registers used:
 15809 ;;		None
 15810 ;; Tracked objects:
 15811 ;;		On entry : 0/0
 15812 ;;		On exit  : 0/0
 15813 ;;		Unchanged: 0/0
 15814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15815 ;;      Params:         0       0       0       0       0       0       0       0       0
 15816 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15817 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15818 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15819 ;;Total ram usage:        0 bytes
 15820 ;; Hardware stack levels used:    1
 15821 ;; Hardware stack levels required when called:    3
 15822 ;; This function calls:
 15823 ;;		Nothing
 15824 ;; This function is called by:
 15825 ;;		_INT0_ISR
 15826 ;; This function uses a non-reentrant model
 15827 ;;
 15828                           
 15829                           	psect	text71
 15830  005B20                     __ptext71:
 15831                           	opt callstack 0
 15832  005B20                     _SPI1_Close:
 15833                           	opt callstack 16
 15834                           
 15835                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1bits.SSPEN = 0;
 15836                           
 15837                           ;incstack = 0
 15838  005B20  9A96               	bcf	3990,5,c	;volatile
 15839  005B22  0012               	return		;funcret
 15840  005B24                     __end_of_SPI1_Close:
 15841                           	opt callstack 0
 15842                           
 15843 ;; *************** function _EUSART_Transmit_ISR *****************
 15844 ;; Defined at:
 15845 ;;		line 156 in file "mcc_generated_files/eusart.c"
 15846 ;; Parameters:    Size  Location     Type
 15847 ;;		None
 15848 ;; Auto vars:     Size  Location     Type
 15849 ;;		None
 15850 ;; Return value:  Size  Location     Type
 15851 ;;                  1    wreg      void 
 15852 ;; Registers used:
 15853 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15854 ;; Tracked objects:
 15855 ;;		On entry : 0/0
 15856 ;;		On exit  : 0/0
 15857 ;;		Unchanged: 0/0
 15858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15859 ;;      Params:         0       0       0       0       0       0       0       0       0
 15860 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15861 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15862 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15863 ;;Total ram usage:        0 bytes
 15864 ;; Hardware stack levels used:    1
 15865 ;; Hardware stack levels required when called:    3
 15866 ;; This function calls:
 15867 ;;		Nothing
 15868 ;; This function is called by:
 15869 ;;		_EUSART_Initialize
 15870 ;;		_INTERRUPT_InterruptManagerLow
 15871 ;; This function uses a non-reentrant model
 15872 ;;
 15873                           
 15874                           	psect	text72
 15875  005868                     __ptext72:
 15876                           	opt callstack 0
 15877  005868                     _EUSART_Transmit_ISR:
 15878                           	opt callstack 17
 15879                           
 15880                           ;mcc_generated_files/eusart.c: 159:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 15881                           
 15882                           ;incstack = 0
 15883  005868  0E08               	movlw	8
 15884  00586A  0100               	movlb	0	; () banked
 15885  00586C  61F5               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 15886  00586E  D010               	goto	i1l101
 15887                           
 15888                           ; BSR set to: 0
 15889                           ;mcc_generated_files/eusart.c: 160:     {;mcc_generated_files/eusart.c: 162:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
 15890  005870  0EBC               	movlw	low _eusartTxBuffer
 15891  005872  2445               	addwf	_eusartTxTail,w,c	;volatile
 15892  005874  6ED9               	movwf	fsr2l,c
 15893  005876  6ADA               	clrf	fsr2h,c
 15894  005878  0E01               	movlw	high _eusartTxBuffer
 15895  00587A  22DA               	addwfc	fsr2h,f,c
 15896  00587C  50DF               	movf	indf2,w,c
 15897  00587E  6E9A               	movwf	3994,c	;volatile
 15898                           
 15899                           ; BSR set to: 0
 15900  005880  2A45               	incf	_eusartTxTail,f,c	;volatile
 15901                           
 15902                           ; BSR set to: 0
 15903                           ;mcc_generated_files/eusart.c: 165:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 15904  005882  0E07               	movlw	7
 15905  005884  6445               	cpfsgt	_eusartTxTail,c	;volatile
 15906  005886  D002               	goto	i1l6157
 15907                           
 15908                           ; BSR set to: 0
 15909                           ;mcc_generated_files/eusart.c: 166:         {;mcc_generated_files/eusart.c: 167:        
      +                               eusartTxTail = 0;
 15910  005888  0E00               	movlw	0
 15911  00588A  6E45               	movwf	_eusartTxTail,c	;volatile
 15912  00588C                     i1l6157:
 15913                           
 15914                           ; BSR set to: 0
 15915                           ;mcc_generated_files/eusart.c: 169:         eusartTxBufferRemaining++;
 15916  00588C  2BF5               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 15917                           
 15918                           ;mcc_generated_files/eusart.c: 170:     }
 15919  00588E  0012               	return	
 15920  005890                     i1l101:
 15921                           
 15922                           ; BSR set to: 0
 15923                           ;mcc_generated_files/eusart.c: 172:     {;mcc_generated_files/eusart.c: 174:         PIE
      +                          3bits.TXIE = 0;
 15924  005890  010E               	movlb	14	; () banked
 15925  005892  99C5               	bcf	197,4,b	;volatile
 15926  005894  0012               	return		;funcret
 15927  005896                     __end_of_EUSART_Transmit_ISR:
 15928                           	opt callstack 0
 15929                           
 15930 ;; *************** function _EUSART_Receive_ISR *****************
 15931 ;; Defined at:
 15932 ;;		line 178 in file "mcc_generated_files/eusart.c"
 15933 ;; Parameters:    Size  Location     Type
 15934 ;;		None
 15935 ;; Auto vars:     Size  Location     Type
 15936 ;;		None
 15937 ;; Return value:  Size  Location     Type
 15938 ;;                  1    wreg      void 
 15939 ;; Registers used:
 15940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15941 ;; Tracked objects:
 15942 ;;		On entry : 0/0
 15943 ;;		On exit  : 0/0
 15944 ;;		Unchanged: 0/0
 15945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15946 ;;      Params:         0       0       0       0       0       0       0       0       0
 15947 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15948 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15949 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15950 ;;Total ram usage:        0 bytes
 15951 ;; Hardware stack levels used:    1
 15952 ;; Hardware stack levels required when called:    5
 15953 ;; This function calls:
 15954 ;;		Absolute function
 15955 ;;		_EUSART_DefaultErrorHandler
 15956 ;;		_EUSART_DefaultFramingErrorHandler
 15957 ;;		_EUSART_DefaultOverrunErrorHandler
 15958 ;;		_EUSART_RxDataHandler
 15959 ;;		_TMR1_StartTimer
 15960 ;;		_TMR1_WriteTimer
 15961 ;;		i1_TMR1_StopTimer
 15962 ;; This function is called by:
 15963 ;;		_EUSART_Initialize
 15964 ;;		_INTERRUPT_InterruptManagerLow
 15965 ;; This function uses a non-reentrant model
 15966 ;;
 15967                           
 15968                           	psect	text73
 15969  004E22                     __ptext73:
 15970                           	opt callstack 0
 15971  004E22                     _EUSART_Receive_ISR:
 15972                           	opt callstack 15
 15973                           
 15974                           ;mcc_generated_files/eusart.c: 181:     TMR1_StopTimer();
 15975                           
 15976                           ;incstack = 0
 15977  004E22  EC92  F02D         	call	i1_TMR1_StopTimer	;wreg free
 15978                           
 15979                           ;mcc_generated_files/eusart.c: 182:     TMR1_WriteTimer(0x00);
 15980  004E26  0E00               	movlw	0
 15981  004E28  6E04               	movwf	TMR1_WriteTimer@timerVal+1,c
 15982  004E2A  0E00               	movlw	0
 15983  004E2C  6E03               	movwf	TMR1_WriteTimer@timerVal,c
 15984  004E2E  ECF3  F02C         	call	_TMR1_WriteTimer	;wreg free
 15985                           
 15986                           ;mcc_generated_files/eusart.c: 185:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 15987  004E32  0ED5               	movlw	low _eusartRxStatusBuffer
 15988  004E34  2444               	addwf	_eusartRxHead,w,c	;volatile
 15989  004E36  6ED9               	movwf	fsr2l,c
 15990  004E38  6ADA               	clrf	fsr2h,c
 15991  004E3A  0E00               	movlw	high _eusartRxStatusBuffer
 15992  004E3C  22DA               	addwfc	fsr2h,f,c
 15993  004E3E  0E00               	movlw	0
 15994  004E40  6EDF               	movwf	indf2,c
 15995                           
 15996                           ;mcc_generated_files/eusart.c: 188:     if(RC1STAbits.FERR){
 15997  004E42  A49D               	btfss	3997,2,c	;volatile
 15998  004E44  D015               	goto	i1u618_29
 15999                           
 16000                           ;mcc_generated_files/eusart.c: 189:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 16001  004E46  0ED5               	movlw	low _eusartRxStatusBuffer
 16002  004E48  2444               	addwf	_eusartRxHead,w,c	;volatile
 16003  004E4A  6ED9               	movwf	fsr2l,c
 16004  004E4C  6ADA               	clrf	fsr2h,c
 16005  004E4E  0E00               	movlw	high _eusartRxStatusBuffer
 16006  004E50  22DA               	addwfc	fsr2h,f,c
 16007  004E52  0100               	movlb	0	; () banked
 16008  004E54  82DF               	bsf	indf2,1,c
 16009                           
 16010                           ; BSR set to: 0
 16011                           ;mcc_generated_files/eusart.c: 190:         EUSART_FramingErrorHandler();
 16012  004E56  D801               	call	i1u618_28
 16013  004E58  D00B               	goto	i1u618_29
 16014  004E5A                     i1u618_28:
 16015  004E5A  0005               	push	
 16016  004E5C  0101               	movlb	1	; () banked
 16017  004E5E  6EFA               	movwf	pclath,c
 16018  004E60  51FC               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
 16019  004E62  6EFD               	movwf	tosl,c
 16020  004E64  51FD               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
 16021  004E66  6EFE               	movwf	tosh,c
 16022  004E68  50F8               	movf	tblptru,w,c
 16023  004E6A  6EFF               	movwf	tosu,c
 16024  004E6C  50FA               	movf	pclath,w,c
 16025  004E6E  0012               	return		;indir
 16026  004E70                     i1u618_29:
 16027                           
 16028                           ;mcc_generated_files/eusart.c: 194:     if(RC1STAbits.OERR){
 16029  004E70  A29D               	btfss	3997,1,c	;volatile
 16030  004E72  D015               	goto	i1u620_29
 16031                           
 16032                           ;mcc_generated_files/eusart.c: 195:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 16033  004E74  0ED5               	movlw	low _eusartRxStatusBuffer
 16034  004E76  2444               	addwf	_eusartRxHead,w,c	;volatile
 16035  004E78  6ED9               	movwf	fsr2l,c
 16036  004E7A  6ADA               	clrf	fsr2h,c
 16037  004E7C  0E00               	movlw	high _eusartRxStatusBuffer
 16038  004E7E  22DA               	addwfc	fsr2h,f,c
 16039  004E80  0100               	movlb	0	; () banked
 16040  004E82  84DF               	bsf	indf2,2,c
 16041                           
 16042                           ; BSR set to: 0
 16043                           ;mcc_generated_files/eusart.c: 196:         EUSART_OverrunErrorHandler();
 16044  004E84  D801               	call	i1u620_28
 16045  004E86  D00B               	goto	i1u620_29
 16046  004E88                     i1u620_28:
 16047  004E88  0005               	push	
 16048  004E8A  0101               	movlb	1	; () banked
 16049  004E8C  6EFA               	movwf	pclath,c
 16050  004E8E  51FA               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
 16051  004E90  6EFD               	movwf	tosl,c
 16052  004E92  51FB               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
 16053  004E94  6EFE               	movwf	tosh,c
 16054  004E96  50F8               	movf	tblptru,w,c
 16055  004E98  6EFF               	movwf	tosu,c
 16056  004E9A  50FA               	movf	pclath,w,c
 16057  004E9C  0012               	return		;indir
 16058  004E9E                     i1u620_29:
 16059                           
 16060                           ;mcc_generated_files/eusart.c: 200:     if(eusartRxStatusBuffer[eusartRxHead].status){
 16061  004E9E  0ED5               	movlw	low _eusartRxStatusBuffer
 16062  004EA0  2444               	addwf	_eusartRxHead,w,c	;volatile
 16063  004EA2  6ED9               	movwf	fsr2l,c
 16064  004EA4  6ADA               	clrf	fsr2h,c
 16065  004EA6  0E00               	movlw	high _eusartRxStatusBuffer
 16066  004EA8  22DA               	addwfc	fsr2h,f,c
 16067  004EAA  50DF               	movf	indf2,w,c
 16068  004EAC  B4D8               	btfsc	status,2,c
 16069  004EAE  D00D               	goto	i1l6181
 16070                           
 16071                           ;mcc_generated_files/eusart.c: 201:         EUSART_ErrorHandler();
 16072  004EB0  D801               	call	i1u622_28
 16073  004EB2  0012               	return	
 16074  004EB4                     i1u622_28:
 16075  004EB4  0005               	push	
 16076  004EB6  0101               	movlb	1	; () banked
 16077  004EB8  6EFA               	movwf	pclath,c
 16078  004EBA  51F8               	movf	_EUSART_ErrorHandler& (0+255),w,b
 16079  004EBC  6EFD               	movwf	tosl,c
 16080  004EBE  51F9               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
 16081  004EC0  6EFE               	movwf	tosh,c
 16082  004EC2  50F8               	movf	tblptru,w,c
 16083  004EC4  6EFF               	movwf	tosu,c
 16084  004EC6  50FA               	movf	pclath,w,c
 16085  004EC8  0012               	return		;indir
 16086  004ECA                     i1l6181:
 16087                           
 16088                           ;mcc_generated_files/eusart.c: 205:         EUSART_RxDataHandler();
 16089  004ECA  EC73  F02B         	call	_EUSART_RxDataHandler	;wreg free
 16090                           
 16091                           ;mcc_generated_files/eusart.c: 208:         TMR1_StartTimer();
 16092  004ECE  EC94  F02D         	call	_TMR1_StartTimer	;wreg free
 16093  004ED2  0012               	return		;funcret
 16094  004ED4                     __end_of_EUSART_Receive_ISR:
 16095                           	opt callstack 0
 16096                           
 16097 ;; *************** function i1_TMR1_StopTimer *****************
 16098 ;; Defined at:
 16099 ;;		line 79 in file "mcc_generated_files/tmr1.c"
 16100 ;; Parameters:    Size  Location     Type
 16101 ;;		None
 16102 ;; Auto vars:     Size  Location     Type
 16103 ;;		None
 16104 ;; Return value:  Size  Location     Type
 16105 ;;                  1    wreg      void 
 16106 ;; Registers used:
 16107 ;;		None
 16108 ;; Tracked objects:
 16109 ;;		On entry : 0/0
 16110 ;;		On exit  : 0/0
 16111 ;;		Unchanged: 0/0
 16112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16113 ;;      Params:         0       0       0       0       0       0       0       0       0
 16114 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16115 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16116 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16117 ;;Total ram usage:        0 bytes
 16118 ;; Hardware stack levels used:    1
 16119 ;; Hardware stack levels required when called:    3
 16120 ;; This function calls:
 16121 ;;		Nothing
 16122 ;; This function is called by:
 16123 ;;		_EUSART_Receive_ISR
 16124 ;; This function uses a non-reentrant model
 16125 ;;
 16126                           
 16127                           	psect	text74
 16128  005B24                     __ptext74:
 16129                           	opt callstack 0
 16130  005B24                     i1_TMR1_StopTimer:
 16131                           	opt callstack 16
 16132                           
 16133                           ;mcc_generated_files/tmr1.c: 82:     T1CONbits.TMR1ON = 0;
 16134                           
 16135                           ;incstack = 0
 16136  005B24  90CF               	bcf	4047,0,c	;volatile
 16137  005B26  0012               	return		;funcret
 16138  005B28                     __end_ofi1_TMR1_StopTimer:
 16139                           	opt callstack 0
 16140                           
 16141 ;; *************** function _TMR1_WriteTimer *****************
 16142 ;; Defined at:
 16143 ;;		line 85 in file "mcc_generated_files/tmr1.c"
 16144 ;; Parameters:    Size  Location     Type
 16145 ;;  timerVal        2    2[COMRAM] unsigned short 
 16146 ;; Auto vars:     Size  Location     Type
 16147 ;;		None
 16148 ;; Return value:  Size  Location     Type
 16149 ;;                  1    wreg      void 
 16150 ;; Registers used:
 16151 ;;		wreg, status,2
 16152 ;; Tracked objects:
 16153 ;;		On entry : 0/0
 16154 ;;		On exit  : 0/0
 16155 ;;		Unchanged: 0/0
 16156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16157 ;;      Params:         2       0       0       0       0       0       0       0       0
 16158 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16159 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16160 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16161 ;;Total ram usage:        2 bytes
 16162 ;; Hardware stack levels used:    1
 16163 ;; Hardware stack levels required when called:    3
 16164 ;; This function calls:
 16165 ;;		Nothing
 16166 ;; This function is called by:
 16167 ;;		_EUSART_Receive_ISR
 16168 ;;		_TMR1_ISR
 16169 ;; This function uses a non-reentrant model
 16170 ;;
 16171                           
 16172                           	psect	text75
 16173  0059E6                     __ptext75:
 16174                           	opt callstack 0
 16175  0059E6                     _TMR1_WriteTimer:
 16176                           	opt callstack 16
 16177                           
 16178                           ;mcc_generated_files/tmr1.c: 85: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_f
      +                          iles/tmr1.c: 86: {;mcc_generated_files/tmr1.c: 87:     if (T1CONbits.nT1SYNC == 1)
 16179                           
 16180                           ;incstack = 0
 16181  0059E6  A4CF               	btfss	4047,2,c	;volatile
 16182  0059E8  D007               	goto	i1l5925
 16183                           
 16184                           ;mcc_generated_files/tmr1.c: 88:     {;mcc_generated_files/tmr1.c: 90:         T1CONbits
      +                          .TMR1ON = 0;
 16185  0059EA  90CF               	bcf	4047,0,c	;volatile
 16186                           
 16187                           ;mcc_generated_files/tmr1.c: 93:         TMR1H = (timerVal >> 8);
 16188  0059EC  5004               	movf	TMR1_WriteTimer@timerVal+1,w,c
 16189  0059EE  6ECE               	movwf	4046,c	;volatile
 16190                           
 16191                           ;mcc_generated_files/tmr1.c: 94:         TMR1L = timerVal;
 16192  0059F0  C003  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 16193                           
 16194                           ;mcc_generated_files/tmr1.c: 97:         T1CONbits.TMR1ON =1;
 16195  0059F4  80CF               	bsf	4047,0,c	;volatile
 16196                           
 16197                           ;mcc_generated_files/tmr1.c: 98:     }
 16198  0059F6  0012               	return	
 16199  0059F8                     i1l5925:
 16200                           
 16201                           ;mcc_generated_files/tmr1.c: 100:     {;mcc_generated_files/tmr1.c: 102:         TMR1H =
      +                           (timerVal >> 8);
 16202  0059F8  5004               	movf	TMR1_WriteTimer@timerVal+1,w,c
 16203  0059FA  6ECE               	movwf	4046,c	;volatile
 16204                           
 16205                           ;mcc_generated_files/tmr1.c: 103:         TMR1L = timerVal;
 16206  0059FC  C003  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 16207  005A00  0012               	return		;funcret
 16208  005A02                     __end_of_TMR1_WriteTimer:
 16209                           	opt callstack 0
 16210                           
 16211 ;; *************** function _TMR1_StartTimer *****************
 16212 ;; Defined at:
 16213 ;;		line 73 in file "mcc_generated_files/tmr1.c"
 16214 ;; Parameters:    Size  Location     Type
 16215 ;;		None
 16216 ;; Auto vars:     Size  Location     Type
 16217 ;;		None
 16218 ;; Return value:  Size  Location     Type
 16219 ;;                  1    wreg      void 
 16220 ;; Registers used:
 16221 ;;		None
 16222 ;; Tracked objects:
 16223 ;;		On entry : 0/0
 16224 ;;		On exit  : 0/0
 16225 ;;		Unchanged: 0/0
 16226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16227 ;;      Params:         0       0       0       0       0       0       0       0       0
 16228 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16229 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16230 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16231 ;;Total ram usage:        0 bytes
 16232 ;; Hardware stack levels used:    1
 16233 ;; Hardware stack levels required when called:    3
 16234 ;; This function calls:
 16235 ;;		Nothing
 16236 ;; This function is called by:
 16237 ;;		_EUSART_Receive_ISR
 16238 ;; This function uses a non-reentrant model
 16239 ;;
 16240                           
 16241                           	psect	text76
 16242  005B28                     __ptext76:
 16243                           	opt callstack 0
 16244  005B28                     _TMR1_StartTimer:
 16245                           	opt callstack 16
 16246                           
 16247                           ;mcc_generated_files/tmr1.c: 76:     T1CONbits.TMR1ON = 1;
 16248                           
 16249                           ;incstack = 0
 16250  005B28  80CF               	bsf	4047,0,c	;volatile
 16251  005B2A  0012               	return		;funcret
 16252  005B2C                     __end_of_TMR1_StartTimer:
 16253                           	opt callstack 0
 16254                           
 16255 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 16256 ;; Defined at:
 16257 ;;		line 229 in file "mcc_generated_files/eusart.c"
 16258 ;; Parameters:    Size  Location     Type
 16259 ;;		None
 16260 ;; Auto vars:     Size  Location     Type
 16261 ;;		None
 16262 ;; Return value:  Size  Location     Type
 16263 ;;                  1    wreg      void 
 16264 ;; Registers used:
 16265 ;;		None
 16266 ;; Tracked objects:
 16267 ;;		On entry : 0/0
 16268 ;;		On exit  : 0/0
 16269 ;;		Unchanged: 0/0
 16270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16271 ;;      Params:         0       0       0       0       0       0       0       0       0
 16272 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16273 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16274 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16275 ;;Total ram usage:        0 bytes
 16276 ;; Hardware stack levels used:    1
 16277 ;; Hardware stack levels required when called:    3
 16278 ;; This function calls:
 16279 ;;		Nothing
 16280 ;; This function is called by:
 16281 ;;		_EUSART_Initialize
 16282 ;;		_EUSART_Receive_ISR
 16283 ;; This function uses a non-reentrant model
 16284 ;;
 16285                           
 16286                           	psect	text77
 16287  005B0C                     __ptext77:
 16288                           	opt callstack 0
 16289  005B0C                     _EUSART_DefaultOverrunErrorHandler:
 16290                           	opt callstack 16
 16291                           
 16292                           ;mcc_generated_files/eusart.c: 232:     RC1STAbits.CREN = 0;
 16293                           
 16294                           ;incstack = 0
 16295  005B0C  989D               	bcf	3997,4,c	;volatile
 16296                           
 16297                           ;mcc_generated_files/eusart.c: 233:     RC1STAbits.CREN = 1;
 16298  005B0E  889D               	bsf	3997,4,c	;volatile
 16299  005B10  0012               	return		;funcret
 16300  005B12                     __end_of_EUSART_DefaultOverrunErrorHandler:
 16301                           	opt callstack 0
 16302                           
 16303 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 16304 ;; Defined at:
 16305 ;;		line 227 in file "mcc_generated_files/eusart.c"
 16306 ;; Parameters:    Size  Location     Type
 16307 ;;		None
 16308 ;; Auto vars:     Size  Location     Type
 16309 ;;		None
 16310 ;; Return value:  Size  Location     Type
 16311 ;;                  1    wreg      void 
 16312 ;; Registers used:
 16313 ;;		None
 16314 ;; Tracked objects:
 16315 ;;		On entry : 0/0
 16316 ;;		On exit  : 0/0
 16317 ;;		Unchanged: 0/0
 16318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16319 ;;      Params:         0       0       0       0       0       0       0       0       0
 16320 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16321 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16322 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16323 ;;Total ram usage:        0 bytes
 16324 ;; Hardware stack levels used:    1
 16325 ;; Hardware stack levels required when called:    3
 16326 ;; This function calls:
 16327 ;;		Nothing
 16328 ;; This function is called by:
 16329 ;;		_EUSART_Initialize
 16330 ;;		_EUSART_Receive_ISR
 16331 ;; This function uses a non-reentrant model
 16332 ;;
 16333                           
 16334                           	psect	text78
 16335  005B32                     __ptext78:
 16336                           	opt callstack 0
 16337  005B32                     _EUSART_DefaultFramingErrorHandler:
 16338                           	opt callstack 16
 16339                           
 16340                           ;incstack = 0
 16341  005B32  0012               	return		;funcret
 16342  005B34                     __end_of_EUSART_DefaultFramingErrorHandler:
 16343                           	opt callstack 0
 16344                           
 16345 ;; *************** function _EUSART_DefaultErrorHandler *****************
 16346 ;; Defined at:
 16347 ;;		line 237 in file "mcc_generated_files/eusart.c"
 16348 ;; Parameters:    Size  Location     Type
 16349 ;;		None
 16350 ;; Auto vars:     Size  Location     Type
 16351 ;;		None
 16352 ;; Return value:  Size  Location     Type
 16353 ;;                  1    wreg      void 
 16354 ;; Registers used:
 16355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16356 ;; Tracked objects:
 16357 ;;		On entry : 0/0
 16358 ;;		On exit  : 0/0
 16359 ;;		Unchanged: 0/0
 16360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16361 ;;      Params:         0       0       0       0       0       0       0       0       0
 16362 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16363 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16364 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16365 ;;Total ram usage:        0 bytes
 16366 ;; Hardware stack levels used:    1
 16367 ;; Hardware stack levels required when called:    4
 16368 ;; This function calls:
 16369 ;;		_EUSART_RxDataHandler
 16370 ;; This function is called by:
 16371 ;;		_EUSART_Initialize
 16372 ;;		_EUSART_Receive_ISR
 16373 ;; This function uses a non-reentrant model
 16374 ;;
 16375                           
 16376                           	psect	text79
 16377  005B12                     __ptext79:
 16378                           	opt callstack 0
 16379  005B12                     _EUSART_DefaultErrorHandler:
 16380                           	opt callstack 15
 16381                           
 16382                           ;mcc_generated_files/eusart.c: 238:     EUSART_RxDataHandler();
 16383                           
 16384                           ;incstack = 0
 16385  005B12  EC73  F02B         	call	_EUSART_RxDataHandler	;wreg free
 16386  005B16  0012               	return		;funcret
 16387  005B18                     __end_of_EUSART_DefaultErrorHandler:
 16388                           	opt callstack 0
 16389                           
 16390 ;; *************** function _EUSART_RxDataHandler *****************
 16391 ;; Defined at:
 16392 ;;		line 214 in file "mcc_generated_files/eusart.c"
 16393 ;; Parameters:    Size  Location     Type
 16394 ;;		None
 16395 ;; Auto vars:     Size  Location     Type
 16396 ;;		None
 16397 ;; Return value:  Size  Location     Type
 16398 ;;                  1    wreg      void 
 16399 ;; Registers used:
 16400 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16401 ;; Tracked objects:
 16402 ;;		On entry : 0/0
 16403 ;;		On exit  : 0/0
 16404 ;;		Unchanged: 0/0
 16405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16406 ;;      Params:         0       0       0       0       0       0       0       0       0
 16407 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16408 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16409 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16410 ;;Total ram usage:        0 bytes
 16411 ;; Hardware stack levels used:    1
 16412 ;; Hardware stack levels required when called:    3
 16413 ;; This function calls:
 16414 ;;		Nothing
 16415 ;; This function is called by:
 16416 ;;		_EUSART_Receive_ISR
 16417 ;;		_EUSART_DefaultErrorHandler
 16418 ;; This function uses a non-reentrant model
 16419 ;;
 16420                           
 16421                           	psect	text80
 16422  0056E6                     __ptext80:
 16423                           	opt callstack 0
 16424  0056E6                     _EUSART_RxDataHandler:
 16425                           	opt callstack 16
 16426                           
 16427                           ;mcc_generated_files/eusart.c: 216:     if(RC1REG == 0x0D)
 16428                           
 16429                           ;incstack = 0
 16430  0056E6  0E0D               	movlw	13
 16431  0056E8  1899               	xorwf	3993,w,c	;volatile
 16432  0056EA  A4D8               	btfss	status,2,c
 16433  0056EC  D003               	goto	i1l5307
 16434                           
 16435                           ;mcc_generated_files/eusart.c: 217:     {;mcc_generated_files/eusart.c: 218:      sec = 
      +                          1;
 16436  0056EE  0E01               	movlw	1
 16437  0056F0  6E47               	movwf	_sec,c
 16438                           
 16439                           ;mcc_generated_files/eusart.c: 219:     }else
 16440  0056F2  0012               	return	
 16441  0056F4                     i1l5307:
 16442                           
 16443                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:     rx_data
      +                          [rx_data_end++] = RC1REG;
 16444  0056F4  0EE4               	movlw	low _rx_data
 16445  0056F6  0100               	movlb	0	; () banked
 16446  0056F8  25EE               	addwf	_rx_data_end& (0+255),w,b	;volatile
 16447  0056FA  6ED9               	movwf	fsr2l,c
 16448  0056FC  6ADA               	clrf	fsr2h,c
 16449  0056FE  0E01               	movlw	high _rx_data
 16450  005700  22DA               	addwfc	fsr2h,f,c
 16451  005702  CF99 FFDF          	movff	3993,indf2	;volatile
 16452                           
 16453                           ; BSR set to: 0
 16454  005706  2BEE               	incf	_rx_data_end& (0+255),f,b	;volatile
 16455                           
 16456                           ; BSR set to: 0
 16457                           ;mcc_generated_files/eusart.c: 222:     rx_data[rx_data_end] = '\0';
 16458  005708  0EE4               	movlw	low _rx_data
 16459  00570A  25EE               	addwf	_rx_data_end& (0+255),w,b	;volatile
 16460  00570C  6ED9               	movwf	fsr2l,c
 16461  00570E  6ADA               	clrf	fsr2h,c
 16462  005710  0E01               	movlw	high _rx_data
 16463  005712  22DA               	addwfc	fsr2h,f,c
 16464  005714  0E00               	movlw	0
 16465  005716  6EDF               	movwf	indf2,c
 16466  005718  0012               	return		;funcret
 16467  00571A                     __end_of_EUSART_RxDataHandler:
 16468                           	opt callstack 0
 16469                           
 16470 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 16471 ;; Defined at:
 16472 ;;		line 61 in file "mcc_generated_files/interrupt_manager.c"
 16473 ;; Parameters:    Size  Location     Type
 16474 ;;		None
 16475 ;; Auto vars:     Size  Location     Type
 16476 ;;		None
 16477 ;; Return value:  Size  Location     Type
 16478 ;;                  1    wreg      void 
 16479 ;; Registers used:
 16480 ;;		wreg, status,2, status,0, cstack
 16481 ;; Tracked objects:
 16482 ;;		On entry : 0/0
 16483 ;;		On exit  : 0/0
 16484 ;;		Unchanged: 0/0
 16485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16486 ;;      Params:         0       0       0       0       0       0       0       0       0
 16487 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16488 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16489 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16490 ;;Total ram usage:        0 bytes
 16491 ;; Hardware stack levels used:    1
 16492 ;; Hardware stack levels required when called:    2
 16493 ;; This function calls:
 16494 ;;		_TMR0_StopTimer
 16495 ;;		i2_SPI1_Start
 16496 ;;		i2_TMR0_Reload
 16497 ;;		i2_TMR0_StartTimer
 16498 ;;		i2_TMR3_StartTimer
 16499 ;; This function is called by:
 16500 ;;		Interrupt level 2
 16501 ;; This function uses a non-reentrant model
 16502 ;;
 16503                           
 16504                           	psect	intcode
 16505  000008                     __pintcode:
 16506                           	opt callstack 0
 16507  000008                     _INTERRUPT_InterruptManagerHigh:
 16508                           	opt callstack 15
 16509                           
 16510                           ;incstack = 0
 16511  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16512  00000A  EF18  F02A         	goto	int_func
 16513                           
 16514                           	psect	intcode_body
 16515  005430                     __pintcode_body:
 16516                           	opt callstack 15
 16517  005430                     int_func:
 16518                           	opt callstack 15
 16519                           
 16520                           ;mcc_generated_files/interrupt_manager.c: 68:     PORTBbits.RB3 = 0;
 16521  005430  968E               	bcf	3982,3,c	;volatile
 16522                           
 16523                           ;mcc_generated_files/interrupt_manager.c: 70:     TMR0_StopTimer();
 16524  005432  EC96  F02D         	call	_TMR0_StopTimer	;wreg free
 16525                           
 16526                           ;mcc_generated_files/interrupt_manager.c: 72:     temp_packages--;
 16527  005436  0652               	decf	_temp_packages,f,c	;volatile
 16528  005438  A0D8               	btfss	status,0,c
 16529  00543A  0653               	decf	_temp_packages+1,f,c	;volatile
 16530                           
 16531                           ;mcc_generated_files/interrupt_manager.c: 74:     PIR0bits.TMR0IF = 0;
 16532  00543C  010E               	movlb	14	; () banked
 16533  00543E  9BCA               	bcf	202,5,b	;volatile
 16534                           
 16535                           ; BSR set to: 14
 16536                           ;mcc_generated_files/interrupt_manager.c: 76:     TMR0_Reload();
 16537  005440  EC4B  F02C         	call	i2_TMR0_Reload	;wreg free
 16538                           
 16539                           ;mcc_generated_files/interrupt_manager.c: 79:     if(temp_packages < 1)
 16540  005444  5052               	movf	_temp_packages,w,c	;volatile
 16541  005446  1053               	iorwf	_temp_packages+1,w,c	;volatile
 16542  005448  A4D8               	btfss	status,2,c
 16543  00544A  D00C               	goto	i2l198
 16544                           
 16545                           ;mcc_generated_files/interrupt_manager.c: 80:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 82:         (PIE0bits.INT0IE = 1);
 16546  00544C  010E               	movlb	14	; () banked
 16547  00544E  81C2               	bsf	194,0,b	;volatile
 16548                           
 16549                           ;mcc_generated_files/interrupt_manager.c: 84:         PIE3bits.RCIE = 1;
 16550  005450  8BC5               	bsf	197,5,b	;volatile
 16551                           
 16552                           ;mcc_generated_files/interrupt_manager.c: 85:         PIE3bits.TXIE = 1;
 16553  005452  89C5               	bsf	197,4,b	;volatile
 16554                           
 16555                           ; BSR set to: 14
 16556                           ;mcc_generated_files/interrupt_manager.c: 87:         SPI1_Start();
 16557  005454  EC7F  F02D         	call	i2_SPI1_Start	;wreg free
 16558                           
 16559                           ;mcc_generated_files/interrupt_manager.c: 89:         state = 1;
 16560  005458  0E00               	movlw	0
 16561  00545A  0100               	movlb	0	; () banked
 16562  00545C  6FFB               	movwf	(_state+1)& (0+255),b	;volatile
 16563  00545E  0E01               	movlw	1
 16564  005460  6FFA               	movwf	_state& (0+255),b	;volatile
 16565                           
 16566                           ;mcc_generated_files/interrupt_manager.c: 90:     }else
 16567  005462  D00D               	goto	i2l202
 16568  005464                     i2l198:
 16569                           
 16570                           ;mcc_generated_files/interrupt_manager.c: 91:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 93:         temp_break_duration = break_duration;
 16571  005464  C040  F042         	movff	_break_duration,_temp_break_duration	;volatile
 16572  005468  C041  F043         	movff	_break_duration+1,_temp_break_duration+1	;volatile
 16573                           
 16574                           ;mcc_generated_files/interrupt_manager.c: 95:         if(temp_break_duration > 0)
 16575  00546C  5042               	movf	_temp_break_duration,w,c	;volatile
 16576  00546E  1043               	iorwf	_temp_break_duration+1,w,c	;volatile
 16577  005470  B4D8               	btfsc	status,2,c
 16578  005472  D003               	goto	i2l6473
 16579                           
 16580                           ;mcc_generated_files/interrupt_manager.c: 96:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 98:             TMR3_StartTimer();
 16581  005474  EC37  F02D         	call	i2_TMR3_StartTimer	;wreg free
 16582                           
 16583                           ;mcc_generated_files/interrupt_manager.c: 99:         }else{
 16584  005478  D002               	goto	i2l202
 16585  00547A                     i2l6473:
 16586                           
 16587                           ;mcc_generated_files/interrupt_manager.c: 101:             TMR0_StartTimer();
 16588  00547A  EC46  F02D         	call	i2_TMR0_StartTimer	;wreg free
 16589  00547E                     i2l202:
 16590  00547E  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 16591  005480  0011               	retfie		f
 16592  005482                     __end_of_INTERRUPT_InterruptManagerHigh:
 16593                           	opt callstack 0
 16594                           
 16595 ;; *************** function i2_TMR3_StartTimer *****************
 16596 ;; Defined at:
 16597 ;;		line 71 in file "mcc_generated_files/tmr3.c"
 16598 ;; Parameters:    Size  Location     Type
 16599 ;;		None
 16600 ;; Auto vars:     Size  Location     Type
 16601 ;;		None
 16602 ;; Return value:  Size  Location     Type
 16603 ;;                  1    wreg      void 
 16604 ;; Registers used:
 16605 ;;		wreg, status,2, cstack
 16606 ;; Tracked objects:
 16607 ;;		On entry : 0/0
 16608 ;;		On exit  : 0/0
 16609 ;;		Unchanged: 0/0
 16610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16611 ;;      Params:         0       0       0       0       0       0       0       0       0
 16612 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16613 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16614 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16615 ;;Total ram usage:        0 bytes
 16616 ;; Hardware stack levels used:    1
 16617 ;; Hardware stack levels required when called:    1
 16618 ;; This function calls:
 16619 ;;		i2_TMR3_WriteTimer
 16620 ;; This function is called by:
 16621 ;;		_INTERRUPT_InterruptManagerHigh
 16622 ;; This function uses a non-reentrant model
 16623 ;;
 16624                           
 16625                           	psect	text82
 16626  005A6E                     __ptext82:
 16627                           	opt callstack 0
 16628  005A6E                     i2_TMR3_StartTimer:
 16629                           	opt callstack 15
 16630                           
 16631                           ;mcc_generated_files/tmr3.c: 73:     TMR3_WriteTimer(timer3ReloadVal);
 16632                           
 16633                           ;incstack = 0
 16634  005A6E  C0EF  F001         	movff	_timer3ReloadVal,i2TMR3_WriteTimer@timerVal	;volatile
 16635  005A72  C0F0  F002         	movff	_timer3ReloadVal+1,i2TMR3_WriteTimer@timerVal+1	;volatile
 16636  005A76  EC01  F02D         	call	i2_TMR3_WriteTimer	;wreg free
 16637                           
 16638                           ;mcc_generated_files/tmr3.c: 75:     T3CONbits.TMR3ON = 1;
 16639  005A7A  80C9               	bsf	4041,0,c	;volatile
 16640  005A7C  0012               	return		;funcret
 16641  005A7E                     __end_ofi2_TMR3_StartTimer:
 16642                           	opt callstack 0
 16643                           
 16644 ;; *************** function i2_TMR3_WriteTimer *****************
 16645 ;; Defined at:
 16646 ;;		line 84 in file "mcc_generated_files/tmr3.c"
 16647 ;; Parameters:    Size  Location     Type
 16648 ;;  timerVal        2    0[COMRAM] unsigned short 
 16649 ;; Auto vars:     Size  Location     Type
 16650 ;;		None
 16651 ;; Return value:  Size  Location     Type
 16652 ;;                  1    wreg      void 
 16653 ;; Registers used:
 16654 ;;		wreg, status,2
 16655 ;; Tracked objects:
 16656 ;;		On entry : 0/0
 16657 ;;		On exit  : 0/0
 16658 ;;		Unchanged: 0/0
 16659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16660 ;;      Params:         2       0       0       0       0       0       0       0       0
 16661 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16662 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16663 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16664 ;;Total ram usage:        2 bytes
 16665 ;; Hardware stack levels used:    1
 16666 ;; This function calls:
 16667 ;;		Nothing
 16668 ;; This function is called by:
 16669 ;;		i2_TMR3_StartTimer
 16670 ;; This function uses a non-reentrant model
 16671 ;;
 16672                           
 16673                           	psect	text83
 16674  005A02                     __ptext83:
 16675                           	opt callstack 0
 16676  005A02                     i2_TMR3_WriteTimer:
 16677                           	opt callstack 15
 16678                           
 16679                           ;mcc_generated_files/tmr3.c: 84: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_f
      +                          iles/tmr3.c: 85: {;mcc_generated_files/tmr3.c: 86:     if (T3CONbits.nT3SYNC == 1)
 16680                           
 16681                           ;incstack = 0
 16682  005A02  A4C9               	btfss	4041,2,c	;volatile
 16683  005A04  D007               	goto	i2l6143
 16684                           
 16685                           ;mcc_generated_files/tmr3.c: 87:     {;mcc_generated_files/tmr3.c: 89:         T3CONbits
      +                          .TMR3ON = 0;
 16686  005A06  90C9               	bcf	4041,0,c	;volatile
 16687                           
 16688                           ;mcc_generated_files/tmr3.c: 92:         TMR3H = (timerVal >> 8);
 16689  005A08  5002               	movf	i2TMR3_WriteTimer@timerVal+1,w,c
 16690  005A0A  6EC8               	movwf	4040,c	;volatile
 16691                           
 16692                           ;mcc_generated_files/tmr3.c: 93:         TMR3L = timerVal;
 16693  005A0C  C001  FFC7         	movff	i2TMR3_WriteTimer@timerVal,4039	;volatile
 16694                           
 16695                           ;mcc_generated_files/tmr3.c: 96:         T3CONbits.TMR3ON =1;
 16696  005A10  80C9               	bsf	4041,0,c	;volatile
 16697                           
 16698                           ;mcc_generated_files/tmr3.c: 97:     }
 16699  005A12  0012               	return	
 16700  005A14                     i2l6143:
 16701                           
 16702                           ;mcc_generated_files/tmr3.c: 99:     {;mcc_generated_files/tmr3.c: 101:         TMR3H = 
      +                          (timerVal >> 8);
 16703  005A14  5002               	movf	i2TMR3_WriteTimer@timerVal+1,w,c
 16704  005A16  6EC8               	movwf	4040,c	;volatile
 16705                           
 16706                           ;mcc_generated_files/tmr3.c: 102:         TMR3L = timerVal;
 16707  005A18  C001  FFC7         	movff	i2TMR3_WriteTimer@timerVal,4039	;volatile
 16708  005A1C  0012               	return		;funcret
 16709  005A1E                     __end_ofi2_TMR3_WriteTimer:
 16710                           	opt callstack 0
 16711                           
 16712 ;; *************** function i2_TMR0_StartTimer *****************
 16713 ;; Defined at:
 16714 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 16715 ;; Parameters:    Size  Location     Type
 16716 ;;		None
 16717 ;; Auto vars:     Size  Location     Type
 16718 ;;		None
 16719 ;; Return value:  Size  Location     Type
 16720 ;;                  1    wreg      void 
 16721 ;; Registers used:
 16722 ;;		None
 16723 ;; Tracked objects:
 16724 ;;		On entry : 0/0
 16725 ;;		On exit  : 0/0
 16726 ;;		Unchanged: 0/0
 16727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16728 ;;      Params:         0       0       0       0       0       0       0       0       0
 16729 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16730 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16731 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16732 ;;Total ram usage:        0 bytes
 16733 ;; Hardware stack levels used:    1
 16734 ;; This function calls:
 16735 ;;		Nothing
 16736 ;; This function is called by:
 16737 ;;		_INTERRUPT_InterruptManagerHigh
 16738 ;; This function uses a non-reentrant model
 16739 ;;
 16740                           
 16741                           	psect	text84
 16742  005A8C                     __ptext84:
 16743                           	opt callstack 0
 16744  005A8C                     i2_TMR0_StartTimer:
 16745                           	opt callstack 16
 16746                           
 16747                           ;mcc_generated_files/tmr0.c: 70:     while(PORTAbits.RA7 == 0);
 16748                           
 16749                           ;incstack = 0
 16750  005A8C  AE8D               	btfss	3981,7,c	;volatile
 16751  005A8E  D7FE               	goto	i2_TMR0_StartTimer
 16752  005A90                     i2u647_40:
 16753  005A90  BE8D               	btfsc	3981,7,c	;volatile
 16754  005A92  D7FE               	goto	i2u647_40
 16755                           
 16756                           ;mcc_generated_files/tmr0.c: 74:     T0CON0bits.T0EN = 1;
 16757  005A94  8ED5               	bsf	4053,7,c	;volatile
 16758                           
 16759                           ;mcc_generated_files/tmr0.c: 76:     PORTBbits.RB3 = 1;
 16760  005A96  868E               	bsf	3982,3,c	;volatile
 16761  005A98  0012               	return		;funcret
 16762  005A9A                     __end_ofi2_TMR0_StartTimer:
 16763                           	opt callstack 0
 16764                           
 16765 ;; *************** function i2_TMR0_Reload *****************
 16766 ;; Defined at:
 16767 ;;		line 93 in file "mcc_generated_files/tmr0.c"
 16768 ;; Parameters:    Size  Location     Type
 16769 ;;		None
 16770 ;; Auto vars:     Size  Location     Type
 16771 ;;		None
 16772 ;; Return value:  Size  Location     Type
 16773 ;;                  1    wreg      void 
 16774 ;; Registers used:
 16775 ;;		wreg, status,2, status,0, cstack
 16776 ;; Tracked objects:
 16777 ;;		On entry : 0/0
 16778 ;;		On exit  : 0/0
 16779 ;;		Unchanged: 0/0
 16780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16781 ;;      Params:         0       0       0       0       0       0       0       0       0
 16782 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16783 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16784 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16785 ;;Total ram usage:        0 bytes
 16786 ;; Hardware stack levels used:    1
 16787 ;; Hardware stack levels required when called:    1
 16788 ;; This function calls:
 16789 ;;		i2_TMR0_WriteTimer
 16790 ;; This function is called by:
 16791 ;;		_INTERRUPT_InterruptManagerHigh
 16792 ;; This function uses a non-reentrant model
 16793 ;;
 16794                           
 16795                           	psect	text85
 16796  005896                     __ptext85:
 16797                           	opt callstack 0
 16798  005896                     i2_TMR0_Reload:
 16799                           	opt callstack 15
 16800                           
 16801                           ;mcc_generated_files/tmr0.c: 96:     temp_cycle = cycle - 1;
 16802                           
 16803                           ;incstack = 0
 16804  005896  0EFF               	movlw	255
 16805  005898  2448               	addwf	_cycle,w,c	;volatile
 16806  00589A  6E4C               	movwf	_temp_cycle,c	;volatile
 16807  00589C  0EFF               	movlw	255
 16808  00589E  2049               	addwfc	_cycle+1,w,c	;volatile
 16809  0058A0  6E4D               	movwf	_temp_cycle+1,c	;volatile
 16810  0058A2  0EFF               	movlw	255
 16811  0058A4  204A               	addwfc	_cycle+2,w,c	;volatile
 16812  0058A6  6E4E               	movwf	_temp_cycle+2,c	;volatile
 16813  0058A8  0EFF               	movlw	255
 16814  0058AA  204B               	addwfc	_cycle+3,w,c	;volatile
 16815  0058AC  6E4F               	movwf	_temp_cycle+3,c	;volatile
 16816                           
 16817                           ;mcc_generated_files/tmr0.c: 97:     TMR0_WriteTimer((0xFFFF - temp_cycle)+1);
 16818  0058AE  504C               	movf	_temp_cycle,w,c	;volatile
 16819  0058B0  0800               	sublw	0
 16820  0058B2  6E01               	movwf	i2TMR0_WriteTimer@timerVal,c
 16821  0058B4  504D               	movf	_temp_cycle+1,w,c	;volatile
 16822  0058B6  A0D8               	btfss	status,0,c
 16823  0058B8  2AE8               	incf	wreg,f,c
 16824  0058BA  0800               	sublw	0
 16825  0058BC  6E02               	movwf	i2TMR0_WriteTimer@timerVal+1,c
 16826  0058BE  EC76  F02D         	call	i2_TMR0_WriteTimer	;wreg free
 16827  0058C2  0012               	return		;funcret
 16828  0058C4                     __end_ofi2_TMR0_Reload:
 16829                           	opt callstack 0
 16830                           
 16831 ;; *************** function i2_TMR0_WriteTimer *****************
 16832 ;; Defined at:
 16833 ;;		line 86 in file "mcc_generated_files/tmr0.c"
 16834 ;; Parameters:    Size  Location     Type
 16835 ;;  timerVal        2    0[COMRAM] unsigned short 
 16836 ;; Auto vars:     Size  Location     Type
 16837 ;;		None
 16838 ;; Return value:  Size  Location     Type
 16839 ;;                  1    wreg      void 
 16840 ;; Registers used:
 16841 ;;		wreg, status,2
 16842 ;; Tracked objects:
 16843 ;;		On entry : 0/0
 16844 ;;		On exit  : 0/0
 16845 ;;		Unchanged: 0/0
 16846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16847 ;;      Params:         2       0       0       0       0       0       0       0       0
 16848 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16849 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16850 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16851 ;;Total ram usage:        2 bytes
 16852 ;; Hardware stack levels used:    1
 16853 ;; This function calls:
 16854 ;;		Nothing
 16855 ;; This function is called by:
 16856 ;;		i2_TMR0_Reload
 16857 ;; This function uses a non-reentrant model
 16858 ;;
 16859                           
 16860                           	psect	text86
 16861  005AEC                     __ptext86:
 16862                           	opt callstack 0
 16863  005AEC                     i2_TMR0_WriteTimer:
 16864                           	opt callstack 15
 16865                           
 16866                           ;mcc_generated_files/tmr0.c: 86: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_f
      +                          iles/tmr0.c: 87: {;mcc_generated_files/tmr0.c: 89:     TMR0H = timerVal >> 8;
 16867                           
 16868                           ;incstack = 0
 16869  005AEC  5002               	movf	i2TMR0_WriteTimer@timerVal+1,w,c
 16870  005AEE  6ED4               	movwf	4052,c	;volatile
 16871                           
 16872                           ;mcc_generated_files/tmr0.c: 90:     TMR0L = (uint8_t) timerVal;
 16873  005AF0  C001  FFD3         	movff	i2TMR0_WriteTimer@timerVal,4051	;volatile
 16874  005AF4  0012               	return		;funcret
 16875  005AF6                     __end_ofi2_TMR0_WriteTimer:
 16876                           	opt callstack 0
 16877                           
 16878 ;; *************** function i2_SPI1_Start *****************
 16879 ;; Defined at:
 16880 ;;		line 53 in file "mcc_generated_files/spi1.c"
 16881 ;; Parameters:    Size  Location     Type
 16882 ;;		None
 16883 ;; Auto vars:     Size  Location     Type
 16884 ;;		None
 16885 ;; Return value:  Size  Location     Type
 16886 ;;                  1    wreg      void 
 16887 ;; Registers used:
 16888 ;;		None
 16889 ;; Tracked objects:
 16890 ;;		On entry : 0/0
 16891 ;;		On exit  : 0/0
 16892 ;;		Unchanged: 0/0
 16893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16894 ;;      Params:         0       0       0       0       0       0       0       0       0
 16895 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16896 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16897 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16898 ;;Total ram usage:        0 bytes
 16899 ;; Hardware stack levels used:    1
 16900 ;; This function calls:
 16901 ;;		Nothing
 16902 ;; This function is called by:
 16903 ;;		_INTERRUPT_InterruptManagerHigh
 16904 ;; This function uses a non-reentrant model
 16905 ;;
 16906                           
 16907                           	psect	text87
 16908  005AFE                     __ptext87:
 16909                           	opt callstack 0
 16910  005AFE                     i2_SPI1_Start:
 16911                           	opt callstack 16
 16912                           
 16913                           ;mcc_generated_files/spi1.c: 56:     if(!SSP1CON1bits.SSPEN)
 16914                           
 16915                           ;incstack = 0
 16916  005AFE  BA96               	btfsc	3990,5,c	;volatile
 16917  005B00  0012               	return	
 16918                           
 16919                           ;mcc_generated_files/spi1.c: 57:     {;mcc_generated_files/spi1.c: 59:         SSP1CON1b
      +                          its.SSPEN = 1;
 16920  005B02  8A96               	bsf	3990,5,c	;volatile
 16921  005B04  0012               	return		;funcret
 16922  005B06                     __end_ofi2_SPI1_Start:
 16923                           	opt callstack 0
 16924                           
 16925 ;; *************** function _TMR0_StopTimer *****************
 16926 ;; Defined at:
 16927 ;;		line 79 in file "mcc_generated_files/tmr0.c"
 16928 ;; Parameters:    Size  Location     Type
 16929 ;;		None
 16930 ;; Auto vars:     Size  Location     Type
 16931 ;;		None
 16932 ;; Return value:  Size  Location     Type
 16933 ;;                  1    wreg      void 
 16934 ;; Registers used:
 16935 ;;		None
 16936 ;; Tracked objects:
 16937 ;;		On entry : 0/0
 16938 ;;		On exit  : 0/0
 16939 ;;		Unchanged: 0/0
 16940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16941 ;;      Params:         0       0       0       0       0       0       0       0       0
 16942 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16943 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16944 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16945 ;;Total ram usage:        0 bytes
 16946 ;; Hardware stack levels used:    1
 16947 ;; This function calls:
 16948 ;;		Nothing
 16949 ;; This function is called by:
 16950 ;;		_INTERRUPT_InterruptManagerHigh
 16951 ;; This function uses a non-reentrant model
 16952 ;;
 16953                           
 16954                           	psect	text88
 16955  005B2C                     __ptext88:
 16956                           	opt callstack 0
 16957  005B2C                     _TMR0_StopTimer:
 16958                           	opt callstack 16
 16959                           
 16960                           ;mcc_generated_files/tmr0.c: 82:     T0CON0bits.T0EN = 0;
 16961                           
 16962                           ;incstack = 0
 16963  005B2C  9ED5               	bcf	4053,7,c	;volatile
 16964  005B2E  0012               	return		;funcret
 16965  005B30                     __end_of_TMR0_StopTimer:
 16966                           	opt callstack 0
 16967                           
 16968                           	psect	text89
 16969  000000                     __ptext89:
 16970                           	opt callstack 0
 16971                           
 16972                           	psect	rparam
 16973  0000                     
 16974                           	psect	temp
 16975  000054                     btemp:
 16976                           	opt callstack 0
 16977  000054                     	ds	1
 16978  0000                     int$flags	set	btemp
 16979  0000                     wtemp8	set	btemp+1
 16980  0000                     ttemp5	set	btemp+1
 16981  0000                     ttemp6	set	btemp+4
 16982  0000                     ttemp7	set	btemp+8
 16983                           tosu	equ	0xFFF
 16984                           tosh	equ	0xFFE
 16985                           tosl	equ	0xFFD
 16986                           stkptr	equ	0xFFC
 16987                           pclatu	equ	0xFFB
 16988                           pclath	equ	0xFFA
 16989                           pcl	equ	0xFF9
 16990                           tblptru	equ	0xFF8
 16991                           tblptrh	equ	0xFF7
 16992                           tblptrl	equ	0xFF6
 16993                           tablat	equ	0xFF5
 16994                           prodh	equ	0xFF4
 16995                           prodl	equ	0xFF3
 16996                           indf0	equ	0xFEF
 16997                           postinc0	equ	0xFEE
 16998                           postdec0	equ	0xFED
 16999                           preinc0	equ	0xFEC
 17000                           plusw0	equ	0xFEB
 17001                           fsr0h	equ	0xFEA
 17002                           fsr0l	equ	0xFE9
 17003                           wreg	equ	0xFE8
 17004                           indf1	equ	0xFE7
 17005                           postinc1	equ	0xFE6
 17006                           postdec1	equ	0xFE5
 17007                           preinc1	equ	0xFE4
 17008                           plusw1	equ	0xFE3
 17009                           fsr1h	equ	0xFE2
 17010                           fsr1l	equ	0xFE1
 17011                           bsr	equ	0xFE0
 17012                           indf2	equ	0xFDF
 17013                           postinc2	equ	0xFDE
 17014                           postdec2	equ	0xFDD
 17015                           preinc2	equ	0xFDC
 17016                           plusw2	equ	0xFDB
 17017                           fsr2h	equ	0xFDA
 17018                           fsr2l	equ	0xFD9
 17019                           status	equ	0xFD8


Data Sizes:
    Strings     510
    Constant    128
    Data        18
    BSS         148
    Persistent  17
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      83
    BANK0           160    117     156
    BANK1           256    188     256
    BANK2           256      0      52
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_32(CODE[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_17(CODE[19]), STR_16(CODE[24]), STR_15(CODE[23]), STR_14(CODE[13]), 
		 -> STR_13(CODE[19]), STR_12(CODE[42]), STR_11(CODE[34]), STR_10(CODE[32]), 
		 -> STR_9(CODE[32]), STR_8(CODE[37]), STR_7(CODE[28]), STR_6(CODE[33]), 
		 -> STR_5(CODE[29]), STR_4(CODE[28]), STR_3(CODE[36]), STR_2(CODE[36]), 
		 -> STR_1(CODE[39]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_17(CODE[19]), STR_16(CODE[24]), STR_15(CODE[23]), STR_14(CODE[13]), 
		 -> STR_13(CODE[19]), STR_12(CODE[42]), STR_11(CODE[34]), STR_10(CODE[32]), 
		 -> STR_9(CODE[32]), STR_8(CODE[37]), STR_7(CODE[28]), STR_6(CODE[33]), 
		 -> STR_5(CODE[29]), STR_4(CODE[28]), STR_3(CODE[36]), STR_2(CODE[36]), 
		 -> STR_1(CODE[39]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_17(CODE[19]), STR_16(CODE[24]), STR_15(CODE[23]), STR_14(CODE[13]), 
		 -> STR_13(CODE[19]), STR_12(CODE[42]), STR_11(CODE[34]), STR_10(CODE[32]), 
		 -> STR_9(CODE[32]), STR_8(CODE[37]), STR_7(CODE[28]), STR_6(CODE[33]), 
		 -> STR_5(CODE[29]), STR_4(CODE[28]), STR_3(CODE[36]), STR_2(CODE[36]), 
		 -> STR_1(CODE[39]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> output(BANK2[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> output(BANK2[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S2072_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> output(BANK2[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> output(BANK2[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 20
		 -> rx_data(BANK1[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> rx_data(BANK1[20]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_17(CODE[19]), STR_16(CODE[24]), STR_15(CODE[23]), STR_14(CODE[13]), 
		 -> STR_13(CODE[19]), STR_12(CODE[42]), STR_11(CODE[34]), STR_10(CODE[32]), 
		 -> STR_9(CODE[32]), STR_8(CODE[37]), STR_7(CODE[28]), STR_6(CODE[33]), 
		 -> STR_5(CODE[29]), STR_4(CODE[28]), STR_3(CODE[36]), STR_2(CODE[36]), 
		 -> STR_1(CODE[39]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 42
		 -> STR_17(CODE[19]), STR_16(CODE[24]), STR_15(CODE[23]), STR_14(CODE[13]), 
		 -> STR_13(CODE[19]), STR_12(CODE[42]), STR_11(CODE[34]), STR_10(CODE[32]), 
		 -> STR_9(CODE[32]), STR_8(CODE[37]), STR_7(CODE[28]), STR_6(CODE[33]), 
		 -> STR_5(CODE[29]), STR_4(CODE[28]), STR_3(CODE[36]), STR_2(CODE[36]), 
		 -> STR_1(CODE[39]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    EUSART_Write_String@data	PTR unsigned char  size(2) Largest target is 50
		 -> output(BANK2[50]), rx_data(BANK1[20]), 


Critical Paths under _main in COMRAM

    _main->_Parse_Data
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _sprintf->_vfprintf
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atol->___lmul
    _atoi->_isspace
    _EUSART_Write_String->_EUSART_Write
    _powf->_scalbnf
    _sqrtf->___flge
    _scalbnf->___flmul
    ___flmul->___fladd
    ___flsub->___flmul
    ___fldiv->___flmul

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    _TMR3_ISR->_TMR3_WriteTimer
    _TMR3_StartTimer->_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_Reload->_TMR0_WriteTimer
    _EUSART_Receive_ISR->_TMR1_WriteTimer

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    i2_TMR3_StartTimer->i2_TMR3_WriteTimer
    i2_TMR0_Reload->i2_TMR0_WriteTimer

Critical Paths under _main in BANK0

    _main->_AD9833_Init
    _main->_Parse_Data
    _Parse_Data->_AD9833_SetFrequency
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _AD9833_Init->_AD9833_SetFrequency
    _AD9833_SetFrequency->___fltol
    _powf->_sqrtf
    _sqrtf->___flge
    ___flge->___flsub
    ___fldiv->___flsub
    ___fltol->_powf

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _AD9833_SetFrequency->_powf
    ___fltol->_powf

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  263664
                                            115 BANK0      2     2      0
                        _AD9833_Init
                         _Parse_Data
                         _SPI1_Start
                  _SYSTEM_Initialize
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (1) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             11 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                             11 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             11 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Parse_Data                                           3     3      0  143015
                                             58 COMRAM     1     1      0
                                            113 BANK0      2     2      0
                _AD9833_SetFrequency
                _EUSART_Write_String
                               _atoi
                               _atol
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   18644
                                             61 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   15853
                                             56 COMRAM     2     2      0
                                             55 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           54    48      6   15486
                                             18 BANK0     37    31      6
                               _ctoa
                               _dtoa
                              _fputc
                            _strncmp
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    4367
                                             38 COMRAM    18     8     10
                                              0 BANK0     14    14      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                             11 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                             11 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     909
                                             11 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4966
                                             38 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             29 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                             11 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                             11 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    3385
                                             38 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             27 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                             20 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                             11 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _atol                                                20    16      4    1363
                                             23 COMRAM    20    16      4
                             ___lmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                             11 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _atoi                                                15    13      2    1488
                                             18 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              7     5      2     283
                                             11 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     237
                                             11 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     495
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write_String                                  3     1      2    1502
                                             12 COMRAM     3     1      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      44
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AD9833_Init                                          2     2      0  120159
                                            113 BANK0      2     2      0
                _AD9833_SetFrequency
                     _SPI1_WriteWord
 ---------------------------------------------------------------------------------
 (2) _AD9833_SetFrequency                                 21    17      4  119613
                                             92 BANK0     21    17      4
                     _SPI1_WriteWord
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                               _powf
 ---------------------------------------------------------------------------------
 (3) _powf                                               205   197      8  101964
                                             65 BANK0     17     9      8
                                              0 BANK1    188   188      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                              _fabsf
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (4) _sqrtf                                               49    45      4   26715
                                             16 BANK0     49    45      4
                            ___fladd
                             ___flge
                            ___flmul
                               _nanf
 ---------------------------------------------------------------------------------
 (5) _nanf                                                 8     4      4      99
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1220
                                             52 COMRAM     4     4      0
                                              8 BANK0      8     0      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (4) _scalbnf                                             18    12      6   12271
                                             52 COMRAM     6     0      6
                                              0 BANK0     12    12      0
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8   11776
                                             27 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     123
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     474
                                             11 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8   19190
                                              0 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8   11738
                                             11 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     197
                                             11 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    4044
                                             52 COMRAM     4     4      0
                                              8 BANK0     21    13      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             82 BANK0     10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                               _powf (ARG)
 ---------------------------------------------------------------------------------
 (3) _SPI1_WriteWord                                       4     2      2     546
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManagerLow                       7     7      0    1080
                                              4 COMRAM     7     7      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _INT0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0     480
                    _TMR0_StartTimer
                    _TMR3_StartTimer
                     _TMR3_StopTimer
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR3_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR3_StartTimer                                     0     0      0     240
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR3_WriteTimer                                     2     0      2     240
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0     120
                         _SPI1_Close
                        _TMR0_Reload
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (12) _TMR0_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_Reload                                         0     0      0     120
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR0_WriteTimer                                     2     0      2     120
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _SPI1_Close                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0     240
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
                    _TMR1_StartTimer
                    _TMR1_WriteTimer
                   i1_TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (12) i1_TMR1_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     240
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManagerHigh                      0     0      0     184
                     _TMR0_StopTimer
                       i2_SPI1_Start
                      i2_TMR0_Reload
                  i2_TMR0_StartTimer
                  i2_TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (15) i2_TMR3_StartTimer                                   0     0      0     114
                  i2_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) i2_TMR3_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) i2_TMR0_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_TMR0_Reload                                       0     0      0      70
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (16) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) i2_SPI1_Start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD9833_Init
     _AD9833_SetFrequency
       _SPI1_WriteWord
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _powf (ARG)
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl
           _fabsf
           _scalbnf
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
           _sqrtf
             ___fladd
             ___flge
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
             _nanf
       ___xxtofl
       _powf
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flneg
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl
         _fabsf
         _scalbnf
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
         _sqrtf
           ___fladd
           ___flge
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           _nanf
     _SPI1_WriteWord
   _Parse_Data
     _AD9833_SetFrequency
       _SPI1_WriteWord
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _powf (ARG)
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl
           _fabsf
           _scalbnf
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
           _sqrtf
             ___fladd
             ___flge
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
             _nanf
       ___xxtofl
       _powf
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flneg
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl
         _fabsf
         _scalbnf
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
         _sqrtf
           ___fladd
           ___flge
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           _nanf
     _EUSART_Write_String
       _EUSART_Write
     _atoi
       ___wmul
       _isdigit
       _isspace
     _atol
       ___lmul
       _isdigit
       _isspace
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
   _SPI1_Start
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _EXT_INT_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR3_Initialize
   _TMR1_StopTimer

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
     _TMR1_StartTimer *
     _TMR1_WriteTimer *
     i1_TMR1_StopTimer *
   _EUSART_Transmit_ISR *
   _INT0_ISR *
     _SPI1_Close
     _TMR0_Reload
       _TMR0_WriteTimer
     _TMR0_StartTimer
   _TMR1_ISR *
     _TMR1_WriteTimer
   _TMR3_ISR *
     _TMR0_StartTimer
     _TMR3_StartTimer
       _TMR3_WriteTimer
     _TMR3_StopTimer
     _TMR3_WriteTimer

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _TMR0_StopTimer
   i2_SPI1_Start
   i2_TMR0_Reload
     i2_TMR0_WriteTimer
   i2_TMR0_StartTimer
   i2_TMR3_StartTimer
     i2_TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      34       9       20.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BC     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     75      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      53       1       88.3%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     223      18        0.0%
DATA                 0      0     223       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri May 15 17:06:59 2020

                ?_EUSART_SetRxInterruptHandler 000C                                   ___fldiv@aexp 007C  
                                 ___fldiv@bexp 007B                                   ___fldiv@sign 0074  
                                  __CFG_CP$OFF 000000                                             _L1 7DD9  
                                           _L2 7DD5                                             _L3 7DD1  
                                           _L4 7DCD                                             _L5 7DC9  
                                           _L6 7DC5                                             _P1 7DC1  
                                           _P2 7DBD                                             _P3 7DB9  
                                           _P4 7DB5                                             _P5 7DB1  
                                           l89 556E                                             _bp 7DED  
                                           _cp 7D9D                                             bsr 000FE0  
                          ___wmul@multiplicand 000E                                    __CFG_LVP$ON 000000  
                                          l650 2B5A                                            l707 50FA  
                                          l644 2AC0                                            l636 29C8  
                                          l580 5314                                            l725 3EA6  
                                          l750 4280                                            l727 3EAE  
                                          l752 4288                                            l658 2C10  
                   __size_ofi2_TMR3_StartTimer 0010                                   __CFG_CPD$OFF 000000  
                                          _lg2 7DAD                                _timer1ReloadVal 00F1  
                                          _abs 571A                         ??_EUSART_RxDataHandler 0003  
                                          _pad 50CC                                            _sec 0047  
                                          _ovt 7DA1                 ?_EUSART_SetFramingErrorHandler 000C  
                      __size_of_PMD_Initialize 001C                                            tosl 000FFD  
                                          wreg 000FE8                                   ___flmul@aexp 002D  
                                 ___flmul@bexp 002E                                   ___flmul@sign 0028  
                                 ___flmul@temp 0033                                   ___flmul@prod 002F  
                                 __CFG_ZCD$OFF 000000                                   ___fltol@exp1 00BB  
                                         ?_abs 001E                                           l1221 4D44  
                                         l1231 4F60                                           l1312 39DE  
                                         l1048 4C5C                                           l1313 39BC  
                                         l1414 3868                                           l1406 37E2  
                                         l1407 37DE                                           l1328 3AB0  
                                         l1520 458E                                           l1337 3B16  
                                         l1338 3B12                                _timer3ReloadVal 00EF  
                                         l1445 48E4                                           l1438 4866  
                                         l1367 3D1C                                           l1378 3D8A  
                                         l1458 5742                                           l1379 3D86  
                                         l1397 35CA                                           l1637 0346  
                                         l4213 5044                                           l4301 46A0  
                                         l1647 03AE                                           l4223 5650  
                                         l4231 58F8                                           l1744 2804  
                                         l5121 48CC                                           l1657 044C  
                                         l1489 4A98                                           l4233 58FC  
                                         l4305 46C6                                           l4321 4AF2  
                                         l5115 4894                                           l4227 5666  
                                         l4243 50E4                                           l4403 3E8A  
                                         l5117 489A                                           l5109 4876  
                                         l1781 2FF6                                           l5301 5590  
                                         l4253 511C                                           l4341 4BA4  
                                         l4333 4B68                                           l4325 4B0C  
                                         l4317 4ACE                                           l4421 3ED8  
                                         l4501 4FAC                                           l1774 2EEA  
                                         l5127 490A                                           l5119 48A6  
                                         l1783 30D0                                           l6103 49D0  
                                         l6023 4432                                           l4247 50F2  
                                         l4327 4B20                                           l4431 3FD2  
                                         l4503 4FBA                                           l4351 4CBE  
                                         l5145 4956                                           l5129 4916  
                                         l6113 4A3A                                           l6105 49D8  
                                         l6041 4490                                           l6033 4478  
                                         l6025 4436                                           l4257 5148  
                                         l4249 5104                                           l4273 45CC  
                                         l4337 4B7E                                           l4417 3EC8  
                                         l4353 4CD2                                           l1778 2F3E  
                                         l5251 413A                                           l6107 49DE  
                                         l6043 4496                                           l4451 4038  
                                         l4363 4D2E                                           l4371 4EEE  
                                         l6109 4A04                                           l6045 44BC  
                                         l4285 461A                                           l4373 4F02  
                                         ?_pad 001C                                           l6039 4488  
                                         l4287 462E                                           l4279 45F4  
                                         l4455 4050                                           l4471 42C2  
                                         l6049 4516                                           l4297 468A  
                                         l4481 43B0                                           l5099 57FA  
                                         l4731 357A                                           l5267 41EA  
                                         l4387 5496                                           l4379 4F4A  
                                         l4805 37A8                                           l4733 358A  
                                         l5285 555A                                           l4389 54A2  
                                         l4901 32BA                                           l6087 497A  
                                         l4911 3398                                           l4841 3886  
                                         l4825 3826                                           l4729 3576  
                                         l6097 49C0                                           l6089 497E  
                                         l5801 5346                                           l8131 38CC  
                                         l4747 35B6                                           l9003 2824  
                                         l5299 558C                                           l5803 536C  
                                         l8301 3B82                                           l8221 3A02  
                                         l8205 39CA                                           l4829 3844  
                                         l4757 35E8                                           l4749 35BA  
                                         l5813 5398                                           l4933 34F0  
                                         l8231 3A28                                           l8207 39CE  
                                         l8151 3910                                           l8127 38C8  
                                         l5911 5698                                           l4927 34B4  
                                         l4919 3434                                           l4943 3516  
                                         l8305 3B8A                                           l8321 4BFC  
                                         l5817 53AC                                           l4937 34FC  
                                         l5843 4DD0                                           l5827 4D86  
                                         l8307 3B8C                                           l8163 3934  
                                         l8155 3914                                           l5907 5684  
                                         l4891 3208                                           l9051 28FC  
                                         l5861 4E10                                           l5853 4DE8  
                                         l8421 3D1A                                           l8229 3A24  
                                         l8325 4C30                                           l8501 2E26  
                                         l9117 2A88                                           l5855 4DF4  
                                         l5847 4DE0                                           l8415 3CF4  
                                         l8407 3CCC                                           l8351 3BD6  
                                         l8239 3A3A                                           l4799 378A  
                                         l8335 4C94                                           l9135 2B04  
                                         l9039 2872                                           l8433 3D50  
                                         l8257 3AD4                                           l8273 3AF4  
                                         l8249 3AA0                                           l8193 3970  
                                         l8329 4C46                                           l8513 2EA8  
                                         l8601 0380                                           l5873 5550  
                                         l4897 3284                                           l9217 2D0E  
                                         l9161 2B8E                                           l9057 290A  
                                         l8427 3D32                                           l8371 3C16  
                                         l8355 3BDA                                           l8267 3AEA  
                                         l9059 290E                                           l9243 5302  
                                         l8461 3E1C                                           l8453 3DCE  
                                         l8293 3B5C                                           l8517 2EBE  
                                         l8509 2E50                                           l8613 03EA  
                                         l8383 3C4E                                           l8375 3C1A  
                                         l8535 3010                                           l8623 045E  
                                         l9079 298E                                           l8457 3DF2  
                                         l8529 2F8A                                           l8609 03C0  
                                         l8617 03FE                                           l8467 3E28  
                                         l8571 016E                                           l9179 2BE2  
                                         l9099 2A20                                           l8469 3E2A  
                                         l8397 3C7C                                           l8389 3C64  
                                         l8549 30A8                                           l8725 0C32  
                                         l8637 04D8                                           l8629 04A2  
                                         l8565 0148                                           l9197 2C44  
                                         l8495 2DDE                                           l8751 0D90  
                                         l8655 0656                                           l8663 069A  
                                         l8737 0CB8                                           l8673 0738  
                                         l8649 0578                                           l8747 0D66  
                                         l8659 0688                                           l8587 0204  
                                         l8579 01D0                                           l8925 1E64  
                                         l8933 1F30                                           l8917 1DBE  
                                         l8909 1CD4                                           l8757 0DBC  
                                         l8685 07F0                                           l8677 0754  
                                         l8695 08EE                                           l8945 2174  
                                         l8689 085A                                           l8947 21A8  
                                         l8699 0958                                           STR_1 7E2B  
                                         STR_2 7E77                                           STR_3 7E9B  
                                         STR_4 7F7B                                           STR_5 7F42  
                                         STR_6 7EE1                                           STR_7 7F5F  
                                         STR_8 7E52                                           STR_9 7F22  
                                         _LATA 000F83                                           _LATB 000F84  
                                         _LATC 000F85                                           u3340 503C  
                                         u3430 5728                                           u5120 409A  
                                         u6000 4474                                           u3360 5084  
                                         u5130 40E6                                           u5140 4132  
                                         u6100 4A68                                           u6020 4544  
                                         u3540 4B24                                           u3620 4F06  
                                         u3461 45FA                                           u4430 37D8  
                                         u6110 4A6A                                           u6030 4546  
                                         u3710 3EC2                                           u3480 4632  
                                         u3720 3FE2                                           u4600 3312  
                                         u3650 3E5C                                           u3810 4274  
                                         u3571 4C9E                                           u4380 35D6  
                                         u3740 4004                                           u3660 3E5E  
                                         _PMD0 000EE1                                           u3741 4002  
                                         _PMD1 000EE2                                           u4470 3834  
                                         u4390 374C                                           u3750 4012  
                                         u3910 5006                                           u3590 4CD6  
                                         _PMD2 000EE3                                           _PMD3 000EE4  
                                         u4480 3852                                           u6080 49BC  
                                         u3760 4016                                           u3840 43DC  
                                         _PMD4 000EE5                                           u5185 41FE  
                                         u3841 43DA                                           _PMD5 000EE6  
                                         u3690 3E9C                                           u3850 43EA  
                                         u4395 3742                                           u3780 4022  
                                         u3860 43EE                                           u4580 323C  
                                         u9100 3D80                                           u4940 4920  
                                         u5840 4D74                                           u5920 554C  
                                         u5850 4DA4                                           u5930 57D6  
                                         u9140 3DDC                                           u5940 57D8  
                                         u9150 3E00                                           u5855 4D9A  
                                         u9215 2E64                                           u8600 39A2  
                                         u9216 2E6A                                           u9400 02CA  
                                         u9305 3114                                           u9217 2E78  
                                         u5890 4DFA                                           u8610 39A4  
                                         u9330 0184                                           u9180 2DF0  
                                         u9340 019A                                           u9405 02C0  
                                         u8640 39E6                                           u9520 0510  
                                         u9700 0D7E                                           u9540 052E  
                                         u9541 052C                                           u8590 3992  
                                         u9630 0782                                           u9385 022A  
                                         u8850 3B68                                           u8770 3AF8  
                                         u9386 0230                                           u9715 0FB6  
                                         u9395 027E                                           u9387 023E  
                                         u9660 0884                                           u9396 0284  
                                         u9900 2896                                           u9805 1FDC  
                                         u9397 0292                                           u8790 3B0C  
                                         u9806 1FE2                                           u9670 0C52  
                                         u9815 2040                                           u9807 1FF0  
                                         u9816 2046                                           u9920 28BA  
                                         u9825 2092                                           u9817 2054  
                                         u9826 2098                                           u9690 0D62  
                                         u9835 213A                                           u9827 20A6  
                                         u9836 2140                                           u9837 214E  
                                         u9685 0CCE                                           u9870 27D6  
                                         u9686 0CD4                                           u9950 2932  
                                         u9855 276A                                           u9687 0CE2  
                                         u9960 296C                                           u9865 27AE  
                                         u9785 1F60                                           u9866 27B4  
                                         u9786 1F66                                           u9970 29A6  
                                         u9867 27C2                                           u9787 1F74  
                                         u9885 47B8                                           u9886 47BE  
                                         u9990 2A30                                           u9887 47CC  
                                         _WPUA 000F10                                           _WPUB 000F18  
                                         _WPUC 000F20                                           _WPUE 000F2D  
                                __CFG_FCMEN$ON 000000                                           abs@a 001E  
                                         _dbuf 01C4                                           _cp_h 7DFD  
                                         _cp_l 7DF9                                           _dp_h 7D89  
                                         _dp_l 7D81                                           _atoi 4968  
                                         _atol 4418                                           _ctoa 5482  
                                         _main 52D0                                           _dtoa 3E32  
                                         _nanf 598C                                           _huge 7DE1  
                                         _prec 003C                                _TMR0_StartTimer 5A7E  
                                         _nout 00E7                                           _powf 00B6  
                                         pad@i 0023                                           pad@p 0020  
                                         _tiny 7DDD                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           indf2 000FDF  
                                         fsr1l 000FE1                                           pad@w 0025  
                                         fsr2l 000FD9                                           btemp 0054  
                                         _utoa 4262                     __size_ofi2_TMR3_WriteTimer 001C  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00B2                                ___fldiv@new_exp 0075  
                              _TMR3_Initialize 55D2                                  __CFG_CSWEN$ON 000000  
                                 ___param_bank 000000                             SPI1_WriteWord@word 000C  
                        __end_ofi2_TMR0_Reload 58C4                                  __CFG_SCANE$ON 000000  
                                        ??_abs 0020                                          ??_pad 0022  
                      __end_of_TMR0_Initialize 57AE                               __end_of_INT0_ISR 577E  
                                ?_EUSART_Write 0001                 __size_of_OSCILLATOR_Initialize 0018  
                     __end_ofi1_TMR1_StopTimer 5B28                  __end_of_OSCILLATOR_Initialize 5A36  
                                  ?_SPI1_Close 0001                                  ___fltol@sign1 00BA  
                              __end_of___aodiv 46E8                                          ?_atoi 0013  
                                        ?_atol 0018                                          ?_ctoa 0027  
                              __end_of___fladd 3BA8                                          ?_main 0001  
                                        ?_dtoa 0027                                          ?_nanf 000C  
                              __end_of___aomod 4BC6                                __end_of___fldiv 3E32  
                              __end_of___flneg 580C                                          STR_10 7F02  
                                        STR_11 7EBF                                          STR_20 7FF6  
                                        STR_12 7E01                                          STR_13 7FD9  
                                        STR_22 7FF9                                          STR_14 7FEC  
                                        STR_15 7FAF                                          STR_32 7F01  
                                        STR_24 7FF9                                          STR_16 7F97  
                                        STR_17 7FC6                                  __CFG_WDTE$OFF 000000  
                                        STR_27 7FFC                                          STR_29 7FFC  
                              __end_of___flmul 389C                                          ?_powf 00A1  
                              __end_of___flsub 551A                                __end_of___fltol 4E22  
                              _TMR1_StartTimer 5B28                                          u10000 2A64  
                                        u10010 2A9C                                          u10100 2C54  
                                        u10030 2B14                                          ?_utoa 0027  
                                        u10060 2B9E                                          u10127 52E6  
                                        u10137 55AE                                          u10147 5924  
                                        u10157 5930                                          u10167 593A  
                                        _T1CLK 000FD2                                __end_of___lodiv 4D66  
                                        _T1CON 000FCF                                          _T3CLK 000FCC  
                                        _T3CON 000FC9                                __end_of___lomod 4F82  
                                  ?_SPI1_Start 0001                                 __CFG_DEBUG$OFF 000000  
                                        i1l101 5890                                          i1l211 0068  
                                        i1l212 0092                                          i1l213 0088  
                                        i1l207 0044                                          i1l209 0050  
                                        i2l202 547E                                _TMR0_WriteTimer 5AE2  
                                        i2l198 5464                                          _OSCEN 000EDC  
                                 vfpfcnvrt@fmt 0074                                          _TMR0H 000FD4  
                                 vfpfcnvrt@llu 008F                                          _TMR1H 000FCE  
                                        _TMR0L 000FD3                                          _TMR1L 000FCD  
                                        _TMR3H 000FC8                                          _TMR3L 000FC7  
                                        _TRISA 000F88                                          _TRISB 000F89  
                                        _TRISC 000F8A                                          _RXPPS 000EB5  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                            ___lmul@multiplicand 0010  
                                __CFG_WRT3$OFF 000000                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                               __end_of_TMR1_ISR 5A4C  
                                __CFG_WRTB$OFF 000000                               __end_of_TMR3_ISR 583A  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                                        _lg2_h 7DA9                                          _lg2_l 7DA5  
                                        _fabsf 56B2                                 __CFG_EBTRB$OFF 000000  
                                        _flags 003E                                          _cycle 0048  
                                        _errno 00E5                                          _ivln2 7D99  
                                        _fputc 502C                                          _fputs 5646  
                              __end_of_isdigit 57DE                                __end_of_ivln2_h 7DF9  
                              __end_of_ivln2_l 7D99                                          _two24 7DE5  
                           __CFG_MCLRE$EXTMCLR 000000                                __end_of_scalbnf 4262  
                                        atoi@n 0020                                          pad@fp 001C  
                                        atoi@s 0013                                          atol@n 0028  
                                        _width 00E9                                          atol@s 0018  
                                        ctoa@c 0029                                          _state 00FA  
                                        _putch 5B30                                          ctoa@w 002A  
                                        dtoa@d 0029                                          dtoa@i 0070  
                                        dtoa@n 0068                                          dtoa@p 0062  
                                        _sqrtf 2D38                                          dtoa@s 0066  
                                        dtoa@w 0064                                          nanf@s 000C  
                                        nanf@u 0010                                __end_of_isspace 5558  
                      __end_of_TMR1_Initialize 5646                                          pclath 000FFA  
                                        tablat 000FF5                                          powf@i 012C  
                                        powf@j 01AC                                          powf@k 01A0  
                                        powf@n 0188                                          powf@r 014C  
                                        powf@s 0154                                          powf@t 01B0  
                                        powf@u 0174                                          powf@v 0178  
                                        powf@w 0144                                          powf@x 00A1  
                                        powf@y 00A5                                          powf@z 01B4  
                                        ttemp5 0055                                          ttemp6 0058  
                                        ttemp7 005C                                          utoa@d 0029  
                                        utoa@i 006C                                          utoa@n 0064  
                                        utoa@p 0060                                          utoa@w 0062  
                                        status 000FD8                                          wtemp8 0055  
                              __end_of_sprintf 5430                                __end_of_strncmp 502C  
                 __size_of_EUSART_Write_String 0034                               ___lodiv@dividend 000C  
                              _TMR1_WriteTimer 59E6                 ?_INTERRUPT_InterruptManagerLow 0001  
                     __size_of_SPI1_Initialize 0024                        __size_of_SPI1_WriteWord 002A  
                              __initialization 5162                                   __end_of_cp_h 7E01  
                                 __end_of_cp_l 7DFD                                   __end_of_dp_h 7D91  
                                 __end_of_dp_l 7D89                                   __end_of_atoi 4AA2  
                                 __end_of_atol 45A0                                   __end_of_ctoa 54D2  
                                 __end_of_main 5332                                   __end_of_dtoa 407A  
                          SPI1_WriteWord@byteh 000F                                   __end_of_nanf 59AE  
                          SPI1_WriteWord@bytel 000E                                   __end_of_huge 7DE5  
                                 __end_of_powf 285A                                   __end_of_tiny 7DE1  
                                 __end_of_utoa 4418                                 ??_EUSART_Write 000C  
               ??_EUSART_SetRxInterruptHandler 000E                                         ??_atoi 0015  
                                       ??_atol 001C                                         ??_ctoa 002A  
                                       ??_main 00D3                                         ??_dtoa 0031  
                                       ??_nanf 0010                                         ??_powf 00A9  
                                       ??_utoa 0031                                _TMR3_StartTimer 5A5E  
                                __activetblptr 000002                                     _Parse_Data 285A  
                             ___lodiv@quotient 001C                                         ?_fabsf 000C  
    __end_of_EUSART_DefaultFramingErrorHandler 5B34     __size_of_EUSART_DefaultFramingErrorHandler 0002  
          ??_EUSART_DefaultFramingErrorHandler 0003             ?_EUSART_DefaultFramingErrorHandler 0001  
            _EUSART_DefaultFramingErrorHandler 5B32                        __end_of_TMR0_StartTimer 5A8C  
                   _EUSART_OverrunErrorHandler 01FA                                         ?_fputc 000C  
                          _temp_break_duration 0042                                         ?_fputs 0015  
                                       _ANSELA 000F11                                         ?_putch 0001  
                                       _ANSELB 000F19                                         _ANSELC 000F21  
                                       _T0CON0 000FD5                                         _T0CON1 000FD6  
                                       ?_sqrtf 0070                                         _T1GATE 000FD1  
                                       _T1GCON 000FD0                                         _T3GATE 000FCB  
                                       _T3GCON 000FCA                                         _RC1REG 000F99  
                                       _RB0PPS 000EEF                                         _RC1PPS 000EF8  
                                ??_AD9833_Init 00D1                                         _RC1STA 000F9D  
                                       _RC2PPS 000EF9                        TMR1_WriteTimer@timerVal 0003  
                                       _ODCONA 000F0F                                         _ODCONB 000F17  
                                       _ODCONC 000F1F                        __end_of_TMR3_Initialize 560C  
                                       i1l5307 56F4                                         i1l6205 5834  
                                       i1l5345 59DC                                 __CFG_WDTCCS$SC 000000  
                                       i1l6181 4ECA                                         i1l6157 588C  
                                       i1l5925 59F8                                         i2l6143 5A14  
                                       _INLVLA 000F0D                                         _INLVLB 000F15  
                                       _INLVLC 000F1D                                         _INLVLE 000F2A  
                                       i2l6473 547A                                         _OSCFRQ 000EDE  
                                       _TX1REG 000F9A                                         _TX1STA 000F9E  
                             __end_of___xxtofl 4968                            __size_of_SPI1_Close 0004  
                              _TMR3_WriteTimer 59CA                            __size_of_SPI1_Start 0008  
                               __CFG_PWRTE$OFF 000000                                 __CFG_XINST$OFF 000000  
                                 vfprintf@cfmt 0039                                   ?_TMR0_Reload 0001  
                                       ___flge 4BC6                                         ___lmul 5388  
                      __end_of_TMR1_StartTimer 5B2C                                    Parse_Data@i 00D1  
                                    ??___aodiv 001C                                      ??___fladd 0014  
                                    ??___aomod 001C                                         ___wmul 5942  
                                    ??___fldiv 0035                                      ??___flneg 0010  
                               __CFG_STVREN$ON 000000                                      ??___flmul 0024  
                                    ??___flsub 0035                                      ??___fltol 00B6  
                      __end_of_TMR0_WriteTimer 5AEC                                      ??___lodiv 001C  
                                    ??___lomod 001C                      i2TMR0_WriteTimer@timerVal 0001  
                          _EUSART_Transmit_ISR 5868                                         fabsf@u 0010  
                                       fabsf@x 000C                      i2TMR3_WriteTimer@timerVal 0001  
                             ?_TMR0_Initialize 0001                                         clear_0 51A8  
                                       clear_1 51B4                                         clear_2 51C0  
                                       clear_3 51CC                                         pad@buf 001E  
                                       ctoa@fp 0027                                         _output 0200  
                                       dtoa@fp 0027                                         _strlen 58EE  
                       AD9833_SetFrequency@LSB 00CB                         AD9833_SetFrequency@MSB 00C9  
                                       fputc@c 000C                                 _PMD_Initialize 59AE  
                                       fputs@c 0019                                         fputs@i 001A  
                                 __pdataCOMRAM 0048                                         fputs@s 0015  
                                    ??_isdigit 000E                                      ??_scalbnf 0060  
                                 __mediumconst 7D80                                      ??_isspace 000E  
                                       powf@s2 018C                                         powf@t1 0180  
                                       powf@t2 011C                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         powf@y1 0128  
                                       tblptru 000FF8                                         powf@ax 0170  
                                       powf@is 0194                                         powf@hx 0160  
                                       powf@hy 017C                                         powf@ix 01A8  
                                       powf@iy 0190                                         powf@sn 0184  
                                       putch@c 0001                               __end_of_vfprintf 5388  
                                       utoa@fp 0027                                         sqrtf@i 0081  
                                       sqrtf@m 0095                                         sqrtf@q 0089  
                                       sqrtf@r 0099                                         sqrtf@s 007D  
                                       sqrtf@t 008D                                         sqrtf@x 0070  
                                       sqrtf@z 0091                                      ??_sprintf 003B  
                      __end_of_TMR1_WriteTimer 5A02                                      ??_strncmp 0012  
                         ?_EUSART_Transmit_ISR 0001                  __size_of_INTERRUPT_Initialize 0012  
                                   ___flge@ff1 0068                                     ___flge@ff2 006C  
                             ?_TMR1_Initialize 0001                                   ___xxtofl@arg 0016  
                                 ___xxtofl@exp 0015               ??_INTERRUPT_InterruptManagerHigh 0003  
              ?_INTERRUPT_InterruptManagerHigh 0001                              _SYSTEM_Initialize 58C4  
                                 ___xxtofl@val 000C                                     __accesstop 0060  
                      __end_of__initialization 51D2                                      ?_INT0_ISR 0001  
                                   ___flneg@f1 000C                             ?_SYSTEM_Initialize 0001  
                                ___rparam_used 000001                                     ___fltol@f1 00B2  
         __end_of_EUSART_SetTxInterruptHandler 5ABA          __size_of_EUSART_SetTxInterruptHandler 000A  
                 _EUSART_SetTxInterruptHandler 5AB0                            __end_of_AD9833_Init 55D2  
                               __pcstackCOMRAM 0001                                   __pidataBANK0 5B06  
                                __end_of_lg2_h 7DAD                                  __end_of_lg2_l 7DA9  
                          ??_SYSTEM_Initialize 000E                        __end_of_TMR3_StartTimer 5A6E  
                                __end_of_fabsf 56E6                                      ?_TMR1_ISR 0001  
                                    ?_TMR3_ISR 0001                                  __end_of_ivln2 7D9D  
                                __end_of_fputc 50CC                                  __end_of_fputs 567E  
                            ??_SPI1_Initialize 000C                                  __end_of_two24 7DE9  
                                __end_of_putch 5B32                                  __end_of_sqrtf 3164  
                                   __end_of_L1 7DDD                                     __end_of_L2 7DD9  
                                   __end_of_L3 7DD5                                     __end_of_L4 7DD1  
                                   __end_of_L5 7DCD                                     __end_of_L6 7DC9  
                                   __end_of_P1 7DC5                                     __end_of_P2 7DC1  
                                   __end_of_P3 7DBD                                     __end_of_P4 7DB9  
                                   __end_of_P5 7DB5                         __end_of_PMD_Initialize 59CA  
                                   __end_of_bp 7DF5                                     __end_of_cp 7DA1  
                  __end_of_AD9833_SetFrequency 4828                             _spi1_configuration 7DE9  
                                ?i2_SPI1_Start 0001                    __size_of_EXT_INT_Initialize 000A  
                                  ?_Parse_Data 0001                           _eusartRxStatusBuffer 00D5  
              ??_EUSART_SetOverrunErrorHandler 000E                                        ??_fabsf 0010  
                             ?_TMR0_StartTimer 0001                                        ??_fputc 0010  
                    __end_of_SYSTEM_Initialize 58EE                                        ??_fputs 0019  
                        ??_EUSART_Transmit_ISR 0003                        __end_of_TMR3_WriteTimer 59E6  
                                      ??_putch 000C                                        ??_sqrtf 0074  
                                   __pbssBANK0 00D5                                     __pbssBANK1 01BC  
                                   __pbssBANK2 0200                           __end_of_EUSART_Write 5596  
                             ?_TMR3_Initialize 0001                                     ??_INT0_ISR 0005  
                  __size_of_EUSART_Receive_ISR 00B2                                 _SPI1_WriteWord 5918  
                                      ?___flge 0068                  ?_EUSART_SetTxInterruptHandler 000C  
             _EUSART_TxDefaultInterruptHandler 00F3                        __size_of_TMR0_StopTimer 0004  
                                      ?___lmul 000C                                        ?___wmul 000C  
                             ?_TMR1_StartTimer 0001                                     ??_TMR1_ISR 0005  
                              __CFG_PPS1WAY$ON 000000                                     ??_TMR3_ISR 0005  
                             ?_TMR0_WriteTimer 0003                                 ___lmul@product 0014  
                 ??_EUSART_DefaultErrorHandler 0003                                   ??_SPI1_Close 0003  
                              ?_PMD_Initialize 0001                              ?i1_TMR1_StopTimer 0001  
                               ??i2_SPI1_Start 0001                                        ?_strlen 000C  
                      __size_of_TMR1_StopTimer 0004                                   ??_SPI1_Start 000C  
                          _EUSART_Write_String 567E                                  _eusartRxCount 00EC  
                                      _INT0PPS 000EA1                             ??i1_TMR1_StopTimer 0003  
                                    ?___xxtofl 000C                                        _SP1BRGH 000F9C  
                                      _SP1BRGL 000F9B                                        _OSCCON1 000ED8  
                                      _OSCCON3 000EDA                             __size_of_vfpfcnvrt 03E6  
                __size_of_EUSART_RxDataHandler 0034                                        _OSCTUNE 000EDD  
                                      _SSP1ADD 000F93                                        _SLRCONA 000F0E  
                                      _SLRCONB 000F16                                        _SLRCONC 000F1E  
                                      _SSP1BUF 000F92                       ??_EUSART_SetErrorHandler 000E  
                             ?_TMR1_WriteTimer 0003                               ___lomod@dividend 000C  
                                  _AD9833_Init 5596                         __end_of_SPI1_WriteWord 5942  
                         ?_EUSART_Write_String 000D                        __size_of_TMR3_StopTimer 0004  
                           __end_of_SPI1_Close 5B24                                        __Hparam 0000  
          __size_of_EUSART_DefaultErrorHandler 0006                            __size_of_Parse_Data 04DE  
                           __end_of_SPI1_Start 5AFE                                        __Lparam 0000  
                   __CFG_RSTOSC$HFINTOSC_64MHZ 000000                                __size_of___flge 00D2  
                                      ___aodiv 45A0                                        ___fladd 389C  
                                      ___aomod 4AA2                                        ___fldiv 3BA8  
                                      ___flneg 57DE                                __size_of___lmul 0056  
                                      ___flmul 354A                               ?_TMR3_StartTimer 0001  
                                      ___flsub 54D2                                        ___fltol 4D66  
                              __size_of___wmul 0026                                        ___lodiv 4C98  
                                      ___lomod 4ED4                                      ?_vfprintf 0097  
                         __size_of_TMR0_Reload 002E                                        __pcinit 5162  
                                      __ramtop 0800                                        __ptext0 52D0  
                                      __ptext1 5B18                                        __ptext2 58C4  
                                      __ptext3 55D2                                        __ptext4 560C  
                                      __ptext5 577E                                        __ptext6 5968  
                                      __ptext7 59AE                                        __ptext8 525C  
                                      __ptext9 5A1E                                __size_of_strlen 002A  
                                    _T1CONbits 000FCF                          _OSCILLATOR_Initialize 5A1E  
                                 __size_of_abs 0032                                   __size_of_pad 0096  
                                      _isdigit 57AE                                        _ivln2_h 7DF5  
                                      _ivln2_l 7D95                                     ??___xxtofl 0010  
                                    _T3CONbits 000FC9                                        _scalbnf 407A  
                     ??_PIN_MANAGER_Initialize 000C                                        _isspace 551A  
                                      atoi@neg 0019                                        _rx_data 01E4  
                                      atol@neg 0021                     __size_of_SYSTEM_Initialize 002A  
                                      _sprintf 53DE                                        _strncmp 4F82  
                               __pintcode_body 5430                         __size_ofi2_TMR0_Reload 002E  
                         end_of_initialization 51D2                               ?_TMR3_WriteTimer 0003  
        __end_of_EUSART_SetOverrunErrorHandler 5ACE         __size_of_EUSART_SetOverrunErrorHandler 000A  
                _EUSART_SetOverrunErrorHandler 5AC4                                        fputc@fp 000E  
                        ??_EUSART_Write_String 000F                                ?_SPI1_WriteWord 000C  
                                __Lmediumconst 7D80                                        int_func 5430  
                                      fputs@fp 0017                        AD9833_SetFrequency@freq 00CD  
                            _EUSART_Initialize 51E0                                        powf@p_h 019C  
                                      powf@p_l 0164                                        powf@s_h 016C  
                           ?_EUSART_Initialize 0001                                        powf@t_h 0168  
                                      powf@s_l 0130                                        powf@t_l 0134  
                                      powf@z_h 0120                                        powf@z_l 0124  
                            __end_of_vfpfcnvrt 354A                                        postdec1 000FE5  
                                      postdec2 000FDD                                     _temp_cycle 004C  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                                     ??_vfprintf 0039  
                                      sqrtf@ix 009D                          __CFG_WDTCPS$WDTCPS_31 000000  
                                      strlen@a 000E                                        strlen@s 000C  
                          ??_EUSART_Initialize 000E                 ??_EUSART_SetTxInterruptHandler 000E  
                                    _PORTAbits 000F8D                                      _PORTBbits 000F8E  
                                    _PORTCbits 000F8F                                    ___fladd@grs 001B  
                                ___xxtofl@sign 0014                                      _TRISCbits 000F8A  
                        __size_of_EUSART_Write 003E                                    ___fldiv@grs 0077  
                                  ___fldiv@rem 0070                               __CFG_FEXTOSC$OFF 000000  
              __size_of_EUSART_SetErrorHandler 000A                                    ___flmul@grs 0029  
                    __end_of_EUSART_Initialize 525C                                _SPI1_Initialize 5968  
                         __end_ofi2_SPI1_Start 5B06                              __size_of_INT0_ISR 0032  
                         _timer0ReloadVal16bit 0232                                 _TMR0_StopTimer 5B2C  
                               _break_duration 0040                   __end_of_INTERRUPT_Initialize 5A5E  
                                i2_TMR0_Reload 5896                                 __end_of___flge 4C98  
                               __end_of___lmul 53DE             __end_of_EUSART_DefaultErrorHandler 5B18  
                   _EUSART_DefaultErrorHandler 5B12                                    vfpfcnvrt@ap 0076  
                                  vfpfcnvrt@fp 0072                                    vfpfcnvrt@ll 0087  
                               __end_of___wmul 5968                                  __pidataCOMRAM 5A9A  
                                 _EUSART_Write 5558                              __size_of_TMR1_ISR 0016  
                            __size_of_TMR3_ISR 002E                                 _TMR1_StopTimer 5B18  
                       ?_OSCILLATOR_Initialize 0001                                   ??_Parse_Data 003B  
                               __end_of_strlen 5918                            start_initialization 5162  
                              ___lodiv@divisor 0014                                ___lodiv@counter 0024  
                               _temp_frequency 00E1                       __size_of_TMR0_Initialize 0030  
              __size_of_PIN_MANAGER_Initialize 0074                                    __end_of_lg2 7DB1  
                                  __end_of_abs 574C                                    __end_of_pad 5162  
                                  __end_of_ovt 7DA5   EUSART_SetRxInterruptHandler@interruptHandler 000C  
 EUSART_SetTxInterruptHandler@interruptHandler 000C                                 _TMR3_StopTimer 5B1C  
                       __end_of_TMR0_StopTimer 5B30                 ?_EUSART_SetOverrunErrorHandler 000C  
                             __CFG_LPBOREN$OFF 000000                       __size_of_TMR1_Initialize 003A  
                           __end_of_Parse_Data 2D38                                    vfprintf@fmt 0099  
                   _EUSART_FramingErrorHandler 01FC                                       ??___flge 0035  
                             ??_PMD_Initialize 000C                                       ??___lmul 0014  
                               ?i2_TMR0_Reload 0001                                       ??___wmul 0010  
                       _EUSART_SetErrorHandler 5AD8                         __end_of_TMR1_StopTimer 5B1C  
                                  __pdataBANK0 00F6                     __end_of_EXT_INT_Initialize 5AB0  
                                     ??_strlen 000E                                      ___fladd@a 0010  
                                    ___fladd@b 000C                                      ___fldiv@a 006C  
                                    ___fldiv@b 0068                    __end_of_EUSART_Transmit_ISR 5896  
                                    ___flmul@a 0020                                      ___flmul@b 001C  
                                  __pbssCOMRAM 003C                                      ___flsub@a 0064  
                                    ___flsub@b 0060                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                               ___aodiv@dividend 000C  
                            __end_ofsqrtf@tiny 7D95                              __size_of___xxtofl 0140  
                      __end_of_SPI1_Initialize 598C                   __size_of_AD9833_SetFrequency 0140  
                       __end_of_TMR3_StopTimer 5B20                                   ?_AD9833_Init 0001  
                   __end_of_EUSART_Receive_ISR 4ED4                      __size_ofi1_TMR1_StopTimer 0004  
                   __size_of_EUSART_Initialize 007C               _EUSART_RxDefaultInterruptHandler 01FE  
                                    _atoi$2041 001B                                      _atoi$2042 001F  
                                    _atoi$2043 001D                                      __pnvBANK0 00EF  
                                    __pnvBANK1 01F8                                      __pnvBANK2 0232  
                                    _atol$2050 0023                                      _atol$2051 0027  
                                    _atol$2052 0025                       __size_of_TMR0_StartTimer 000E  
                              ?_TMR0_StopTimer 0001                   __end_of_EUSART_RxDataHandler 571A  
                       _PIN_MANAGER_Initialize 525C                                      _dtoa$1544 0060  
                     __size_of_TMR3_Initialize 003A                                      __pintcode 0008  
                                __pmediumconst 7D80                                       ?___aodiv 000C  
                                     ?___fladd 000C                                       ?___aomod 000C  
                                     ?___fldiv 0068                               ___aodiv@quotient 001E  
                                     ?___flneg 000C                                       ?___flmul 001C  
                                     ?___flsub 0060                                       ?___fltol 00B2  
                                     ?___lodiv 000C                                       ?___lomod 000C  
                                 _eusartRxHead 0044                                ?_TMR1_StopTimer 0001  
                                 _eusartTxHead 0046                                   _eusartRxTail 00ED  
                                 _eusartTxTail 0045                                    __pintcodelo 0018  
                 AD9833_SetFrequency@frequency 00BC                              __size_of_vfprintf 0056  
                      _eusartTxBufferRemaining 00F5                                ___lomod@divisor 0014  
                                     _BAUD1CON 000F9F                                      fabsf@F463 00DD  
                              ___lomod@counter 001C                       __size_of_TMR1_StartTimer 0004  
                                     ?_isdigit 000C                                       ?_scalbnf 0035  
                     __size_of_TMR0_WriteTimer 000A                                       ?_isspace 000C  
                                    _frequency 00F6                               ??_SPI1_WriteWord 000E  
                               __size_of_fabsf 0034                                       _T0CKIPPS 000EA4  
                                     ?_sprintf 009D                                 __size_of_fputc 00A0  
                               __size_of_fputs 0038                                       ?_strncmp 000C  
                        __size_ofi2_SPI1_Start 0008                                 __size_of_putch 0002  
                               __size_of_sqrtf 042C                           _INTERRUPT_Initialize 5A4C  
                              ?_TMR3_StopTimer 0001                                      _powf$2500 0110  
                                    _powf$2501 0114                                      _powf$2502 0118  
                                    _powf$2490 0148                                      _powf$2491 0198  
                                    _powf$2492 0138                                      _powf$2493 0100  
                                    _powf$2494 0104                                      _powf$2495 015C  
                                    _powf$2488 01A4                                      _powf$2496 013C  
                                    _powf$2489 0158                                      _powf$2497 0140  
                                    _powf$2498 0108                                      _powf$2499 010C  
                            ??_TMR0_Initialize 000C                                 _eusartTxBuffer 01BC  
                                     _INT0_ISR 574C                                 ___wmul@product 0010  
       EUSART_SetErrorHandler@interruptHandler 000C                                       _IPR0bits 000EBA  
                                     _PIE0bits 000EC2                                       _IPR3bits 000EBD  
                                     _IPR4bits 000EBE                                       _PIE3bits 000EC5  
                                     _PIE4bits 000EC6                              _eusartRxLastError 00EB  
                          __CFG_BORV$VBOR_2P45 000000                              i2_TMR0_StartTimer 5A8C  
                     __size_of_TMR1_WriteTimer 001C                                       i1u620_28 4E88  
                                     i1u620_29 4E9E                                       i1u622_28 4EB4  
                              ??i2_TMR0_Reload 0003                                       i1u618_28 4E5A  
                                     i1u618_29 4E70                                       i1u661_28 0072  
                                     _PIR0bits 000ECA                                       i1u658_28 005A  
              ??_EUSART_SetFramingErrorHandler 000E                                       i1u597_20 5A82  
                                     _PIR3bits 000ECD                                       _PIR4bits 000ECE  
                                     i2u647_40 5A90                                  ??_TMR0_Reload 0005  
                           ?i2_TMR0_StartTimer 0001                                       _SSP1CON1 000F96  
    __end_of_EUSART_DefaultOverrunErrorHandler 5B12     __size_of_EUSART_DefaultOverrunErrorHandler 0006  
          ??_EUSART_DefaultOverrunErrorHandler 0003             ?_EUSART_DefaultOverrunErrorHandler 0001  
            _EUSART_DefaultOverrunErrorHandler 5B0C                                       _TMR1_ISR 5A36  
                                     _TMR3_ISR 580C                                       _SSP1STAT 000F95  
                                   powf@yisint 0150                                      _vfpfcnvrt 3164  
                            ??_TMR1_Initialize 000C                            ??i2_TMR0_StartTimer 0001  
                            ___wmul@multiplier 000C                                   i2_SPI1_Start 5AFE  
                     __size_of_TMR3_StartTimer 0010                              i2_TMR0_WriteTimer 5AEC  
                                 _isspace$2068 0012                    __end_of_EUSART_Write_String 56B2  
                                   vfpfcnvrt@c 0086                               ?_SPI1_Initialize 0001  
                           ?i2_TMR0_WriteTimer 0001                              ___lmul@multiplier 000C  
                                    copy_data0 5176                                      copy_data1 5196  
                        ?_INTERRUPT_Initialize 0001                                  _temp_packages 0052  
                    __end_ofi2_TMR0_StartTimer 5A9A                            ??i2_TMR0_WriteTimer 0003  
                                     __Hrparam 0000                       __size_of_TMR3_WriteTimer 001C  
                                   vfprintf@ap 009B                                       __Lrparam 0000  
                                   vfprintf@fp 0097                             __CFG_BOREN$SBORDIS 000000  
                      ??_OSCILLATOR_Initialize 000C                            _EUSART_ErrorHandler 01F8  
                            ??_TMR0_StartTimer 0003                               __size_of___aodiv 0148  
                             __size_of___fladd 030C                               __size_of___aomod 0124  
                             __size_of___fldiv 028A                               __size_of___flneg 002E  
                             __size_of___flmul 0352                               __size_of___flsub 0048  
                             __size_of___fltol 00BC                    ?_EUSART_DefaultErrorHandler 0001  
                             __size_of___lodiv 00CE                               __size_of___lomod 00AE  
                                   ?_vfpfcnvrt 0072                                ___aodiv@divisor 0014  
                            ??_TMR3_Initialize 000C                            __end_of_TMR0_Reload 5868  
                              ___aodiv@counter 001C                      __end_ofi2_TMR0_WriteTimer 5AF6  
                                   sprintf@fmt 009F                                       ___xxtofl 4828  
                                   _T0CON0bits 000FD5                ??_INTERRUPT_InterruptManagerLow 0005  
                            i2_TMR3_StartTimer 5A6E                               __size_of_isdigit 0030  
                             __size_of_scalbnf 01E8                           _EUSART_RxDataHandler 56E6  
                             __size_of_isspace 003E                                       __ptext10 5A4C  
                                     __ptext11 5AA6                                       __ptext20 53DE  
                                     __ptext12 51E0                                       __ptext21 5332  
                                     __ptext13 5AB0                                       __ptext30 45A0  
                                     __ptext22 3164                                       __ptext14 5ABA  
                                     __ptext31 5482                                       __ptext23 4262  
                                     __ptext15 5AC4                                       __ptext40 551A  
                                     __ptext32 50CC                                       __ptext24 4ED4  
                                     __ptext16 5ACE                                       __ptext41 57AE  
                                     __ptext33 58EE                                       __ptext25 4C98  
                                     __ptext17 5AD8                                       __ptext50 4BC6  
                                     __ptext42 5942                                       __ptext34 5646  
                                     __ptext26 4F82                                       __ptext18 5AF6  
                                     __ptext51 407A                                       __ptext43 567E  
                                     __ptext35 502C                                       __ptext27 3E32  
                                     __ptext19 285A                                       __ptext60 5918  
                                     __ptext52 354A                                       __ptext44 5558  
                                     __ptext36 5B30                                       __ptext28 571A  
                                     __ptext53 56B2                                       __ptext45 5596  
                                     __ptext37 4418                                       __ptext29 4AA2  
                                     __ptext70 5AE2                                       __ptext62 580C  
                                     __ptext54 4828                                       __ptext46 46E8  
                                     __ptext38 5388                                       __ptext71 5B20  
                                     __ptext63 5B1C                                       __ptext55 54D2  
                                     __ptext47 00B6                                       __ptext39 4968  
                                     __ptext80 56E6                                       __ptext72 5868  
                                     __ptext64 5A5E                                       __ptext56 389C  
                                     __ptext48 2D38                                       __ptext73 4E22  
                                     __ptext65 59CA                                       __ptext57 57DE  
                                     __ptext49 598C                                       __ptext82 5A6E  
                                     __ptext74 5B24                                       __ptext66 5A36  
                                     __ptext58 3BA8                                       __ptext83 5A02  
                                     __ptext75 59E6                                       __ptext67 574C  
                                     __ptext59 4D66                                       __ptext84 5A8C  
                                     __ptext76 5B28                                       __ptext68 5A7E  
                                     __ptext85 5896                                       __ptext77 5B0C  
                                     __ptext69 583A                                       __ptext86 5AEC  
                                     __ptext78 5B32                                       __ptext87 5AFE  
                                     __ptext79 5B12                                       __ptext88 5B2C  
                                     __ptext89 0000                             ?i2_TMR3_StartTimer 0001  
                                 _SSP1CON1bits 000F96                              ??_TMR1_StartTimer 0003  
                             __size_of_sprintf 0052                        TMR0_WriteTimer@timerVal 0003  
                            ??_TMR0_WriteTimer 0005                               __size_of_strncmp 00AA  
                      TMR3_WriteTimer@timerVal 0003                               i1_TMR1_StopTimer 5B24  
                                     _packages 0050                                  __size_of_atoi 013A  
                                __size_of_atol 0188                                  __size_of_ctoa 0050  
                                __size_of_main 0062                                  __size_of_dtoa 0248  
                                __size_of_nanf 0022                            ??i2_TMR3_StartTimer 0003  
                                __size_of_powf 27A4                                  __size_of_utoa 01B6  
                         __size_of_AD9833_Init 003C                           __CFG_WDTCWS$WDTCWS_7 000000  
                      ?_EUSART_SetErrorHandler 000C                           powf@__xc8_float_word 01B8  
                                   _RC1STAbits 000F9D                              i2_TMR3_WriteTimer 5A02  
EUSART_SetOverrunErrorHandler@interruptHandler 000C                       _AD9833_SetFrequency$2487 00C5  
                          _AD9833_SetFrequency 46E8                                       int$flags 0054  
                           ?i2_TMR3_WriteTimer 0001                                       _vfprintf 5332  
        __end_of_EUSART_SetFramingErrorHandler 5AD8         __size_of_EUSART_SetFramingErrorHandler 000A  
                _EUSART_SetFramingErrorHandler 5ACE                              ??_TMR1_WriteTimer 0005  
                             ___aomod@dividend 000C                      __end_ofi2_TMR3_StartTimer 5A7E  
                          ??i2_TMR3_WriteTimer 0003                                     _INTCONbits 000FF2  
                        ?_EUSART_RxDataHandler 0001                                       isdigit@c 000C  
                       ??_INTERRUPT_Initialize 000C                           ?_AD9833_SetFrequency 00BC  
                           _EXT_INT_Initialize 5AA6                                       scalbnf@n 0039  
                                     scalbnf@u 0064                                       scalbnf@x 0035  
                                     scalbnf@y 0068                              ??_TMR3_StartTimer 0005  
                                     intlevel1 0000                                       intlevel2 0000  
                                    sprintf@ap 00A7                               ??_TMR0_StopTimer 0001  
                                    sqrtf@tiny 7D91                                       isspace@c 000C  
                      ?_PIN_MANAGER_Initialize 0001                     __size_ofi2_TMR0_StartTimer 000E  
               __end_of_EUSART_SetErrorHandler 5AE2                              __CFG_CLKOUTEN$OFF 000000  
                          ?_EXT_INT_Initialize 0001                      __end_ofi2_TMR3_WriteTimer 5A1E  
                                    strncmp@_l 000C                                      strncmp@_r 000E  
         __end_of_EUSART_SetRxInterruptHandler 5AC4          __size_of_EUSART_SetRxInterruptHandler 000A  
                 _EUSART_SetRxInterruptHandler 5ABA                               ??_TMR1_StopTimer 000C  
                                  _TMR0_Reload 583A                             _EUSART_Receive_ISR 4E22  
EUSART_SetFramingErrorHandler@interruptHandler 000C                                ___aomod@divisor 0014  
                                  ??_vfpfcnvrt 0078                                ___aomod@counter 001C  
                            ??_TMR3_WriteTimer 0005                                     _SPI1_Close 5B20  
                      EUSART_Write_String@data 000D         __end_of_INTERRUPT_InterruptManagerHigh 5482  
      __size_of_INTERRUPT_InterruptManagerHigh 547A                 _INTERRUPT_InterruptManagerHigh 0008  
                         ??_EXT_INT_Initialize 000C                                       sprintf@f 00A9  
                                     sprintf@s 009D                            ?_EUSART_Receive_ISR 0001  
                                   _SPI1_Start 5AF6                     __size_ofi2_TMR0_WriteTimer 000A  
                                   _SSP1DATPPS 000EB8                                     _SSP1CLKPPS 000EB7  
                              _TMR0_Initialize 577E                               ??_TMR3_StopTimer 0003  
                                     strncmp@l 0013                                       strncmp@n 0010  
                                     strncmp@r 0015                          ??_AD9833_SetFrequency 00C0  
                                ___fladd@signs 0018          __end_of_INTERRUPT_InterruptManagerLow 00B2  
       __size_of_INTERRUPT_InterruptManagerLow 009A                  _INTERRUPT_InterruptManagerLow 0018  
                           EUSART_Write@txData 000C                   __size_of_EUSART_Transmit_ISR 002E  
                                 ___aodiv@sign 001D                 __end_of_PIN_MANAGER_Initialize 52D0  
                        sqrtf@__xc8_float_word 0085                                   ___fladd@aexp 0019  
                                 ___fladd@bexp 001A                           ??_EUSART_Receive_ISR 0005  
                                  _rx_data_end 00EE                           EUSART_Write_String@i 000F  
                                 ___aomod@sign 001D                                _TMR1_Initialize 560C  
                   __end_of_spi1_configuration 7DED  
