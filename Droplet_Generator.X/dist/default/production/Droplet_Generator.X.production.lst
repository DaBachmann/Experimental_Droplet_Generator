

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 18 10:39:33 2021

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   106                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   117                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   118  0000                     
   119                           ; Version 2.05
   120                           ; Generated 20/12/2018 GMT
   121                           ; 
   122                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   123                           ; All rights reserved.
   124                           ; 
   125                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   126                           ; 
   127                           ; Redistribution and use in source and binary forms, with or without modification, are
   128                           ; permitted provided that the following conditions are met:
   129                           ; 
   130                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   131                           ;        conditions and the following disclaimer.
   132                           ; 
   133                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   134                           ;        of conditions and the following disclaimer in the documentation and/or other
   135                           ;        materials provided with the distribution.
   136                           ; 
   137                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   138                           ;        software without specific prior written permission.
   139                           ; 
   140                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   141                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   142                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   143                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   144                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   145                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   146                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   147                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   148                           ; 
   149                           ; 
   150                           ; Code-generator required, PIC18F25K40 Definitions
   151                           ; 
   152                           ; SFR Addresses
   153  0000                     
   154                           	psect	idataCOMRAM
   155  005B1A                     __pidataCOMRAM:
   156                           	opt callstack 0
   157                           
   158                           ;initializer for _cycle
   159  005B1A  0002               	dw	2
   160  005B1C  0000               	dw	0
   161                           
   162                           ;initializer for _temp_cycle
   163  005B1E  0002               	dw	2
   164  005B20  0000               	dw	0
   165                           
   166                           ;initializer for _packages
   167  005B22  0001               	dw	1
   168                           
   169                           ;initializer for _temp_packages
   170  005B24  0001               	dw	1
   171                           
   172                           	psect	idataBANK0
   173  005B86                     __pidataBANK0:
   174                           	opt callstack 0
   175                           
   176                           ;initializer for _frequency
   177  005B86  C6C0               	dw	50880
   178  005B88  002D               	dw	45
   179                           
   180                           ;initializer for _state
   181  005B8A  0001               	dw	1
   182                           
   183                           	psect	mediumconst
   184  007D80                     __pmediumconst:
   185                           	opt callstack 0
   186  007D80  00                 	db	0
   187  007D81                     _dp_l:
   188                           	opt callstack 0
   189  007D81  0000               	dw	0
   190  007D83  0000               	dw	0
   191  007D85  CFDC               	dw	53212
   192  007D87  35D1               	dw	13777
   193  007D89                     __end_of_dp_l:
   194                           	opt callstack 0
   195  007D89                     _dp_h:
   196                           	opt callstack 0
   197  007D89  0000               	dw	0
   198  007D8B  0000               	dw	0
   199  007D8D  C000               	dw	49152
   200  007D8F  3F15               	dw	16149
   201  007D91                     __end_of_dp_h:
   202                           	opt callstack 0
   203  007D91  4260               	dw	16992
   204  007D93  0DA2               	dw	3490
   205  007D95                     __end_ofsqrtf@tiny:
   206                           	opt callstack 0
   207  007D95  A570               	dw	42352
   208  007D97  36EC               	dw	14060
   209  007D99                     __end_of_ivln2_l:
   210                           	opt callstack 0
   211  007D99  AA3B               	dw	43579
   212  007D9B  3FB8               	dw	16312
   213  007D9D                     __end_of_ivln2:
   214                           	opt callstack 0
   215  007D9D  384F               	dw	14415
   216  007D9F  3F76               	dw	16246
   217  007DA1                     __end_of_cp:
   218                           	opt callstack 0
   219  007DA1  AA3C               	dw	43580
   220  007DA3  3338               	dw	13112
   221  007DA5                     __end_of_ovt:
   222                           	opt callstack 0
   223  007DA5  BE8C               	dw	48780
   224  007DA7  35BF               	dw	13759
   225  007DA9                     __end_of_lg2_l:
   226                           	opt callstack 0
   227  007DA9  7200               	dw	29184
   228  007DAB  3F31               	dw	16177
   229  007DAD                     __end_of_lg2_h:
   230                           	opt callstack 0
   231  007DAD  7218               	dw	29208
   232  007DAF  3F31               	dw	16177
   233  007DB1                     __end_of_lg2:
   234                           	opt callstack 0
   235  007DB1  BB4C               	dw	47948
   236  007DB3  3331               	dw	13105
   237  007DB5                     __end_of_P5:
   238                           	opt callstack 0
   239  007DB5  EA0E               	dw	59918
   240  007DB7  B5DD               	dw	46557
   241  007DB9                     __end_of_P4:
   242                           	opt callstack 0
   243  007DB9  B355               	dw	45909
   244  007DBB  388A               	dw	14474
   245  007DBD                     __end_of_P3:
   246                           	opt callstack 0
   247  007DBD  0B61               	dw	2913
   248  007DBF  BB36               	dw	47926
   249  007DC1                     __end_of_P2:
   250                           	opt callstack 0
   251  007DC1  AAAB               	dw	43691
   252  007DC3  3E2A               	dw	15914
   253  007DC5                     __end_of_P1:
   254                           	opt callstack 0
   255  007DC5  F142               	dw	61762
   256  007DC7  3E53               	dw	15955
   257  007DC9                     __end_of_L6:
   258                           	opt callstack 0
   259  007DC9  3255               	dw	12885
   260  007DCB  3E6C               	dw	15980
   261  007DCD                     __end_of_L5:
   262                           	opt callstack 0
   263  007DCD  A305               	dw	41733
   264  007DCF  3E8B               	dw	16011
   265  007DD1                     __end_of_L4:
   266                           	opt callstack 0
   267  007DD1  AAAB               	dw	43691
   268  007DD3  3EAA               	dw	16042
   269  007DD5                     __end_of_L3:
   270                           	opt callstack 0
   271  007DD5  6DB7               	dw	28087
   272  007DD7  3EDB               	dw	16091
   273  007DD9                     __end_of_L2:
   274                           	opt callstack 0
   275  007DD9  999A               	dw	39322
   276  007DDB  3F19               	dw	16153
   277  007DDD                     __end_of_L1:
   278                           	opt callstack 0
   279  007DDD  4260               	dw	16992
   280  007DDF  0DA2               	dw	3490
   281  007DE1                     __end_of_tiny:
   282                           	opt callstack 0
   283  007DE1  F2CA               	dw	62154
   284  007DE3  7149               	dw	29001
   285  007DE5                     __end_of_huge:
   286                           	opt callstack 0
   287  007DE5  0000               	dw	0
   288  007DE7  4B80               	dw	19328
   289  007DE9                     __end_of_two24:
   290                           	opt callstack 0
   291  007DE9  02                 	db	2
   292  007DEA  40                 	db	64
   293  007DEB  01                 	db	1
   294  007DEC  00                 	db	0
   295  007DED                     __end_of_spi1_configuration:
   296                           	opt callstack 0
   297  007DED                     _bp:
   298                           	opt callstack 0
   299  007DED  0000               	dw	0
   300  007DEF  3F80               	dw	16256
   301  007DF1  0000               	dw	0
   302  007DF3  3FC0               	dw	16320
   303  007DF5                     __end_of_bp:
   304                           	opt callstack 0
   305  007DF5  AA00               	dw	43520
   306  007DF7  3FB8               	dw	16312
   307  007DF9                     __end_of_ivln2_h:
   308                           	opt callstack 0
   309  007DF9  23C6               	dw	9158
   310  007DFB  B8F6               	dw	47350
   311  007DFD                     __end_of_cp_l:
   312                           	opt callstack 0
   313  007DFD  4000               	dw	16384
   314  007DFF  3F76               	dw	16246
   315  007E01                     __end_of_cp_h:
   316                           	opt callstack 0
   317  007E01                     STR_12:
   318  007E01  4E                 	db	78	;'N'
   319  007E02  75                 	db	117	;'u'
   320  007E03  6D                 	db	109	;'m'
   321  007E04  62                 	db	98	;'b'
   322  007E05  65                 	db	101	;'e'
   323  007E06  72                 	db	114	;'r'
   324  007E07  20                 	db	32
   325  007E08  6F                 	db	111	;'o'
   326  007E09  66                 	db	102	;'f'
   327  007E0A  20                 	db	32
   328  007E0B  50                 	db	80	;'P'
   329  007E0C  61                 	db	97	;'a'
   330  007E0D  63                 	db	99	;'c'
   331  007E0E  6B                 	db	107	;'k'
   332  007E0F  61                 	db	97	;'a'
   333  007E10  67                 	db	103	;'g'
   334  007E11  65                 	db	101	;'e'
   335  007E12  73                 	db	115	;'s'
   336  007E13  20                 	db	32
   337  007E14  63                 	db	99	;'c'
   338  007E15  68                 	db	104	;'h'
   339  007E16  61                 	db	97	;'a'
   340  007E17  6E                 	db	110	;'n'
   341  007E18  67                 	db	103	;'g'
   342  007E19  65                 	db	101	;'e'
   343  007E1A  64                 	db	100	;'d'
   344  007E1B  20                 	db	32
   345  007E1C  74                 	db	116	;'t'
   346  007E1D  6F                 	db	111	;'o'
   347  007E1E  20                 	db	32
   348  007E1F  25                 	db	37
   349  007E20  75                 	db	117	;'u'
   350  007E21  20                 	db	32
   351  007E22  50                 	db	80	;'P'
   352  007E23  61                 	db	97	;'a'
   353  007E24  63                 	db	99	;'c'
   354  007E25  6B                 	db	107	;'k'
   355  007E26  61                 	db	97	;'a'
   356  007E27  67                 	db	103	;'g'
   357  007E28  65                 	db	101	;'e'
   358  007E29  73                 	db	115	;'s'
   359  007E2A  00                 	db	0
   360  007E2B                     STR_1:
   361  007E2B  55                 	db	85	;'U'
   362  007E2C  6E                 	db	110	;'n'
   363  007E2D  65                 	db	101	;'e'
   364  007E2E  78                 	db	120	;'x'
   365  007E2F  70                 	db	112	;'p'
   366  007E30  65                 	db	101	;'e'
   367  007E31  63                 	db	99	;'c'
   368  007E32  74                 	db	116	;'t'
   369  007E33  65                 	db	101	;'e'
   370  007E34  64                 	db	100	;'d'
   371  007E35  20                 	db	32
   372  007E36  43                 	db	67	;'C'
   373  007E37  68                 	db	104	;'h'
   374  007E38  61                 	db	97	;'a'
   375  007E39  72                 	db	114	;'r'
   376  007E3A  61                 	db	97	;'a'
   377  007E3B  63                 	db	99	;'c'
   378  007E3C  74                 	db	116	;'t'
   379  007E3D  65                 	db	101	;'e'
   380  007E3E  72                 	db	114	;'r'
   381  007E3F  20                 	db	32
   382  007E40  25                 	db	37
   383  007E41  63                 	db	99	;'c'
   384  007E42  20                 	db	32
   385  007E43  6F                 	db	111	;'o'
   386  007E44  6E                 	db	110	;'n'
   387  007E45  20                 	db	32
   388  007E46  50                 	db	80	;'P'
   389  007E47  6F                 	db	111	;'o'
   390  007E48  73                 	db	115	;'s'
   391  007E49  69                 	db	105	;'i'
   392  007E4A  74                 	db	116	;'t'
   393  007E4B  69                 	db	105	;'i'
   394  007E4C  6F                 	db	111	;'o'
   395  007E4D  6E                 	db	110	;'n'
   396  007E4E  20                 	db	32
   397  007E4F  25                 	db	37
   398  007E50  69                 	db	105	;'i'
   399  007E51  00                 	db	0
   400  007E52                     STR_8:
   401  007E52  45                 	db	69	;'E'
   402  007E53  72                 	db	114	;'r'
   403  007E54  72                 	db	114	;'r'
   404  007E55  6F                 	db	111	;'o'
   405  007E56  72                 	db	114	;'r'
   406  007E57  21                 	db	33
   407  007E58  20                 	db	32
   408  007E59  4D                 	db	77	;'M'
   409  007E5A  61                 	db	97	;'a'
   410  007E5B  78                 	db	120	;'x'
   411  007E5C  69                 	db	105	;'i'
   412  007E5D  6D                 	db	109	;'m'
   413  007E5E  75                 	db	117	;'u'
   414  007E5F  6D                 	db	109	;'m'
   415  007E60  20                 	db	32
   416  007E61  42                 	db	66	;'B'
   417  007E62  72                 	db	114	;'r'
   418  007E63  65                 	db	101	;'e'
   419  007E64  61                 	db	97	;'a'
   420  007E65  6B                 	db	107	;'k'
   421  007E66  20                 	db	32
   422  007E67  44                 	db	68	;'D'
   423  007E68  75                 	db	117	;'u'
   424  007E69  72                 	db	114	;'r'
   425  007E6A  61                 	db	97	;'a'
   426  007E6B  74                 	db	116	;'t'
   427  007E6C  69                 	db	105	;'i'
   428  007E6D  6F                 	db	111	;'o'
   429  007E6E  6E                 	db	110	;'n'
   430  007E6F  20                 	db	32
   431  007E70  32                 	db	50	;'2'
   432  007E71  35                 	db	53	;'5'
   433  007E72  36                 	db	54	;'6'
   434  007E73  20                 	db	32
   435  007E74  6D                 	db	109	;'m'
   436  007E75  73                 	db	115	;'s'
   437  007E76  00                 	db	0
   438  007E77                     STR_2:
   439  007E77  45                 	db	69	;'E'
   440  007E78  72                 	db	114	;'r'
   441  007E79  72                 	db	114	;'r'
   442  007E7A  6F                 	db	111	;'o'
   443  007E7B  72                 	db	114	;'r'
   444  007E7C  21                 	db	33
   445  007E7D  20                 	db	32
   446  007E7E  4D                 	db	77	;'M'
   447  007E7F  69                 	db	105	;'i'
   448  007E80  6E                 	db	110	;'n'
   449  007E81  69                 	db	105	;'i'
   450  007E82  6D                 	db	109	;'m'
   451  007E83  75                 	db	117	;'u'
   452  007E84  6D                 	db	109	;'m'
   453  007E85  20                 	db	32
   454  007E86  46                 	db	70	;'F'
   455  007E87  72                 	db	114	;'r'
   456  007E88  65                 	db	101	;'e'
   457  007E89  71                 	db	113	;'q'
   458  007E8A  75                 	db	117	;'u'
   459  007E8B  65                 	db	101	;'e'
   460  007E8C  6E                 	db	110	;'n'
   461  007E8D  63                 	db	99	;'c'
   462  007E8E  79                 	db	121	;'y'
   463  007E8F  20                 	db	32
   464  007E90  31                 	db	49	;'1'
   465  007E91  30                 	db	48	;'0'
   466  007E92  30                 	db	48	;'0'
   467  007E93  30                 	db	48	;'0'
   468  007E94  30                 	db	48	;'0'
   469  007E95  30                 	db	48	;'0'
   470  007E96  30                 	db	48	;'0'
   471  007E97  20                 	db	32
   472  007E98  48                 	db	72	;'H'
   473  007E99  7A                 	db	122	;'z'
   474  007E9A  00                 	db	0
   475  007E9B                     STR_3:
   476  007E9B  45                 	db	69	;'E'
   477  007E9C  72                 	db	114	;'r'
   478  007E9D  72                 	db	114	;'r'
   479  007E9E  6F                 	db	111	;'o'
   480  007E9F  72                 	db	114	;'r'
   481  007EA0  21                 	db	33
   482  007EA1  20                 	db	32
   483  007EA2  4D                 	db	77	;'M'
   484  007EA3  61                 	db	97	;'a'
   485  007EA4  78                 	db	120	;'x'
   486  007EA5  69                 	db	105	;'i'
   487  007EA6  6D                 	db	109	;'m'
   488  007EA7  75                 	db	117	;'u'
   489  007EA8  6D                 	db	109	;'m'
   490  007EA9  20                 	db	32
   491  007EAA  46                 	db	70	;'F'
   492  007EAB  72                 	db	114	;'r'
   493  007EAC  65                 	db	101	;'e'
   494  007EAD  71                 	db	113	;'q'
   495  007EAE  75                 	db	117	;'u'
   496  007EAF  65                 	db	101	;'e'
   497  007EB0  6E                 	db	110	;'n'
   498  007EB1  63                 	db	99	;'c'
   499  007EB2  79                 	db	121	;'y'
   500  007EB3  20                 	db	32
   501  007EB4  35                 	db	53	;'5'
   502  007EB5  30                 	db	48	;'0'
   503  007EB6  30                 	db	48	;'0'
   504  007EB7  30                 	db	48	;'0'
   505  007EB8  30                 	db	48	;'0'
   506  007EB9  30                 	db	48	;'0'
   507  007EBA  30                 	db	48	;'0'
   508  007EBB  20                 	db	32
   509  007EBC  48                 	db	72	;'H'
   510  007EBD  7A                 	db	122	;'z'
   511  007EBE  00                 	db	0
   512  007EBF                     STR_11:
   513  007EBF  45                 	db	69	;'E'
   514  007EC0  72                 	db	114	;'r'
   515  007EC1  72                 	db	114	;'r'
   516  007EC2  6F                 	db	111	;'o'
   517  007EC3  72                 	db	114	;'r'
   518  007EC4  21                 	db	33
   519  007EC5  20                 	db	32
   520  007EC6  4D                 	db	77	;'M'
   521  007EC7  61                 	db	97	;'a'
   522  007EC8  78                 	db	120	;'x'
   523  007EC9  69                 	db	105	;'i'
   524  007ECA  6D                 	db	109	;'m'
   525  007ECB  75                 	db	117	;'u'
   526  007ECC  6D                 	db	109	;'m'
   527  007ECD  20                 	db	32
   528  007ECE  50                 	db	80	;'P'
   529  007ECF  61                 	db	97	;'a'
   530  007ED0  63                 	db	99	;'c'
   531  007ED1  6B                 	db	107	;'k'
   532  007ED2  61                 	db	97	;'a'
   533  007ED3  67                 	db	103	;'g'
   534  007ED4  65                 	db	101	;'e'
   535  007ED5  73                 	db	115	;'s'
   536  007ED6  20                 	db	32
   537  007ED7  63                 	db	99	;'c'
   538  007ED8  6F                 	db	111	;'o'
   539  007ED9  75                 	db	117	;'u'
   540  007EDA  6E                 	db	110	;'n'
   541  007EDB  74                 	db	116	;'t'
   542  007EDC  20                 	db	32
   543  007EDD  32                 	db	50	;'2'
   544  007EDE  35                 	db	53	;'5'
   545  007EDF  36                 	db	54	;'6'
   546  007EE0  00                 	db	0
   547  007EE1                     STR_6:
   548  007EE1  45                 	db	69	;'E'
   549  007EE2  72                 	db	114	;'r'
   550  007EE3  72                 	db	114	;'r'
   551  007EE4  6F                 	db	111	;'o'
   552  007EE5  72                 	db	114	;'r'
   553  007EE6  21                 	db	33
   554  007EE7  20                 	db	32
   555  007EE8  4D                 	db	77	;'M'
   556  007EE9  61                 	db	97	;'a'
   557  007EEA  78                 	db	120	;'x'
   558  007EEB  69                 	db	105	;'i'
   559  007EEC  6D                 	db	109	;'m'
   560  007EED  75                 	db	117	;'u'
   561  007EEE  6D                 	db	109	;'m'
   562  007EEF  20                 	db	32
   563  007EF0  43                 	db	67	;'C'
   564  007EF1  79                 	db	121	;'y'
   565  007EF2  63                 	db	99	;'c'
   566  007EF3  6C                 	db	108	;'l'
   567  007EF4  65                 	db	101	;'e'
   568  007EF5  20                 	db	32
   569  007EF6  63                 	db	99	;'c'
   570  007EF7  6F                 	db	111	;'o'
   571  007EF8  75                 	db	117	;'u'
   572  007EF9  6E                 	db	110	;'n'
   573  007EFA  74                 	db	116	;'t'
   574  007EFB  20                 	db	32
   575  007EFC  33                 	db	51	;'3'
   576  007EFD  32                 	db	50	;'2'
   577  007EFE  30                 	db	48	;'0'
   578  007EFF  30                 	db	48	;'0'
   579  007F00  30                 	db	48	;'0'
   580  007F01  00                 	db	0
   581  007F02                     STR_10:
   582  007F02  45                 	db	69	;'E'
   583  007F03  72                 	db	114	;'r'
   584  007F04  72                 	db	114	;'r'
   585  007F05  6F                 	db	111	;'o'
   586  007F06  72                 	db	114	;'r'
   587  007F07  21                 	db	33
   588  007F08  20                 	db	32
   589  007F09  4D                 	db	77	;'M'
   590  007F0A  69                 	db	105	;'i'
   591  007F0B  6E                 	db	110	;'n'
   592  007F0C  69                 	db	105	;'i'
   593  007F0D  6D                 	db	109	;'m'
   594  007F0E  75                 	db	117	;'u'
   595  007F0F  6D                 	db	109	;'m'
   596  007F10  20                 	db	32
   597  007F11  50                 	db	80	;'P'
   598  007F12  61                 	db	97	;'a'
   599  007F13  63                 	db	99	;'c'
   600  007F14  6B                 	db	107	;'k'
   601  007F15  61                 	db	97	;'a'
   602  007F16  67                 	db	103	;'g'
   603  007F17  65                 	db	101	;'e'
   604  007F18  73                 	db	115	;'s'
   605  007F19  20                 	db	32
   606  007F1A  63                 	db	99	;'c'
   607  007F1B  6F                 	db	111	;'o'
   608  007F1C  75                 	db	117	;'u'
   609  007F1D  6E                 	db	110	;'n'
   610  007F1E  74                 	db	116	;'t'
   611  007F1F  20                 	db	32
   612  007F20  31                 	db	49	;'1'
   613  007F21  00                 	db	0
   614  007F22                     STR_9:
   615  007F22  42                 	db	66	;'B'
   616  007F23  72                 	db	114	;'r'
   617  007F24  65                 	db	101	;'e'
   618  007F25  61                 	db	97	;'a'
   619  007F26  6B                 	db	107	;'k'
   620  007F27  20                 	db	32
   621  007F28  44                 	db	68	;'D'
   622  007F29  75                 	db	117	;'u'
   623  007F2A  72                 	db	114	;'r'
   624  007F2B  61                 	db	97	;'a'
   625  007F2C  74                 	db	116	;'t'
   626  007F2D  69                 	db	105	;'i'
   627  007F2E  6F                 	db	111	;'o'
   628  007F2F  6E                 	db	110	;'n'
   629  007F30  20                 	db	32
   630  007F31  63                 	db	99	;'c'
   631  007F32  68                 	db	104	;'h'
   632  007F33  61                 	db	97	;'a'
   633  007F34  6E                 	db	110	;'n'
   634  007F35  67                 	db	103	;'g'
   635  007F36  65                 	db	101	;'e'
   636  007F37  64                 	db	100	;'d'
   637  007F38  20                 	db	32
   638  007F39  74                 	db	116	;'t'
   639  007F3A  6F                 	db	111	;'o'
   640  007F3B  20                 	db	32
   641  007F3C  25                 	db	37
   642  007F3D  75                 	db	117	;'u'
   643  007F3E  20                 	db	32
   644  007F3F  6D                 	db	109	;'m'
   645  007F40  73                 	db	115	;'s'
   646  007F41  00                 	db	0
   647  007F42                     STR_5:
   648  007F42  45                 	db	69	;'E'
   649  007F43  72                 	db	114	;'r'
   650  007F44  72                 	db	114	;'r'
   651  007F45  6F                 	db	111	;'o'
   652  007F46  72                 	db	114	;'r'
   653  007F47  21                 	db	33
   654  007F48  20                 	db	32
   655  007F49  4D                 	db	77	;'M'
   656  007F4A  69                 	db	105	;'i'
   657  007F4B  6E                 	db	110	;'n'
   658  007F4C  69                 	db	105	;'i'
   659  007F4D  6D                 	db	109	;'m'
   660  007F4E  75                 	db	117	;'u'
   661  007F4F  6D                 	db	109	;'m'
   662  007F50  20                 	db	32
   663  007F51  43                 	db	67	;'C'
   664  007F52  79                 	db	121	;'y'
   665  007F53  63                 	db	99	;'c'
   666  007F54  6C                 	db	108	;'l'
   667  007F55  65                 	db	101	;'e'
   668  007F56  20                 	db	32
   669  007F57  63                 	db	99	;'c'
   670  007F58  6F                 	db	111	;'o'
   671  007F59  75                 	db	117	;'u'
   672  007F5A  6E                 	db	110	;'n'
   673  007F5B  74                 	db	116	;'t'
   674  007F5C  20                 	db	32
   675  007F5D  32                 	db	50	;'2'
   676  007F5E  00                 	db	0
   677  007F5F                     STR_7:
   678  007F5F  43                 	db	67	;'C'
   679  007F60  79                 	db	121	;'y'
   680  007F61  63                 	db	99	;'c'
   681  007F62  6C                 	db	108	;'l'
   682  007F63  65                 	db	101	;'e'
   683  007F64  20                 	db	32
   684  007F65  63                 	db	99	;'c'
   685  007F66  68                 	db	104	;'h'
   686  007F67  61                 	db	97	;'a'
   687  007F68  6E                 	db	110	;'n'
   688  007F69  67                 	db	103	;'g'
   689  007F6A  65                 	db	101	;'e'
   690  007F6B  64                 	db	100	;'d'
   691  007F6C  20                 	db	32
   692  007F6D  74                 	db	116	;'t'
   693  007F6E  6F                 	db	111	;'o'
   694  007F6F  20                 	db	32
   695  007F70  25                 	db	37
   696  007F71  6C                 	db	108	;'l'
   697  007F72  64                 	db	100	;'d'
   698  007F73  20                 	db	32
   699  007F74  43                 	db	67	;'C'
   700  007F75  79                 	db	121	;'y'
   701  007F76  63                 	db	99	;'c'
   702  007F77  6C                 	db	108	;'l'
   703  007F78  65                 	db	101	;'e'
   704  007F79  73                 	db	115	;'s'
   705  007F7A  00                 	db	0
   706  007F7B                     STR_4:
   707  007F7B  46                 	db	70	;'F'
   708  007F7C  72                 	db	114	;'r'
   709  007F7D  65                 	db	101	;'e'
   710  007F7E  71                 	db	113	;'q'
   711  007F7F  75                 	db	117	;'u'
   712  007F80  65                 	db	101	;'e'
   713  007F81  6E                 	db	110	;'n'
   714  007F82  63                 	db	99	;'c'
   715  007F83  79                 	db	121	;'y'
   716  007F84  20                 	db	32
   717  007F85  63                 	db	99	;'c'
   718  007F86  68                 	db	104	;'h'
   719  007F87  61                 	db	97	;'a'
   720  007F88  6E                 	db	110	;'n'
   721  007F89  67                 	db	103	;'g'
   722  007F8A  65                 	db	101	;'e'
   723  007F8B  64                 	db	100	;'d'
   724  007F8C  20                 	db	32
   725  007F8D  74                 	db	116	;'t'
   726  007F8E  6F                 	db	111	;'o'
   727  007F8F  20                 	db	32
   728  007F90  25                 	db	37
   729  007F91  6C                 	db	108	;'l'
   730  007F92  64                 	db	100	;'d'
   731  007F93  20                 	db	32
   732  007F94  48                 	db	72	;'H'
   733  007F95  7A                 	db	122	;'z'
   734  007F96  00                 	db	0
   735  007F97                     STR_16:
   736  007F97  4E                 	db	78	;'N'
   737  007F98  75                 	db	117	;'u'
   738  007F99  6D                 	db	109	;'m'
   739  007F9A  62                 	db	98	;'b'
   740  007F9B  65                 	db	101	;'e'
   741  007F9C  72                 	db	114	;'r'
   742  007F9D  20                 	db	32
   743  007F9E  6F                 	db	111	;'o'
   744  007F9F  66                 	db	102	;'f'
   745  007FA0  20                 	db	32
   746  007FA1  50                 	db	80	;'P'
   747  007FA2  61                 	db	97	;'a'
   748  007FA3  63                 	db	99	;'c'
   749  007FA4  6B                 	db	107	;'k'
   750  007FA5  61                 	db	97	;'a'
   751  007FA6  67                 	db	103	;'g'
   752  007FA7  65                 	db	101	;'e'
   753  007FA8  73                 	db	115	;'s'
   754  007FA9  20                 	db	32
   755  007FAA  3D                 	db	61	;'='
   756  007FAB  20                 	db	32
   757  007FAC  25                 	db	37
   758  007FAD  75                 	db	117	;'u'
   759  007FAE  00                 	db	0
   760  007FAF                     STR_15:
   761  007FAF  42                 	db	66	;'B'
   762  007FB0  72                 	db	114	;'r'
   763  007FB1  65                 	db	101	;'e'
   764  007FB2  61                 	db	97	;'a'
   765  007FB3  6B                 	db	107	;'k'
   766  007FB4  20                 	db	32
   767  007FB5  44                 	db	68	;'D'
   768  007FB6  75                 	db	117	;'u'
   769  007FB7  72                 	db	114	;'r'
   770  007FB8  61                 	db	97	;'a'
   771  007FB9  74                 	db	116	;'t'
   772  007FBA  69                 	db	105	;'i'
   773  007FBB  6F                 	db	111	;'o'
   774  007FBC  6E                 	db	110	;'n'
   775  007FBD  20                 	db	32
   776  007FBE  3D                 	db	61	;'='
   777  007FBF  20                 	db	32
   778  007FC0  25                 	db	37
   779  007FC1  75                 	db	117	;'u'
   780  007FC2  20                 	db	32
   781  007FC3  6D                 	db	109	;'m'
   782  007FC4  73                 	db	115	;'s'
   783  007FC5  00                 	db	0
   784  007FC6                     STR_17:
   785  007FC6  55                 	db	85	;'U'
   786  007FC7  6E                 	db	110	;'n'
   787  007FC8  6B                 	db	107	;'k'
   788  007FC9  6E                 	db	110	;'n'
   789  007FCA  6F                 	db	111	;'o'
   790  007FCB  77                 	db	119	;'w'
   791  007FCC  6E                 	db	110	;'n'
   792  007FCD  20                 	db	32
   793  007FCE  43                 	db	67	;'C'
   794  007FCF  6F                 	db	111	;'o'
   795  007FD0  6D                 	db	109	;'m'
   796  007FD1  6D                 	db	109	;'m'
   797  007FD2  61                 	db	97	;'a'
   798  007FD3  6E                 	db	110	;'n'
   799  007FD4  64                 	db	100	;'d'
   800  007FD5  20                 	db	32
   801  007FD6  25                 	db	37
   802  007FD7  63                 	db	99	;'c'
   803  007FD8  00                 	db	0
   804  007FD9                     STR_13:
   805  007FD9  46                 	db	70	;'F'
   806  007FDA  72                 	db	114	;'r'
   807  007FDB  65                 	db	101	;'e'
   808  007FDC  71                 	db	113	;'q'
   809  007FDD  75                 	db	117	;'u'
   810  007FDE  65                 	db	101	;'e'
   811  007FDF  6E                 	db	110	;'n'
   812  007FE0  63                 	db	99	;'c'
   813  007FE1  79                 	db	121	;'y'
   814  007FE2  20                 	db	32
   815  007FE3  3D                 	db	61	;'='
   816  007FE4  20                 	db	32
   817  007FE5  25                 	db	37
   818  007FE6  6C                 	db	108	;'l'
   819  007FE7  64                 	db	100	;'d'
   820  007FE8  20                 	db	32
   821  007FE9  48                 	db	72	;'H'
   822  007FEA  7A                 	db	122	;'z'
   823  007FEB  00                 	db	0
   824  007FEC                     STR_14:
   825  007FEC  43                 	db	67	;'C'
   826  007FED  79                 	db	121	;'y'
   827  007FEE  63                 	db	99	;'c'
   828  007FEF  6C                 	db	108	;'l'
   829  007FF0  65                 	db	101	;'e'
   830  007FF1  73                 	db	115	;'s'
   831  007FF2  20                 	db	32
   832  007FF3  3D                 	db	61	;'='
   833  007FF4  20                 	db	32
   834  007FF5  25                 	db	37
   835  007FF6  6C                 	db	108	;'l'
   836  007FF7  64                 	db	100	;'d'
   837  007FF8  00                 	db	0
   838  007FF9                     STR_22:
   839  007FF9  6C                 	db	108	;'l'
   840  007FFA  69                 	db	105	;'i'
   841  007FFB  00                 	db	0
   842  007FFC                     STR_27:
   843  007FFC  6C                 	db	108	;'l'
   844  007FFD  75                 	db	117	;'u'
   845  007FFE  00                 	db	0
   846  0000                     
   847                           ; #config settings
   848  007FFF  00                 	db	0	; dummy byte at the end
   849  0000                     
   850                           	psect	nvBANK0
   851  0000EF                     __pnvBANK0:
   852                           	opt callstack 0
   853  0000EF                     _timer3ReloadVal:
   854                           	opt callstack 0
   855  0000EF                     	ds	2
   856  0000F1                     _timer1ReloadVal:
   857                           	opt callstack 0
   858  0000F1                     	ds	2
   859  0000F3                     _EUSART_TxDefaultInterruptHandler:
   860                           	opt callstack 0
   861  0000F3                     	ds	2
   862  0000F5                     _eusartTxBufferRemaining:
   863                           	opt callstack 0
   864  0000F5                     	ds	1
   865                           
   866                           	psect	nvBANK1
   867  0001F8                     __pnvBANK1:
   868                           	opt callstack 0
   869  0001F8                     _EUSART_ErrorHandler:
   870                           	opt callstack 0
   871  0001F8                     	ds	2
   872  0001FA                     _EUSART_OverrunErrorHandler:
   873                           	opt callstack 0
   874  0001FA                     	ds	2
   875  0001FC                     _EUSART_FramingErrorHandler:
   876                           	opt callstack 0
   877  0001FC                     	ds	2
   878  0001FE                     _EUSART_RxDefaultInterruptHandler:
   879                           	opt callstack 0
   880  0001FE                     	ds	2
   881                           
   882                           	psect	nvBANK2
   883  000232                     __pnvBANK2:
   884                           	opt callstack 0
   885  000232                     _timer0ReloadVal16bit:
   886                           	opt callstack 0
   887  000232                     	ds	2
   888  0000                     _SSP1DATPPS	set	3768
   889  0000                     _T0CKIPPS	set	3748
   890  0000                     _RC2PPS	set	3833
   891  0000                     _RC1PPS	set	3832
   892  0000                     _RB0PPS	set	3823
   893  0000                     _INT0PPS	set	3745
   894  0000                     _SSP1CLKPPS	set	3767
   895  0000                     _RXPPS	set	3765
   896  0000                     _PMD5	set	3814
   897  0000                     _PMD4	set	3813
   898  0000                     _PMD3	set	3812
   899  0000                     _PMD2	set	3811
   900  0000                     _PMD1	set	3810
   901  0000                     _PMD0	set	3809
   902  0000                     _OSCTUNE	set	3805
   903  0000                     _OSCFRQ	set	3806
   904  0000                     _OSCEN	set	3804
   905  0000                     _OSCCON3	set	3802
   906  0000                     _OSCCON1	set	3800
   907  0000                     _PIR3bits	set	3789
   908  0000                     _PIR4bits	set	3790
   909  0000                     _PIE4bits	set	3782
   910  0000                     _PIE0bits	set	3778
   911  0000                     _PIR0bits	set	3786
   912  0000                     _IPR3bits	set	3773
   913  0000                     _IPR4bits	set	3774
   914  0000                     _IPR0bits	set	3770
   915  0000                     _PIE3bits	set	3781
   916  0000                     _INLVLE	set	3882
   917  0000                     _INLVLC	set	3869
   918  0000                     _INLVLB	set	3861
   919  0000                     _INLVLA	set	3853
   920  0000                     _SLRCONC	set	3870
   921  0000                     _SLRCONB	set	3862
   922  0000                     _SLRCONA	set	3854
   923  0000                     _ODCONC	set	3871
   924  0000                     _ODCONB	set	3863
   925  0000                     _ODCONA	set	3855
   926  0000                     _WPUC	set	3872
   927  0000                     _WPUA	set	3856
   928  0000                     _WPUB	set	3864
   929  0000                     _WPUE	set	3885
   930  0000                     _ANSELA	set	3857
   931  0000                     _ANSELB	set	3865
   932  0000                     _ANSELC	set	3873
   933  0000                     _T3CONbits	set	4041
   934  0000                     _T3CON	set	4041
   935  0000                     _TMR3L	set	4039
   936  0000                     _TMR3H	set	4040
   937  0000                     _T3CLK	set	4044
   938  0000                     _T3GATE	set	4043
   939  0000                     _T3GCON	set	4042
   940  0000                     _T1CONbits	set	4047
   941  0000                     _T1CON	set	4047
   942  0000                     _TMR1L	set	4045
   943  0000                     _TMR1H	set	4046
   944  0000                     _T1CLK	set	4050
   945  0000                     _T1GATE	set	4049
   946  0000                     _T1GCON	set	4048
   947  0000                     _SSP1BUF	set	3986
   948  0000                     _PORTCbits	set	3983
   949  0000                     _SSP1CON1bits	set	3990
   950  0000                     _TRISCbits	set	3978
   951  0000                     _SSP1ADD	set	3987
   952  0000                     _SSP1CON1	set	3990
   953  0000                     _SSP1STAT	set	3989
   954  0000                     _T0CON0bits	set	4053
   955  0000                     _PORTAbits	set	3981
   956  0000                     _T0CON0	set	4053
   957  0000                     _TMR0L	set	4051
   958  0000                     _TMR0H	set	4052
   959  0000                     _T0CON1	set	4054
   960  0000                     _TRISC	set	3978
   961  0000                     _TRISB	set	3977
   962  0000                     _TRISA	set	3976
   963  0000                     _LATC	set	3973
   964  0000                     _LATB	set	3972
   965  0000                     _LATA	set	3971
   966  0000                     _PORTBbits	set	3982
   967  0000                     _INTCONbits	set	4082
   968  0000                     _RC1REG	set	3993
   969  0000                     _RC1STAbits	set	3997
   970  0000                     _TX1REG	set	3994
   971  0000                     _SP1BRGH	set	3996
   972  0000                     _SP1BRGL	set	3995
   973  0000                     _TX1STA	set	3998
   974  0000                     _RC1STA	set	3997
   975  0000                     _BAUD1CON	set	3999
   976                           
   977                           	psect	cinit
   978  0051AA                     __pcinit:
   979                           	opt callstack 0
   980  0051AA                     start_initialization:
   981                           	opt callstack 0
   982  0051AA                     __initialization:
   983                           	opt callstack 0
   984                           
   985                           ; Initialize objects allocated to BANK0 (6 bytes)
   986                           ; load TBLPTR registers with __pidataBANK0
   987  0051AA  0E86               	movlw	low __pidataBANK0
   988  0051AC  6EF6               	movwf	tblptrl,c
   989  0051AE  0E5B               	movlw	high __pidataBANK0
   990  0051B0  6EF7               	movwf	tblptrh,c
   991  0051B2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   992  0051B4  6EF8               	movwf	tblptru,c
   993  0051B6  EE00  F0F6         	lfsr	0,__pdataBANK0
   994  0051BA  EE10 F006          	lfsr	1,6
   995  0051BE                     copy_data0:
   996  0051BE  0009               	tblrd		*+
   997  0051C0  CFF5 FFEE          	movff	tablat,postinc0
   998  0051C4  50E5               	movf	postdec1,w,c
   999  0051C6  50E1               	movf	fsr1l,w,c
  1000  0051C8  E1FA               	bnz	copy_data0
  1001                           
  1002                           ; Initialize objects allocated to COMRAM (12 bytes)
  1003                           ; load TBLPTR registers with __pidataCOMRAM
  1004  0051CA  0E1A               	movlw	low __pidataCOMRAM
  1005  0051CC  6EF6               	movwf	tblptrl,c
  1006  0051CE  0E5B               	movlw	high __pidataCOMRAM
  1007  0051D0  6EF7               	movwf	tblptrh,c
  1008  0051D2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1009  0051D4  6EF8               	movwf	tblptru,c
  1010  0051D6  EE00  F048         	lfsr	0,__pdataCOMRAM
  1011  0051DA  EE10 F00C          	lfsr	1,12
  1012  0051DE                     copy_data1:
  1013  0051DE  0009               	tblrd		*+
  1014  0051E0  CFF5 FFEE          	movff	tablat,postinc0
  1015  0051E4  50E5               	movf	postdec1,w,c
  1016  0051E6  50E1               	movf	fsr1l,w,c
  1017  0051E8  E1FA               	bnz	copy_data1
  1018                           
  1019                           ; Clear objects allocated to BANK2 (50 bytes)
  1020  0051EA  EE02  F000         	lfsr	0,__pbssBANK2
  1021  0051EE  0E32               	movlw	50
  1022  0051F0                     clear_0:
  1023  0051F0  6AEE               	clrf	postinc0,c
  1024  0051F2  06E8               	decf	wreg,f,c
  1025  0051F4  E1FD               	bnz	clear_0
  1026                           
  1027                           ; Clear objects allocated to BANK1 (60 bytes)
  1028  0051F6  EE01  F0BC         	lfsr	0,__pbssBANK1
  1029  0051FA  0E3C               	movlw	60
  1030  0051FC                     clear_1:
  1031  0051FC  6AEE               	clrf	postinc0,c
  1032  0051FE  06E8               	decf	wreg,f,c
  1033  005200  E1FD               	bnz	clear_1
  1034                           
  1035                           ; Clear objects allocated to BANK0 (26 bytes)
  1036  005202  EE00  F0D5         	lfsr	0,__pbssBANK0
  1037  005206  0E1A               	movlw	26
  1038  005208                     clear_2:
  1039  005208  6AEE               	clrf	postinc0,c
  1040  00520A  06E8               	decf	wreg,f,c
  1041  00520C  E1FD               	bnz	clear_2
  1042                           
  1043                           ; Clear objects allocated to COMRAM (12 bytes)
  1044  00520E  EE00  F03C         	lfsr	0,__pbssCOMRAM
  1045  005212  0E0C               	movlw	12
  1046  005214                     clear_3:
  1047  005214  6AEE               	clrf	postinc0,c
  1048  005216  06E8               	decf	wreg,f,c
  1049  005218  E1FD               	bnz	clear_3
  1050  00521A                     end_of_initialization:
  1051                           	opt callstack 0
  1052  00521A                     __end_of__initialization:
  1053                           	opt callstack 0
  1054  00521A  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1055  00521C  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1056  00521E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1057  005220  6EF8               	movwf	tblptru,c
  1058  005222  0100               	movlb	0
  1059  005224  EF8C  F029         	goto	_main	;jump to C main() function
  1060                           
  1061                           	psect	bssCOMRAM
  1062  00003C                     __pbssCOMRAM:
  1063                           	opt callstack 0
  1064  00003C                     _prec:
  1065                           	opt callstack 0
  1066  00003C                     	ds	2
  1067  00003E                     _flags:
  1068                           	opt callstack 0
  1069  00003E                     	ds	2
  1070  000040                     _break_duration:
  1071                           	opt callstack 0
  1072  000040                     	ds	2
  1073  000042                     _temp_break_duration:
  1074                           	opt callstack 0
  1075  000042                     	ds	2
  1076  000044                     _eusartRxHead:
  1077                           	opt callstack 0
  1078  000044                     	ds	1
  1079  000045                     _eusartTxTail:
  1080                           	opt callstack 0
  1081  000045                     	ds	1
  1082  000046                     _eusartTxHead:
  1083                           	opt callstack 0
  1084  000046                     	ds	1
  1085  000047                     _sec:
  1086                           	opt callstack 0
  1087  000047                     	ds	1
  1088                           
  1089                           	psect	dataCOMRAM
  1090  000048                     __pdataCOMRAM:
  1091                           	opt callstack 0
  1092  000048                     _cycle:
  1093                           	opt callstack 0
  1094  000048                     	ds	4
  1095  00004C                     _temp_cycle:
  1096                           	opt callstack 0
  1097  00004C                     	ds	4
  1098  000050                     _packages:
  1099                           	opt callstack 0
  1100  000050                     	ds	2
  1101  000052                     _temp_packages:
  1102                           	opt callstack 0
  1103  000052                     	ds	2
  1104                           
  1105                           	psect	bssBANK0
  1106  0000D5                     __pbssBANK0:
  1107                           	opt callstack 0
  1108  0000D5                     _eusartRxStatusBuffer:
  1109                           	opt callstack 0
  1110  0000D5                     	ds	8
  1111  0000DD                     fabsf@F463:
  1112                           	opt callstack 0
  1113  0000DD                     	ds	4
  1114  0000E1                     _temp_frequency:
  1115                           	opt callstack 0
  1116  0000E1                     	ds	4
  1117  0000E5                     _errno:
  1118                           	opt callstack 0
  1119  0000E5                     	ds	2
  1120  0000E7                     _nout:
  1121                           	opt callstack 0
  1122  0000E7                     	ds	2
  1123  0000E9                     _width:
  1124                           	opt callstack 0
  1125  0000E9                     	ds	2
  1126  0000EB                     _eusartRxLastError:
  1127                           	opt callstack 0
  1128  0000EB                     	ds	1
  1129  0000EC                     _eusartRxCount:
  1130                           	opt callstack 0
  1131  0000EC                     	ds	1
  1132  0000ED                     _eusartRxTail:
  1133                           	opt callstack 0
  1134  0000ED                     	ds	1
  1135  0000EE                     _rx_data_end:
  1136                           	opt callstack 0
  1137  0000EE                     	ds	1
  1138                           
  1139                           	psect	dataBANK0
  1140  0000F6                     __pdataBANK0:
  1141                           	opt callstack 0
  1142  0000F6                     _frequency:
  1143                           	opt callstack 0
  1144  0000F6                     	ds	4
  1145  0000FA                     _state:
  1146                           	opt callstack 0
  1147  0000FA                     	ds	2
  1148                           
  1149                           	psect	bssBANK1
  1150  0001BC                     __pbssBANK1:
  1151                           	opt callstack 0
  1152  0001BC                     _eusartTxBuffer:
  1153                           	opt callstack 0
  1154  0001BC                     	ds	8
  1155  0001C4                     _dbuf:
  1156                           	opt callstack 0
  1157  0001C4                     	ds	32
  1158  0001E4                     _rx_data:
  1159                           	opt callstack 0
  1160  0001E4                     	ds	20
  1161                           
  1162                           	psect	bssBANK2
  1163  000200                     __pbssBANK2:
  1164                           	opt callstack 0
  1165  000200                     _output:
  1166                           	opt callstack 0
  1167  000200                     	ds	50
  1168                           
  1169                           	psect	cstackBANK1
  1170  000100                     __pcstackBANK1:
  1171                           	opt callstack 0
  1172  000100                     _powf$2524:
  1173                           	opt callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x0
  1176  000100                     	ds	4
  1177  000104                     _powf$2525:
  1178                           	opt callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x4
  1181  000104                     	ds	4
  1182  000108                     _powf$2529:
  1183                           	opt callstack 0
  1184                           
  1185                           ; 4 bytes @ 0x8
  1186  000108                     	ds	4
  1187  00010C                     _powf$2530:
  1188                           	opt callstack 0
  1189                           
  1190                           ; 4 bytes @ 0xC
  1191  00010C                     	ds	4
  1192  000110                     _powf$2531:
  1193                           	opt callstack 0
  1194                           
  1195                           ; 4 bytes @ 0x10
  1196  000110                     	ds	4
  1197  000114                     _powf$2532:
  1198                           	opt callstack 0
  1199                           
  1200                           ; 4 bytes @ 0x14
  1201  000114                     	ds	4
  1202  000118                     _powf$2533:
  1203                           	opt callstack 0
  1204                           
  1205                           ; 4 bytes @ 0x18
  1206  000118                     	ds	4
  1207  00011C                     powf@t2:
  1208                           	opt callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x1C
  1211  00011C                     	ds	4
  1212  000120                     powf@z_h:
  1213                           	opt callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x20
  1216  000120                     	ds	4
  1217  000124                     powf@z_l:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x24
  1221  000124                     	ds	4
  1222  000128                     powf@y1:
  1223                           	opt callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x28
  1226  000128                     	ds	4
  1227  00012C                     powf@i:
  1228                           	opt callstack 0
  1229                           
  1230                           ; 4 bytes @ 0x2C
  1231  00012C                     	ds	4
  1232  000130                     powf@s_l:
  1233                           	opt callstack 0
  1234                           
  1235                           ; 4 bytes @ 0x30
  1236  000130                     	ds	4
  1237  000134                     powf@t_l:
  1238                           	opt callstack 0
  1239                           
  1240                           ; 4 bytes @ 0x34
  1241  000134                     	ds	4
  1242  000138                     _powf$2523:
  1243                           	opt callstack 0
  1244                           
  1245                           ; 4 bytes @ 0x38
  1246  000138                     	ds	4
  1247  00013C                     _powf$2527:
  1248                           	opt callstack 0
  1249                           
  1250                           ; 4 bytes @ 0x3C
  1251  00013C                     	ds	4
  1252  000140                     _powf$2528:
  1253                           	opt callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x40
  1256  000140                     	ds	4
  1257  000144                     powf@w:
  1258                           	opt callstack 0
  1259                           
  1260                           ; 4 bytes @ 0x44
  1261  000144                     	ds	4
  1262  000148                     _powf$2521:
  1263                           	opt callstack 0
  1264                           
  1265                           ; 4 bytes @ 0x48
  1266  000148                     	ds	4
  1267  00014C                     powf@r:
  1268                           	opt callstack 0
  1269                           
  1270                           ; 4 bytes @ 0x4C
  1271  00014C                     	ds	4
  1272  000150                     powf@yisint:
  1273                           	opt callstack 0
  1274                           
  1275                           ; 4 bytes @ 0x50
  1276  000150                     	ds	4
  1277  000154                     powf@s:
  1278                           	opt callstack 0
  1279                           
  1280                           ; 4 bytes @ 0x54
  1281  000154                     	ds	4
  1282  000158                     _powf$2520:
  1283                           	opt callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x58
  1286  000158                     	ds	4
  1287  00015C                     _powf$2526:
  1288                           	opt callstack 0
  1289                           
  1290                           ; 4 bytes @ 0x5C
  1291  00015C                     	ds	4
  1292  000160                     powf@hx:
  1293                           	opt callstack 0
  1294                           
  1295                           ; 4 bytes @ 0x60
  1296  000160                     	ds	4
  1297  000164                     powf@p_l:
  1298                           	opt callstack 0
  1299                           
  1300                           ; 4 bytes @ 0x64
  1301  000164                     	ds	4
  1302  000168                     powf@t_h:
  1303                           	opt callstack 0
  1304                           
  1305                           ; 4 bytes @ 0x68
  1306  000168                     	ds	4
  1307  00016C                     powf@s_h:
  1308                           	opt callstack 0
  1309                           
  1310                           ; 4 bytes @ 0x6C
  1311  00016C                     	ds	4
  1312  000170                     powf@ax:
  1313                           	opt callstack 0
  1314                           
  1315                           ; 4 bytes @ 0x70
  1316  000170                     	ds	4
  1317  000174                     powf@u:
  1318                           	opt callstack 0
  1319                           
  1320                           ; 4 bytes @ 0x74
  1321  000174                     	ds	4
  1322  000178                     powf@v:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 4 bytes @ 0x78
  1326  000178                     	ds	4
  1327  00017C                     powf@hy:
  1328                           	opt callstack 0
  1329                           
  1330                           ; 4 bytes @ 0x7C
  1331  00017C                     	ds	4
  1332  000180                     powf@t1:
  1333                           	opt callstack 0
  1334                           
  1335                           ; 4 bytes @ 0x80
  1336  000180                     	ds	4
  1337  000184                     powf@sn:
  1338                           	opt callstack 0
  1339                           
  1340                           ; 4 bytes @ 0x84
  1341  000184                     	ds	4
  1342  000188                     powf@n:
  1343                           	opt callstack 0
  1344                           
  1345                           ; 4 bytes @ 0x88
  1346  000188                     	ds	4
  1347  00018C                     powf@s2:
  1348                           	opt callstack 0
  1349                           
  1350                           ; 4 bytes @ 0x8C
  1351  00018C                     	ds	4
  1352  000190                     powf@iy:
  1353                           	opt callstack 0
  1354                           
  1355                           ; 4 bytes @ 0x90
  1356  000190                     	ds	4
  1357  000194                     powf@is:
  1358                           	opt callstack 0
  1359                           
  1360                           ; 4 bytes @ 0x94
  1361  000194                     	ds	4
  1362  000198                     _powf$2522:
  1363                           	opt callstack 0
  1364                           
  1365                           ; 4 bytes @ 0x98
  1366  000198                     	ds	4
  1367  00019C                     powf@p_h:
  1368                           	opt callstack 0
  1369                           
  1370                           ; 4 bytes @ 0x9C
  1371  00019C                     	ds	4
  1372  0001A0                     powf@k:
  1373                           	opt callstack 0
  1374                           
  1375                           ; 4 bytes @ 0xA0
  1376  0001A0                     	ds	4
  1377  0001A4                     _powf$2519:
  1378                           	opt callstack 0
  1379                           
  1380                           ; 4 bytes @ 0xA4
  1381  0001A4                     	ds	4
  1382  0001A8                     powf@ix:
  1383                           	opt callstack 0
  1384                           
  1385                           ; 4 bytes @ 0xA8
  1386  0001A8                     	ds	4
  1387  0001AC                     powf@j:
  1388                           	opt callstack 0
  1389                           
  1390                           ; 4 bytes @ 0xAC
  1391  0001AC                     	ds	4
  1392  0001B0                     powf@t:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 4 bytes @ 0xB0
  1396  0001B0                     	ds	4
  1397  0001B4                     powf@z:
  1398                           	opt callstack 0
  1399                           
  1400                           ; 4 bytes @ 0xB4
  1401  0001B4                     	ds	4
  1402  0001B8                     powf@__xc8_float_word:
  1403                           	opt callstack 0
  1404                           
  1405                           ; 4 bytes @ 0xB8
  1406  0001B8                     	ds	4
  1407                           
  1408                           	psect	cstackBANK0
  1409  000060                     __pcstackBANK0:
  1410                           	opt callstack 0
  1411  000060                     ??_scalbnf:
  1412  000060                     ?___flsub:
  1413                           	opt callstack 0
  1414  000060                     _dtoa$1572:
  1415                           	opt callstack 0
  1416  000060                     utoa@p:
  1417                           	opt callstack 0
  1418  000060                     ___flsub@b:
  1419                           	opt callstack 0
  1420                           
  1421                           ; 4 bytes @ 0x0
  1422  000060                     	ds	2
  1423  000062                     dtoa@p:
  1424                           	opt callstack 0
  1425  000062                     utoa@w:
  1426                           	opt callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x2
  1429  000062                     	ds	2
  1430  000064                     dtoa@w:
  1431                           	opt callstack 0
  1432  000064                     ___flsub@a:
  1433                           	opt callstack 0
  1434  000064                     scalbnf@u:
  1435                           	opt callstack 0
  1436  000064                     utoa@n:
  1437                           	opt callstack 0
  1438                           
  1439                           ; 8 bytes @ 0x4
  1440  000064                     	ds	2
  1441  000066                     dtoa@s:
  1442                           	opt callstack 0
  1443                           
  1444                           ; 2 bytes @ 0x6
  1445  000066                     	ds	2
  1446  000068                     ?___fldiv:
  1447                           	opt callstack 0
  1448  000068                     ___flge@ff1:
  1449                           	opt callstack 0
  1450  000068                     ___fldiv@b:
  1451                           	opt callstack 0
  1452  000068                     scalbnf@y:
  1453                           	opt callstack 0
  1454  000068                     dtoa@n:
  1455                           	opt callstack 0
  1456                           
  1457                           ; 8 bytes @ 0x8
  1458  000068                     	ds	4
  1459  00006C                     utoa@i:
  1460                           	opt callstack 0
  1461  00006C                     ___flge@ff2:
  1462                           	opt callstack 0
  1463  00006C                     ___fldiv@a:
  1464                           	opt callstack 0
  1465                           
  1466                           ; 4 bytes @ 0xC
  1467  00006C                     	ds	4
  1468  000070                     ?_sqrtf:
  1469                           	opt callstack 0
  1470  000070                     dtoa@i:
  1471                           	opt callstack 0
  1472  000070                     ___fldiv@rem:
  1473                           	opt callstack 0
  1474  000070                     sqrtf@x:
  1475                           	opt callstack 0
  1476                           
  1477                           ; 4 bytes @ 0x10
  1478  000070                     	ds	2
  1479  000072                     ?_vfpfcnvrt:
  1480                           	opt callstack 0
  1481  000072                     vfpfcnvrt@fp:
  1482                           	opt callstack 0
  1483                           
  1484                           ; 2 bytes @ 0x12
  1485  000072                     	ds	2
  1486  000074                     ??_sqrtf:
  1487  000074                     ___fldiv@sign:
  1488                           	opt callstack 0
  1489  000074                     vfpfcnvrt@fmt:
  1490                           	opt callstack 0
  1491                           
  1492                           ; 2 bytes @ 0x14
  1493  000074                     	ds	1
  1494  000075                     ___fldiv@new_exp:
  1495                           	opt callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x15
  1498  000075                     	ds	1
  1499  000076                     vfpfcnvrt@ap:
  1500                           	opt callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x16
  1503  000076                     	ds	1
  1504  000077                     ___fldiv@grs:
  1505                           	opt callstack 0
  1506                           
  1507                           ; 4 bytes @ 0x17
  1508  000077                     	ds	1
  1509  000078                     ??_vfpfcnvrt:
  1510                           
  1511                           ; 1 bytes @ 0x18
  1512  000078                     	ds	3
  1513  00007B                     ___fldiv@bexp:
  1514                           	opt callstack 0
  1515                           
  1516                           ; 1 bytes @ 0x1B
  1517  00007B                     	ds	1
  1518  00007C                     ___fldiv@aexp:
  1519                           	opt callstack 0
  1520                           
  1521                           ; 1 bytes @ 0x1C
  1522  00007C                     	ds	1
  1523  00007D                     sqrtf@s:
  1524                           	opt callstack 0
  1525                           
  1526                           ; 4 bytes @ 0x1D
  1527  00007D                     	ds	4
  1528  000081                     sqrtf@i:
  1529                           	opt callstack 0
  1530                           
  1531                           ; 4 bytes @ 0x21
  1532  000081                     	ds	4
  1533  000085                     sqrtf@__xc8_float_word:
  1534                           	opt callstack 0
  1535                           
  1536                           ; 4 bytes @ 0x25
  1537  000085                     	ds	1
  1538  000086                     vfpfcnvrt@c:
  1539                           	opt callstack 0
  1540                           
  1541                           ; 1 bytes @ 0x26
  1542  000086                     	ds	1
  1543  000087                     vfpfcnvrt@ll:
  1544                           	opt callstack 0
  1545                           
  1546                           ; 8 bytes @ 0x27
  1547  000087                     	ds	2
  1548  000089                     sqrtf@q:
  1549                           	opt callstack 0
  1550                           
  1551                           ; 4 bytes @ 0x29
  1552  000089                     	ds	4
  1553  00008D                     sqrtf@t:
  1554                           	opt callstack 0
  1555                           
  1556                           ; 4 bytes @ 0x2D
  1557  00008D                     	ds	2
  1558  00008F                     vfpfcnvrt@llu:
  1559                           	opt callstack 0
  1560                           
  1561                           ; 8 bytes @ 0x2F
  1562  00008F                     	ds	2
  1563  000091                     sqrtf@z:
  1564                           	opt callstack 0
  1565                           
  1566                           ; 4 bytes @ 0x31
  1567  000091                     	ds	4
  1568  000095                     sqrtf@m:
  1569                           	opt callstack 0
  1570                           
  1571                           ; 4 bytes @ 0x35
  1572  000095                     	ds	2
  1573  000097                     ?_vfprintf:
  1574                           	opt callstack 0
  1575  000097                     vfprintf@fp:
  1576                           	opt callstack 0
  1577                           
  1578                           ; 2 bytes @ 0x37
  1579  000097                     	ds	2
  1580  000099                     vfprintf@fmt:
  1581                           	opt callstack 0
  1582  000099                     sqrtf@r:
  1583                           	opt callstack 0
  1584                           
  1585                           ; 4 bytes @ 0x39
  1586  000099                     	ds	2
  1587  00009B                     vfprintf@ap:
  1588                           	opt callstack 0
  1589                           
  1590                           ; 2 bytes @ 0x3B
  1591  00009B                     	ds	2
  1592  00009D                     ?_sprintf:
  1593                           	opt callstack 0
  1594  00009D                     sprintf@s:
  1595                           	opt callstack 0
  1596  00009D                     sqrtf@ix:
  1597                           	opt callstack 0
  1598                           
  1599                           ; 4 bytes @ 0x3D
  1600  00009D                     	ds	2
  1601  00009F                     sprintf@fmt:
  1602                           	opt callstack 0
  1603                           
  1604                           ; 2 bytes @ 0x3F
  1605  00009F                     	ds	2
  1606  0000A1                     ?_powf:
  1607                           	opt callstack 0
  1608  0000A1                     powf@x:
  1609                           	opt callstack 0
  1610                           
  1611                           ; 4 bytes @ 0x41
  1612  0000A1                     	ds	4
  1613  0000A5                     powf@y:
  1614                           	opt callstack 0
  1615                           
  1616                           ; 4 bytes @ 0x45
  1617  0000A5                     	ds	2
  1618  0000A7                     sprintf@ap:
  1619                           	opt callstack 0
  1620                           
  1621                           ; 2 bytes @ 0x47
  1622  0000A7                     	ds	2
  1623  0000A9                     ??_powf:
  1624  0000A9                     sprintf@f:
  1625                           	opt callstack 0
  1626                           
  1627                           ; 6 bytes @ 0x49
  1628  0000A9                     	ds	9
  1629  0000B2                     ?___fltol:
  1630                           	opt callstack 0
  1631  0000B2                     ___fltol@f1:
  1632                           	opt callstack 0
  1633                           
  1634                           ; 4 bytes @ 0x52
  1635  0000B2                     	ds	4
  1636  0000B6                     ??___fltol:
  1637                           
  1638                           ; 1 bytes @ 0x56
  1639  0000B6                     	ds	4
  1640  0000BA                     ___fltol@sign1:
  1641                           	opt callstack 0
  1642                           
  1643                           ; 1 bytes @ 0x5A
  1644  0000BA                     	ds	1
  1645  0000BB                     ___fltol@exp1:
  1646                           	opt callstack 0
  1647                           
  1648                           ; 1 bytes @ 0x5B
  1649  0000BB                     	ds	1
  1650  0000BC                     AD9833_SetFrequency@frequency:
  1651                           	opt callstack 0
  1652                           
  1653                           ; 4 bytes @ 0x5C
  1654  0000BC                     	ds	4
  1655  0000C0                     ??_AD9833_SetFrequency:
  1656                           
  1657                           ; 1 bytes @ 0x60
  1658  0000C0                     	ds	5
  1659  0000C5                     _AD9833_SetFrequency$2518:
  1660                           	opt callstack 0
  1661                           
  1662                           ; 4 bytes @ 0x65
  1663  0000C5                     	ds	4
  1664  0000C9                     AD9833_SetFrequency@MSB:
  1665                           	opt callstack 0
  1666                           
  1667                           ; 2 bytes @ 0x69
  1668  0000C9                     	ds	2
  1669  0000CB                     AD9833_SetFrequency@LSB:
  1670                           	opt callstack 0
  1671                           
  1672                           ; 2 bytes @ 0x6B
  1673  0000CB                     	ds	2
  1674  0000CD                     AD9833_SetFrequency@freq:
  1675                           	opt callstack 0
  1676                           
  1677                           ; 4 bytes @ 0x6D
  1678  0000CD                     	ds	4
  1679  0000D1                     ??_AD9833_Init:
  1680  0000D1                     Parse_Data@i:
  1681                           	opt callstack 0
  1682                           
  1683                           ; 2 bytes @ 0x71
  1684  0000D1                     	ds	2
  1685  0000D3                     ??_main:
  1686                           
  1687                           ; 1 bytes @ 0x73
  1688  0000D3                     	ds	2
  1689                           
  1690                           	psect	cstackCOMRAM
  1691  000001                     __pcstackCOMRAM:
  1692                           	opt callstack 0
  1693  000001                     i2TMR0_WriteTimer@timerVal:
  1694                           	opt callstack 0
  1695  000001                     i2TMR3_WriteTimer@timerVal:
  1696                           	opt callstack 0
  1697                           
  1698                           ; 2 bytes @ 0x0
  1699  000001                     	ds	2
  1700  000003                     TMR1_WriteTimer@timerVal:
  1701                           	opt callstack 0
  1702  000003                     TMR3_WriteTimer@timerVal:
  1703                           	opt callstack 0
  1704  000003                     i1TMR0_WriteTimer@timerVal:
  1705                           	opt callstack 0
  1706                           
  1707                           ; 2 bytes @ 0x2
  1708  000003                     	ds	2
  1709  000005                     ??_INTERRUPT_InterruptManagerLow:
  1710  000005                     
  1711                           ; 1 bytes @ 0x4
  1712  000005                     	ds	7
  1713  00000C                     ??_TMR3_Initialize:
  1714  00000C                     ??_TMR1_Initialize:
  1715  00000C                     ??_TMR0_Initialize:
  1716  00000C                     ?_strlen:
  1717                           	opt callstack 0
  1718  00000C                     ?_strncmp:
  1719                           	opt callstack 0
  1720  00000C                     ?_isspace:
  1721                           	opt callstack 0
  1722  00000C                     ?_isdigit:
  1723                           	opt callstack 0
  1724  00000C                     ?___wmul:
  1725                           	opt callstack 0
  1726  00000C                     ?___fladd:
  1727                           	opt callstack 0
  1728  00000C                     ?_fabsf:
  1729                           	opt callstack 0
  1730  00000C                     ?_nanf:
  1731                           	opt callstack 0
  1732  00000C                     ?___lmul:
  1733                           	opt callstack 0
  1734  00000C                     ?___flneg:
  1735                           	opt callstack 0
  1736  00000C                     ?___xxtofl:
  1737                           	opt callstack 0
  1738  00000C                     ?___aodiv:
  1739                           	opt callstack 0
  1740  00000C                     ?___aomod:
  1741                           	opt callstack 0
  1742  00000C                     ?___lodiv:
  1743                           	opt callstack 0
  1744  00000C                     ?___lomod:
  1745                           	opt callstack 0
  1746  00000C                     EUSART_Write@txData:
  1747                           	opt callstack 0
  1748  00000C                     EUSART_SetFramingErrorHandler@interruptHandler:
  1749                           	opt callstack 0
  1750  00000C                     EUSART_SetOverrunErrorHandler@interruptHandler:
  1751                           	opt callstack 0
  1752  00000C                     EUSART_SetErrorHandler@interruptHandler:
  1753                           	opt callstack 0
  1754  00000C                     EUSART_SetTxInterruptHandler@interruptHandler:
  1755                           	opt callstack 0
  1756  00000C                     EUSART_SetRxInterruptHandler@interruptHandler:
  1757                           	opt callstack 0
  1758  00000C                     TMR0_WriteTimer@timerVal:
  1759                           	opt callstack 0
  1760  00000C                     SPI1_WriteWord@word:
  1761                           	opt callstack 0
  1762  00000C                     ___wmul@multiplier:
  1763                           	opt callstack 0
  1764  00000C                     isdigit@c:
  1765                           	opt callstack 0
  1766  00000C                     isspace@c:
  1767                           	opt callstack 0
  1768  00000C                     fputc@c:
  1769                           	opt callstack 0
  1770  00000C                     strlen@s:
  1771                           	opt callstack 0
  1772  00000C                     strncmp@_l:
  1773                           	opt callstack 0
  1774  00000C                     nanf@s:
  1775                           	opt callstack 0
  1776  00000C                     ___lmul@multiplier:
  1777                           	opt callstack 0
  1778  00000C                     ___flneg@f1:
  1779                           	opt callstack 0
  1780  00000C                     ___fladd@b:
  1781                           	opt callstack 0
  1782  00000C                     ___xxtofl@val:
  1783                           	opt callstack 0
  1784  00000C                     fabsf@x:
  1785                           	opt callstack 0
  1786  00000C                     ___aodiv@dividend:
  1787                           	opt callstack 0
  1788  00000C                     ___aomod@dividend:
  1789                           	opt callstack 0
  1790  00000C                     ___lodiv@dividend:
  1791                           	opt callstack 0
  1792  00000C                     ___lomod@dividend:
  1793                           	opt callstack 0
  1794                           
  1795                           ; 8 bytes @ 0xB
  1796  00000C                     	ds	1
  1797  00000D                     EUSART_Write_String@data:
  1798                           	opt callstack 0
  1799                           
  1800                           ; 2 bytes @ 0xC
  1801  00000D                     	ds	1
  1802  00000E                     ??_isspace:
  1803  00000E                     ??_isdigit:
  1804  00000E                     SPI1_WriteWord@bytel:
  1805                           	opt callstack 0
  1806  00000E                     ___wmul@multiplicand:
  1807                           	opt callstack 0
  1808  00000E                     fputc@fp:
  1809                           	opt callstack 0
  1810  00000E                     strlen@a:
  1811                           	opt callstack 0
  1812  00000E                     strncmp@_r:
  1813                           	opt callstack 0
  1814                           
  1815                           ; 2 bytes @ 0xD
  1816  00000E                     	ds	1
  1817  00000F                     EUSART_Write_String@i:
  1818                           	opt callstack 0
  1819  00000F                     SPI1_WriteWord@byteh:
  1820                           	opt callstack 0
  1821                           
  1822                           ; 1 bytes @ 0xE
  1823  00000F                     	ds	1
  1824  000010                     ??_fputc:
  1825  000010                     ??___xxtofl:
  1826  000010                     ___wmul@product:
  1827                           	opt callstack 0
  1828  000010                     strncmp@n:
  1829                           	opt callstack 0
  1830  000010                     ___lmul@multiplicand:
  1831                           	opt callstack 0
  1832  000010                     ___fladd@a:
  1833                           	opt callstack 0
  1834  000010                     fabsf@u:
  1835                           	opt callstack 0
  1836  000010                     nanf@u:
  1837                           	opt callstack 0
  1838                           
  1839                           ; 4 bytes @ 0xF
  1840  000010                     	ds	2
  1841  000012                     ??_strncmp:
  1842  000012                     _isspace$2096:
  1843                           	opt callstack 0
  1844                           
  1845                           ; 1 bytes @ 0x11
  1846  000012                     	ds	1
  1847  000013                     ?_atoi:
  1848                           	opt callstack 0
  1849  000013                     atoi@s:
  1850                           	opt callstack 0
  1851  000013                     strncmp@l:
  1852                           	opt callstack 0
  1853                           
  1854                           ; 2 bytes @ 0x12
  1855  000013                     	ds	1
  1856  000014                     ??___fladd:
  1857  000014                     ___xxtofl@sign:
  1858                           	opt callstack 0
  1859  000014                     ___lmul@product:
  1860                           	opt callstack 0
  1861  000014                     ___aodiv@divisor:
  1862                           	opt callstack 0
  1863  000014                     ___aomod@divisor:
  1864                           	opt callstack 0
  1865  000014                     ___lodiv@divisor:
  1866                           	opt callstack 0
  1867  000014                     ___lomod@divisor:
  1868                           	opt callstack 0
  1869                           
  1870                           ; 8 bytes @ 0x13
  1871  000014                     	ds	1
  1872  000015                     ??_atoi:
  1873  000015                     ___xxtofl@exp:
  1874                           	opt callstack 0
  1875  000015                     fputs@s:
  1876                           	opt callstack 0
  1877  000015                     strncmp@r:
  1878                           	opt callstack 0
  1879                           
  1880                           ; 2 bytes @ 0x14
  1881  000015                     	ds	1
  1882  000016                     ___xxtofl@arg:
  1883                           	opt callstack 0
  1884                           
  1885                           ; 4 bytes @ 0x15
  1886  000016                     	ds	1
  1887  000017                     fputs@fp:
  1888                           	opt callstack 0
  1889                           
  1890                           ; 2 bytes @ 0x16
  1891  000017                     	ds	1
  1892  000018                     ?_atol:
  1893                           	opt callstack 0
  1894  000018                     ___fladd@signs:
  1895                           	opt callstack 0
  1896  000018                     atol@s:
  1897                           	opt callstack 0
  1898                           
  1899                           ; 2 bytes @ 0x17
  1900  000018                     	ds	1
  1901  000019                     ___fladd@aexp:
  1902                           	opt callstack 0
  1903  000019                     fputs@c:
  1904                           	opt callstack 0
  1905  000019                     atoi@neg:
  1906                           	opt callstack 0
  1907                           
  1908                           ; 2 bytes @ 0x18
  1909  000019                     	ds	1
  1910  00001A                     ___fladd@bexp:
  1911                           	opt callstack 0
  1912  00001A                     fputs@i:
  1913                           	opt callstack 0
  1914                           
  1915                           ; 2 bytes @ 0x19
  1916  00001A                     	ds	1
  1917  00001B                     ___fladd@grs:
  1918                           	opt callstack 0
  1919  00001B                     _atoi$2069:
  1920                           	opt callstack 0
  1921                           
  1922                           ; 2 bytes @ 0x1A
  1923  00001B                     	ds	1
  1924  00001C                     ??_atol:
  1925  00001C                     ?_pad:
  1926                           	opt callstack 0
  1927  00001C                     ?___flmul:
  1928                           	opt callstack 0
  1929  00001C                     ___aodiv@counter:
  1930                           	opt callstack 0
  1931  00001C                     ___aomod@counter:
  1932                           	opt callstack 0
  1933  00001C                     ___lomod@counter:
  1934                           	opt callstack 0
  1935  00001C                     pad@fp:
  1936                           	opt callstack 0
  1937  00001C                     ___flmul@b:
  1938                           	opt callstack 0
  1939  00001C                     ___lodiv@quotient:
  1940                           	opt callstack 0
  1941                           
  1942                           ; 8 bytes @ 0x1B
  1943  00001C                     	ds	1
  1944  00001D                     ___aodiv@sign:
  1945                           	opt callstack 0
  1946  00001D                     ___aomod@sign:
  1947                           	opt callstack 0
  1948  00001D                     _atoi$2071:
  1949                           	opt callstack 0
  1950                           
  1951                           ; 2 bytes @ 0x1C
  1952  00001D                     	ds	1
  1953  00001E                     ?_abs:
  1954                           	opt callstack 0
  1955  00001E                     pad@buf:
  1956                           	opt callstack 0
  1957  00001E                     abs@a:
  1958                           	opt callstack 0
  1959  00001E                     ___aodiv@quotient:
  1960                           	opt callstack 0
  1961                           
  1962                           ; 8 bytes @ 0x1D
  1963  00001E                     	ds	1
  1964  00001F                     _atoi$2070:
  1965                           	opt callstack 0
  1966                           
  1967                           ; 1 bytes @ 0x1E
  1968  00001F                     	ds	1
  1969  000020                     ??_abs:
  1970  000020                     pad@p:
  1971                           	opt callstack 0
  1972  000020                     atoi@n:
  1973                           	opt callstack 0
  1974  000020                     ___flmul@a:
  1975                           	opt callstack 0
  1976                           
  1977                           ; 4 bytes @ 0x1F
  1978  000020                     	ds	1
  1979  000021                     atol@neg:
  1980                           	opt callstack 0
  1981                           
  1982                           ; 2 bytes @ 0x20
  1983  000021                     	ds	1
  1984  000022                     ??_pad:
  1985                           
  1986                           ; 1 bytes @ 0x21
  1987  000022                     	ds	1
  1988  000023                     pad@i:
  1989                           	opt callstack 0
  1990  000023                     _atol$2078:
  1991                           	opt callstack 0
  1992                           
  1993                           ; 2 bytes @ 0x22
  1994  000023                     	ds	1
  1995  000024                     ??___flmul:
  1996  000024                     ___lodiv@counter:
  1997                           	opt callstack 0
  1998                           
  1999                           ; 1 bytes @ 0x23
  2000  000024                     	ds	1
  2001  000025                     pad@w:
  2002                           	opt callstack 0
  2003  000025                     _atol$2080:
  2004                           	opt callstack 0
  2005                           
  2006                           ; 2 bytes @ 0x24
  2007  000025                     	ds	2
  2008  000027                     ?_ctoa:
  2009                           	opt callstack 0
  2010  000027                     ?_dtoa:
  2011                           	opt callstack 0
  2012  000027                     ?_utoa:
  2013                           	opt callstack 0
  2014  000027                     _atol$2079:
  2015                           	opt callstack 0
  2016  000027                     ctoa@fp:
  2017                           	opt callstack 0
  2018  000027                     dtoa@fp:
  2019                           	opt callstack 0
  2020  000027                     utoa@fp:
  2021                           	opt callstack 0
  2022                           
  2023                           ; 2 bytes @ 0x26
  2024  000027                     	ds	1
  2025  000028                     ___flmul@sign:
  2026                           	opt callstack 0
  2027  000028                     atol@n:
  2028                           	opt callstack 0
  2029                           
  2030                           ; 4 bytes @ 0x27
  2031  000028                     	ds	1
  2032  000029                     ctoa@c:
  2033                           	opt callstack 0
  2034  000029                     ___flmul@grs:
  2035                           	opt callstack 0
  2036  000029                     dtoa@d:
  2037                           	opt callstack 0
  2038  000029                     utoa@d:
  2039                           	opt callstack 0
  2040                           
  2041                           ; 8 bytes @ 0x28
  2042  000029                     	ds	1
  2043  00002A                     ctoa@w:
  2044                           	opt callstack 0
  2045                           
  2046                           ; 2 bytes @ 0x29
  2047  00002A                     	ds	3
  2048  00002D                     ___flmul@aexp:
  2049                           	opt callstack 0
  2050                           
  2051                           ; 1 bytes @ 0x2C
  2052  00002D                     	ds	1
  2053  00002E                     ___flmul@bexp:
  2054                           	opt callstack 0
  2055                           
  2056                           ; 1 bytes @ 0x2D
  2057  00002E                     	ds	1
  2058  00002F                     ___flmul@prod:
  2059                           	opt callstack 0
  2060                           
  2061                           ; 4 bytes @ 0x2E
  2062  00002F                     	ds	2
  2063  000031                     ??_dtoa:
  2064  000031                     ??_utoa:
  2065                           
  2066                           ; 1 bytes @ 0x30
  2067  000031                     	ds	2
  2068  000033                     ___flmul@temp:
  2069                           	opt callstack 0
  2070                           
  2071                           ; 2 bytes @ 0x32
  2072  000033                     	ds	2
  2073  000035                     ??___fldiv:
  2074  000035                     ??___flge:
  2075  000035                     ?_scalbnf:
  2076                           	opt callstack 0
  2077  000035                     scalbnf@x:
  2078                           	opt callstack 0
  2079                           
  2080                           ; 4 bytes @ 0x34
  2081  000035                     	ds	4
  2082  000039                     vfprintf@cfmt:
  2083                           	opt callstack 0
  2084  000039                     scalbnf@n:
  2085                           	opt callstack 0
  2086                           
  2087                           ; 2 bytes @ 0x38
  2088  000039                     	ds	2
  2089  00003B                     ??_Parse_Data:
  2090  00003B                     
  2091                           ; 1 bytes @ 0x3A
  2092  00003B                     	ds	1
  2093                           
  2094 ;;
  2095 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2096 ;;
  2097 ;; *************** function _main *****************
  2098 ;; Defined at:
  2099 ;;		line 66 in file "main.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2113 ;;      Params:         0       0       0       0       0       0       0       0       0
  2114 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2115 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2116 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2117 ;;Total ram usage:        2 bytes
  2118 ;; Hardware stack levels required when called:   16
  2119 ;; This function calls:
  2120 ;;		_AD9833_Init
  2121 ;;		_Parse_Data
  2122 ;;		_SPI1_Start
  2123 ;;		_SYSTEM_Initialize
  2124 ;;		_TMR1_StopTimer
  2125 ;; This function is called by:
  2126 ;;		Startup code after reset
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text0
  2131  005318                     __ptext0:
  2132                           	opt callstack 0
  2133  005318                     _main:
  2134                           	opt callstack 15
  2135                           
  2136                           ;main.c: 69:     SYSTEM_Initialize();
  2137                           
  2138                           ;incstack = 0
  2139  005318  ECC7  F02C         	call	_SYSTEM_Initialize	;wreg free
  2140                           
  2141                           ;main.c: 72:     PORTCbits.RC0 = 1;
  2142  00531C  808F               	bsf	3983,0,c	;volatile
  2143                           
  2144                           ;main.c: 75:     SPI1_Start();
  2145  00531E  ECBB  F02D         	call	_SPI1_Start	;wreg free
  2146                           
  2147                           ;main.c: 76:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2148  005322  0E09               	movlw	9
  2149  005324  0100               	movlb	0	; () banked
  2150  005326  6FD4               	movwf	(??_main+1)& (0+255),b
  2151  005328  0E1E               	movlw	30
  2152  00532A  6FD3               	movwf	??_main& (0+255),b
  2153  00532C  0EE4               	movlw	228
  2154  00532E                     u10267:
  2155  00532E  2EE8               	decfsz	wreg,f,c
  2156  005330  D7FE               	bra	u10267
  2157  005332  2FD3               	decfsz	??_main& (0+255),f,b
  2158  005334  D7FC               	bra	u10267
  2159  005336  2FD4               	decfsz	(??_main+1)& (0+255),f,b
  2160  005338  D7FA               	bra	u10267
  2161  00533A  F000               	nop	
  2162                           
  2163                           ;main.c: 79:     AD9833_Init();
  2164  00533C  ECEF  F02A         	call	_AD9833_Init	;wreg free
  2165                           
  2166                           ;main.c: 82:     PORTBbits.RB3 = 0;
  2167  005340  968E               	bcf	3982,3,c	;volatile
  2168                           
  2169                           ;main.c: 85:     (INTCONbits.GIEH = 1);
  2170  005342  8EF2               	bsf	4082,7,c	;volatile
  2171                           
  2172                           ;main.c: 88:     (INTCONbits.GIEL = 1);
  2173  005344  8CF2               	bsf	4082,6,c	;volatile
  2174                           
  2175                           ;main.c: 91:     (INTCONbits.PEIE = 1);
  2176  005346  8CF2               	bsf	4082,6,c	;volatile
  2177  005348  D009               	goto	l578
  2178  00534A                     l9385:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;main.c: 106:                 if(sec == 1)
  2182  00534A  0447               	decf	_sec,w,c
  2183  00534C  A4D8               	btfss	status,2,c
  2184  00534E  D006               	goto	l578
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;main.c: 107:                 {;main.c: 109:                 Parse_Data();
  2188  005350  EC2D  F014         	call	_Parse_Data	;wreg free
  2189                           
  2190                           ;main.c: 112:                 TMR1_StopTimer();
  2191  005354  ECCC  F02D         	call	_TMR1_StopTimer	;wreg free
  2192                           
  2193                           ;main.c: 113:                 sec = 0;
  2194  005358  0E00               	movlw	0
  2195  00535A  6E47               	movwf	_sec,c
  2196  00535C                     l578:
  2197                           
  2198                           ; BSR set to: 0
  2199  00535C  C0FA  F0D3         	movff	_state,??_main	;volatile
  2200  005360  C0FB  F0D4         	movff	_state+1,??_main+1	;volatile
  2201                           
  2202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2203                           ; Switch size 1, requested type "simple"
  2204                           ; Number of cases is 1, Range of values is 0 to 0
  2205                           ; switch strategies available:
  2206                           ; Name         Instructions Cycles
  2207                           ; simple_byte            4     3 (average)
  2208                           ;	Chosen strategy is simple_byte
  2209  005364  0100               	movlb	0	; () banked
  2210  005366  51D4               	movf	(??_main+1)& (0+255),w,b
  2211  005368  0A00               	xorlw	0	; case 0
  2212  00536A  A4D8               	btfss	status,2,c
  2213  00536C  D7F7               	goto	l578
  2214                           
  2215                           ; BSR set to: 0
  2216                           ; Switch size 1, requested type "simple"
  2217                           ; Number of cases is 2, Range of values is 1 to 2
  2218                           ; switch strategies available:
  2219                           ; Name         Instructions Cycles
  2220                           ; simple_byte            7     4 (average)
  2221                           ;	Chosen strategy is simple_byte
  2222  00536E  51D3               	movf	??_main& (0+255),w,b
  2223  005370  0A01               	xorlw	1	; case 1
  2224  005372  B4D8               	btfsc	status,2,c
  2225  005374  D7EA               	goto	l9385
  2226  005376  0A03               	xorlw	3	; case 2
  2227  005378  D7F1               	goto	l578
  2228  00537A                     __end_of_main:
  2229                           	opt callstack 0
  2230                           
  2231 ;; *************** function _TMR1_StopTimer *****************
  2232 ;; Defined at:
  2233 ;;		line 82 in file "mcc_generated_files/tmr1.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		None
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2247 ;;      Params:         0       0       0       0       0       0       0       0       0
  2248 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2250 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2251 ;;Total ram usage:        0 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    7
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_main
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text1
  2262  005B98                     __ptext1:
  2263                           	opt callstack 0
  2264  005B98                     _TMR1_StopTimer:
  2265                           	opt callstack 23
  2266                           
  2267                           ;mcc_generated_files/tmr1.c: 85:     T1CONbits.TMR1ON = 0;
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;incstack = 0
  2271  005B98  90CF               	bcf	4047,0,c	;volatile
  2272  005B9A  0012               	return		;funcret
  2273  005B9C                     __end_of_TMR1_StopTimer:
  2274                           	opt callstack 0
  2275                           
  2276 ;; *************** function _SYSTEM_Initialize *****************
  2277 ;; Defined at:
  2278 ;;		line 26 in file "mcc_generated_files/mcc.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;		None
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;		None
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		wreg, status,2, status,0, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2292 ;;      Params:         0       0       0       0       0       0       0       0       0
  2293 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2294 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2295 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2296 ;;Total ram usage:        0 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    9
  2299 ;; This function calls:
  2300 ;;		_EUSART_Initialize
  2301 ;;		_INTERRUPT_Initialize
  2302 ;;		_OSCILLATOR_Initialize
  2303 ;;		_PIN_MANAGER_Initialize
  2304 ;;		_PMD_Initialize
  2305 ;;		_SPI1_Initialize
  2306 ;;		_TMR0_Initialize
  2307 ;;		_TMR1_Initialize
  2308 ;;		_TMR3_Initialize
  2309 ;; This function is called by:
  2310 ;;		_main
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text2
  2315  00598E                     __ptext2:
  2316                           	opt callstack 0
  2317  00598E                     _SYSTEM_Initialize:
  2318                           	opt callstack 21
  2319                           
  2320                           ;mcc_generated_files/mcc.c: 28:     INTERRUPT_Initialize();
  2321                           
  2322                           ;incstack = 0
  2323  00598E  EC5F  F02D         	call	_INTERRUPT_Initialize	;wreg free
  2324                           
  2325                           ;mcc_generated_files/mcc.c: 29:     PMD_Initialize();
  2326  005992  EC10  F02D         	call	_PMD_Initialize	;wreg free
  2327                           
  2328                           ;mcc_generated_files/mcc.c: 30:     SPI1_Initialize();
  2329  005996  ECED  F02C         	call	_SPI1_Initialize	;wreg free
  2330                           
  2331                           ;mcc_generated_files/mcc.c: 31:     PIN_MANAGER_Initialize();
  2332  00599A  EC52  F029         	call	_PIN_MANAGER_Initialize	;wreg free
  2333                           
  2334                           ;mcc_generated_files/mcc.c: 32:     OSCILLATOR_Initialize();
  2335  00599E  EC48  F02D         	call	_OSCILLATOR_Initialize	;wreg free
  2336                           
  2337                           ;mcc_generated_files/mcc.c: 33:     TMR3_Initialize();
  2338  0059A2  EC0D  F02B         	call	_TMR3_Initialize	;wreg free
  2339                           
  2340                           ;mcc_generated_files/mcc.c: 35:     TMR1_Initialize();
  2341  0059A6  EC2A  F02B         	call	_TMR1_Initialize	;wreg free
  2342                           
  2343                           ;mcc_generated_files/mcc.c: 36:     TMR0_Initialize();
  2344  0059AA  ECE3  F02B         	call	_TMR0_Initialize	;wreg free
  2345                           
  2346                           ;mcc_generated_files/mcc.c: 37:     EUSART_Initialize();
  2347  0059AE  EC14  F029         	call	_EUSART_Initialize	;wreg free
  2348  0059B2  0012               	return		;funcret
  2349  0059B4                     __end_of_SYSTEM_Initialize:
  2350                           	opt callstack 0
  2351                           
  2352 ;; *************** function _TMR3_Initialize *****************
  2353 ;; Defined at:
  2354 ;;		line 42 in file "mcc_generated_files/tmr3.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;		None
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;		None
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, status,2, status,0
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2368 ;;      Params:         0       0       0       0       0       0       0       0       0
  2369 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2370 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2371 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2372 ;;Total ram usage:        2 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; Hardware stack levels required when called:    7
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_SYSTEM_Initialize
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text3
  2383  00561A                     __ptext3:
  2384                           	opt callstack 0
  2385  00561A                     _TMR3_Initialize:
  2386                           	opt callstack 22
  2387                           
  2388                           ;mcc_generated_files/tmr3.c: 47:     T3GCON = 0x00;
  2389                           
  2390                           ;incstack = 0
  2391  00561A  0E00               	movlw	0
  2392  00561C  6ECA               	movwf	4042,c	;volatile
  2393                           
  2394                           ;mcc_generated_files/tmr3.c: 50:     T3GATE = 0x00;
  2395  00561E  0E00               	movlw	0
  2396  005620  6ECB               	movwf	4043,c	;volatile
  2397                           
  2398                           ;mcc_generated_files/tmr3.c: 53:     T3CLK = 0x02;
  2399  005622  0E02               	movlw	2
  2400  005624  6ECC               	movwf	4044,c	;volatile
  2401                           
  2402                           ;mcc_generated_files/tmr3.c: 56:     TMR3H = 0x06;
  2403  005626  0E06               	movlw	6
  2404  005628  6EC8               	movwf	4040,c	;volatile
  2405                           
  2406                           ;mcc_generated_files/tmr3.c: 59:     TMR3L = 0x00;
  2407  00562A  0E00               	movlw	0
  2408  00562C  6EC7               	movwf	4039,c	;volatile
  2409                           
  2410                           ;mcc_generated_files/tmr3.c: 62:     PIR4bits.TMR3IF = 0;
  2411  00562E  010E               	movlb	14	; () banked
  2412  005630  95CE               	bcf	206,2,b	;volatile
  2413                           
  2414                           ; BSR set to: 14
  2415                           ;mcc_generated_files/tmr3.c: 65:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  2416  005632  50C7               	movf	4039,w,c	;volatile
  2417  005634  CFC8 F00C          	movff	4040,??_TMR3_Initialize	;volatile
  2418  005638  6A0D               	clrf	(??_TMR3_Initialize+1)& (0+255),c
  2419  00563A  C00C  F00D         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  2420  00563E  6A0C               	clrf	??_TMR3_Initialize,c
  2421  005640  100C               	iorwf	??_TMR3_Initialize,w,c
  2422  005642  0100               	movlb	0	; () banked
  2423  005644  6FEF               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  2424  005646  500D               	movf	??_TMR3_Initialize+1,w,c
  2425  005648  6FF0               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;mcc_generated_files/tmr3.c: 68:     PIE4bits.TMR3IE = 1;
  2429  00564A  010E               	movlb	14	; () banked
  2430  00564C  85C6               	bsf	198,2,b	;volatile
  2431                           
  2432                           ; BSR set to: 14
  2433                           ;mcc_generated_files/tmr3.c: 71:     T3CON = 0x01;
  2434  00564E  0E01               	movlw	1
  2435  005650  6EC9               	movwf	4041,c	;volatile
  2436                           
  2437                           ; BSR set to: 14
  2438  005652  0012               	return		;funcret
  2439  005654                     __end_of_TMR3_Initialize:
  2440                           	opt callstack 0
  2441                           
  2442 ;; *************** function _TMR1_Initialize *****************
  2443 ;; Defined at:
  2444 ;;		line 43 in file "mcc_generated_files/tmr1.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;		None
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2, status,0
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2458 ;;      Params:         0       0       0       0       0       0       0       0       0
  2459 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2460 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2461 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2462 ;;Total ram usage:        2 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    7
  2465 ;; This function calls:
  2466 ;;		Nothing
  2467 ;; This function is called by:
  2468 ;;		_SYSTEM_Initialize
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text4
  2473  005654                     __ptext4:
  2474                           	opt callstack 0
  2475  005654                     _TMR1_Initialize:
  2476                           	opt callstack 22
  2477                           
  2478                           ;mcc_generated_files/tmr1.c: 48:     T1GCON = 0x00;
  2479                           
  2480                           ; BSR set to: 14
  2481                           ;incstack = 0
  2482  005654  0E00               	movlw	0
  2483  005656  6ED0               	movwf	4048,c	;volatile
  2484                           
  2485                           ;mcc_generated_files/tmr1.c: 51:     T1GATE = 0x00;
  2486  005658  0E00               	movlw	0
  2487  00565A  6ED1               	movwf	4049,c	;volatile
  2488                           
  2489                           ;mcc_generated_files/tmr1.c: 54:     T1CLK = 0x01;
  2490  00565C  0E01               	movlw	1
  2491  00565E  6ED2               	movwf	4050,c	;volatile
  2492                           
  2493                           ;mcc_generated_files/tmr1.c: 57:     TMR1H = 0xC1;
  2494  005660  0EC1               	movlw	193
  2495  005662  6ECE               	movwf	4046,c	;volatile
  2496                           
  2497                           ;mcc_generated_files/tmr1.c: 60:     TMR1L = 0x80;
  2498  005664  0E80               	movlw	128
  2499  005666  6ECD               	movwf	4045,c	;volatile
  2500                           
  2501                           ;mcc_generated_files/tmr1.c: 63:     PIR4bits.TMR1IF = 0;
  2502  005668  010E               	movlb	14	; () banked
  2503  00566A  91CE               	bcf	206,0,b	;volatile
  2504                           
  2505                           ; BSR set to: 14
  2506                           ;mcc_generated_files/tmr1.c: 66:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2507  00566C  50CD               	movf	4045,w,c	;volatile
  2508  00566E  CFCE F00C          	movff	4046,??_TMR1_Initialize	;volatile
  2509  005672  6A0D               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  2510  005674  C00C  F00D         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  2511  005678  6A0C               	clrf	??_TMR1_Initialize,c
  2512  00567A  100C               	iorwf	??_TMR1_Initialize,w,c
  2513  00567C  0100               	movlb	0	; () banked
  2514  00567E  6FF1               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  2515  005680  500D               	movf	??_TMR1_Initialize+1,w,c
  2516  005682  6FF2               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;mcc_generated_files/tmr1.c: 69:     PIE4bits.TMR1IE = 1;
  2520  005684  010E               	movlb	14	; () banked
  2521  005686  81C6               	bsf	198,0,b	;volatile
  2522                           
  2523                           ; BSR set to: 14
  2524                           ;mcc_generated_files/tmr1.c: 73:     T1CON = 0x11;
  2525  005688  0E11               	movlw	17
  2526  00568A  6ECF               	movwf	4047,c	;volatile
  2527                           
  2528                           ; BSR set to: 14
  2529  00568C  0012               	return		;funcret
  2530  00568E                     __end_of_TMR1_Initialize:
  2531                           	opt callstack 0
  2532                           
  2533 ;; *************** function _TMR0_Initialize *****************
  2534 ;; Defined at:
  2535 ;;		line 44 in file "mcc_generated_files/tmr0.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;		None
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;		None
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      void 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2, status,0
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2549 ;;      Params:         0       0       0       0       0       0       0       0       0
  2550 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2551 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2552 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2553 ;;Total ram usage:        2 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:    7
  2556 ;; This function calls:
  2557 ;;		Nothing
  2558 ;; This function is called by:
  2559 ;;		_SYSTEM_Initialize
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text5
  2564  0057C6                     __ptext5:
  2565                           	opt callstack 0
  2566  0057C6                     _TMR0_Initialize:
  2567                           	opt callstack 22
  2568                           
  2569                           ;mcc_generated_files/tmr0.c: 48:     T0CON1 = 0x10;
  2570                           
  2571                           ; BSR set to: 14
  2572                           ;incstack = 0
  2573  0057C6  0E10               	movlw	16
  2574  0057C8  6ED6               	movwf	4054,c	;volatile
  2575                           
  2576                           ;mcc_generated_files/tmr0.c: 51:     TMR0H = 0xFE;
  2577  0057CA  0EFE               	movlw	254
  2578  0057CC  6ED4               	movwf	4052,c	;volatile
  2579                           
  2580                           ;mcc_generated_files/tmr0.c: 54:     TMR0L = 0x00;
  2581  0057CE  0E00               	movlw	0
  2582  0057D0  6ED3               	movwf	4051,c	;volatile
  2583                           
  2584                           ;mcc_generated_files/tmr0.c: 57:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  2585  0057D2  50D3               	movf	4051,w,c	;volatile
  2586  0057D4  CFD4 F00C          	movff	4052,??_TMR0_Initialize	;volatile
  2587  0057D8  6A0D               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  2588  0057DA  C00C  F00D         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  2589  0057DE  6A0C               	clrf	??_TMR0_Initialize,c
  2590  0057E0  100C               	iorwf	??_TMR0_Initialize,w,c
  2591  0057E2  0102               	movlb	2	; () banked
  2592  0057E4  6F32               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
  2593  0057E6  500D               	movf	??_TMR0_Initialize+1,w,c
  2594  0057E8  6F33               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
  2595                           
  2596                           ; BSR set to: 2
  2597                           ;mcc_generated_files/tmr0.c: 60:     PIR0bits.TMR0IF = 0;
  2598  0057EA  010E               	movlb	14	; () banked
  2599  0057EC  9BCA               	bcf	202,5,b	;volatile
  2600                           
  2601                           ; BSR set to: 14
  2602                           ;mcc_generated_files/tmr0.c: 63:     PIE0bits.TMR0IE = 1;
  2603  0057EE  8BC2               	bsf	194,5,b	;volatile
  2604                           
  2605                           ; BSR set to: 14
  2606                           ;mcc_generated_files/tmr0.c: 67:     T0CON0 = 0x90;
  2607  0057F0  0E90               	movlw	144
  2608  0057F2  6ED5               	movwf	4053,c	;volatile
  2609                           
  2610                           ; BSR set to: 14
  2611  0057F4  0012               	return		;funcret
  2612  0057F6                     __end_of_TMR0_Initialize:
  2613                           	opt callstack 0
  2614                           
  2615 ;; *************** function _SPI1_Initialize *****************
  2616 ;; Defined at:
  2617 ;;		line 38 in file "mcc_generated_files/spi1.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;		None
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, status,2
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2631 ;;      Params:         0       0       0       0       0       0       0       0       0
  2632 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2634 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2635 ;;Total ram usage:        0 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    7
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_SYSTEM_Initialize
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text6
  2646  0059DA                     __ptext6:
  2647                           	opt callstack 0
  2648  0059DA                     _SPI1_Initialize:
  2649                           	opt callstack 22
  2650                           
  2651                           ;mcc_generated_files/spi1.c: 41:     SSP1CLKPPS = 17;
  2652                           
  2653                           ; BSR set to: 14
  2654                           ;incstack = 0
  2655  0059DA  0E11               	movlw	17
  2656  0059DC  010E               	movlb	14	; () banked
  2657  0059DE  6FB7               	movwf	183,b	;volatile
  2658                           
  2659                           ;mcc_generated_files/spi1.c: 42:     SSP1DATPPS = 23;
  2660  0059E0  0E17               	movlw	23
  2661  0059E2  6FB8               	movwf	184,b	;volatile
  2662                           
  2663                           ;mcc_generated_files/spi1.c: 43:     RC1PPS = 13;
  2664  0059E4  0E0D               	movlw	13
  2665  0059E6  6FF8               	movwf	248,b	;volatile
  2666                           
  2667                           ;mcc_generated_files/spi1.c: 44:     RC2PPS = 14;
  2668  0059E8  0E0E               	movlw	14
  2669  0059EA  6FF9               	movwf	249,b	;volatile
  2670                           
  2671                           ;mcc_generated_files/spi1.c: 48:     SSP1STAT = 0x40;
  2672  0059EC  0E40               	movlw	64
  2673  0059EE  6E95               	movwf	3989,c	;volatile
  2674                           
  2675                           ;mcc_generated_files/spi1.c: 50:     SSP1CON1 = 0x12;
  2676  0059F0  0E12               	movlw	18
  2677  0059F2  6E96               	movwf	3990,c	;volatile
  2678                           
  2679                           ;mcc_generated_files/spi1.c: 51:     SSP1ADD = 0x01;
  2680  0059F4  0E01               	movlw	1
  2681  0059F6  6E93               	movwf	3987,c	;volatile
  2682                           
  2683                           ; BSR set to: 14
  2684                           ;mcc_generated_files/spi1.c: 52:     TRISCbits.TRISC1 = 0;
  2685  0059F8  928A               	bcf	3978,1,c	;volatile
  2686                           
  2687                           ; BSR set to: 14
  2688                           ;mcc_generated_files/spi1.c: 53:     SSP1CON1bits.SSPEN = 0;
  2689  0059FA  9A96               	bcf	3990,5,c	;volatile
  2690                           
  2691                           ; BSR set to: 14
  2692  0059FC  0012               	return		;funcret
  2693  0059FE                     __end_of_SPI1_Initialize:
  2694                           	opt callstack 0
  2695                           
  2696 ;; *************** function _PMD_Initialize *****************
  2697 ;; Defined at:
  2698 ;;		line 54 in file "mcc_generated_files/mcc.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;		None
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;		None
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2712 ;;      Params:         0       0       0       0       0       0       0       0       0
  2713 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2715 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2716 ;;Total ram usage:        0 bytes
  2717 ;; Hardware stack levels used:    1
  2718 ;; Hardware stack levels required when called:    7
  2719 ;; This function calls:
  2720 ;;		Nothing
  2721 ;; This function is called by:
  2722 ;;		_SYSTEM_Initialize
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text7
  2727  005A20                     __ptext7:
  2728                           	opt callstack 0
  2729  005A20                     _PMD_Initialize:
  2730                           	opt callstack 22
  2731                           
  2732                           ;mcc_generated_files/mcc.c: 57:     PMD0 = 0x00;
  2733                           
  2734                           ; BSR set to: 14
  2735                           ;incstack = 0
  2736  005A20  0E00               	movlw	0
  2737  005A22  010E               	movlb	14	; () banked
  2738  005A24  6FE1               	movwf	225,b	;volatile
  2739                           
  2740                           ;mcc_generated_files/mcc.c: 59:     PMD1 = 0x00;
  2741  005A26  0E00               	movlw	0
  2742  005A28  6FE2               	movwf	226,b	;volatile
  2743                           
  2744                           ;mcc_generated_files/mcc.c: 61:     PMD2 = 0x00;
  2745  005A2A  0E00               	movlw	0
  2746  005A2C  6FE3               	movwf	227,b	;volatile
  2747                           
  2748                           ;mcc_generated_files/mcc.c: 63:     PMD3 = 0x00;
  2749  005A2E  0E00               	movlw	0
  2750  005A30  6FE4               	movwf	228,b	;volatile
  2751                           
  2752                           ;mcc_generated_files/mcc.c: 65:     PMD4 = 0x00;
  2753  005A32  0E00               	movlw	0
  2754  005A34  6FE5               	movwf	229,b	;volatile
  2755                           
  2756                           ;mcc_generated_files/mcc.c: 67:     PMD5 = 0x00;
  2757  005A36  0E00               	movlw	0
  2758  005A38  6FE6               	movwf	230,b	;volatile
  2759                           
  2760                           ; BSR set to: 14
  2761  005A3A  0012               	return		;funcret
  2762  005A3C                     __end_of_PMD_Initialize:
  2763                           	opt callstack 0
  2764                           
  2765 ;; *************** function _PIN_MANAGER_Initialize *****************
  2766 ;; Defined at:
  2767 ;;		line 26 in file "mcc_generated_files/pin_manager.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;		None
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;		None
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      void 
  2774 ;; Registers used:
  2775 ;;		wreg, status,2
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2781 ;;      Params:         0       0       0       0       0       0       0       0       0
  2782 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2784 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2785 ;;Total ram usage:        0 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; Hardware stack levels required when called:    7
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_SYSTEM_Initialize
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text8
  2796  0052A4                     __ptext8:
  2797                           	opt callstack 0
  2798  0052A4                     _PIN_MANAGER_Initialize:
  2799                           	opt callstack 22
  2800                           
  2801                           ;mcc_generated_files/pin_manager.c: 31:     LATA = 0x00;
  2802                           
  2803                           ; BSR set to: 14
  2804                           ;incstack = 0
  2805  0052A4  0E00               	movlw	0
  2806  0052A6  6E83               	movwf	3971,c	;volatile
  2807                           
  2808                           ;mcc_generated_files/pin_manager.c: 32:     LATB = 0x00;
  2809  0052A8  0E00               	movlw	0
  2810  0052AA  6E84               	movwf	3972,c	;volatile
  2811                           
  2812                           ;mcc_generated_files/pin_manager.c: 33:     LATC = 0x00;
  2813  0052AC  0E00               	movlw	0
  2814  0052AE  6E85               	movwf	3973,c	;volatile
  2815                           
  2816                           ;mcc_generated_files/pin_manager.c: 38:     TRISA = 0xFF;
  2817  0052B0  6888               	setf	3976,c	;volatile
  2818                           
  2819                           ;mcc_generated_files/pin_manager.c: 39:     TRISB = 0xF6;
  2820  0052B2  0EF6               	movlw	246
  2821  0052B4  6E89               	movwf	3977,c	;volatile
  2822                           
  2823                           ;mcc_generated_files/pin_manager.c: 40:     TRISC = 0xF8;
  2824  0052B6  0EF8               	movlw	248
  2825  0052B8  6E8A               	movwf	3978,c	;volatile
  2826                           
  2827                           ;mcc_generated_files/pin_manager.c: 45:     ANSELC = 0x78;
  2828  0052BA  0E78               	movlw	120
  2829  0052BC  010F               	movlb	15	; () banked
  2830  0052BE  6F21               	movwf	33,b	;volatile
  2831                           
  2832                           ;mcc_generated_files/pin_manager.c: 46:     ANSELB = 0xF5;
  2833  0052C0  0EF5               	movlw	245
  2834  0052C2  6F19               	movwf	25,b	;volatile
  2835                           
  2836                           ;mcc_generated_files/pin_manager.c: 47:     ANSELA = 0x4F;
  2837  0052C4  0E4F               	movlw	79
  2838  0052C6  6F11               	movwf	17,b	;volatile
  2839                           
  2840                           ;mcc_generated_files/pin_manager.c: 52:     WPUE = 0x00;
  2841  0052C8  0E00               	movlw	0
  2842  0052CA  6F2D               	movwf	45,b	;volatile
  2843                           
  2844                           ;mcc_generated_files/pin_manager.c: 53:     WPUB = 0x00;
  2845  0052CC  0E00               	movlw	0
  2846  0052CE  6F18               	movwf	24,b	;volatile
  2847                           
  2848                           ;mcc_generated_files/pin_manager.c: 54:     WPUA = 0x00;
  2849  0052D0  0E00               	movlw	0
  2850  0052D2  6F10               	movwf	16,b	;volatile
  2851                           
  2852                           ;mcc_generated_files/pin_manager.c: 55:     WPUC = 0x00;
  2853  0052D4  0E00               	movlw	0
  2854  0052D6  6F20               	movwf	32,b	;volatile
  2855                           
  2856                           ;mcc_generated_files/pin_manager.c: 60:     ODCONA = 0x00;
  2857  0052D8  0E00               	movlw	0
  2858  0052DA  6F0F               	movwf	15,b	;volatile
  2859                           
  2860                           ;mcc_generated_files/pin_manager.c: 61:     ODCONB = 0x00;
  2861  0052DC  0E00               	movlw	0
  2862  0052DE  6F17               	movwf	23,b	;volatile
  2863                           
  2864                           ;mcc_generated_files/pin_manager.c: 62:     ODCONC = 0x00;
  2865  0052E0  0E00               	movlw	0
  2866  0052E2  6F1F               	movwf	31,b	;volatile
  2867                           
  2868                           ; BSR set to: 15
  2869                           ;mcc_generated_files/pin_manager.c: 67:     SLRCONA = 0xFF;
  2870  0052E4  690E               	setf	14,b	;volatile
  2871                           
  2872                           ; BSR set to: 15
  2873                           ;mcc_generated_files/pin_manager.c: 68:     SLRCONB = 0xFF;
  2874  0052E6  6916               	setf	22,b	;volatile
  2875                           
  2876                           ; BSR set to: 15
  2877                           ;mcc_generated_files/pin_manager.c: 69:     SLRCONC = 0xFF;
  2878  0052E8  691E               	setf	30,b	;volatile
  2879                           
  2880                           ; BSR set to: 15
  2881                           ;mcc_generated_files/pin_manager.c: 74:     INLVLA = 0xFF;
  2882  0052EA  690D               	setf	13,b	;volatile
  2883                           
  2884                           ; BSR set to: 15
  2885                           ;mcc_generated_files/pin_manager.c: 75:     INLVLB = 0xFF;
  2886  0052EC  6915               	setf	21,b	;volatile
  2887                           
  2888                           ; BSR set to: 15
  2889                           ;mcc_generated_files/pin_manager.c: 76:     INLVLC = 0xFF;
  2890  0052EE  691D               	setf	29,b	;volatile
  2891                           
  2892                           ;mcc_generated_files/pin_manager.c: 77:     INLVLE = 0x08;
  2893  0052F0  0E08               	movlw	8
  2894  0052F2  6F2A               	movwf	42,b	;volatile
  2895                           
  2896                           ;mcc_generated_files/pin_manager.c: 86:     RXPPS = 0x09;
  2897  0052F4  0E09               	movlw	9
  2898  0052F6  010E               	movlb	14	; () banked
  2899  0052F8  6FB5               	movwf	181,b	;volatile
  2900                           
  2901                           ;mcc_generated_files/pin_manager.c: 87:     SSP1CLKPPS = 0x11;
  2902  0052FA  0E11               	movlw	17
  2903  0052FC  6FB7               	movwf	183,b	;volatile
  2904                           
  2905                           ;mcc_generated_files/pin_manager.c: 88:     INT0PPS = 0x04;
  2906  0052FE  0E04               	movlw	4
  2907  005300  6FA1               	movwf	161,b	;volatile
  2908                           
  2909                           ;mcc_generated_files/pin_manager.c: 89:     RB0PPS = 0x09;
  2910  005302  0E09               	movlw	9
  2911  005304  6FEF               	movwf	239,b	;volatile
  2912                           
  2913                           ;mcc_generated_files/pin_manager.c: 90:     RC1PPS = 0x0D;
  2914  005306  0E0D               	movlw	13
  2915  005308  6FF8               	movwf	248,b	;volatile
  2916                           
  2917                           ;mcc_generated_files/pin_manager.c: 91:     RC2PPS = 0x0E;
  2918  00530A  0E0E               	movlw	14
  2919  00530C  6FF9               	movwf	249,b	;volatile
  2920                           
  2921                           ;mcc_generated_files/pin_manager.c: 92:     T0CKIPPS = 0x05;
  2922  00530E  0E05               	movlw	5
  2923  005310  6FA4               	movwf	164,b	;volatile
  2924                           
  2925                           ;mcc_generated_files/pin_manager.c: 93:     SSP1DATPPS = 0x17;
  2926  005312  0E17               	movlw	23
  2927  005314  6FB8               	movwf	184,b	;volatile
  2928                           
  2929                           ; BSR set to: 14
  2930  005316  0012               	return		;funcret
  2931  005318                     __end_of_PIN_MANAGER_Initialize:
  2932                           	opt callstack 0
  2933                           
  2934 ;; *************** function _OSCILLATOR_Initialize *****************
  2935 ;; Defined at:
  2936 ;;		line 40 in file "mcc_generated_files/mcc.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2950 ;;      Params:         0       0       0       0       0       0       0       0       0
  2951 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2952 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2953 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2954 ;;Total ram usage:        0 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:    7
  2957 ;; This function calls:
  2958 ;;		Nothing
  2959 ;; This function is called by:
  2960 ;;		_SYSTEM_Initialize
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text9
  2965  005A90                     __ptext9:
  2966                           	opt callstack 0
  2967  005A90                     _OSCILLATOR_Initialize:
  2968                           	opt callstack 22
  2969                           
  2970                           ;mcc_generated_files/mcc.c: 43:     OSCCON1 = 0x60;
  2971                           
  2972                           ; BSR set to: 14
  2973                           ;incstack = 0
  2974  005A90  0E60               	movlw	96
  2975  005A92  010E               	movlb	14	; () banked
  2976  005A94  6FD8               	movwf	216,b	;volatile
  2977                           
  2978                           ;mcc_generated_files/mcc.c: 45:     OSCCON3 = 0x00;
  2979  005A96  0E00               	movlw	0
  2980  005A98  6FDA               	movwf	218,b	;volatile
  2981                           
  2982                           ;mcc_generated_files/mcc.c: 47:     OSCEN = 0x00;
  2983  005A9A  0E00               	movlw	0
  2984  005A9C  6FDC               	movwf	220,b	;volatile
  2985                           
  2986                           ;mcc_generated_files/mcc.c: 49:     OSCFRQ = 0x08;
  2987  005A9E  0E08               	movlw	8
  2988  005AA0  6FDE               	movwf	222,b	;volatile
  2989                           
  2990                           ;mcc_generated_files/mcc.c: 51:     OSCTUNE = 0x00;
  2991  005AA2  0E00               	movlw	0
  2992  005AA4  6FDD               	movwf	221,b	;volatile
  2993                           
  2994                           ; BSR set to: 14
  2995  005AA6  0012               	return		;funcret
  2996  005AA8                     __end_of_OSCILLATOR_Initialize:
  2997                           	opt callstack 0
  2998                           
  2999 ;; *************** function _INTERRUPT_Initialize *****************
  3000 ;; Defined at:
  3001 ;;		line 37 in file "mcc_generated_files/interrupt_manager.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		None
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3015 ;;      Params:         0       0       0       0       0       0       0       0       0
  3016 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3018 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3019 ;;Total ram usage:        0 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    7
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_SYSTEM_Initialize
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text10
  3030  005ABE                     __ptext10:
  3031                           	opt callstack 0
  3032  005ABE                     _INTERRUPT_Initialize:
  3033                           	opt callstack 22
  3034                           
  3035                           ;mcc_generated_files/interrupt_manager.c: 40:     INTCONbits.IPEN = 1;
  3036                           
  3037                           ; BSR set to: 14
  3038                           ;incstack = 0
  3039  005ABE  8AF2               	bsf	4082,5,c	;volatile
  3040                           
  3041                           ;mcc_generated_files/interrupt_manager.c: 45:     IPR0bits.TMR0IP = 1;
  3042  005AC0  010E               	movlb	14	; () banked
  3043  005AC2  8BBA               	bsf	186,5,b	;volatile
  3044                           
  3045                           ;mcc_generated_files/interrupt_manager.c: 48:     IPR0bits.INT0IP = 0;
  3046  005AC4  91BA               	bcf	186,0,b	;volatile
  3047                           
  3048                           ;mcc_generated_files/interrupt_manager.c: 51:     IPR4bits.TMR1IP = 0;
  3049  005AC6  91BE               	bcf	190,0,b	;volatile
  3050                           
  3051                           ;mcc_generated_files/interrupt_manager.c: 54:     IPR3bits.TXIP = 0;
  3052  005AC8  99BD               	bcf	189,4,b	;volatile
  3053                           
  3054                           ;mcc_generated_files/interrupt_manager.c: 57:     IPR3bits.RCIP = 0;
  3055  005ACA  9BBD               	bcf	189,5,b	;volatile
  3056                           
  3057                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR4bits.TMR3IP = 0;
  3058  005ACC  95BE               	bcf	190,2,b	;volatile
  3059                           
  3060                           ; BSR set to: 14
  3061  005ACE  0012               	return		;funcret
  3062  005AD0                     __end_of_INTERRUPT_Initialize:
  3063                           	opt callstack 0
  3064                           
  3065 ;; *************** function _EUSART_Initialize *****************
  3066 ;; Defined at:
  3067 ;;		line 74 in file "mcc_generated_files/eusart.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;		None
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;		None
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  1    wreg      void 
  3074 ;; Registers used:
  3075 ;;		wreg, status,2, status,0, cstack
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3081 ;;      Params:         0       0       0       0       0       0       0       0       0
  3082 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3084 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3085 ;;Total ram usage:        0 bytes
  3086 ;; Hardware stack levels used:    1
  3087 ;; Hardware stack levels required when called:    8
  3088 ;; This function calls:
  3089 ;;		_EUSART_SetErrorHandler
  3090 ;;		_EUSART_SetFramingErrorHandler
  3091 ;;		_EUSART_SetOverrunErrorHandler
  3092 ;;		_EUSART_SetRxInterruptHandler
  3093 ;;		_EUSART_SetTxInterruptHandler
  3094 ;; This function is called by:
  3095 ;;		_SYSTEM_Initialize
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text11
  3100  005228                     __ptext11:
  3101                           	opt callstack 0
  3102  005228                     _EUSART_Initialize:
  3103                           	opt callstack 21
  3104                           
  3105                           ;mcc_generated_files/eusart.c: 77:     PIE3bits.RCIE = 0;
  3106                           
  3107                           ; BSR set to: 14
  3108                           ;incstack = 0
  3109  005228  010E               	movlb	14	; () banked
  3110  00522A  9BC5               	bcf	197,5,b	;volatile
  3111                           
  3112                           ; BSR set to: 14
  3113                           ;mcc_generated_files/eusart.c: 78:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3114  00522C  0E6A               	movlw	low _EUSART_Receive_ISR
  3115  00522E  6E0C               	movwf	EUSART_SetRxInterruptHandler@interruptHandler,c
  3116  005230  0E4E               	movlw	high _EUSART_Receive_ISR
  3117  005232  6E0D               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1,c
  3118  005234  EC98  F02D         	call	_EUSART_SetRxInterruptHandler	;wreg free
  3119                           
  3120                           ;mcc_generated_files/eusart.c: 79:     PIE3bits.TXIE = 0;
  3121  005238  010E               	movlb	14	; () banked
  3122  00523A  99C5               	bcf	197,4,b	;volatile
  3123                           
  3124                           ;mcc_generated_files/eusart.c: 80:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3125  00523C  0EDE               	movlw	low _EUSART_Transmit_ISR
  3126  00523E  6E0C               	movwf	EUSART_SetTxInterruptHandler@interruptHandler,c
  3127  005240  0E58               	movlw	high _EUSART_Transmit_ISR
  3128  005242  6E0D               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1,c
  3129  005244  EC93  F02D         	call	_EUSART_SetTxInterruptHandler	;wreg free
  3130                           
  3131                           ;mcc_generated_files/eusart.c: 84:     BAUD1CON = 0x08;
  3132  005248  0E08               	movlw	8
  3133  00524A  6E9F               	movwf	3999,c	;volatile
  3134                           
  3135                           ;mcc_generated_files/eusart.c: 87:     RC1STA = 0x90;
  3136  00524C  0E90               	movlw	144
  3137  00524E  6E9D               	movwf	3997,c	;volatile
  3138                           
  3139                           ;mcc_generated_files/eusart.c: 90:     TX1STA = 0x24;
  3140  005250  0E24               	movlw	36
  3141  005252  6E9E               	movwf	3998,c	;volatile
  3142                           
  3143                           ;mcc_generated_files/eusart.c: 93:     SP1BRGL = 0x82;
  3144  005254  0E82               	movlw	130
  3145  005256  6E9B               	movwf	3995,c	;volatile
  3146                           
  3147                           ;mcc_generated_files/eusart.c: 96:     SP1BRGH = 0x06;
  3148  005258  0E06               	movlw	6
  3149  00525A  6E9C               	movwf	3996,c	;volatile
  3150                           
  3151                           ;mcc_generated_files/eusart.c: 99:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  3152  00525C  0EB6               	movlw	low _EUSART_DefaultFramingErrorHandler
  3153  00525E  6E0C               	movwf	EUSART_SetFramingErrorHandler@interruptHandler,c
  3154  005260  0E5B               	movlw	high _EUSART_DefaultFramingErrorHandler
  3155  005262  6E0D               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1,c
  3156  005264  ECA2  F02D         	call	_EUSART_SetFramingErrorHandler	;wreg free
  3157                           
  3158                           ;mcc_generated_files/eusart.c: 100:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  3159  005268  0E8C               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3160  00526A  6E0C               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler,c
  3161  00526C  0E5B               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3162  00526E  6E0D               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1,c
  3163  005270  EC9D  F02D         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  3164                           
  3165                           ;mcc_generated_files/eusart.c: 101:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  3166  005274  0E92               	movlw	low _EUSART_DefaultErrorHandler
  3167  005276  6E0C               	movwf	EUSART_SetErrorHandler@interruptHandler,c
  3168  005278  0E5B               	movlw	high _EUSART_DefaultErrorHandler
  3169  00527A  6E0D               	movwf	EUSART_SetErrorHandler@interruptHandler+1,c
  3170  00527C  ECA7  F02D         	call	_EUSART_SetErrorHandler	;wreg free
  3171                           
  3172                           ;mcc_generated_files/eusart.c: 104:     eusartRxLastError.status = 0;
  3173  005280  0E00               	movlw	0
  3174  005282  0100               	movlb	0	; () banked
  3175  005284  6FEB               	movwf	_eusartRxLastError& (0+255),b	;volatile
  3176                           
  3177                           ;mcc_generated_files/eusart.c: 107:     eusartTxHead = 0;
  3178  005286  0E00               	movlw	0
  3179  005288  6E46               	movwf	_eusartTxHead,c	;volatile
  3180                           
  3181                           ;mcc_generated_files/eusart.c: 108:     eusartTxTail = 0;
  3182  00528A  0E00               	movlw	0
  3183  00528C  6E45               	movwf	_eusartTxTail,c	;volatile
  3184                           
  3185                           ;mcc_generated_files/eusart.c: 109:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  3186  00528E  0E08               	movlw	8
  3187  005290  6FF5               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
  3188                           
  3189                           ;mcc_generated_files/eusart.c: 111:     eusartRxHead = 0;
  3190  005292  0E00               	movlw	0
  3191  005294  6E44               	movwf	_eusartRxHead,c	;volatile
  3192                           
  3193                           ;mcc_generated_files/eusart.c: 112:     eusartRxTail = 0;
  3194  005296  0E00               	movlw	0
  3195  005298  6FED               	movwf	_eusartRxTail& (0+255),b	;volatile
  3196                           
  3197                           ;mcc_generated_files/eusart.c: 113:     eusartRxCount = 0;
  3198  00529A  0E00               	movlw	0
  3199  00529C  6FEC               	movwf	_eusartRxCount& (0+255),b	;volatile
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;mcc_generated_files/eusart.c: 116:     PIE3bits.RCIE = 1;
  3203  00529E  010E               	movlb	14	; () banked
  3204  0052A0  8BC5               	bsf	197,5,b	;volatile
  3205                           
  3206                           ; BSR set to: 14
  3207  0052A2  0012               	return		;funcret
  3208  0052A4                     __end_of_EUSART_Initialize:
  3209                           	opt callstack 0
  3210                           
  3211 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3212 ;; Defined at:
  3213 ;;		line 256 in file "mcc_generated_files/eusart.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  3216 ;;		 -> EUSART_Transmit_ISR(1), 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;		None
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3228 ;;      Params:         2       0       0       0       0       0       0       0       0
  3229 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3231 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3232 ;;Total ram usage:        2 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    7
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_EUSART_Initialize
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text12
  3243  005B26                     __ptext12:
  3244                           	opt callstack 0
  3245  005B26                     _EUSART_SetTxInterruptHandler:
  3246                           	opt callstack 21
  3247                           
  3248                           ;mcc_generated_files/eusart.c: 257:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3249                           
  3250                           ; BSR set to: 14
  3251                           ;incstack = 0
  3252  005B26  C00C  F0F3         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  3253  005B2A  C00D  F0F4         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  3254  005B2E  0012               	return		;funcret
  3255  005B30                     __end_of_EUSART_SetTxInterruptHandler:
  3256                           	opt callstack 0
  3257                           
  3258 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3259 ;; Defined at:
  3260 ;;		line 260 in file "mcc_generated_files/eusart.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  3263 ;;		 -> EUSART_Receive_ISR(1), 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3275 ;;      Params:         2       0       0       0       0       0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3277 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3278 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3279 ;;Total ram usage:        2 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    7
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_EUSART_Initialize
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text13
  3290  005B30                     __ptext13:
  3291                           	opt callstack 0
  3292  005B30                     _EUSART_SetRxInterruptHandler:
  3293                           	opt callstack 21
  3294                           
  3295                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3296                           
  3297                           ;incstack = 0
  3298  005B30  C00C  F1FE         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  3299  005B34  C00D  F1FF         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  3300  005B38  0012               	return		;funcret
  3301  005B3A                     __end_of_EUSART_SetRxInterruptHandler:
  3302                           	opt callstack 0
  3303                           
  3304 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3305 ;; Defined at:
  3306 ;;		line 248 in file "mcc_generated_files/eusart.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  3309 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, status,2, status,0
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3321 ;;      Params:         2       0       0       0       0       0       0       0       0
  3322 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3323 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3324 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3325 ;;Total ram usage:        2 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:    7
  3328 ;; This function calls:
  3329 ;;		Nothing
  3330 ;; This function is called by:
  3331 ;;		_EUSART_Initialize
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335                           	psect	text14
  3336  005B3A                     __ptext14:
  3337                           	opt callstack 0
  3338  005B3A                     _EUSART_SetOverrunErrorHandler:
  3339                           	opt callstack 21
  3340                           
  3341                           ;mcc_generated_files/eusart.c: 249:     EUSART_OverrunErrorHandler = interruptHandler;
  3342                           
  3343                           ;incstack = 0
  3344  005B3A  C00C  F1FA         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  3345  005B3E  C00D  F1FB         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  3346  005B42  0012               	return		;funcret
  3347  005B44                     __end_of_EUSART_SetOverrunErrorHandler:
  3348                           	opt callstack 0
  3349                           
  3350 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3351 ;; Defined at:
  3352 ;;		line 244 in file "mcc_generated_files/eusart.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  3355 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3367 ;;      Params:         2       0       0       0       0       0       0       0       0
  3368 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3370 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3371 ;;Total ram usage:        2 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    7
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_EUSART_Initialize
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text15
  3382  005B44                     __ptext15:
  3383                           	opt callstack 0
  3384  005B44                     _EUSART_SetFramingErrorHandler:
  3385                           	opt callstack 21
  3386                           
  3387                           ;mcc_generated_files/eusart.c: 245:     EUSART_FramingErrorHandler = interruptHandler;
  3388                           
  3389                           ;incstack = 0
  3390  005B44  C00C  F1FC         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  3391  005B48  C00D  F1FD         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  3392  005B4C  0012               	return		;funcret
  3393  005B4E                     __end_of_EUSART_SetFramingErrorHandler:
  3394                           	opt callstack 0
  3395                           
  3396 ;; *************** function _EUSART_SetErrorHandler *****************
  3397 ;; Defined at:
  3398 ;;		line 252 in file "mcc_generated_files/eusart.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  interruptHan    2   11[COMRAM] PTR FTN()void 
  3401 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg, status,2, status,0
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3413 ;;      Params:         2       0       0       0       0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3416 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3417 ;;Total ram usage:        2 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    7
  3420 ;; This function calls:
  3421 ;;		Nothing
  3422 ;; This function is called by:
  3423 ;;		_EUSART_Initialize
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           	psect	text16
  3428  005B4E                     __ptext16:
  3429                           	opt callstack 0
  3430  005B4E                     _EUSART_SetErrorHandler:
  3431                           	opt callstack 21
  3432                           
  3433                           ;mcc_generated_files/eusart.c: 253:     EUSART_ErrorHandler = interruptHandler;
  3434                           
  3435                           ;incstack = 0
  3436  005B4E  C00C  F1F8         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  3437  005B52  C00D  F1F9         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  3438  005B56  0012               	return		;funcret
  3439  005B58                     __end_of_EUSART_SetErrorHandler:
  3440                           	opt callstack 0
  3441                           
  3442 ;; *************** function _SPI1_Start *****************
  3443 ;; Defined at:
  3444 ;;		line 56 in file "mcc_generated_files/spi1.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;		None
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;		None
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  1    wreg      void 
  3451 ;; Registers used:
  3452 ;;		None
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3458 ;;      Params:         0       0       0       0       0       0       0       0       0
  3459 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3461 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3462 ;;Total ram usage:        0 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; Hardware stack levels required when called:    7
  3465 ;; This function calls:
  3466 ;;		Nothing
  3467 ;; This function is called by:
  3468 ;;		_main
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text17
  3473  005B76                     __ptext17:
  3474                           	opt callstack 0
  3475  005B76                     _SPI1_Start:
  3476                           	opt callstack 23
  3477                           
  3478                           ;mcc_generated_files/spi1.c: 59:     if(!SSP1CON1bits.SSPEN)
  3479                           
  3480                           ;incstack = 0
  3481  005B76  BA96               	btfsc	3990,5,c	;volatile
  3482  005B78  0012               	return	
  3483                           
  3484                           ;mcc_generated_files/spi1.c: 60:     {;mcc_generated_files/spi1.c: 62:         SSP1CON1b
      +                          its.SSPEN = 1;
  3485  005B7A  8A96               	bsf	3990,5,c	;volatile
  3486  005B7C  0012               	return		;funcret
  3487  005B7E                     __end_of_SPI1_Start:
  3488                           	opt callstack 0
  3489                           
  3490 ;; *************** function _Parse_Data *****************
  3491 ;; Defined at:
  3492 ;;		line 51 in file "parse.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;		None
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  i               2  113[BANK0 ] int 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3506 ;;      Params:         0       0       0       0       0       0       0       0       0
  3507 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3508 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3509 ;;      Totals:         1       2       0       0       0       0       0       0       0
  3510 ;;Total ram usage:        3 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:   15
  3513 ;; This function calls:
  3514 ;;		_AD9833_SetFrequency
  3515 ;;		_EUSART_Write_String
  3516 ;;		_SPI1_Close
  3517 ;;		_TMR0_Reload
  3518 ;;		_TMR0_StartTimer
  3519 ;;		_atoi
  3520 ;;		_atol
  3521 ;;		_sprintf
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text18
  3528  00285A                     __ptext18:
  3529                           	opt callstack 0
  3530  00285A                     _Parse_Data:
  3531                           	opt callstack 15
  3532                           
  3533                           ;parse.c: 54:     EUSART_Write_String(rx_data);
  3534                           
  3535                           ;incstack = 0
  3536  00285A  0EE4               	movlw	low _rx_data
  3537  00285C  6E0D               	movwf	EUSART_Write_String@data,c
  3538  00285E  0E01               	movlw	high _rx_data
  3539  002860  6E0E               	movwf	EUSART_Write_String@data+1,c
  3540  002862  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  3541                           
  3542                           ;parse.c: 57:     for(int i = 1; rx_data[i] != '\0'; i++)
  3543  002866  0E00               	movlw	0
  3544  002868  0100               	movlb	0	; () banked
  3545  00286A  6FD2               	movwf	(Parse_Data@i+1)& (0+255),b
  3546  00286C  0E01               	movlw	1
  3547  00286E  6FD1               	movwf	Parse_Data@i& (0+255),b
  3548  002870  D04E               	goto	l9181
  3549  002872                     l9161:
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;parse.c: 58:     {;parse.c: 59:         if((rx_data[i] < '0' && rx_data[i] > ' ') || rx
      +                          _data[i] > '9' || rx_data[i] < ' ')
  3553  002872  0EE4               	movlw	low _rx_data
  3554  002874  25D1               	addwf	Parse_Data@i& (0+255),w,b
  3555  002876  6ED9               	movwf	fsr2l,c
  3556  002878  0E01               	movlw	high _rx_data
  3557  00287A  21D2               	addwfc	(Parse_Data@i+1)& (0+255),w,b
  3558  00287C  6EDA               	movwf	fsr2h,c
  3559  00287E  0E30               	movlw	48
  3560  002880  60DF               	cpfslt	indf2,c
  3561  002882  D009               	goto	u10020
  3562                           
  3563                           ; BSR set to: 0
  3564  002884  0EE4               	movlw	low _rx_data
  3565  002886  25D1               	addwf	Parse_Data@i& (0+255),w,b
  3566  002888  6ED9               	movwf	fsr2l,c
  3567  00288A  0E01               	movlw	high _rx_data
  3568  00288C  21D2               	addwfc	(Parse_Data@i+1)& (0+255),w,b
  3569  00288E  6EDA               	movwf	fsr2h,c
  3570  002890  0E21               	movlw	33
  3571  002892  60DF               	cpfslt	indf2,c
  3572  002894  D012               	goto	u10040
  3573  002896                     u10020:
  3574                           
  3575                           ; BSR set to: 0
  3576  002896  0EE4               	movlw	low _rx_data
  3577  002898  25D1               	addwf	Parse_Data@i& (0+255),w,b
  3578  00289A  6ED9               	movwf	fsr2l,c
  3579  00289C  0E01               	movlw	high _rx_data
  3580  00289E  21D2               	addwfc	(Parse_Data@i+1)& (0+255),w,b
  3581  0028A0  6EDA               	movwf	fsr2h,c
  3582  0028A2  0E3A               	movlw	58
  3583  0028A4  60DF               	cpfslt	indf2,c
  3584  0028A6  D009               	goto	u10040
  3585                           
  3586                           ; BSR set to: 0
  3587  0028A8  0EE4               	movlw	low _rx_data
  3588  0028AA  25D1               	addwf	Parse_Data@i& (0+255),w,b
  3589  0028AC  6ED9               	movwf	fsr2l,c
  3590  0028AE  0E01               	movlw	high _rx_data
  3591  0028B0  21D2               	addwfc	(Parse_Data@i+1)& (0+255),w,b
  3592  0028B2  6EDA               	movwf	fsr2h,c
  3593  0028B4  0E20               	movlw	32
  3594  0028B6  60DF               	cpfslt	indf2,c
  3595  0028B8  D028               	goto	l9179
  3596  0028BA                     u10040:
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;parse.c: 60:         {;parse.c: 62:             sprintf(output, "Unexpected Character %
      +                          c on Position %i", rx_data[i], i+1);
  3600  0028BA  0E00               	movlw	low _output
  3601  0028BC  6F9D               	movwf	sprintf@s& (0+255),b
  3602  0028BE  0E02               	movlw	high _output
  3603  0028C0  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  3604  0028C2  0E2B               	movlw	low STR_1
  3605  0028C4  6F9F               	movwf	sprintf@fmt& (0+255),b
  3606  0028C6  0E7E               	movlw	high STR_1
  3607  0028C8  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  3608  0028CA  0EE4               	movlw	low _rx_data
  3609  0028CC  25D1               	addwf	Parse_Data@i& (0+255),w,b
  3610  0028CE  6ED9               	movwf	fsr2l,c
  3611  0028D0  0E01               	movlw	high _rx_data
  3612  0028D2  21D2               	addwfc	(Parse_Data@i+1)& (0+255),w,b
  3613  0028D4  6EDA               	movwf	fsr2h,c
  3614  0028D6  50DF               	movf	indf2,w,c
  3615  0028D8  6E3B               	movwf	??_Parse_Data& (0+255),c
  3616  0028DA  503B               	movf	??_Parse_Data,w,c
  3617  0028DC  6FA1               	movwf	(?_sprintf+4)& (0+255),b
  3618  0028DE  6BA2               	clrf	(?_sprintf+5)& (0+255),b
  3619  0028E0  0E01               	movlw	1
  3620  0028E2  25D1               	addwf	Parse_Data@i& (0+255),w,b
  3621  0028E4  6FA3               	movwf	(?_sprintf+6)& (0+255),b
  3622  0028E6  0E00               	movlw	0
  3623  0028E8  21D2               	addwfc	(Parse_Data@i+1)& (0+255),w,b
  3624  0028EA  6FA4               	movwf	(?_sprintf+7)& (0+255),b
  3625  0028EC  EC13  F02A         	call	_sprintf	;wreg free
  3626                           
  3627                           ;parse.c: 63:             EUSART_Write_String(output);
  3628  0028F0  0E00               	movlw	low _output
  3629  0028F2  6E0D               	movwf	EUSART_Write_String@data,c
  3630  0028F4  0E02               	movlw	high _output
  3631  0028F6  6E0E               	movwf	EUSART_Write_String@data+1,c
  3632  0028F8  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  3633  0028FC                     l9173:
  3634                           
  3635                           ;parse.c: 64:             output[0] = '\0';
  3636  0028FC  0E00               	movlw	0
  3637  0028FE  0102               	movlb	2	; () banked
  3638  002900  6F00               	movwf	_output& (0+255),b	;volatile
  3639                           
  3640                           ; BSR set to: 2
  3641                           ;parse.c: 65:             rx_data_end = 0;
  3642  002902  0E00               	movlw	0
  3643  002904  0100               	movlb	0	; () banked
  3644  002906  6FEE               	movwf	_rx_data_end& (0+255),b	;volatile
  3645  002908  0012               	return	
  3646  00290A                     l9179:
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;parse.c: 68:     }
  3650  00290A  4BD1               	infsnz	Parse_Data@i& (0+255),f,b
  3651  00290C  2BD2               	incf	(Parse_Data@i+1)& (0+255),f,b
  3652  00290E                     l9181:
  3653                           
  3654                           ; BSR set to: 0
  3655  00290E  0EE4               	movlw	low _rx_data
  3656  002910  25D1               	addwf	Parse_Data@i& (0+255),w,b
  3657  002912  6ED9               	movwf	fsr2l,c
  3658  002914  0E01               	movlw	high _rx_data
  3659  002916  21D2               	addwfc	(Parse_Data@i+1)& (0+255),w,b
  3660  002918  6EDA               	movwf	fsr2h,c
  3661  00291A  50DF               	movf	indf2,w,c
  3662  00291C  A4D8               	btfss	status,2,c
  3663  00291E  D7A9               	goto	l9161
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;parse.c: 71:     if(rx_data[0] == 'f' || rx_data[0] == 'F')
  3667  002920  0E66               	movlw	102
  3668  002922  0101               	movlb	1	; () banked
  3669  002924  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  3670  002926  B4D8               	btfsc	status,2,c
  3671  002928  D004               	goto	u10070
  3672                           
  3673                           ; BSR set to: 1
  3674  00292A  0E46               	movlw	70
  3675  00292C  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  3676  00292E  A4D8               	btfss	status,2,c
  3677  002930  D077               	goto	l9221
  3678  002932                     u10070:
  3679                           
  3680                           ; BSR set to: 1
  3681                           ;parse.c: 72:     {;parse.c: 74:         rx_data[0] = ' ';
  3682  002932  0E20               	movlw	32
  3683  002934  6FE4               	movwf	_rx_data& (0+255),b	;volatile
  3684                           
  3685                           ; BSR set to: 1
  3686                           ;parse.c: 77:         temp_frequency = atol(rx_data);
  3687  002936  0EE4               	movlw	low _rx_data
  3688  002938  6E18               	movwf	atol@s,c
  3689  00293A  0E01               	movlw	high _rx_data
  3690  00293C  6E19               	movwf	atol@s+1,c
  3691  00293E  EC30  F022         	call	_atol	;wreg free
  3692  002942  C018  F0E1         	movff	?_atol,_temp_frequency
  3693  002946  C019  F0E2         	movff	?_atol+1,_temp_frequency+1
  3694  00294A  C01A  F0E3         	movff	?_atol+2,_temp_frequency+2
  3695  00294E  C01B  F0E4         	movff	?_atol+3,_temp_frequency+3
  3696                           
  3697                           ;parse.c: 80:         if(temp_frequency < 1000000)
  3698  002952  0100               	movlb	0	; () banked
  3699  002954  BFE4               	btfsc	(_temp_frequency+3)& (0+255),7,b
  3700  002956  D00A               	goto	u10080
  3701  002958  51E4               	movf	(_temp_frequency+3)& (0+255),w,b
  3702  00295A  E119               	bnz	l9201
  3703  00295C  0E40               	movlw	64
  3704  00295E  5DE1               	subwf	_temp_frequency& (0+255),w,b
  3705  002960  0E42               	movlw	66
  3706  002962  59E2               	subwfb	(_temp_frequency+1)& (0+255),w,b
  3707  002964  0E0F               	movlw	15
  3708  002966  59E3               	subwfb	(_temp_frequency+2)& (0+255),w,b
  3709  002968  B0D8               	btfsc	status,0,c
  3710  00296A  D011               	goto	l9201
  3711  00296C                     u10080:
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;parse.c: 81:         {;parse.c: 83:             sprintf(output, "Error! Minimum Frequen
      +                          cy 1000000 Hz");
  3715  00296C  0E00               	movlw	low _output
  3716  00296E  6F9D               	movwf	sprintf@s& (0+255),b
  3717  002970  0E02               	movlw	high _output
  3718  002972  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  3719  002974  0E77               	movlw	low STR_2
  3720  002976  6F9F               	movwf	sprintf@fmt& (0+255),b
  3721  002978  0E7E               	movlw	high STR_2
  3722  00297A  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  3723  00297C  EC13  F02A         	call	_sprintf	;wreg free
  3724                           
  3725                           ;parse.c: 84:             EUSART_Write_String(output);
  3726  002980  0E00               	movlw	low _output
  3727  002982  6E0D               	movwf	EUSART_Write_String@data,c
  3728  002984  0E02               	movlw	high _output
  3729  002986  6E0E               	movwf	EUSART_Write_String@data+1,c
  3730  002988  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  3731  00298C  D7B7               	goto	l9173
  3732  00298E                     l9201:
  3733                           
  3734                           ; BSR set to: 0
  3735  00298E  BFE4               	btfsc	(_temp_frequency+3)& (0+255),7,b
  3736  002990  D01B               	goto	l644
  3737  002992  51E4               	movf	(_temp_frequency+3)& (0+255),w,b
  3738  002994  E108               	bnz	u10090
  3739  002996  0E41               	movlw	65
  3740  002998  5DE1               	subwf	_temp_frequency& (0+255),w,b
  3741  00299A  0E4B               	movlw	75
  3742  00299C  59E2               	subwfb	(_temp_frequency+1)& (0+255),w,b
  3743  00299E  0E4C               	movlw	76
  3744  0029A0  59E3               	subwfb	(_temp_frequency+2)& (0+255),w,b
  3745  0029A2  A0D8               	btfss	status,0,c
  3746  0029A4  D011               	goto	l644
  3747  0029A6                     u10090:
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;parse.c: 90:         {;parse.c: 92:             sprintf(output, "Error! Maximum Frequen
      +                          cy 5000000 Hz");
  3751  0029A6  0E00               	movlw	low _output
  3752  0029A8  6F9D               	movwf	sprintf@s& (0+255),b
  3753  0029AA  0E02               	movlw	high _output
  3754  0029AC  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  3755  0029AE  0E9B               	movlw	low STR_3
  3756  0029B0  6F9F               	movwf	sprintf@fmt& (0+255),b
  3757  0029B2  0E7E               	movlw	high STR_3
  3758  0029B4  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  3759  0029B6  EC13  F02A         	call	_sprintf	;wreg free
  3760                           
  3761                           ;parse.c: 93:             EUSART_Write_String(output);
  3762  0029BA  0E00               	movlw	low _output
  3763  0029BC  6E0D               	movwf	EUSART_Write_String@data,c
  3764  0029BE  0E02               	movlw	high _output
  3765  0029C0  6E0E               	movwf	EUSART_Write_String@data+1,c
  3766  0029C2  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  3767  0029C6  D79A               	goto	l9173
  3768  0029C8                     l644:
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;parse.c: 97:         {;parse.c: 99:             frequency = temp_frequency;
  3772  0029C8  C0E1  F0F6         	movff	_temp_frequency,_frequency
  3773  0029CC  C0E2  F0F7         	movff	_temp_frequency+1,_frequency+1
  3774  0029D0  C0E3  F0F8         	movff	_temp_frequency+2,_frequency+2
  3775  0029D4  C0E4  F0F9         	movff	_temp_frequency+3,_frequency+3
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;parse.c: 101:             AD9833_SetFrequency(frequency);
  3779  0029D8  C0F6  F0BC         	movff	_frequency,AD9833_SetFrequency@frequency
  3780  0029DC  C0F7  F0BD         	movff	_frequency+1,AD9833_SetFrequency@frequency+1
  3781  0029E0  C0F8  F0BE         	movff	_frequency+2,AD9833_SetFrequency@frequency+2
  3782  0029E4  C0F9  F0BF         	movff	_frequency+3,AD9833_SetFrequency@frequency+3
  3783  0029E8  EC98  F023         	call	_AD9833_SetFrequency	;wreg free
  3784                           
  3785                           ;parse.c: 104:             sprintf(output, "Frequency changed to %ld Hz", frequency);
  3786  0029EC  0E00               	movlw	low _output
  3787  0029EE  0100               	movlb	0	; () banked
  3788  0029F0  6F9D               	movwf	sprintf@s& (0+255),b
  3789  0029F2  0E02               	movlw	high _output
  3790  0029F4  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  3791  0029F6  0E7B               	movlw	low STR_4
  3792  0029F8  6F9F               	movwf	sprintf@fmt& (0+255),b
  3793  0029FA  0E7F               	movlw	high STR_4
  3794  0029FC  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  3795  0029FE  C0F6  F0A1         	movff	_frequency,?_sprintf+4
  3796  002A02  C0F7  F0A2         	movff	_frequency+1,?_sprintf+5
  3797  002A06  C0F8  F0A3         	movff	_frequency+2,?_sprintf+6
  3798  002A0A  C0F9  F0A4         	movff	_frequency+3,?_sprintf+7
  3799  002A0E  EC13  F02A         	call	_sprintf	;wreg free
  3800                           
  3801                           ;parse.c: 105:             EUSART_Write_String(output);
  3802  002A12  0E00               	movlw	low _output
  3803  002A14  6E0D               	movwf	EUSART_Write_String@data,c
  3804  002A16  0E02               	movlw	high _output
  3805  002A18  6E0E               	movwf	EUSART_Write_String@data+1,c
  3806  002A1A  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  3807  002A1E  D76E               	goto	l9173
  3808  002A20                     l9221:
  3809                           
  3810                           ; BSR set to: 1
  3811  002A20  0E63               	movlw	99
  3812  002A22  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  3813  002A24  B4D8               	btfsc	status,2,c
  3814  002A26  D004               	goto	u10110
  3815                           
  3816                           ; BSR set to: 1
  3817  002A28  0E43               	movlw	67
  3818  002A2A  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  3819  002A2C  A4D8               	btfss	status,2,c
  3820  002A2E  D06A               	goto	l9257
  3821  002A30                     u10110:
  3822                           
  3823                           ; BSR set to: 1
  3824                           ;parse.c: 112:     {;parse.c: 114:         rx_data[0] = ' ';
  3825  002A30  0E20               	movlw	32
  3826  002A32  6FE4               	movwf	_rx_data& (0+255),b	;volatile
  3827                           
  3828                           ; BSR set to: 1
  3829                           ;parse.c: 117:         temp_cycle = atol(rx_data);
  3830  002A34  0EE4               	movlw	low _rx_data
  3831  002A36  6E18               	movwf	atol@s,c
  3832  002A38  0E01               	movlw	high _rx_data
  3833  002A3A  6E19               	movwf	atol@s+1,c
  3834  002A3C  EC30  F022         	call	_atol	;wreg free
  3835  002A40  C018  F04C         	movff	?_atol,_temp_cycle	;volatile
  3836  002A44  C019  F04D         	movff	?_atol+1,_temp_cycle+1	;volatile
  3837  002A48  C01A  F04E         	movff	?_atol+2,_temp_cycle+2	;volatile
  3838  002A4C  C01B  F04F         	movff	?_atol+3,_temp_cycle+3	;volatile
  3839                           
  3840                           ;parse.c: 120:         if(temp_cycle < 2)
  3841  002A50  BE4F               	btfsc	_temp_cycle+3,7,c	;volatile
  3842  002A52  D008               	goto	u10120
  3843  002A54  504F               	movf	_temp_cycle+3,w,c	;volatile
  3844  002A56  104E               	iorwf	_temp_cycle+2,w,c	;volatile
  3845  002A58  104D               	iorwf	_temp_cycle+1,w,c	;volatile
  3846  002A5A  E116               	bnz	l9239
  3847  002A5C  0E02               	movlw	2
  3848  002A5E  5C4C               	subwf	_temp_cycle,w,c	;volatile
  3849  002A60  B0D8               	btfsc	status,0,c
  3850  002A62  D012               	goto	l9239
  3851  002A64                     u10120:
  3852                           
  3853                           ;parse.c: 121:         {;parse.c: 123:             sprintf(output, "Error! Minimum Cycle
      +                           count 2");
  3854  002A64  0E00               	movlw	low _output
  3855  002A66  0100               	movlb	0	; () banked
  3856  002A68  6F9D               	movwf	sprintf@s& (0+255),b
  3857  002A6A  0E02               	movlw	high _output
  3858  002A6C  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  3859  002A6E  0E42               	movlw	low STR_5
  3860  002A70  6F9F               	movwf	sprintf@fmt& (0+255),b
  3861  002A72  0E7F               	movlw	high STR_5
  3862  002A74  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  3863  002A76  EC13  F02A         	call	_sprintf	;wreg free
  3864                           
  3865                           ;parse.c: 124:             EUSART_Write_String(output);
  3866  002A7A  0E00               	movlw	low _output
  3867  002A7C  6E0D               	movwf	EUSART_Write_String@data,c
  3868  002A7E  0E02               	movlw	high _output
  3869  002A80  6E0E               	movwf	EUSART_Write_String@data+1,c
  3870  002A82  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  3871  002A86  D73A               	goto	l9173
  3872  002A88                     l9239:
  3873  002A88  BE4F               	btfsc	_temp_cycle+3,7,c	;volatile
  3874  002A8A  D01A               	goto	l652
  3875  002A8C  504F               	movf	_temp_cycle+3,w,c	;volatile
  3876  002A8E  104E               	iorwf	_temp_cycle+2,w,c	;volatile
  3877  002A90  E105               	bnz	u10130
  3878  002A92  044C               	decf	_temp_cycle,w,c	;volatile
  3879  002A94  0E7D               	movlw	125
  3880  002A96  584D               	subwfb	_temp_cycle+1,w,c	;volatile
  3881  002A98  A0D8               	btfss	status,0,c
  3882  002A9A  D012               	goto	l652
  3883  002A9C                     u10130:
  3884                           
  3885                           ;parse.c: 130:         {;parse.c: 132:             sprintf(output, "Error! Maximum Cycle
      +                           count 32000");
  3886  002A9C  0E00               	movlw	low _output
  3887  002A9E  0100               	movlb	0	; () banked
  3888  002AA0  6F9D               	movwf	sprintf@s& (0+255),b
  3889  002AA2  0E02               	movlw	high _output
  3890  002AA4  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  3891  002AA6  0EE1               	movlw	low STR_6
  3892  002AA8  6F9F               	movwf	sprintf@fmt& (0+255),b
  3893  002AAA  0E7E               	movlw	high STR_6
  3894  002AAC  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  3895  002AAE  EC13  F02A         	call	_sprintf	;wreg free
  3896                           
  3897                           ;parse.c: 133:             EUSART_Write_String(output);
  3898  002AB2  0E00               	movlw	low _output
  3899  002AB4  6E0D               	movwf	EUSART_Write_String@data,c
  3900  002AB6  0E02               	movlw	high _output
  3901  002AB8  6E0E               	movwf	EUSART_Write_String@data+1,c
  3902  002ABA  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  3903  002ABE  D71E               	goto	l9173
  3904  002AC0                     l652:
  3905                           
  3906                           ;parse.c: 137:         {;parse.c: 139:             cycle = temp_cycle;
  3907  002AC0  C04C  F048         	movff	_temp_cycle,_cycle	;volatile
  3908  002AC4  C04D  F049         	movff	_temp_cycle+1,_cycle+1	;volatile
  3909  002AC8  C04E  F04A         	movff	_temp_cycle+2,_cycle+2	;volatile
  3910  002ACC  C04F  F04B         	movff	_temp_cycle+3,_cycle+3	;volatile
  3911                           
  3912                           ;parse.c: 142:             sprintf(output, "Cycle changed to %ld Cycles", cycle);
  3913  002AD0  0E00               	movlw	low _output
  3914  002AD2  0100               	movlb	0	; () banked
  3915  002AD4  6F9D               	movwf	sprintf@s& (0+255),b
  3916  002AD6  0E02               	movlw	high _output
  3917  002AD8  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  3918  002ADA  0E5F               	movlw	low STR_7
  3919  002ADC  6F9F               	movwf	sprintf@fmt& (0+255),b
  3920  002ADE  0E7F               	movlw	high STR_7
  3921  002AE0  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  3922  002AE2  C048  F0A1         	movff	_cycle,?_sprintf+4	;volatile
  3923  002AE6  C049  F0A2         	movff	_cycle+1,?_sprintf+5	;volatile
  3924  002AEA  C04A  F0A3         	movff	_cycle+2,?_sprintf+6	;volatile
  3925  002AEE  C04B  F0A4         	movff	_cycle+3,?_sprintf+7	;volatile
  3926  002AF2  EC13  F02A         	call	_sprintf	;wreg free
  3927                           
  3928                           ;parse.c: 143:             EUSART_Write_String(output);
  3929  002AF6  0E00               	movlw	low _output
  3930  002AF8  6E0D               	movwf	EUSART_Write_String@data,c
  3931  002AFA  0E02               	movlw	high _output
  3932  002AFC  6E0E               	movwf	EUSART_Write_String@data+1,c
  3933  002AFE  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  3934  002B02  D6FC               	goto	l9173
  3935  002B04                     l9257:
  3936                           
  3937                           ; BSR set to: 1
  3938  002B04  0E42               	movlw	66
  3939  002B06  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  3940  002B08  B4D8               	btfsc	status,2,c
  3941  002B0A  D004               	goto	u10150
  3942                           
  3943                           ; BSR set to: 1
  3944  002B0C  0E62               	movlw	98
  3945  002B0E  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  3946  002B10  A4D8               	btfss	status,2,c
  3947  002B12  D03D               	goto	l9283
  3948  002B14                     u10150:
  3949                           
  3950                           ; BSR set to: 1
  3951                           ;parse.c: 150:     {;parse.c: 152:         rx_data[0] = ' ';
  3952  002B14  0E20               	movlw	32
  3953  002B16  6FE4               	movwf	_rx_data& (0+255),b	;volatile
  3954                           
  3955                           ; BSR set to: 1
  3956                           ;parse.c: 155:         temp_break_duration = atoi(rx_data);
  3957  002B18  0EE4               	movlw	low _rx_data
  3958  002B1A  6E13               	movwf	atoi@s,c
  3959  002B1C  0E01               	movlw	high _rx_data
  3960  002B1E  6E14               	movwf	atoi@s+1,c
  3961  002B20  ECD8  F024         	call	_atoi	;wreg free
  3962  002B24  C013  F042         	movff	?_atoi,_temp_break_duration	;volatile
  3963  002B28  C014  F043         	movff	?_atoi+1,_temp_break_duration+1	;volatile
  3964                           
  3965                           ;parse.c: 158:         if(temp_break_duration > 256)
  3966  002B2C  0442               	decf	_temp_break_duration,w,c	;volatile
  3967  002B2E  0E01               	movlw	1
  3968  002B30  5843               	subwfb	_temp_break_duration+1,w,c	;volatile
  3969  002B32  A0D8               	btfss	status,0,c
  3970  002B34  D012               	goto	l658
  3971                           
  3972                           ;parse.c: 159:         {;parse.c: 161:             sprintf(output, "Error! Maximum Break
      +                           Duration 256 ms");
  3973  002B36  0E00               	movlw	low _output
  3974  002B38  0100               	movlb	0	; () banked
  3975  002B3A  6F9D               	movwf	sprintf@s& (0+255),b
  3976  002B3C  0E02               	movlw	high _output
  3977  002B3E  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  3978  002B40  0E52               	movlw	low STR_8
  3979  002B42  6F9F               	movwf	sprintf@fmt& (0+255),b
  3980  002B44  0E7E               	movlw	high STR_8
  3981  002B46  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  3982  002B48  EC13  F02A         	call	_sprintf	;wreg free
  3983                           
  3984                           ;parse.c: 162:             EUSART_Write_String(output);
  3985  002B4C  0E00               	movlw	low _output
  3986  002B4E  6E0D               	movwf	EUSART_Write_String@data,c
  3987  002B50  0E02               	movlw	high _output
  3988  002B52  6E0E               	movwf	EUSART_Write_String@data+1,c
  3989  002B54  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  3990  002B58  D6D1               	goto	l9173
  3991  002B5A                     l658:
  3992                           
  3993                           ;parse.c: 166:         {;parse.c: 168:             break_duration = temp_break_duration;
  3994  002B5A  C042  F040         	movff	_temp_break_duration,_break_duration	;volatile
  3995  002B5E  C043  F041         	movff	_temp_break_duration+1,_break_duration+1	;volatile
  3996                           
  3997                           ;parse.c: 171:             sprintf(output, "Break Duration changed to %u ms", break_dura
      +                          tion);
  3998  002B62  0E00               	movlw	low _output
  3999  002B64  0100               	movlb	0	; () banked
  4000  002B66  6F9D               	movwf	sprintf@s& (0+255),b
  4001  002B68  0E02               	movlw	high _output
  4002  002B6A  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4003  002B6C  0E22               	movlw	low STR_9
  4004  002B6E  6F9F               	movwf	sprintf@fmt& (0+255),b
  4005  002B70  0E7F               	movlw	high STR_9
  4006  002B72  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4007  002B74  C040  F0A1         	movff	_break_duration,?_sprintf+4	;volatile
  4008  002B78  C041  F0A2         	movff	_break_duration+1,?_sprintf+5	;volatile
  4009  002B7C  EC13  F02A         	call	_sprintf	;wreg free
  4010                           
  4011                           ;parse.c: 172:             EUSART_Write_String(output);
  4012  002B80  0E00               	movlw	low _output
  4013  002B82  6E0D               	movwf	EUSART_Write_String@data,c
  4014  002B84  0E02               	movlw	high _output
  4015  002B86  6E0E               	movwf	EUSART_Write_String@data+1,c
  4016  002B88  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  4017  002B8C  D6B7               	goto	l9173
  4018  002B8E                     l9283:
  4019                           
  4020                           ; BSR set to: 1
  4021  002B8E  0E4E               	movlw	78
  4022  002B90  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  4023  002B92  B4D8               	btfsc	status,2,c
  4024  002B94  D004               	goto	u10180
  4025                           
  4026                           ; BSR set to: 1
  4027  002B96  0E6E               	movlw	110
  4028  002B98  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  4029  002B9A  A4D8               	btfss	status,2,c
  4030  002B9C  D053               	goto	l9319
  4031  002B9E                     u10180:
  4032                           
  4033                           ; BSR set to: 1
  4034                           ;parse.c: 179:     {;parse.c: 181:         rx_data[0] = ' ';
  4035  002B9E  0E20               	movlw	32
  4036  002BA0  6FE4               	movwf	_rx_data& (0+255),b	;volatile
  4037                           
  4038                           ; BSR set to: 1
  4039                           ;parse.c: 184:         temp_packages = atoi(rx_data);
  4040  002BA2  0EE4               	movlw	low _rx_data
  4041  002BA4  6E13               	movwf	atoi@s,c
  4042  002BA6  0E01               	movlw	high _rx_data
  4043  002BA8  6E14               	movwf	atoi@s+1,c
  4044  002BAA  ECD8  F024         	call	_atoi	;wreg free
  4045  002BAE  C013  F052         	movff	?_atoi,_temp_packages	;volatile
  4046  002BB2  C014  F053         	movff	?_atoi+1,_temp_packages+1	;volatile
  4047                           
  4048                           ;parse.c: 187:         if(temp_packages < 1)
  4049  002BB6  5052               	movf	_temp_packages,w,c	;volatile
  4050  002BB8  1053               	iorwf	_temp_packages+1,w,c	;volatile
  4051  002BBA  A4D8               	btfss	status,2,c
  4052  002BBC  D012               	goto	l9301
  4053                           
  4054                           ;parse.c: 188:         {;parse.c: 190:             sprintf(output, "Error! Minimum Packa
      +                          ges count 1");
  4055  002BBE  0E00               	movlw	low _output
  4056  002BC0  0100               	movlb	0	; () banked
  4057  002BC2  6F9D               	movwf	sprintf@s& (0+255),b
  4058  002BC4  0E02               	movlw	high _output
  4059  002BC6  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4060  002BC8  0E02               	movlw	low STR_10
  4061  002BCA  6F9F               	movwf	sprintf@fmt& (0+255),b
  4062  002BCC  0E7F               	movlw	high STR_10
  4063  002BCE  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4064  002BD0  EC13  F02A         	call	_sprintf	;wreg free
  4065                           
  4066                           ;parse.c: 191:             EUSART_Write_String(output);
  4067  002BD4  0E00               	movlw	low _output
  4068  002BD6  6E0D               	movwf	EUSART_Write_String@data,c
  4069  002BD8  0E02               	movlw	high _output
  4070  002BDA  6E0E               	movwf	EUSART_Write_String@data+1,c
  4071  002BDC  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  4072  002BE0  D68D               	goto	l9173
  4073  002BE2                     l9301:
  4074  002BE2  0452               	decf	_temp_packages,w,c	;volatile
  4075  002BE4  0E01               	movlw	1
  4076  002BE6  5853               	subwfb	_temp_packages+1,w,c	;volatile
  4077  002BE8  A0D8               	btfss	status,0,c
  4078  002BEA  D012               	goto	l666
  4079                           
  4080                           ;parse.c: 197:         {;parse.c: 199:             sprintf(output, "Error! Maximum Packa
      +                          ges count 256");
  4081  002BEC  0E00               	movlw	low _output
  4082  002BEE  0100               	movlb	0	; () banked
  4083  002BF0  6F9D               	movwf	sprintf@s& (0+255),b
  4084  002BF2  0E02               	movlw	high _output
  4085  002BF4  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4086  002BF6  0EBF               	movlw	low STR_11
  4087  002BF8  6F9F               	movwf	sprintf@fmt& (0+255),b
  4088  002BFA  0E7E               	movlw	high STR_11
  4089  002BFC  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4090  002BFE  EC13  F02A         	call	_sprintf	;wreg free
  4091                           
  4092                           ;parse.c: 200:             EUSART_Write_String(output);
  4093  002C02  0E00               	movlw	low _output
  4094  002C04  6E0D               	movwf	EUSART_Write_String@data,c
  4095  002C06  0E02               	movlw	high _output
  4096  002C08  6E0E               	movwf	EUSART_Write_String@data+1,c
  4097  002C0A  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  4098  002C0E  D676               	goto	l9173
  4099  002C10                     l666:
  4100                           
  4101                           ;parse.c: 204:         {;parse.c: 206:             packages = temp_packages;
  4102  002C10  C052  F050         	movff	_temp_packages,_packages	;volatile
  4103  002C14  C053  F051         	movff	_temp_packages+1,_packages+1	;volatile
  4104                           
  4105                           ;parse.c: 209:             sprintf(output, "Number of Packages changed to %u Packages", 
      +                          packages);
  4106  002C18  0E00               	movlw	low _output
  4107  002C1A  0100               	movlb	0	; () banked
  4108  002C1C  6F9D               	movwf	sprintf@s& (0+255),b
  4109  002C1E  0E02               	movlw	high _output
  4110  002C20  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4111  002C22  0E01               	movlw	low STR_12
  4112  002C24  6F9F               	movwf	sprintf@fmt& (0+255),b
  4113  002C26  0E7E               	movlw	high STR_12
  4114  002C28  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4115  002C2A  C050  F0A1         	movff	_packages,?_sprintf+4	;volatile
  4116  002C2E  C051  F0A2         	movff	_packages+1,?_sprintf+5	;volatile
  4117  002C32  EC13  F02A         	call	_sprintf	;wreg free
  4118                           
  4119                           ;parse.c: 210:             EUSART_Write_String(output);
  4120  002C36  0E00               	movlw	low _output
  4121  002C38  6E0D               	movwf	EUSART_Write_String@data,c
  4122  002C3A  0E02               	movlw	high _output
  4123  002C3C  6E0E               	movwf	EUSART_Write_String@data+1,c
  4124  002C3E  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  4125  002C42  D65C               	goto	l9173
  4126  002C44                     l9319:
  4127                           
  4128                           ; BSR set to: 1
  4129  002C44  0E49               	movlw	73
  4130  002C46  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  4131  002C48  B4D8               	btfsc	status,2,c
  4132  002C4A  D004               	goto	u10220
  4133                           
  4134                           ; BSR set to: 1
  4135  002C4C  0E69               	movlw	105
  4136  002C4E  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  4137  002C50  A4D8               	btfss	status,2,c
  4138  002C52  D05D               	goto	l9339
  4139  002C54                     u10220:
  4140                           
  4141                           ; BSR set to: 1
  4142                           ;parse.c: 217:     {;parse.c: 219:         sprintf(output, "Frequency = %ld Hz", frequen
      +                          cy);
  4143  002C54  0E00               	movlw	low _output
  4144  002C56  0100               	movlb	0	; () banked
  4145  002C58  6F9D               	movwf	sprintf@s& (0+255),b
  4146  002C5A  0E02               	movlw	high _output
  4147  002C5C  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4148  002C5E  0ED9               	movlw	low STR_13
  4149  002C60  6F9F               	movwf	sprintf@fmt& (0+255),b
  4150  002C62  0E7F               	movlw	high STR_13
  4151  002C64  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4152  002C66  C0F6  F0A1         	movff	_frequency,?_sprintf+4
  4153  002C6A  C0F7  F0A2         	movff	_frequency+1,?_sprintf+5
  4154  002C6E  C0F8  F0A3         	movff	_frequency+2,?_sprintf+6
  4155  002C72  C0F9  F0A4         	movff	_frequency+3,?_sprintf+7
  4156  002C76  EC13  F02A         	call	_sprintf	;wreg free
  4157                           
  4158                           ;parse.c: 220:         EUSART_Write_String(output);
  4159  002C7A  0E00               	movlw	low _output
  4160  002C7C  6E0D               	movwf	EUSART_Write_String@data,c
  4161  002C7E  0E02               	movlw	high _output
  4162  002C80  6E0E               	movwf	EUSART_Write_String@data+1,c
  4163  002C82  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  4164                           
  4165                           ;parse.c: 223:         sprintf(output, "Cycles = %ld", cycle);
  4166  002C86  0E00               	movlw	low _output
  4167  002C88  0100               	movlb	0	; () banked
  4168  002C8A  6F9D               	movwf	sprintf@s& (0+255),b
  4169  002C8C  0E02               	movlw	high _output
  4170  002C8E  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4171  002C90  0EEC               	movlw	low STR_14
  4172  002C92  6F9F               	movwf	sprintf@fmt& (0+255),b
  4173  002C94  0E7F               	movlw	high STR_14
  4174  002C96  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4175  002C98  C048  F0A1         	movff	_cycle,?_sprintf+4	;volatile
  4176  002C9C  C049  F0A2         	movff	_cycle+1,?_sprintf+5	;volatile
  4177  002CA0  C04A  F0A3         	movff	_cycle+2,?_sprintf+6	;volatile
  4178  002CA4  C04B  F0A4         	movff	_cycle+3,?_sprintf+7	;volatile
  4179  002CA8  EC13  F02A         	call	_sprintf	;wreg free
  4180                           
  4181                           ;parse.c: 224:         EUSART_Write_String(output);
  4182  002CAC  0E00               	movlw	low _output
  4183  002CAE  6E0D               	movwf	EUSART_Write_String@data,c
  4184  002CB0  0E02               	movlw	high _output
  4185  002CB2  6E0E               	movwf	EUSART_Write_String@data+1,c
  4186  002CB4  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  4187                           
  4188                           ;parse.c: 227:         sprintf(output, "Break Duration = %u ms", break_duration);
  4189  002CB8  0E00               	movlw	low _output
  4190  002CBA  0100               	movlb	0	; () banked
  4191  002CBC  6F9D               	movwf	sprintf@s& (0+255),b
  4192  002CBE  0E02               	movlw	high _output
  4193  002CC0  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4194  002CC2  0EAF               	movlw	low STR_15
  4195  002CC4  6F9F               	movwf	sprintf@fmt& (0+255),b
  4196  002CC6  0E7F               	movlw	high STR_15
  4197  002CC8  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4198  002CCA  C040  F0A1         	movff	_break_duration,?_sprintf+4	;volatile
  4199  002CCE  C041  F0A2         	movff	_break_duration+1,?_sprintf+5	;volatile
  4200  002CD2  EC13  F02A         	call	_sprintf	;wreg free
  4201                           
  4202                           ;parse.c: 228:         EUSART_Write_String(output);
  4203  002CD6  0E00               	movlw	low _output
  4204  002CD8  6E0D               	movwf	EUSART_Write_String@data,c
  4205  002CDA  0E02               	movlw	high _output
  4206  002CDC  6E0E               	movwf	EUSART_Write_String@data+1,c
  4207  002CDE  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  4208                           
  4209                           ;parse.c: 231:         sprintf(output, "Number of Packages = %u", packages);
  4210  002CE2  0E00               	movlw	low _output
  4211  002CE4  0100               	movlb	0	; () banked
  4212  002CE6  6F9D               	movwf	sprintf@s& (0+255),b
  4213  002CE8  0E02               	movlw	high _output
  4214  002CEA  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4215  002CEC  0E97               	movlw	low STR_16
  4216  002CEE  6F9F               	movwf	sprintf@fmt& (0+255),b
  4217  002CF0  0E7F               	movlw	high STR_16
  4218  002CF2  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4219  002CF4  C050  F0A1         	movff	_packages,?_sprintf+4	;volatile
  4220  002CF8  C051  F0A2         	movff	_packages+1,?_sprintf+5	;volatile
  4221  002CFC  EC13  F02A         	call	_sprintf	;wreg free
  4222                           
  4223                           ;parse.c: 232:         EUSART_Write_String(output);
  4224  002D00  0E00               	movlw	low _output
  4225  002D02  6E0D               	movwf	EUSART_Write_String@data,c
  4226  002D04  0E02               	movlw	high _output
  4227  002D06  6E0E               	movwf	EUSART_Write_String@data+1,c
  4228  002D08  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  4229  002D0C  D5F7               	goto	l9173
  4230  002D0E                     l9339:
  4231                           
  4232                           ; BSR set to: 1
  4233  002D0E  0E54               	movlw	84
  4234  002D10  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  4235  002D12  B4D8               	btfsc	status,2,c
  4236  002D14  D004               	goto	u10240
  4237                           
  4238                           ; BSR set to: 1
  4239  002D16  0E74               	movlw	116
  4240  002D18  19E4               	xorwf	_rx_data& (0+255),w,b	;volatile
  4241  002D1A  A4D8               	btfss	status,2,c
  4242  002D1C  D01C               	goto	l9359
  4243  002D1E                     u10240:
  4244                           
  4245                           ; BSR set to: 1
  4246                           ;parse.c: 238:     {;parse.c: 240:         PIE3bits.RCIE = 0;
  4247  002D1E  010E               	movlb	14	; () banked
  4248  002D20  9BC5               	bcf	197,5,b	;volatile
  4249                           
  4250                           ;parse.c: 241:         PIE3bits.TXIE = 0;
  4251  002D22  99C5               	bcf	197,4,b	;volatile
  4252                           
  4253                           ; BSR set to: 14
  4254                           ;parse.c: 243:         SPI1_Close();
  4255  002D24  ECCE  F02D         	call	_SPI1_Close	;wreg free
  4256                           
  4257                           ;parse.c: 245:         output[0] = '\0';
  4258  002D28  0E00               	movlw	0
  4259  002D2A  0102               	movlb	2	; () banked
  4260  002D2C  6F00               	movwf	_output& (0+255),b	;volatile
  4261                           
  4262                           ; BSR set to: 2
  4263                           ;parse.c: 246:         rx_data_end = 0;
  4264  002D2E  0E00               	movlw	0
  4265  002D30  0100               	movlb	0	; () banked
  4266  002D32  6FEE               	movwf	_rx_data_end& (0+255),b	;volatile
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;parse.c: 248:         state = 2;
  4270  002D34  0E00               	movlw	0
  4271  002D36  6FFB               	movwf	(_state+1)& (0+255),b	;volatile
  4272  002D38  0E02               	movlw	2
  4273  002D3A  6FFA               	movwf	_state& (0+255),b	;volatile
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;parse.c: 250:         temp_packages = packages;
  4277  002D3C  C050  F052         	movff	_packages,_temp_packages	;volatile
  4278  002D40  C051  F053         	movff	_packages+1,_temp_packages+1	;volatile
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;parse.c: 251:         temp_break_duration = break_duration;
  4282  002D44  C040  F042         	movff	_break_duration,_temp_break_duration	;volatile
  4283  002D48  C041  F043         	movff	_break_duration+1,_temp_break_duration+1	;volatile
  4284                           
  4285                           ; BSR set to: 0
  4286                           ;parse.c: 253:         TMR0_Reload();
  4287  002D4C  EC13  F02C         	call	_TMR0_Reload	;wreg free
  4288                           
  4289                           ;parse.c: 255:         TMR0_StartTimer();
  4290  002D50  EC78  F02D         	call	_TMR0_StartTimer	;wreg free
  4291                           
  4292                           ;parse.c: 258:     }else
  4293  002D54  0012               	return	
  4294  002D56                     l9359:
  4295                           
  4296                           ; BSR set to: 1
  4297                           ;parse.c: 259:     {;parse.c: 261:          sprintf(output, "Unknown Command %c", rx_dat
      +                          a[0]);
  4298  002D56  0E00               	movlw	low _output
  4299  002D58  0100               	movlb	0	; () banked
  4300  002D5A  6F9D               	movwf	sprintf@s& (0+255),b
  4301  002D5C  0E02               	movlw	high _output
  4302  002D5E  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  4303  002D60  0EC6               	movlw	low STR_17
  4304  002D62  6F9F               	movwf	sprintf@fmt& (0+255),b
  4305  002D64  0E7F               	movlw	high STR_17
  4306  002D66  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  4307  002D68  C1E4  F0A1         	movff	_rx_data,?_sprintf+4	;volatile
  4308  002D6C  6BA2               	clrf	(?_sprintf+5)& (0+255),b
  4309  002D6E  EC13  F02A         	call	_sprintf	;wreg free
  4310                           
  4311                           ;parse.c: 262:          EUSART_Write_String(output);
  4312  002D72  0E00               	movlw	low _output
  4313  002D74  6E0D               	movwf	EUSART_Write_String@data,c
  4314  002D76  0E02               	movlw	high _output
  4315  002D78  6E0E               	movwf	EUSART_Write_String@data+1,c
  4316  002D7A  EC63  F02B         	call	_EUSART_Write_String	;wreg free
  4317  002D7E  D5BE               	goto	l9173
  4318  002D80                     __end_of_Parse_Data:
  4319                           	opt callstack 0
  4320                           
  4321 ;; *************** function _sprintf *****************
  4322 ;; Defined at:
  4323 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  s               2   61[BANK0 ] PTR unsigned char 
  4326 ;;		 -> output(50), 
  4327 ;;  fmt             2   63[BANK0 ] PTR const unsigned char 
  4328 ;;		 -> STR_17(19), STR_16(24), STR_15(23), STR_14(13), 
  4329 ;;		 -> STR_13(19), STR_12(42), STR_11(34), STR_10(32), 
  4330 ;;		 -> STR_9(32), STR_8(37), STR_7(28), STR_6(33), 
  4331 ;;		 -> STR_5(29), STR_4(28), STR_3(36), STR_2(36), 
  4332 ;;		 -> STR_1(39), 
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;  f               6   73[BANK0 ] struct _IO_FILE
  4335 ;;  ap              2   71[BANK0 ] PTR void [1]
  4336 ;;		 -> ?_sprintf(2), 
  4337 ;;  ret             2    0        int 
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  2   61[BANK0 ] int 
  4340 ;; Registers used:
  4341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4347 ;;      Params:         0       8       0       0       0       0       0       0       0
  4348 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4350 ;;      Totals:         0      18       0       0       0       0       0       0       0
  4351 ;;Total ram usage:       18 bytes
  4352 ;; Hardware stack levels used:    1
  4353 ;; Hardware stack levels required when called:   14
  4354 ;; This function calls:
  4355 ;;		_vfprintf
  4356 ;; This function is called by:
  4357 ;;		_Parse_Data
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           	psect	text19
  4362  005426                     __ptext19:
  4363                           	opt callstack 0
  4364  005426                     _sprintf:
  4365                           	opt callstack 15
  4366                           
  4367                           ;incstack = 0
  4368  005426  0EA1               	movlw	low (?_sprintf+4)
  4369  005428  0100               	movlb	0	; () banked
  4370  00542A  6FA7               	movwf	sprintf@ap& (0+255),b
  4371  00542C  0E00               	movlw	high (?_sprintf+4)
  4372  00542E  6FA8               	movwf	(sprintf@ap+1)& (0+255),b
  4373  005430  C09D  F0A9         	movff	sprintf@s,sprintf@f
  4374  005434  C09E  F0AA         	movff	sprintf@s+1,sprintf@f+1
  4375                           
  4376                           ; BSR set to: 0
  4377  005438  0E00               	movlw	0
  4378  00543A  6FAC               	movwf	(sprintf@f+3)& (0+255),b
  4379  00543C  0E00               	movlw	0
  4380  00543E  6FAB               	movwf	(sprintf@f+2)& (0+255),b
  4381                           
  4382                           ; BSR set to: 0
  4383  005440  0E00               	movlw	0
  4384  005442  6FAE               	movwf	(sprintf@f+5)& (0+255),b
  4385  005444  0E00               	movlw	0
  4386  005446  6FAD               	movwf	(sprintf@f+4)& (0+255),b
  4387                           
  4388                           ; BSR set to: 0
  4389  005448  0EA9               	movlw	low sprintf@f
  4390  00544A  6F97               	movwf	vfprintf@fp& (0+255),b
  4391  00544C  0E00               	movlw	high sprintf@f
  4392  00544E  6F98               	movwf	(vfprintf@fp+1)& (0+255),b
  4393  005450  C09F  F099         	movff	sprintf@fmt,vfprintf@fmt
  4394  005454  C0A0  F09A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4395  005458  0EA7               	movlw	low sprintf@ap
  4396  00545A  6F9B               	movwf	vfprintf@ap& (0+255),b
  4397  00545C  0E00               	movlw	high sprintf@ap
  4398  00545E  6F9C               	movwf	(vfprintf@ap+1)& (0+255),b
  4399  005460  ECBD  F029         	call	_vfprintf	;wreg free
  4400  005464  0100               	movlb	0	; () banked
  4401  005466  51AB               	movf	(sprintf@f+2)& (0+255),w,b
  4402  005468  259D               	addwf	sprintf@s& (0+255),w,b
  4403  00546A  6ED9               	movwf	fsr2l,c
  4404  00546C  51AC               	movf	(sprintf@f+3)& (0+255),w,b
  4405  00546E  219E               	addwfc	(sprintf@s+1)& (0+255),w,b
  4406  005470  6EDA               	movwf	fsr2h,c
  4407  005472  0E00               	movlw	0
  4408  005474  6EDF               	movwf	indf2,c
  4409                           
  4410                           ; BSR set to: 0
  4411  005476  0012               	return		;funcret
  4412  005478                     __end_of_sprintf:
  4413                           	opt callstack 0
  4414                           
  4415 ;; *************** function _vfprintf *****************
  4416 ;; Defined at:
  4417 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  4420 ;;		 -> sprintf@f(6), 
  4421 ;;  fmt             2   57[BANK0 ] PTR const unsigned char 
  4422 ;;		 -> STR_17(19), STR_16(24), STR_15(23), STR_14(13), 
  4423 ;;		 -> STR_13(19), STR_12(42), STR_11(34), STR_10(32), 
  4424 ;;		 -> STR_9(32), STR_8(37), STR_7(28), STR_6(33), 
  4425 ;;		 -> STR_5(29), STR_4(28), STR_3(36), STR_2(36), 
  4426 ;;		 -> STR_1(39), 
  4427 ;;  ap              2   59[BANK0 ] PTR PTR void 
  4428 ;;		 -> sprintf@ap(2), 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  cfmt            2   56[COMRAM] PTR unsigned char 
  4431 ;;		 -> STR_17(19), STR_16(24), STR_15(23), STR_14(13), 
  4432 ;;		 -> STR_13(19), STR_12(42), STR_11(34), STR_10(32), 
  4433 ;;		 -> STR_9(32), STR_8(37), STR_7(28), STR_6(33), 
  4434 ;;		 -> STR_5(29), STR_4(28), STR_3(36), STR_2(36), 
  4435 ;;		 -> STR_1(39), 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  2   55[BANK0 ] int 
  4438 ;; Registers used:
  4439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4445 ;;      Params:         0       6       0       0       0       0       0       0       0
  4446 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4447 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4448 ;;      Totals:         2       6       0       0       0       0       0       0       0
  4449 ;;Total ram usage:        8 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:   13
  4452 ;; This function calls:
  4453 ;;		_vfpfcnvrt
  4454 ;; This function is called by:
  4455 ;;		_sprintf
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text20
  4460  00537A                     __ptext20:
  4461                           	opt callstack 0
  4462  00537A                     _vfprintf:
  4463                           	opt callstack 15
  4464                           
  4465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;incstack = 0
  4469  00537A  C099  F039         	movff	vfprintf@fmt,vfprintf@cfmt
  4470  00537E  C09A  F03A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4471                           
  4472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4473  005382  0E00               	movlw	0
  4474  005384  0100               	movlb	0	; () banked
  4475  005386  6FE8               	movwf	(_nout+1)& (0+255),b
  4476  005388  0E00               	movlw	0
  4477  00538A  6FE7               	movwf	_nout& (0+255),b
  4478                           
  4479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4480  00538C  D013               	goto	l5851
  4481  00538E                     l5849:
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4485  00538E  C097  F072         	movff	vfprintf@fp,vfpfcnvrt@fp
  4486  005392  C098  F073         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4487  005396  0E39               	movlw	low vfprintf@cfmt
  4488  005398  6F74               	movwf	vfpfcnvrt@fmt& (0+255),b
  4489  00539A  0E00               	movlw	high vfprintf@cfmt
  4490  00539C  6F75               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4491  00539E  C09B  F076         	movff	vfprintf@ap,vfpfcnvrt@ap
  4492  0053A2  C09C  F077         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4493  0053A6  ECD6  F018         	call	_vfpfcnvrt	;wreg free
  4494  0053AA  0100               	movlb	0	; () banked
  4495  0053AC  5172               	movf	?_vfpfcnvrt& (0+255),w,b
  4496  0053AE  27E7               	addwf	_nout& (0+255),f,b
  4497  0053B0  5173               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4498  0053B2  23E8               	addwfc	(_nout+1)& (0+255),f,b
  4499  0053B4                     l5851:
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4503  0053B4  C039  FFF6         	movff	vfprintf@cfmt,tblptrl
  4504  0053B8  C03A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4505  0053BC                     	if	0	;tblptru may be non-zero
  4506  0053BC                     	endif
  4507  0053BC                     	if	0	;tblptru may be non-zero
  4508  0053BC                     	endif
  4509  0053BC  0008               	tblrd		*
  4510  0053BE  50F5               	movf	tablat,w,c
  4511  0053C0  0900               	iorlw	0
  4512  0053C2  A4D8               	btfss	status,2,c
  4513  0053C4  D7E4               	goto	l5849
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4517  0053C6  C0E7  F097         	movff	_nout,?_vfprintf
  4518  0053CA  C0E8  F098         	movff	_nout+1,?_vfprintf+1
  4519                           
  4520                           ; BSR set to: 0
  4521  0053CE  0012               	return		;funcret
  4522  0053D0                     __end_of_vfprintf:
  4523                           	opt callstack 0
  4524                           
  4525 ;; *************** function _vfpfcnvrt *****************
  4526 ;; Defined at:
  4527 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  4530 ;;		 -> sprintf@f(6), 
  4531 ;;  fmt             2   20[BANK0 ] PTR PTR unsigned char 
  4532 ;;		 -> vfprintf@cfmt(2), 
  4533 ;;  ap              2   22[BANK0 ] PTR PTR void 
  4534 ;;		 -> sprintf@ap(2), 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  llu             8   47[BANK0 ] unsigned long long 
  4537 ;;  ll              8   39[BANK0 ] long long 
  4538 ;;  f               4    0        long long 
  4539 ;;  vp              3    0        PTR void 
  4540 ;;  ct              3    0        unsigned char [3]
  4541 ;;  cp              3    0        PTR unsigned char 
  4542 ;;  i               2    0        int 
  4543 ;;  done            2    0        int 
  4544 ;;  c               1   38[BANK0 ] unsigned char 
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  2   18[BANK0 ] int 
  4547 ;; Registers used:
  4548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4554 ;;      Params:         0       6       0       0       0       0       0       0       0
  4555 ;;      Locals:         0      17       0       0       0       0       0       0       0
  4556 ;;      Temps:          0      14       0       0       0       0       0       0       0
  4557 ;;      Totals:         0      37       0       0       0       0       0       0       0
  4558 ;;Total ram usage:       37 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:   12
  4561 ;; This function calls:
  4562 ;;		_ctoa
  4563 ;;		_dtoa
  4564 ;;		_fputc
  4565 ;;		_strncmp
  4566 ;;		_utoa
  4567 ;; This function is called by:
  4568 ;;		_vfprintf
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text21
  4573  0031AC                     __ptext21:
  4574                           	opt callstack 0
  4575  0031AC                     _vfpfcnvrt:
  4576                           	opt callstack 15
  4577                           
  4578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;incstack = 0
  4582  0031AC  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4583  0031B0  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4584  0031B4  CFDE FFF6          	movff	postinc2,tblptrl
  4585  0031B8  CFDD FFF7          	movff	postdec2,tblptrh
  4586  0031BC                     	if	0	;tblptru may be non-zero
  4587  0031BC                     	endif
  4588  0031BC                     	if	0	;tblptru may be non-zero
  4589  0031BC                     	endif
  4590  0031BC  0008               	tblrd		*
  4591  0031BE  50F5               	movf	tablat,w,c
  4592  0031C0  0A25               	xorlw	37
  4593  0031C2  A4D8               	btfss	status,2,c
  4594  0031C4  D1CC               	goto	l4991
  4595                           
  4596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4597  0031C6  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4598  0031CA  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4599  0031CE  2ADE               	incf	postinc2,f,c
  4600  0031D0  0E00               	movlw	0
  4601  0031D2  22DD               	addwfc	postdec2,f,c
  4602                           
  4603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4604  0031D4  0E00               	movlw	0
  4605  0031D6  0100               	movlb	0	; () banked
  4606  0031D8  6FEA               	movwf	(_width+1)& (0+255),b
  4607  0031DA  0E00               	movlw	0
  4608  0031DC  6FE9               	movwf	_width& (0+255),b
  4609  0031DE  C0E9  F03E         	movff	_width,_flags
  4610  0031E2  C0EA  F03F         	movff	_width+1,_flags+1
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4614  0031E6  683C               	setf	_prec,c
  4615  0031E8  683D               	setf	_prec+1,c
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4619  0031EA  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4620  0031EE  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4621  0031F2  CFDE FFF6          	movff	postinc2,tblptrl
  4622  0031F6  CFDD FFF7          	movff	postdec2,tblptrh
  4623  0031FA                     	if	0	;tblptru may be non-zero
  4624  0031FA                     	endif
  4625  0031FA                     	if	0	;tblptru may be non-zero
  4626  0031FA                     	endif
  4627  0031FA  0008               	tblrd		*
  4628  0031FC  50F5               	movf	tablat,w,c
  4629  0031FE  0A63               	xorlw	99
  4630  003200  A4D8               	btfss	status,2,c
  4631  003202  D026               	goto	l4939
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4635  003204  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4636  003208  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4637  00320C  2ADE               	incf	postinc2,f,c
  4638  00320E  0E00               	movlw	0
  4639  003210  22DD               	addwfc	postdec2,f,c
  4640                           
  4641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4642  003212  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4643  003216  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4644  00321A  CFDF F078          	movff	indf2,??_vfpfcnvrt
  4645  00321E  0E02               	movlw	2
  4646  003220  26DE               	addwf	postinc2,f,c
  4647  003222  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  4648  003226  0E00               	movlw	0
  4649  003228  22DD               	addwfc	postdec2,f,c
  4650  00322A  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4651  00322E  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4652  003232  50DF               	movf	indf2,w,c
  4653  003234  6F86               	movwf	vfpfcnvrt@c& (0+255),b
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4657  003236  C072  F027         	movff	vfpfcnvrt@fp,ctoa@fp
  4658  00323A  C073  F028         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4659  00323E  C086  F029         	movff	vfpfcnvrt@c,ctoa@c
  4660  003242  EC65  F02A         	call	_ctoa	;wreg free
  4661  003246  C027  F072         	movff	?_ctoa,?_vfpfcnvrt
  4662  00324A  C028  F073         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4663  00324E  0012               	return	
  4664  003250                     l4939:
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4668  003250  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4669  003254  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4670  003258  CFDE FFF6          	movff	postinc2,tblptrl
  4671  00325C  CFDD FFF7          	movff	postdec2,tblptrh
  4672  003260                     	if	0	;tblptru may be non-zero
  4673  003260                     	endif
  4674  003260                     	if	0	;tblptru may be non-zero
  4675  003260                     	endif
  4676  003260  0008               	tblrd		*
  4677  003262  50F5               	movf	tablat,w,c
  4678  003264  0A64               	xorlw	100
  4679  003266  B4D8               	btfsc	status,2,c
  4680  003268  D00D               	goto	u4620
  4681                           
  4682                           ; BSR set to: 0
  4683  00326A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4684  00326E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4685  003272  CFDE FFF6          	movff	postinc2,tblptrl
  4686  003276  CFDD FFF7          	movff	postdec2,tblptrh
  4687  00327A                     	if	0	;tblptru may be non-zero
  4688  00327A                     	endif
  4689  00327A                     	if	0	;tblptru may be non-zero
  4690  00327A                     	endif
  4691  00327A  0008               	tblrd		*
  4692  00327C  50F5               	movf	tablat,w,c
  4693  00327E  0A69               	xorlw	105
  4694  003280  A4D8               	btfss	status,2,c
  4695  003282  D03F               	goto	l4949
  4696  003284                     u4620:
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4700  003284  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4701  003288  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4702  00328C  2ADE               	incf	postinc2,f,c
  4703  00328E  0E00               	movlw	0
  4704  003290  22DD               	addwfc	postdec2,f,c
  4705                           
  4706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4707  003292  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4708  003296  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4709  00329A  CFDF F078          	movff	indf2,??_vfpfcnvrt
  4710  00329E  0E02               	movlw	2
  4711  0032A0  26DE               	addwf	postinc2,f,c
  4712  0032A2  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  4713  0032A6  0E00               	movlw	0
  4714  0032A8  22DD               	addwfc	postdec2,f,c
  4715  0032AA  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4716  0032AE  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4717  0032B2  CFDE F087          	movff	postinc2,vfpfcnvrt@ll
  4718  0032B6  CFDD F088          	movff	postdec2,vfpfcnvrt@ll+1
  4719  0032BA  0E00               	movlw	0
  4720  0032BC  BF88               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4721  0032BE  0EFF               	movlw	-1
  4722  0032C0  6F89               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4723  0032C2  6F8A               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4724  0032C4  6F8B               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4725  0032C6  6F8C               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4726  0032C8  6F8D               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4727  0032CA  6F8E               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4728  0032CC                     l4945:
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4732  0032CC  C072  F027         	movff	vfpfcnvrt@fp,dtoa@fp
  4733  0032D0  C073  F028         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4734  0032D4  C087  F029         	movff	vfpfcnvrt@ll,dtoa@d
  4735  0032D8  C088  F02A         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4736  0032DC  C089  F02B         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4737  0032E0  C08A  F02C         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4738  0032E4  C08B  F02D         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4739  0032E8  C08C  F02E         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4740  0032EC  C08D  F02F         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4741  0032F0  C08E  F030         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4742  0032F4  EC3D  F01F         	call	_dtoa	;wreg free
  4743  0032F8  C027  F072         	movff	?_dtoa,?_vfpfcnvrt
  4744  0032FC  C028  F073         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4745  003300  0012               	return	
  4746  003302                     l4949:
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
  4750  003302  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4751  003306  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4752  00330A  CFDE F00C          	movff	postinc2,strncmp@_l
  4753  00330E  CFDD F00D          	movff	postdec2,strncmp@_l+1
  4754  003312  0EF6               	movlw	low (STR_14+10)
  4755  003314  6E0E               	movwf	strncmp@_r,c
  4756  003316  0E7F               	movlw	high (STR_14+10)
  4757  003318  6E0F               	movwf	strncmp@_r+1,c
  4758  00331A  0E00               	movlw	0
  4759  00331C  6E11               	movwf	strncmp@n+1,c
  4760  00331E  0E02               	movlw	2
  4761  003320  6E10               	movwf	strncmp@n,c
  4762  003322  ECE5  F027         	call	_strncmp	;wreg free
  4763  003326  500C               	movf	?_strncmp,w,c
  4764  003328  100D               	iorwf	?_strncmp+1,w,c
  4765  00332A  B4D8               	btfsc	status,2,c
  4766  00332C  D016               	goto	u4640
  4767  00332E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4768  003332  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4769  003336  CFDE F00C          	movff	postinc2,strncmp@_l
  4770  00333A  CFDD F00D          	movff	postdec2,strncmp@_l+1
  4771  00333E  0EF9               	movlw	low STR_22
  4772  003340  6E0E               	movwf	strncmp@_r,c
  4773  003342  0E7F               	movlw	high STR_22
  4774  003344  6E0F               	movwf	strncmp@_r+1,c
  4775  003346  0E00               	movlw	0
  4776  003348  6E11               	movwf	strncmp@n+1,c
  4777  00334A  0E02               	movlw	2
  4778  00334C  6E10               	movwf	strncmp@n,c
  4779  00334E  ECE5  F027         	call	_strncmp	;wreg free
  4780  003352  500C               	movf	?_strncmp,w,c
  4781  003354  100D               	iorwf	?_strncmp+1,w,c
  4782  003356  A4D8               	btfss	status,2,c
  4783  003358  D043               	goto	l4959
  4784  00335A                     u4640:
  4785                           
  4786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
  4787  00335A  0E02               	movlw	2
  4788  00335C  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4789  003360  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4790  003364  26DE               	addwf	postinc2,f,c
  4791  003366  0E00               	movlw	0
  4792  003368  22DD               	addwfc	postdec2,f,c
  4793                           
  4794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  4795  00336A  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4796  00336E  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4797  003372  CFDF F078          	movff	indf2,??_vfpfcnvrt
  4798  003376  0E04               	movlw	4
  4799  003378  26DE               	addwf	postinc2,f,c
  4800  00337A  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  4801  00337E  0E00               	movlw	0
  4802  003380  22DD               	addwfc	postdec2,f,c
  4803  003382  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4804  003386  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4805  00338A  CFDE F07A          	movff	postinc2,??_vfpfcnvrt+2
  4806  00338E  CFDE F07B          	movff	postinc2,??_vfpfcnvrt+3
  4807  003392  CFDE F07C          	movff	postinc2,??_vfpfcnvrt+4
  4808  003396  CFDE F07D          	movff	postinc2,??_vfpfcnvrt+5
  4809  00339A  C07A  F07E         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  4810  00339E  C07B  F07F         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  4811  0033A2  C07C  F080         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  4812  0033A6  C07D  F081         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  4813  0033AA  0100               	movlb	0	; () banked
  4814  0033AC  6B82               	clrf	(??_vfpfcnvrt+10)& (0+255),b
  4815  0033AE  BF81               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,b
  4816  0033B0  6982               	setf	(??_vfpfcnvrt+10)& (0+255),b
  4817  0033B2  C082  F083         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  4818  0033B6  C082  F084         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  4819  0033BA  C082  F085         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  4820  0033BE  C07E  F087         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  4821  0033C2  C07F  F088         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  4822  0033C6  C080  F089         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  4823  0033CA  C081  F08A         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  4824  0033CE  C082  F08B         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  4825  0033D2  C083  F08C         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  4826  0033D6  C084  F08D         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  4827  0033DA  C085  F08E         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  4828  0033DE  D776               	goto	l4945
  4829  0033E0                     l4959:
  4830                           
  4831                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  4832  0033E0  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4833  0033E4  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4834  0033E8  CFDE FFF6          	movff	postinc2,tblptrl
  4835  0033EC  CFDD FFF7          	movff	postdec2,tblptrh
  4836  0033F0                     	if	0	;tblptru may be non-zero
  4837  0033F0                     	endif
  4838  0033F0                     	if	0	;tblptru may be non-zero
  4839  0033F0                     	endif
  4840  0033F0  0008               	tblrd		*
  4841  0033F2  50F5               	movf	tablat,w,c
  4842  0033F4  0A75               	xorlw	117
  4843  0033F6  A4D8               	btfss	status,2,c
  4844  0033F8  D041               	goto	l4967
  4845                           
  4846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  4847  0033FA  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4848  0033FE  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4849  003402  2ADE               	incf	postinc2,f,c
  4850  003404  0E00               	movlw	0
  4851  003406  22DD               	addwfc	postdec2,f,c
  4852                           
  4853                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  4854  003408  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4855  00340C  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4856  003410  CFDF F078          	movff	indf2,??_vfpfcnvrt
  4857  003414  0E02               	movlw	2
  4858  003416  26DE               	addwf	postinc2,f,c
  4859  003418  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  4860  00341C  0E00               	movlw	0
  4861  00341E  22DD               	addwfc	postdec2,f,c
  4862  003420  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4863  003424  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4864  003428  CFDE F07A          	movff	postinc2,??_vfpfcnvrt+2
  4865  00342C  CFDD F07B          	movff	postdec2,??_vfpfcnvrt+3
  4866  003430  C07A  F08F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4867  003434  C07B  F090         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4868  003438  0100               	movlb	0	; () banked
  4869  00343A  6B91               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4870  00343C  6B92               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4871  00343E  6B93               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4872  003440  6B94               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4873  003442  6B95               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4874  003444  6B96               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  4878  003446  C072  F027         	movff	vfpfcnvrt@fp,utoa@fp
  4879  00344A  C073  F028         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4880  00344E  C08F  F029         	movff	vfpfcnvrt@llu,utoa@d
  4881  003452  C090  F02A         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4882  003456  C091  F02B         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4883  00345A  C092  F02C         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4884  00345E  C093  F02D         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4885  003462  C094  F02E         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4886  003466  C095  F02F         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4887  00346A  C096  F030         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4888  00346E  EC55  F021         	call	_utoa	;wreg free
  4889  003472  C027  F072         	movff	?_utoa,?_vfpfcnvrt
  4890  003476  C028  F073         	movff	?_utoa+1,?_vfpfcnvrt+1
  4891  00347A  0012               	return	
  4892  00347C                     l4967:
  4893                           
  4894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  4895  00347C  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4896  003480  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4897  003484  CFDE F00C          	movff	postinc2,strncmp@_l
  4898  003488  CFDD F00D          	movff	postdec2,strncmp@_l+1
  4899  00348C  0EFC               	movlw	low STR_27
  4900  00348E  6E0E               	movwf	strncmp@_r,c
  4901  003490  0E7F               	movlw	high STR_27
  4902  003492  6E0F               	movwf	strncmp@_r+1,c
  4903  003494  0E00               	movlw	0
  4904  003496  6E11               	movwf	strncmp@n+1,c
  4905  003498  0E02               	movlw	2
  4906  00349A  6E10               	movwf	strncmp@n,c
  4907  00349C  ECE5  F027         	call	_strncmp	;wreg free
  4908  0034A0  500C               	movf	?_strncmp,w,c
  4909  0034A2  100D               	iorwf	?_strncmp+1,w,c
  4910  0034A4  A4D8               	btfss	status,2,c
  4911  0034A6  D02A               	goto	l4975
  4912                           
  4913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  4914  0034A8  0E02               	movlw	2
  4915  0034AA  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4916  0034AE  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4917  0034B2  26DE               	addwf	postinc2,f,c
  4918  0034B4  0E00               	movlw	0
  4919  0034B6  22DD               	addwfc	postdec2,f,c
  4920                           
  4921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
  4922  0034B8  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4923  0034BC  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4924  0034C0  CFDF F078          	movff	indf2,??_vfpfcnvrt
  4925  0034C4  0E04               	movlw	4
  4926  0034C6  26DE               	addwf	postinc2,f,c
  4927  0034C8  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  4928  0034CC  0E00               	movlw	0
  4929  0034CE  22DD               	addwfc	postdec2,f,c
  4930  0034D0  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4931  0034D4  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4932  0034D8  CFDE F07A          	movff	postinc2,??_vfpfcnvrt+2
  4933  0034DC  CFDE F07B          	movff	postinc2,??_vfpfcnvrt+3
  4934  0034E0  CFDE F07C          	movff	postinc2,??_vfpfcnvrt+4
  4935  0034E4  CFDE F07D          	movff	postinc2,??_vfpfcnvrt+5
  4936  0034E8  0100               	movlb	0	; () banked
  4937  0034EA  517A               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  4938  0034EC  6F8F               	movwf	vfpfcnvrt@llu& (0+255),b
  4939  0034EE  517B               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4940  0034F0  6F90               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
  4941  0034F2  517C               	movf	(??_vfpfcnvrt+4)& (0+255),w,b
  4942  0034F4  6F91               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
  4943  0034F6  517D               	movf	(??_vfpfcnvrt+5)& (0+255),w,b
  4944  0034F8  6F92               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
  4945  0034FA  D7A1               	goto	L1
  4946  0034FC                     l4975:
  4947                           
  4948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4949  0034FC  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4950  003500  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4951  003504  CFDE FFF6          	movff	postinc2,tblptrl
  4952  003508  CFDD FFF7          	movff	postdec2,tblptrh
  4953  00350C                     	if	0	;tblptru may be non-zero
  4954  00350C                     	endif
  4955  00350C                     	if	0	;tblptru may be non-zero
  4956  00350C                     	endif
  4957  00350C  0008               	tblrd		*
  4958  00350E  50F5               	movf	tablat,w,c
  4959  003510  0A25               	xorlw	37
  4960  003512  A4D8               	btfss	status,2,c
  4961  003514  D017               	goto	l4985
  4962                           
  4963                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4964  003516  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4965  00351A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4966  00351E  2ADE               	incf	postinc2,f,c
  4967  003520  0E00               	movlw	0
  4968  003522  22DD               	addwfc	postdec2,f,c
  4969                           
  4970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4971  003524  0E00               	movlw	0
  4972  003526  6E0D               	movwf	fputc@c+1,c
  4973  003528  0E25               	movlw	37
  4974  00352A  6E0C               	movwf	fputc@c,c
  4975  00352C  C072  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  4976  003530  C073  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4977  003534  EC3A  F028         	call	_fputc	;wreg free
  4978  003538                     l4981:
  4979                           
  4980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4981  003538  0E00               	movlw	0
  4982  00353A  0100               	movlb	0	; () banked
  4983  00353C  6F73               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4984  00353E  0E01               	movlw	1
  4985  003540  6F72               	movwf	?_vfpfcnvrt& (0+255),b
  4986  003542  0012               	return	
  4987  003544                     l4985:
  4988                           
  4989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4990  003544  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4991  003548  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4992  00354C  2ADE               	incf	postinc2,f,c
  4993  00354E  0E00               	movlw	0
  4994  003550  22DD               	addwfc	postdec2,f,c
  4995                           
  4996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4997  003552  0E00               	movlw	0
  4998  003554  0100               	movlb	0	; () banked
  4999  003556  6F73               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5000  003558  0E00               	movlw	0
  5001  00355A  6F72               	movwf	?_vfpfcnvrt& (0+255),b
  5002  00355C  0012               	return	
  5003  00355E                     l4991:
  5004                           
  5005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5006  00355E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5007  003562  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5008  003566  CFDE FFF6          	movff	postinc2,tblptrl
  5009  00356A  CFDD FFF7          	movff	postdec2,tblptrh
  5010  00356E                     	if	0	;tblptru may be non-zero
  5011  00356E                     	endif
  5012  00356E                     	if	0	;tblptru may be non-zero
  5013  00356E                     	endif
  5014  00356E  0008               	tblrd		*
  5015  003570  50F5               	movf	tablat,w,c
  5016  003572  6E0C               	movwf	fputc@c,c
  5017  003574  6A0D               	clrf	fputc@c+1,c
  5018  003576  C072  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  5019  00357A  C073  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5020  00357E  EC3A  F028         	call	_fputc	;wreg free
  5021                           
  5022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5023  003582  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5024  003586  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5025  00358A  2ADE               	incf	postinc2,f,c
  5026  00358C  0E00               	movlw	0
  5027  00358E  22DD               	addwfc	postdec2,f,c
  5028  003590  D7D3               	goto	l4981
  5029  003592                     __end_of_vfpfcnvrt:
  5030                           	opt callstack 0
  5031                           
  5032 ;; *************** function _utoa *****************
  5033 ;; Defined at:
  5034 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  5037 ;;		 -> sprintf@f(6), 
  5038 ;;  d               8   40[COMRAM] unsigned long long 
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;  n               8    4[BANK0 ] unsigned long long 
  5041 ;;  i               2   12[BANK0 ] int 
  5042 ;;  w               2    2[BANK0 ] int 
  5043 ;;  p               2    0[BANK0 ] int 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  2   38[COMRAM] int 
  5046 ;; Registers used:
  5047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5053 ;;      Params:        10       0       0       0       0       0       0       0       0
  5054 ;;      Locals:         0      14       0       0       0       0       0       0       0
  5055 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5056 ;;      Totals:        18      14       0       0       0       0       0       0       0
  5057 ;;Total ram usage:       32 bytes
  5058 ;; Hardware stack levels used:    1
  5059 ;; Hardware stack levels required when called:   11
  5060 ;; This function calls:
  5061 ;;		___lodiv
  5062 ;;		___lomod
  5063 ;;		_pad
  5064 ;; This function is called by:
  5065 ;;		_vfpfcnvrt
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           	psect	text22
  5070  0042AA                     __ptext22:
  5071                           	opt callstack 0
  5072  0042AA                     _utoa:
  5073                           	opt callstack 15
  5074                           
  5075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  5076                           
  5077                           ;incstack = 0
  5078  0042AA  AE3D               	btfss	_prec+1,7,c
  5079                           
  5080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  5081  0042AC  923E               	bcf	_flags,1,c
  5082                           
  5083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  5084  0042AE  BE3D               	btfsc	_prec+1,7,c
  5085  0042B0  D005               	goto	u3850
  5086  0042B2  503D               	movf	_prec+1,w,c
  5087  0042B4  E109               	bnz	l762
  5088  0042B6  043C               	decf	_prec,w,c
  5089  0042B8  B0D8               	btfsc	status,0,c
  5090  0042BA  D006               	goto	l762
  5091  0042BC                     u3850:
  5092  0042BC  0E00               	movlw	0
  5093  0042BE  0100               	movlb	0	; () banked
  5094  0042C0  6F61               	movwf	(utoa@p+1)& (0+255),b
  5095  0042C2  0E01               	movlw	1
  5096  0042C4  6F60               	movwf	utoa@p& (0+255),b
  5097  0042C6  D004               	goto	l764
  5098  0042C8                     l762:
  5099  0042C8  C03C  F060         	movff	_prec,utoa@p
  5100  0042CC  C03D  F061         	movff	_prec+1,utoa@p+1
  5101  0042D0                     l764:
  5102                           
  5103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  5104  0042D0  C0E9  F062         	movff	_width,utoa@w
  5105  0042D4  C0EA  F063         	movff	_width+1,utoa@w+1
  5106                           
  5107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  5108  0042D8  C029  F064         	movff	utoa@d,utoa@n
  5109  0042DC  C02A  F065         	movff	utoa@d+1,utoa@n+1
  5110  0042E0  C02B  F066         	movff	utoa@d+2,utoa@n+2
  5111  0042E4  C02C  F067         	movff	utoa@d+3,utoa@n+3
  5112  0042E8  C02D  F068         	movff	utoa@d+4,utoa@n+4
  5113  0042EC  C02E  F069         	movff	utoa@d+5,utoa@n+5
  5114  0042F0  C02F  F06A         	movff	utoa@d+6,utoa@n+6
  5115  0042F4  C030  F06B         	movff	utoa@d+7,utoa@n+7
  5116                           
  5117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  5118  0042F8  0E00               	movlw	0
  5119  0042FA  0100               	movlb	0	; () banked
  5120  0042FC  6F6D               	movwf	(utoa@i+1)& (0+255),b
  5121  0042FE  0E1F               	movlw	31
  5122  004300  6F6C               	movwf	utoa@i& (0+255),b
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  5126  004302  0E00               	movlw	0
  5127  004304  0101               	movlb	1	; () banked
  5128  004306  6FE3               	movwf	(_dbuf+31)& (0+255),b
  5129                           
  5130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5131  004308  D077               	goto	l4529
  5132  00430A                     l4519:
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  5136  00430A  076C               	decf	utoa@i& (0+255),f,b
  5137  00430C  A0D8               	btfss	status,0,c
  5138  00430E  076D               	decf	(utoa@i+1)& (0+255),f,b
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  5142  004310  0EC4               	movlw	low _dbuf
  5143  004312  256C               	addwf	utoa@i& (0+255),w,b
  5144  004314  6ED9               	movwf	fsr2l,c
  5145  004316  0E01               	movlw	high _dbuf
  5146  004318  216D               	addwfc	(utoa@i+1)& (0+255),w,b
  5147  00431A  6EDA               	movwf	fsr2h,c
  5148  00431C  C064  F00C         	movff	utoa@n,___lomod@dividend
  5149  004320  C065  F00D         	movff	utoa@n+1,___lomod@dividend+1
  5150  004324  C066  F00E         	movff	utoa@n+2,___lomod@dividend+2
  5151  004328  C067  F00F         	movff	utoa@n+3,___lomod@dividend+3
  5152  00432C  C068  F010         	movff	utoa@n+4,___lomod@dividend+4
  5153  004330  C069  F011         	movff	utoa@n+5,___lomod@dividend+5
  5154  004334  C06A  F012         	movff	utoa@n+6,___lomod@dividend+6
  5155  004338  C06B  F013         	movff	utoa@n+7,___lomod@dividend+7
  5156  00433C  0E0A               	movlw	10
  5157  00433E  6E14               	movwf	___lomod@divisor,c
  5158  004340  0E00               	movlw	0
  5159  004342  6E15               	movwf	___lomod@divisor+1,c
  5160  004344  0E00               	movlw	0
  5161  004346  6E16               	movwf	___lomod@divisor+2,c
  5162  004348  0E00               	movlw	0
  5163  00434A  6E17               	movwf	___lomod@divisor+3,c
  5164  00434C  0E00               	movlw	0
  5165  00434E  6E18               	movwf	___lomod@divisor+4,c
  5166  004350  0E00               	movlw	0
  5167  004352  6E19               	movwf	___lomod@divisor+5,c
  5168  004354  0E00               	movlw	0
  5169  004356  6E1A               	movwf	___lomod@divisor+6,c
  5170  004358  0E00               	movlw	0
  5171  00435A  6E1B               	movwf	___lomod@divisor+7,c
  5172  00435C  EC8E  F027         	call	___lomod	;wreg free
  5173  004360  C00C  F031         	movff	?___lomod,??_utoa
  5174  004364  C00D  F032         	movff	?___lomod+1,??_utoa+1
  5175  004368  C00E  F033         	movff	?___lomod+2,??_utoa+2
  5176  00436C  C00F  F034         	movff	?___lomod+3,??_utoa+3
  5177  004370  C010  F035         	movff	?___lomod+4,??_utoa+4
  5178  004374  C011  F036         	movff	?___lomod+5,??_utoa+5
  5179  004378  C012  F037         	movff	?___lomod+6,??_utoa+6
  5180  00437C  C013  F038         	movff	?___lomod+7,??_utoa+7
  5181  004380  5031               	movf	??_utoa,w,c
  5182  004382  0F30               	addlw	48
  5183  004384  6EDF               	movwf	indf2,c
  5184                           
  5185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  5186  004386  0100               	movlb	0	; () banked
  5187  004388  0760               	decf	utoa@p& (0+255),f,b
  5188  00438A  A0D8               	btfss	status,0,c
  5189  00438C  0761               	decf	(utoa@p+1)& (0+255),f,b
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  5193  00438E  0762               	decf	utoa@w& (0+255),f,b
  5194  004390  A0D8               	btfss	status,0,c
  5195  004392  0763               	decf	(utoa@w+1)& (0+255),f,b
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  5199  004394  C064  F00C         	movff	utoa@n,___lodiv@dividend
  5200  004398  C065  F00D         	movff	utoa@n+1,___lodiv@dividend+1
  5201  00439C  C066  F00E         	movff	utoa@n+2,___lodiv@dividend+2
  5202  0043A0  C067  F00F         	movff	utoa@n+3,___lodiv@dividend+3
  5203  0043A4  C068  F010         	movff	utoa@n+4,___lodiv@dividend+4
  5204  0043A8  C069  F011         	movff	utoa@n+5,___lodiv@dividend+5
  5205  0043AC  C06A  F012         	movff	utoa@n+6,___lodiv@dividend+6
  5206  0043B0  C06B  F013         	movff	utoa@n+7,___lodiv@dividend+7
  5207  0043B4  0E0A               	movlw	10
  5208  0043B6  6E14               	movwf	___lodiv@divisor,c
  5209  0043B8  0E00               	movlw	0
  5210  0043BA  6E15               	movwf	___lodiv@divisor+1,c
  5211  0043BC  0E00               	movlw	0
  5212  0043BE  6E16               	movwf	___lodiv@divisor+2,c
  5213  0043C0  0E00               	movlw	0
  5214  0043C2  6E17               	movwf	___lodiv@divisor+3,c
  5215  0043C4  0E00               	movlw	0
  5216  0043C6  6E18               	movwf	___lodiv@divisor+4,c
  5217  0043C8  0E00               	movlw	0
  5218  0043CA  6E19               	movwf	___lodiv@divisor+5,c
  5219  0043CC  0E00               	movlw	0
  5220  0043CE  6E1A               	movwf	___lodiv@divisor+6,c
  5221  0043D0  0E00               	movlw	0
  5222  0043D2  6E1B               	movwf	___lodiv@divisor+7,c
  5223  0043D4  EC70  F026         	call	___lodiv	;wreg free
  5224  0043D8  C00C  F064         	movff	?___lodiv,utoa@n
  5225  0043DC  C00D  F065         	movff	?___lodiv+1,utoa@n+1
  5226  0043E0  C00E  F066         	movff	?___lodiv+2,utoa@n+2
  5227  0043E4  C00F  F067         	movff	?___lodiv+3,utoa@n+3
  5228  0043E8  C010  F068         	movff	?___lodiv+4,utoa@n+4
  5229  0043EC  C011  F069         	movff	?___lodiv+5,utoa@n+5
  5230  0043F0  C012  F06A         	movff	?___lodiv+6,utoa@n+6
  5231  0043F4  C013  F06B         	movff	?___lodiv+7,utoa@n+7
  5232  0043F8                     l4529:
  5233                           
  5234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5235  0043F8  0100               	movlb	0	; () banked
  5236  0043FA  516C               	movf	utoa@i& (0+255),w,b
  5237  0043FC  116D               	iorwf	(utoa@i+1)& (0+255),w,b
  5238  0043FE  B4D8               	btfsc	status,2,c
  5239  004400  D01A               	goto	u3900
  5240                           
  5241                           ; BSR set to: 0
  5242  004402  5164               	movf	utoa@n& (0+255),w,b
  5243  004404  1165               	iorwf	(utoa@n+1)& (0+255),w,b
  5244  004406  1166               	iorwf	(utoa@n+2)& (0+255),w,b
  5245  004408  1167               	iorwf	(utoa@n+3)& (0+255),w,b
  5246  00440A  1168               	iorwf	(utoa@n+4)& (0+255),w,b
  5247  00440C  1169               	iorwf	(utoa@n+5)& (0+255),w,b
  5248  00440E  116A               	iorwf	(utoa@n+6)& (0+255),w,b
  5249  004410  116B               	iorwf	(utoa@n+7)& (0+255),w,b
  5250  004412  A4D8               	btfss	status,2,c
  5251  004414  D77A               	goto	l4519
  5252                           
  5253                           ; BSR set to: 0
  5254  004416  BF61               	btfsc	(utoa@p+1)& (0+255),7,b
  5255  004418  D005               	goto	u3880
  5256  00441A  5161               	movf	(utoa@p+1)& (0+255),w,b
  5257  00441C  E102               	bnz	u3881
  5258  00441E  0560               	decf	utoa@p& (0+255),w,b
  5259  004420  B0D8               	btfsc	status,0,c
  5260  004422                     u3881:
  5261  004422  D773               	goto	l4519
  5262  004424                     u3880:
  5263                           
  5264                           ; BSR set to: 0
  5265  004424  BF63               	btfsc	(utoa@w+1)& (0+255),7,b
  5266  004426  D007               	goto	u3900
  5267  004428  5163               	movf	(utoa@w+1)& (0+255),w,b
  5268  00442A  E103               	bnz	u3890
  5269  00442C  0562               	decf	utoa@w& (0+255),w,b
  5270  00442E  A0D8               	btfss	status,0,c
  5271  004430  D002               	goto	u3900
  5272  004432                     u3890:
  5273                           
  5274                           ; BSR set to: 0
  5275  004432  B23E               	btfsc	_flags,1,c
  5276  004434  D76A               	goto	l4519
  5277  004436                     u3900:
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  5281  004436  C027  F01C         	movff	utoa@fp,pad@fp
  5282  00443A  C028  F01D         	movff	utoa@fp+1,pad@fp+1
  5283  00443E  0EC4               	movlw	low _dbuf
  5284  004440  256C               	addwf	utoa@i& (0+255),w,b
  5285  004442  6E1E               	movwf	pad@buf,c
  5286  004444  0E01               	movlw	high _dbuf
  5287  004446  216D               	addwfc	(utoa@i+1)& (0+255),w,b
  5288  004448  6E1F               	movwf	pad@buf+1,c
  5289  00444A  C062  F020         	movff	utoa@w,pad@p
  5290  00444E  C063  F021         	movff	utoa@w+1,pad@p+1
  5291  004452  EC8A  F028         	call	_pad	;wreg free
  5292  004456  C01C  F027         	movff	?_pad,?_utoa
  5293  00445A  C01D  F028         	movff	?_pad+1,?_utoa+1
  5294  00445E  0012               	return		;funcret
  5295  004460                     __end_of_utoa:
  5296                           	opt callstack 0
  5297                           
  5298 ;; *************** function ___lomod *****************
  5299 ;; Defined at:
  5300 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;  dividend        8   11[COMRAM] unsigned long long 
  5303 ;;  divisor         8   19[COMRAM] unsigned long long 
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;  counter         1   27[COMRAM] unsigned char 
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  8   11[COMRAM] unsigned long long 
  5308 ;; Registers used:
  5309 ;;		wreg, status,2, status,0
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5315 ;;      Params:        16       0       0       0       0       0       0       0       0
  5316 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5317 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5318 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5319 ;;Total ram usage:       17 bytes
  5320 ;; Hardware stack levels used:    1
  5321 ;; Hardware stack levels required when called:    7
  5322 ;; This function calls:
  5323 ;;		Nothing
  5324 ;; This function is called by:
  5325 ;;		_utoa
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text23
  5330  004F1C                     __ptext23:
  5331                           	opt callstack 0
  5332  004F1C                     ___lomod:
  5333                           	opt callstack 18
  5334                           
  5335                           ;incstack = 0
  5336  004F1C  5014               	movf	___lomod@divisor,w,c
  5337  004F1E  1015               	iorwf	___lomod@divisor+1,w,c
  5338  004F20  1016               	iorwf	___lomod@divisor+2,w,c
  5339  004F22  1017               	iorwf	___lomod@divisor+3,w,c
  5340  004F24  1018               	iorwf	___lomod@divisor+4,w,c
  5341  004F26  1019               	iorwf	___lomod@divisor+5,w,c
  5342  004F28  101A               	iorwf	___lomod@divisor+6,w,c
  5343  004F2A  101B               	iorwf	___lomod@divisor+7,w,c
  5344  004F2C  B4D8               	btfsc	status,2,c
  5345  004F2E  D03C               	goto	l1243
  5346  004F30  0E01               	movlw	1
  5347  004F32  6E1C               	movwf	___lomod@counter,c
  5348  004F34  D00A               	goto	l4421
  5349  004F36                     l4419:
  5350  004F36  90D8               	bcf	status,0,c
  5351  004F38  3614               	rlcf	___lomod@divisor,f,c
  5352  004F3A  3615               	rlcf	___lomod@divisor+1,f,c
  5353  004F3C  3616               	rlcf	___lomod@divisor+2,f,c
  5354  004F3E  3617               	rlcf	___lomod@divisor+3,f,c
  5355  004F40  3618               	rlcf	___lomod@divisor+4,f,c
  5356  004F42  3619               	rlcf	___lomod@divisor+5,f,c
  5357  004F44  361A               	rlcf	___lomod@divisor+6,f,c
  5358  004F46  361B               	rlcf	___lomod@divisor+7,f,c
  5359  004F48  2A1C               	incf	___lomod@counter,f,c
  5360  004F4A                     l4421:
  5361  004F4A  AE1B               	btfss	___lomod@divisor+7,7,c
  5362  004F4C  D7F4               	goto	l4419
  5363  004F4E                     u3660:
  5364  004F4E  5014               	movf	___lomod@divisor,w,c
  5365  004F50  5C0C               	subwf	___lomod@dividend,w,c
  5366  004F52  5015               	movf	___lomod@divisor+1,w,c
  5367  004F54  580D               	subwfb	___lomod@dividend+1,w,c
  5368  004F56  5016               	movf	___lomod@divisor+2,w,c
  5369  004F58  580E               	subwfb	___lomod@dividend+2,w,c
  5370  004F5A  5017               	movf	___lomod@divisor+3,w,c
  5371  004F5C  580F               	subwfb	___lomod@dividend+3,w,c
  5372  004F5E  5018               	movf	___lomod@divisor+4,w,c
  5373  004F60  5810               	subwfb	___lomod@dividend+4,w,c
  5374  004F62  5019               	movf	___lomod@divisor+5,w,c
  5375  004F64  5811               	subwfb	___lomod@dividend+5,w,c
  5376  004F66  501A               	movf	___lomod@divisor+6,w,c
  5377  004F68  5812               	subwfb	___lomod@dividend+6,w,c
  5378  004F6A  501B               	movf	___lomod@divisor+7,w,c
  5379  004F6C  5813               	subwfb	___lomod@dividend+7,w,c
  5380  004F6E  A0D8               	btfss	status,0,c
  5381  004F70  D010               	goto	l4427
  5382  004F72  5014               	movf	___lomod@divisor,w,c
  5383  004F74  5E0C               	subwf	___lomod@dividend,f,c
  5384  004F76  5015               	movf	___lomod@divisor+1,w,c
  5385  004F78  5A0D               	subwfb	___lomod@dividend+1,f,c
  5386  004F7A  5016               	movf	___lomod@divisor+2,w,c
  5387  004F7C  5A0E               	subwfb	___lomod@dividend+2,f,c
  5388  004F7E  5017               	movf	___lomod@divisor+3,w,c
  5389  004F80  5A0F               	subwfb	___lomod@dividend+3,f,c
  5390  004F82  5018               	movf	___lomod@divisor+4,w,c
  5391  004F84  5A10               	subwfb	___lomod@dividend+4,f,c
  5392  004F86  5019               	movf	___lomod@divisor+5,w,c
  5393  004F88  5A11               	subwfb	___lomod@dividend+5,f,c
  5394  004F8A  501A               	movf	___lomod@divisor+6,w,c
  5395  004F8C  5A12               	subwfb	___lomod@dividend+6,f,c
  5396  004F8E  501B               	movf	___lomod@divisor+7,w,c
  5397  004F90  5A13               	subwfb	___lomod@dividend+7,f,c
  5398  004F92                     l4427:
  5399  004F92  90D8               	bcf	status,0,c
  5400  004F94  321B               	rrcf	___lomod@divisor+7,f,c
  5401  004F96  321A               	rrcf	___lomod@divisor+6,f,c
  5402  004F98  3219               	rrcf	___lomod@divisor+5,f,c
  5403  004F9A  3218               	rrcf	___lomod@divisor+4,f,c
  5404  004F9C  3217               	rrcf	___lomod@divisor+3,f,c
  5405  004F9E  3216               	rrcf	___lomod@divisor+2,f,c
  5406  004FA0  3215               	rrcf	___lomod@divisor+1,f,c
  5407  004FA2  3214               	rrcf	___lomod@divisor,f,c
  5408  004FA4  2E1C               	decfsz	___lomod@counter,f,c
  5409  004FA6  D7D3               	goto	u3660
  5410  004FA8                     l1243:
  5411  004FA8  C00C  F00C         	movff	___lomod@dividend,?___lomod
  5412  004FAC  C00D  F00D         	movff	___lomod@dividend+1,?___lomod+1
  5413  004FB0  C00E  F00E         	movff	___lomod@dividend+2,?___lomod+2
  5414  004FB4  C00F  F00F         	movff	___lomod@dividend+3,?___lomod+3
  5415  004FB8  C010  F010         	movff	___lomod@dividend+4,?___lomod+4
  5416  004FBC  C011  F011         	movff	___lomod@dividend+5,?___lomod+5
  5417  004FC0  C012  F012         	movff	___lomod@dividend+6,?___lomod+6
  5418  004FC4  C013  F013         	movff	___lomod@dividend+7,?___lomod+7
  5419  004FC8  0012               	return		;funcret
  5420  004FCA                     __end_of___lomod:
  5421                           	opt callstack 0
  5422                           
  5423 ;; *************** function ___lodiv *****************
  5424 ;; Defined at:
  5425 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;  dividend        8   11[COMRAM] unsigned long long 
  5428 ;;  divisor         8   19[COMRAM] unsigned long long 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;  quotient        8   27[COMRAM] unsigned long long 
  5431 ;;  counter         1   35[COMRAM] unsigned char 
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  8   11[COMRAM] unsigned long long 
  5434 ;; Registers used:
  5435 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5441 ;;      Params:        16       0       0       0       0       0       0       0       0
  5442 ;;      Locals:         9       0       0       0       0       0       0       0       0
  5443 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5444 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5445 ;;Total ram usage:       25 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:    7
  5448 ;; This function calls:
  5449 ;;		Nothing
  5450 ;; This function is called by:
  5451 ;;		_utoa
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           	psect	text24
  5456  004CE0                     __ptext24:
  5457                           	opt callstack 0
  5458  004CE0                     ___lodiv:
  5459                           	opt callstack 18
  5460                           
  5461                           ;incstack = 0
  5462  004CE0  EE20  F01C         	lfsr	2,___lodiv@quotient
  5463  004CE4  0E07               	movlw	7
  5464  004CE6                     u3611:
  5465  004CE6  6ADE               	clrf	postinc2,c
  5466  004CE8  06E8               	decf	wreg,f,c
  5467  004CEA  E2FD               	bc	u3611
  5468  004CEC  5014               	movf	___lodiv@divisor,w,c
  5469  004CEE  1015               	iorwf	___lodiv@divisor+1,w,c
  5470  004CF0  1016               	iorwf	___lodiv@divisor+2,w,c
  5471  004CF2  1017               	iorwf	___lodiv@divisor+3,w,c
  5472  004CF4  1018               	iorwf	___lodiv@divisor+4,w,c
  5473  004CF6  1019               	iorwf	___lodiv@divisor+5,w,c
  5474  004CF8  101A               	iorwf	___lodiv@divisor+6,w,c
  5475  004CFA  101B               	iorwf	___lodiv@divisor+7,w,c
  5476  004CFC  B4D8               	btfsc	status,2,c
  5477  004CFE  D046               	goto	l1233
  5478  004D00  0E01               	movlw	1
  5479  004D02  6E24               	movwf	___lodiv@counter,c
  5480  004D04  D00A               	goto	l4401
  5481  004D06                     l4399:
  5482  004D06  90D8               	bcf	status,0,c
  5483  004D08  3614               	rlcf	___lodiv@divisor,f,c
  5484  004D0A  3615               	rlcf	___lodiv@divisor+1,f,c
  5485  004D0C  3616               	rlcf	___lodiv@divisor+2,f,c
  5486  004D0E  3617               	rlcf	___lodiv@divisor+3,f,c
  5487  004D10  3618               	rlcf	___lodiv@divisor+4,f,c
  5488  004D12  3619               	rlcf	___lodiv@divisor+5,f,c
  5489  004D14  361A               	rlcf	___lodiv@divisor+6,f,c
  5490  004D16  361B               	rlcf	___lodiv@divisor+7,f,c
  5491  004D18  2A24               	incf	___lodiv@counter,f,c
  5492  004D1A                     l4401:
  5493  004D1A  AE1B               	btfss	___lodiv@divisor+7,7,c
  5494  004D1C  D7F4               	goto	l4399
  5495  004D1E                     u3630:
  5496  004D1E  90D8               	bcf	status,0,c
  5497  004D20  361C               	rlcf	___lodiv@quotient,f,c
  5498  004D22  361D               	rlcf	___lodiv@quotient+1,f,c
  5499  004D24  361E               	rlcf	___lodiv@quotient+2,f,c
  5500  004D26  361F               	rlcf	___lodiv@quotient+3,f,c
  5501  004D28  3620               	rlcf	___lodiv@quotient+4,f,c
  5502  004D2A  3621               	rlcf	___lodiv@quotient+5,f,c
  5503  004D2C  3622               	rlcf	___lodiv@quotient+6,f,c
  5504  004D2E  3623               	rlcf	___lodiv@quotient+7,f,c
  5505  004D30  5014               	movf	___lodiv@divisor,w,c
  5506  004D32  5C0C               	subwf	___lodiv@dividend,w,c
  5507  004D34  5015               	movf	___lodiv@divisor+1,w,c
  5508  004D36  580D               	subwfb	___lodiv@dividend+1,w,c
  5509  004D38  5016               	movf	___lodiv@divisor+2,w,c
  5510  004D3A  580E               	subwfb	___lodiv@dividend+2,w,c
  5511  004D3C  5017               	movf	___lodiv@divisor+3,w,c
  5512  004D3E  580F               	subwfb	___lodiv@dividend+3,w,c
  5513  004D40  5018               	movf	___lodiv@divisor+4,w,c
  5514  004D42  5810               	subwfb	___lodiv@dividend+4,w,c
  5515  004D44  5019               	movf	___lodiv@divisor+5,w,c
  5516  004D46  5811               	subwfb	___lodiv@dividend+5,w,c
  5517  004D48  501A               	movf	___lodiv@divisor+6,w,c
  5518  004D4A  5812               	subwfb	___lodiv@dividend+6,w,c
  5519  004D4C  501B               	movf	___lodiv@divisor+7,w,c
  5520  004D4E  5813               	subwfb	___lodiv@dividend+7,w,c
  5521  004D50  A0D8               	btfss	status,0,c
  5522  004D52  D011               	goto	l4411
  5523  004D54  5014               	movf	___lodiv@divisor,w,c
  5524  004D56  5E0C               	subwf	___lodiv@dividend,f,c
  5525  004D58  5015               	movf	___lodiv@divisor+1,w,c
  5526  004D5A  5A0D               	subwfb	___lodiv@dividend+1,f,c
  5527  004D5C  5016               	movf	___lodiv@divisor+2,w,c
  5528  004D5E  5A0E               	subwfb	___lodiv@dividend+2,f,c
  5529  004D60  5017               	movf	___lodiv@divisor+3,w,c
  5530  004D62  5A0F               	subwfb	___lodiv@dividend+3,f,c
  5531  004D64  5018               	movf	___lodiv@divisor+4,w,c
  5532  004D66  5A10               	subwfb	___lodiv@dividend+4,f,c
  5533  004D68  5019               	movf	___lodiv@divisor+5,w,c
  5534  004D6A  5A11               	subwfb	___lodiv@dividend+5,f,c
  5535  004D6C  501A               	movf	___lodiv@divisor+6,w,c
  5536  004D6E  5A12               	subwfb	___lodiv@dividend+6,f,c
  5537  004D70  501B               	movf	___lodiv@divisor+7,w,c
  5538  004D72  5A13               	subwfb	___lodiv@dividend+7,f,c
  5539  004D74  801C               	bsf	___lodiv@quotient,0,c
  5540  004D76                     l4411:
  5541  004D76  90D8               	bcf	status,0,c
  5542  004D78  321B               	rrcf	___lodiv@divisor+7,f,c
  5543  004D7A  321A               	rrcf	___lodiv@divisor+6,f,c
  5544  004D7C  3219               	rrcf	___lodiv@divisor+5,f,c
  5545  004D7E  3218               	rrcf	___lodiv@divisor+4,f,c
  5546  004D80  3217               	rrcf	___lodiv@divisor+3,f,c
  5547  004D82  3216               	rrcf	___lodiv@divisor+2,f,c
  5548  004D84  3215               	rrcf	___lodiv@divisor+1,f,c
  5549  004D86  3214               	rrcf	___lodiv@divisor,f,c
  5550  004D88  2E24               	decfsz	___lodiv@counter,f,c
  5551  004D8A  D7C9               	goto	u3630
  5552  004D8C                     l1233:
  5553  004D8C  C01C  F00C         	movff	___lodiv@quotient,?___lodiv
  5554  004D90  C01D  F00D         	movff	___lodiv@quotient+1,?___lodiv+1
  5555  004D94  C01E  F00E         	movff	___lodiv@quotient+2,?___lodiv+2
  5556  004D98  C01F  F00F         	movff	___lodiv@quotient+3,?___lodiv+3
  5557  004D9C  C020  F010         	movff	___lodiv@quotient+4,?___lodiv+4
  5558  004DA0  C021  F011         	movff	___lodiv@quotient+5,?___lodiv+5
  5559  004DA4  C022  F012         	movff	___lodiv@quotient+6,?___lodiv+6
  5560  004DA8  C023  F013         	movff	___lodiv@quotient+7,?___lodiv+7
  5561  004DAC  0012               	return		;funcret
  5562  004DAE                     __end_of___lodiv:
  5563                           	opt callstack 0
  5564                           
  5565 ;; *************** function _strncmp *****************
  5566 ;; Defined at:
  5567 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  _l              2   11[COMRAM] PTR const unsigned char 
  5570 ;;		 -> STR_17(19), STR_16(24), STR_15(23), STR_14(13), 
  5571 ;;		 -> STR_13(19), STR_12(42), STR_11(34), STR_10(32), 
  5572 ;;		 -> STR_9(32), STR_8(37), STR_7(28), STR_6(33), 
  5573 ;;		 -> STR_5(29), STR_4(28), STR_3(36), STR_2(36), 
  5574 ;;		 -> STR_1(39), 
  5575 ;;  _r              2   13[COMRAM] PTR const unsigned char 
  5576 ;;		 -> STR_29(3), STR_24(3), STR_20(3), 
  5577 ;;  n               2   15[COMRAM] unsigned int 
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;  r               2   20[COMRAM] PTR const unsigned char 
  5580 ;;		 -> STR_29(3), STR_24(3), STR_20(3), 
  5581 ;;  l               2   18[COMRAM] PTR const unsigned char 
  5582 ;;		 -> STR_17(19), STR_16(24), STR_15(23), STR_14(13), 
  5583 ;;		 -> STR_13(19), STR_12(42), STR_11(34), STR_10(32), 
  5584 ;;		 -> STR_9(32), STR_8(37), STR_7(28), STR_6(33), 
  5585 ;;		 -> STR_5(29), STR_4(28), STR_3(36), STR_2(36), 
  5586 ;;		 -> STR_1(39), 
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  2   11[COMRAM] int 
  5589 ;; Registers used:
  5590 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5596 ;;      Params:         6       0       0       0       0       0       0       0       0
  5597 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5598 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5599 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5600 ;;Total ram usage:       11 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; Hardware stack levels required when called:    7
  5603 ;; This function calls:
  5604 ;;		Nothing
  5605 ;; This function is called by:
  5606 ;;		_vfpfcnvrt
  5607 ;; This function uses a non-reentrant model
  5608 ;;
  5609                           
  5610                           	psect	text25
  5611  004FCA                     __ptext25:
  5612                           	opt callstack 0
  5613  004FCA                     _strncmp:
  5614                           	opt callstack 19
  5615                           
  5616                           ;incstack = 0
  5617  004FCA  C00C  F013         	movff	strncmp@_l,strncmp@l
  5618  004FCE  C00D  F014         	movff	strncmp@_l+1,strncmp@l+1
  5619  004FD2  C00E  F015         	movff	strncmp@_r,strncmp@r
  5620  004FD6  C00F  F016         	movff	strncmp@_r+1,strncmp@r+1
  5621  004FDA  0610               	decf	strncmp@n,f,c
  5622  004FDC  A0D8               	btfss	status,0,c
  5623  004FDE  0611               	decf	strncmp@n+1,f,c
  5624  004FE0  2810               	incf	strncmp@n,w,c
  5625  004FE2  E10F               	bnz	l4551
  5626  004FE4  2811               	incf	strncmp@n+1,w,c
  5627  004FE6  A4D8               	btfss	status,2,c
  5628  004FE8  D00C               	goto	l4551
  5629  004FEA  0E00               	movlw	0
  5630  004FEC  6E0D               	movwf	?_strncmp+1,c
  5631  004FEE  0E00               	movlw	0
  5632  004FF0  6E0C               	movwf	?_strncmp,c
  5633  004FF2  0012               	return	
  5634  004FF4                     l4549:
  5635  004FF4  4A13               	infsnz	strncmp@l,f,c
  5636  004FF6  2A14               	incf	strncmp@l+1,f,c
  5637  004FF8  4A15               	infsnz	strncmp@r,f,c
  5638  004FFA  2A16               	incf	strncmp@r+1,f,c
  5639  004FFC  0610               	decf	strncmp@n,f,c
  5640  004FFE  A0D8               	btfss	status,0,c
  5641  005000  0611               	decf	strncmp@n+1,f,c
  5642  005002                     l4551:
  5643  005002  C013  FFF6         	movff	strncmp@l,tblptrl
  5644  005006  C014  FFF7         	movff	strncmp@l+1,tblptrh
  5645  00500A                     	if	0	;tblptru may be non-zero
  5646  00500A                     	endif
  5647  00500A                     	if	0	;tblptru may be non-zero
  5648  00500A                     	endif
  5649  00500A  0008               	tblrd		*
  5650  00500C  50F5               	movf	tablat,w,c
  5651  00500E  0900               	iorlw	0
  5652  005010  B4D8               	btfsc	status,2,c
  5653  005012  D01D               	goto	u3950
  5654  005014  C015  FFF6         	movff	strncmp@r,tblptrl
  5655  005018  C016  FFF7         	movff	strncmp@r+1,tblptrh
  5656  00501C                     	if	0	;tblptru may be non-zero
  5657  00501C                     	endif
  5658  00501C                     	if	0	;tblptru may be non-zero
  5659  00501C                     	endif
  5660  00501C  0008               	tblrd		*
  5661  00501E  50F5               	movf	tablat,w,c
  5662  005020  0900               	iorlw	0
  5663  005022  B4D8               	btfsc	status,2,c
  5664  005024  D014               	goto	u3950
  5665  005026  5010               	movf	strncmp@n,w,c
  5666  005028  1011               	iorwf	strncmp@n+1,w,c
  5667  00502A  B4D8               	btfsc	status,2,c
  5668  00502C  D010               	goto	u3950
  5669  00502E  C013  FFF6         	movff	strncmp@l,tblptrl
  5670  005032  C014  FFF7         	movff	strncmp@l+1,tblptrh
  5671  005036                     	if	0	;tblptru may be non-zero
  5672  005036                     	endif
  5673  005036                     	if	0	;tblptru may be non-zero
  5674  005036                     	endif
  5675  005036  0008               	tblrd		*
  5676  005038  CFF5 F012          	movff	tablat,??_strncmp
  5677  00503C  C015  FFF6         	movff	strncmp@r,tblptrl
  5678  005040  C016  FFF7         	movff	strncmp@r+1,tblptrh
  5679  005044                     	if	0	;tblptru may be non-zero
  5680  005044                     	endif
  5681  005044                     	if	0	;tblptru may be non-zero
  5682  005044                     	endif
  5683  005044  0008               	tblrd		*
  5684  005046  50F5               	movf	tablat,w,c
  5685  005048  1812               	xorwf	??_strncmp,w,c
  5686  00504A  B4D8               	btfsc	status,2,c
  5687  00504C  D7D3               	goto	l4549
  5688  00504E                     u3950:
  5689  00504E  C013  FFF6         	movff	strncmp@l,tblptrl
  5690  005052  C014  FFF7         	movff	strncmp@l+1,tblptrh
  5691  005056                     	if	0	;tblptru may be non-zero
  5692  005056                     	endif
  5693  005056                     	if	0	;tblptru may be non-zero
  5694  005056                     	endif
  5695  005056  0008               	tblrd		*
  5696  005058  CFF5 F012          	movff	tablat,??_strncmp
  5697  00505C  C015  FFF6         	movff	strncmp@r,tblptrl
  5698  005060  C016  FFF7         	movff	strncmp@r+1,tblptrh
  5699  005064                     	if	0	;tblptru may be non-zero
  5700  005064                     	endif
  5701  005064                     	if	0	;tblptru may be non-zero
  5702  005064                     	endif
  5703  005064  0008               	tblrd		*
  5704  005066  50F5               	movf	tablat,w,c
  5705  005068  5C12               	subwf	??_strncmp,w,c
  5706  00506A  6E0C               	movwf	?_strncmp,c
  5707  00506C  6A0D               	clrf	?_strncmp+1,c
  5708  00506E  A0D8               	btfss	status,0,c
  5709  005070  060D               	decf	?_strncmp+1,f,c
  5710  005072  0012               	return		;funcret
  5711  005074                     __end_of_strncmp:
  5712                           	opt callstack 0
  5713                           
  5714 ;; *************** function _dtoa *****************
  5715 ;; Defined at:
  5716 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  5719 ;;		 -> sprintf@f(6), 
  5720 ;;  d               8   40[COMRAM] long long 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;  n               8    8[BANK0 ] long long 
  5723 ;;  i               2   16[BANK0 ] int 
  5724 ;;  s               2    6[BANK0 ] int 
  5725 ;;  w               2    4[BANK0 ] int 
  5726 ;;  p               2    2[BANK0 ] int 
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  2   38[COMRAM] int 
  5729 ;; Registers used:
  5730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5736 ;;      Params:        10       0       0       0       0       0       0       0       0
  5737 ;;      Locals:         0      18       0       0       0       0       0       0       0
  5738 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5739 ;;      Totals:        18      18       0       0       0       0       0       0       0
  5740 ;;Total ram usage:       36 bytes
  5741 ;; Hardware stack levels used:    1
  5742 ;; Hardware stack levels required when called:   11
  5743 ;; This function calls:
  5744 ;;		___aodiv
  5745 ;;		___aomod
  5746 ;;		_abs
  5747 ;;		_pad
  5748 ;; This function is called by:
  5749 ;;		_vfpfcnvrt
  5750 ;; This function uses a non-reentrant model
  5751 ;;
  5752                           
  5753                           	psect	text26
  5754  003E7A                     __ptext26:
  5755                           	opt callstack 0
  5756  003E7A                     _dtoa:
  5757                           	opt callstack 15
  5758                           
  5759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5760                           
  5761                           ;incstack = 0
  5762  003E7A  C029  F068         	movff	dtoa@d,dtoa@n
  5763  003E7E  C02A  F069         	movff	dtoa@d+1,dtoa@n+1
  5764  003E82  C02B  F06A         	movff	dtoa@d+2,dtoa@n+2
  5765  003E86  C02C  F06B         	movff	dtoa@d+3,dtoa@n+3
  5766  003E8A  C02D  F06C         	movff	dtoa@d+4,dtoa@n+4
  5767  003E8E  C02E  F06D         	movff	dtoa@d+5,dtoa@n+5
  5768  003E92  C02F  F06E         	movff	dtoa@d+6,dtoa@n+6
  5769  003E96  C030  F06F         	movff	dtoa@d+7,dtoa@n+7
  5770                           
  5771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5772  003E9A  0100               	movlb	0	; () banked
  5773  003E9C  AF6F               	btfss	(dtoa@n+7)& (0+255),7,b
  5774  003E9E  D002               	goto	u3690
  5775  003EA0  0E01               	movlw	1
  5776  003EA2  D001               	goto	u3700
  5777  003EA4                     u3690:
  5778  003EA4  0E00               	movlw	0
  5779  003EA6                     u3700:
  5780  003EA6  6F66               	movwf	dtoa@s& (0+255),b
  5781  003EA8  6B67               	clrf	(dtoa@s+1)& (0+255),b
  5782                           
  5783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5784  003EAA  5166               	movf	dtoa@s& (0+255),w,b
  5785  003EAC  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  5786  003EAE  B4D8               	btfsc	status,2,c
  5787  003EB0  D010               	goto	l4451
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5791  003EB2  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
  5792  003EB4  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
  5793  003EB6  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
  5794  003EB8  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
  5795  003EBA  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
  5796  003EBC  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
  5797  003EBE  1F69               	comf	(dtoa@n+1)& (0+255),f,b
  5798  003EC0  6D68               	negf	dtoa@n& (0+255),b
  5799  003EC2  0E00               	movlw	0
  5800  003EC4  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
  5801  003EC6  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
  5802  003EC8  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
  5803  003ECA  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
  5804  003ECC  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
  5805  003ECE  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
  5806  003ED0  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
  5807  003ED2                     l4451:
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5811  003ED2  AE3D               	btfss	_prec+1,7,c
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5815  003ED4  923E               	bcf	_flags,1,c
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5819  003ED6  BE3D               	btfsc	_prec+1,7,c
  5820  003ED8  D005               	goto	u3730
  5821  003EDA  503D               	movf	_prec+1,w,c
  5822  003EDC  E108               	bnz	l737
  5823  003EDE  043C               	decf	_prec,w,c
  5824  003EE0  B0D8               	btfsc	status,0,c
  5825  003EE2  D005               	goto	l737
  5826  003EE4                     u3730:
  5827                           
  5828                           ; BSR set to: 0
  5829  003EE4  0E00               	movlw	0
  5830  003EE6  6F63               	movwf	(dtoa@p+1)& (0+255),b
  5831  003EE8  0E01               	movlw	1
  5832  003EEA  6F62               	movwf	dtoa@p& (0+255),b
  5833  003EEC  D004               	goto	l739
  5834  003EEE                     l737:
  5835                           
  5836                           ; BSR set to: 0
  5837  003EEE  C03C  F062         	movff	_prec,dtoa@p
  5838  003EF2  C03D  F063         	movff	_prec+1,dtoa@p+1
  5839  003EF6                     l739:
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5843  003EF6  C0E9  F064         	movff	_width,dtoa@w
  5844  003EFA  C0EA  F065         	movff	_width+1,dtoa@w+1
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5848  003EFE  5166               	movf	dtoa@s& (0+255),w,b
  5849  003F00  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  5850  003F02  A4D8               	btfss	status,2,c
  5851  003F04  D002               	goto	u3750
  5852                           
  5853                           ; BSR set to: 0
  5854  003F06  A43E               	btfss	_flags,2,c
  5855  003F08  D003               	goto	l4465
  5856  003F0A                     u3750:
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5860  003F0A  0764               	decf	dtoa@w& (0+255),f,b
  5861  003F0C  A0D8               	btfss	status,0,c
  5862  003F0E  0765               	decf	(dtoa@w+1)& (0+255),f,b
  5863  003F10                     l4465:
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5867  003F10  0E00               	movlw	0
  5868  003F12  6F71               	movwf	(dtoa@i+1)& (0+255),b
  5869  003F14  0E1F               	movlw	31
  5870  003F16  6F70               	movwf	dtoa@i& (0+255),b
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5874  003F18  0E00               	movlw	0
  5875  003F1A  0101               	movlb	1	; () banked
  5876  003F1C  6FE3               	movwf	(_dbuf+31)& (0+255),b
  5877                           
  5878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5879  003F1E  D07D               	goto	l4479
  5880  003F20                     l4469:
  5881                           
  5882                           ; BSR set to: 0
  5883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5884  003F20  0770               	decf	dtoa@i& (0+255),f,b
  5885  003F22  A0D8               	btfss	status,0,c
  5886  003F24  0771               	decf	(dtoa@i+1)& (0+255),f,b
  5887                           
  5888                           ; BSR set to: 0
  5889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5890  003F26  0EC4               	movlw	low _dbuf
  5891  003F28  2570               	addwf	dtoa@i& (0+255),w,b
  5892  003F2A  6ED9               	movwf	fsr2l,c
  5893  003F2C  0E01               	movlw	high _dbuf
  5894  003F2E  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  5895  003F30  6EDA               	movwf	fsr2h,c
  5896  003F32  C068  F00C         	movff	dtoa@n,___aomod@dividend
  5897  003F36  C069  F00D         	movff	dtoa@n+1,___aomod@dividend+1
  5898  003F3A  C06A  F00E         	movff	dtoa@n+2,___aomod@dividend+2
  5899  003F3E  C06B  F00F         	movff	dtoa@n+3,___aomod@dividend+3
  5900  003F42  C06C  F010         	movff	dtoa@n+4,___aomod@dividend+4
  5901  003F46  C06D  F011         	movff	dtoa@n+5,___aomod@dividend+5
  5902  003F4A  C06E  F012         	movff	dtoa@n+6,___aomod@dividend+6
  5903  003F4E  C06F  F013         	movff	dtoa@n+7,___aomod@dividend+7
  5904  003F52  0E0A               	movlw	10
  5905  003F54  6E14               	movwf	___aomod@divisor,c
  5906  003F56  0E00               	movlw	0
  5907  003F58  6E15               	movwf	___aomod@divisor+1,c
  5908  003F5A  0E00               	movlw	0
  5909  003F5C  6E16               	movwf	___aomod@divisor+2,c
  5910  003F5E  0E00               	movlw	0
  5911  003F60  6E17               	movwf	___aomod@divisor+3,c
  5912  003F62  0E00               	movlw	0
  5913  003F64  6E18               	movwf	___aomod@divisor+4,c
  5914  003F66  0E00               	movlw	0
  5915  003F68  6E19               	movwf	___aomod@divisor+5,c
  5916  003F6A  0E00               	movlw	0
  5917  003F6C  6E1A               	movwf	___aomod@divisor+6,c
  5918  003F6E  0E00               	movlw	0
  5919  003F70  6E1B               	movwf	___aomod@divisor+7,c
  5920  003F72  EC75  F025         	call	___aomod	;wreg free
  5921  003F76  C00C  F031         	movff	?___aomod,??_dtoa
  5922  003F7A  C00D  F032         	movff	?___aomod+1,??_dtoa+1
  5923  003F7E  C00E  F033         	movff	?___aomod+2,??_dtoa+2
  5924  003F82  C00F  F034         	movff	?___aomod+3,??_dtoa+3
  5925  003F86  C010  F035         	movff	?___aomod+4,??_dtoa+4
  5926  003F8A  C011  F036         	movff	?___aomod+5,??_dtoa+5
  5927  003F8E  C012  F037         	movff	?___aomod+6,??_dtoa+6
  5928  003F92  C013  F038         	movff	?___aomod+7,??_dtoa+7
  5929  003F96  C031  F01E         	movff	??_dtoa,abs@a
  5930  003F9A  C033  F01F         	movff	??_dtoa+2,abs@a+1
  5931  003F9E  ECB1  F02B         	call	_abs	;wreg free
  5932  003FA2  501E               	movf	?_abs,w,c
  5933  003FA4  0F30               	addlw	48
  5934  003FA6  6EDF               	movwf	indf2,c
  5935                           
  5936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5937  003FA8  0100               	movlb	0	; () banked
  5938  003FAA  0762               	decf	dtoa@p& (0+255),f,b
  5939  003FAC  A0D8               	btfss	status,0,c
  5940  003FAE  0763               	decf	(dtoa@p+1)& (0+255),f,b
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5944  003FB0  0764               	decf	dtoa@w& (0+255),f,b
  5945  003FB2  A0D8               	btfss	status,0,c
  5946  003FB4  0765               	decf	(dtoa@w+1)& (0+255),f,b
  5947                           
  5948                           ; BSR set to: 0
  5949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5950  003FB6  C068  F00C         	movff	dtoa@n,___aodiv@dividend
  5951  003FBA  C069  F00D         	movff	dtoa@n+1,___aodiv@dividend+1
  5952  003FBE  C06A  F00E         	movff	dtoa@n+2,___aodiv@dividend+2
  5953  003FC2  C06B  F00F         	movff	dtoa@n+3,___aodiv@dividend+3
  5954  003FC6  C06C  F010         	movff	dtoa@n+4,___aodiv@dividend+4
  5955  003FCA  C06D  F011         	movff	dtoa@n+5,___aodiv@dividend+5
  5956  003FCE  C06E  F012         	movff	dtoa@n+6,___aodiv@dividend+6
  5957  003FD2  C06F  F013         	movff	dtoa@n+7,___aodiv@dividend+7
  5958  003FD6  0E0A               	movlw	10
  5959  003FD8  6E14               	movwf	___aodiv@divisor,c
  5960  003FDA  0E00               	movlw	0
  5961  003FDC  6E15               	movwf	___aodiv@divisor+1,c
  5962  003FDE  0E00               	movlw	0
  5963  003FE0  6E16               	movwf	___aodiv@divisor+2,c
  5964  003FE2  0E00               	movlw	0
  5965  003FE4  6E17               	movwf	___aodiv@divisor+3,c
  5966  003FE6  0E00               	movlw	0
  5967  003FE8  6E18               	movwf	___aodiv@divisor+4,c
  5968  003FEA  0E00               	movlw	0
  5969  003FEC  6E19               	movwf	___aodiv@divisor+5,c
  5970  003FEE  0E00               	movlw	0
  5971  003FF0  6E1A               	movwf	___aodiv@divisor+6,c
  5972  003FF2  0E00               	movlw	0
  5973  003FF4  6E1B               	movwf	___aodiv@divisor+7,c
  5974  003FF6  ECF4  F022         	call	___aodiv	;wreg free
  5975  003FFA  C00C  F068         	movff	?___aodiv,dtoa@n
  5976  003FFE  C00D  F069         	movff	?___aodiv+1,dtoa@n+1
  5977  004002  C00E  F06A         	movff	?___aodiv+2,dtoa@n+2
  5978  004006  C00F  F06B         	movff	?___aodiv+3,dtoa@n+3
  5979  00400A  C010  F06C         	movff	?___aodiv+4,dtoa@n+4
  5980  00400E  C011  F06D         	movff	?___aodiv+5,dtoa@n+5
  5981  004012  C012  F06E         	movff	?___aodiv+6,dtoa@n+6
  5982  004016  C013  F06F         	movff	?___aodiv+7,dtoa@n+7
  5983  00401A                     l4479:
  5984                           
  5985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5986  00401A  0100               	movlb	0	; () banked
  5987  00401C  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
  5988  00401E  D01F               	goto	u3800
  5989  004020  5171               	movf	(dtoa@i+1)& (0+255),w,b
  5990  004022  E103               	bnz	u3760
  5991  004024  0570               	decf	dtoa@i& (0+255),w,b
  5992  004026  A0D8               	btfss	status,0,c
  5993  004028  D01A               	goto	u3800
  5994  00402A                     u3760:
  5995                           
  5996                           ; BSR set to: 0
  5997  00402A  5168               	movf	dtoa@n& (0+255),w,b
  5998  00402C  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
  5999  00402E  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
  6000  004030  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
  6001  004032  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
  6002  004034  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
  6003  004036  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
  6004  004038  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
  6005  00403A  A4D8               	btfss	status,2,c
  6006  00403C  D771               	goto	l4469
  6007                           
  6008                           ; BSR set to: 0
  6009  00403E  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  6010  004040  D005               	goto	u3780
  6011  004042  5163               	movf	(dtoa@p+1)& (0+255),w,b
  6012  004044  E102               	bnz	u3781
  6013  004046  0562               	decf	dtoa@p& (0+255),w,b
  6014  004048  B0D8               	btfsc	status,0,c
  6015  00404A                     u3781:
  6016  00404A  D76A               	goto	l4469
  6017  00404C                     u3780:
  6018                           
  6019                           ; BSR set to: 0
  6020  00404C  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
  6021  00404E  D007               	goto	u3800
  6022  004050  5165               	movf	(dtoa@w+1)& (0+255),w,b
  6023  004052  E103               	bnz	u3790
  6024  004054  0564               	decf	dtoa@w& (0+255),w,b
  6025  004056  A0D8               	btfss	status,0,c
  6026  004058  D002               	goto	u3800
  6027  00405A                     u3790:
  6028                           
  6029                           ; BSR set to: 0
  6030  00405A  B23E               	btfsc	_flags,1,c
  6031  00405C  D761               	goto	l4469
  6032  00405E                     u3800:
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6036  00405E  5166               	movf	dtoa@s& (0+255),w,b
  6037  004060  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  6038  004062  A4D8               	btfss	status,2,c
  6039  004064  D002               	goto	u3820
  6040                           
  6041                           ; BSR set to: 0
  6042  004066  A43E               	btfss	_flags,2,c
  6043  004068  D017               	goto	l4503
  6044  00406A                     u3820:
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6048  00406A  0770               	decf	dtoa@i& (0+255),f,b
  6049  00406C  A0D8               	btfss	status,0,c
  6050  00406E  0771               	decf	(dtoa@i+1)& (0+255),f,b
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6054  004070  5166               	movf	dtoa@s& (0+255),w,b
  6055  004072  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  6056  004074  A4D8               	btfss	status,2,c
  6057  004076  D004               	goto	l4499
  6058                           
  6059                           ; BSR set to: 0
  6060  004078  0E00               	movlw	0
  6061  00407A  6F61               	movwf	(_dtoa$1572+1)& (0+255),b
  6062  00407C  0E2B               	movlw	43
  6063  00407E  D003               	goto	L2
  6064  004080                     l4499:
  6065                           
  6066                           ; BSR set to: 0
  6067  004080  0E00               	movlw	0
  6068  004082  6F61               	movwf	(_dtoa$1572+1)& (0+255),b
  6069  004084  0E2D               	movlw	45
  6070  004086                     L2:
  6071  004086  6F60               	movwf	_dtoa$1572& (0+255),b
  6072                           
  6073                           ; BSR set to: 0
  6074  004088  0EC4               	movlw	low _dbuf
  6075  00408A  2570               	addwf	dtoa@i& (0+255),w,b
  6076  00408C  6ED9               	movwf	fsr2l,c
  6077  00408E  0E01               	movlw	high _dbuf
  6078  004090  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  6079  004092  6EDA               	movwf	fsr2h,c
  6080  004094  C060  FFDF         	movff	_dtoa$1572,indf2
  6081  004098                     l4503:
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6085  004098  C027  F01C         	movff	dtoa@fp,pad@fp
  6086  00409C  C028  F01D         	movff	dtoa@fp+1,pad@fp+1
  6087  0040A0  0EC4               	movlw	low _dbuf
  6088  0040A2  2570               	addwf	dtoa@i& (0+255),w,b
  6089  0040A4  6E1E               	movwf	pad@buf,c
  6090  0040A6  0E01               	movlw	high _dbuf
  6091  0040A8  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  6092  0040AA  6E1F               	movwf	pad@buf+1,c
  6093  0040AC  C064  F020         	movff	dtoa@w,pad@p
  6094  0040B0  C065  F021         	movff	dtoa@w+1,pad@p+1
  6095  0040B4  EC8A  F028         	call	_pad	;wreg free
  6096  0040B8  C01C  F027         	movff	?_pad,?_dtoa
  6097  0040BC  C01D  F028         	movff	?_pad+1,?_dtoa+1
  6098  0040C0  0012               	return		;funcret
  6099  0040C2                     __end_of_dtoa:
  6100                           	opt callstack 0
  6101                           
  6102 ;; *************** function _abs *****************
  6103 ;; Defined at:
  6104 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;  a               2   29[COMRAM] int 
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;		None
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  2   29[COMRAM] int 
  6111 ;; Registers used:
  6112 ;;		wreg, status,2, status,0
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6118 ;;      Params:         2       0       0       0       0       0       0       0       0
  6119 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6120 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6121 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6122 ;;Total ram usage:        4 bytes
  6123 ;; Hardware stack levels used:    1
  6124 ;; Hardware stack levels required when called:    7
  6125 ;; This function calls:
  6126 ;;		Nothing
  6127 ;; This function is called by:
  6128 ;;		_dtoa
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           	psect	text27
  6133  005762                     __ptext27:
  6134                           	opt callstack 0
  6135  005762                     _abs:
  6136                           	opt callstack 18
  6137                           
  6138                           ;incstack = 0
  6139  005762  BE1F               	btfsc	abs@a+1,7,c
  6140  005764  D005               	goto	u3470
  6141  005766  501F               	movf	abs@a+1,w,c
  6142  005768  E110               	bnz	l1470
  6143  00576A  041E               	decf	abs@a,w,c
  6144  00576C  B0D8               	btfsc	status,0,c
  6145  00576E  D00D               	goto	l1470
  6146  005770                     u3470:
  6147  005770  C01E  F020         	movff	abs@a,??_abs
  6148  005774  C01F  F021         	movff	abs@a+1,??_abs+1
  6149  005778  1E20               	comf	??_abs,f,c
  6150  00577A  1E21               	comf	??_abs+1,f,c
  6151  00577C  4A20               	infsnz	??_abs,f,c
  6152  00577E  2A21               	incf	??_abs+1,f,c
  6153  005780  C020  F01E         	movff	??_abs,?_abs
  6154  005784  C021  F01F         	movff	??_abs+1,?_abs+1
  6155  005788  0012               	return	
  6156  00578A                     l1470:
  6157  00578A  C01E  F01E         	movff	abs@a,?_abs
  6158  00578E  C01F  F01F         	movff	abs@a+1,?_abs+1
  6159  005792  0012               	return		;funcret
  6160  005794                     __end_of_abs:
  6161                           	opt callstack 0
  6162                           
  6163 ;; *************** function ___aomod *****************
  6164 ;; Defined at:
  6165 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  dividend        8   11[COMRAM] long long 
  6168 ;;  divisor         8   19[COMRAM] long long 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;  sign            1   28[COMRAM] unsigned char 
  6171 ;;  counter         1   27[COMRAM] unsigned char 
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  8   11[COMRAM] long long 
  6174 ;; Registers used:
  6175 ;;		wreg, status,2, status,0
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6181 ;;      Params:        16       0       0       0       0       0       0       0       0
  6182 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6184 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6185 ;;Total ram usage:       18 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; Hardware stack levels required when called:    7
  6188 ;; This function calls:
  6189 ;;		Nothing
  6190 ;; This function is called by:
  6191 ;;		_dtoa
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text28
  6196  004AEA                     __ptext28:
  6197                           	opt callstack 0
  6198  004AEA                     ___aomod:
  6199                           	opt callstack 18
  6200                           
  6201                           ;incstack = 0
  6202  004AEA  0E00               	movlw	0
  6203  004AEC  6E1D               	movwf	___aomod@sign,c
  6204  004AEE  AE13               	btfss	___aomod@dividend+7,7,c
  6205  004AF0  D012               	goto	l4365
  6206  004AF2  1E13               	comf	___aomod@dividend+7,f,c
  6207  004AF4  1E12               	comf	___aomod@dividend+6,f,c
  6208  004AF6  1E11               	comf	___aomod@dividend+5,f,c
  6209  004AF8  1E10               	comf	___aomod@dividend+4,f,c
  6210  004AFA  1E0F               	comf	___aomod@dividend+3,f,c
  6211  004AFC  1E0E               	comf	___aomod@dividend+2,f,c
  6212  004AFE  1E0D               	comf	___aomod@dividend+1,f,c
  6213  004B00  6C0C               	negf	___aomod@dividend,c
  6214  004B02  0E00               	movlw	0
  6215  004B04  220D               	addwfc	___aomod@dividend+1,f,c
  6216  004B06  220E               	addwfc	___aomod@dividend+2,f,c
  6217  004B08  220F               	addwfc	___aomod@dividend+3,f,c
  6218  004B0A  2210               	addwfc	___aomod@dividend+4,f,c
  6219  004B0C  2211               	addwfc	___aomod@dividend+5,f,c
  6220  004B0E  2212               	addwfc	___aomod@dividend+6,f,c
  6221  004B10  2213               	addwfc	___aomod@dividend+7,f,c
  6222  004B12  0E01               	movlw	1
  6223  004B14  6E1D               	movwf	___aomod@sign,c
  6224  004B16                     l4365:
  6225  004B16  AE1B               	btfss	___aomod@divisor+7,7,c
  6226  004B18  D010               	goto	l4369
  6227  004B1A  1E1B               	comf	___aomod@divisor+7,f,c
  6228  004B1C  1E1A               	comf	___aomod@divisor+6,f,c
  6229  004B1E  1E19               	comf	___aomod@divisor+5,f,c
  6230  004B20  1E18               	comf	___aomod@divisor+4,f,c
  6231  004B22  1E17               	comf	___aomod@divisor+3,f,c
  6232  004B24  1E16               	comf	___aomod@divisor+2,f,c
  6233  004B26  1E15               	comf	___aomod@divisor+1,f,c
  6234  004B28  6C14               	negf	___aomod@divisor,c
  6235  004B2A  0E00               	movlw	0
  6236  004B2C  2215               	addwfc	___aomod@divisor+1,f,c
  6237  004B2E  2216               	addwfc	___aomod@divisor+2,f,c
  6238  004B30  2217               	addwfc	___aomod@divisor+3,f,c
  6239  004B32  2218               	addwfc	___aomod@divisor+4,f,c
  6240  004B34  2219               	addwfc	___aomod@divisor+5,f,c
  6241  004B36  221A               	addwfc	___aomod@divisor+6,f,c
  6242  004B38  221B               	addwfc	___aomod@divisor+7,f,c
  6243  004B3A                     l4369:
  6244  004B3A  5014               	movf	___aomod@divisor,w,c
  6245  004B3C  1015               	iorwf	___aomod@divisor+1,w,c
  6246  004B3E  1016               	iorwf	___aomod@divisor+2,w,c
  6247  004B40  1017               	iorwf	___aomod@divisor+3,w,c
  6248  004B42  1018               	iorwf	___aomod@divisor+4,w,c
  6249  004B44  1019               	iorwf	___aomod@divisor+5,w,c
  6250  004B46  101A               	iorwf	___aomod@divisor+6,w,c
  6251  004B48  101B               	iorwf	___aomod@divisor+7,w,c
  6252  004B4A  B4D8               	btfsc	status,2,c
  6253  004B4C  D03C               	goto	l4385
  6254  004B4E  0E01               	movlw	1
  6255  004B50  6E1C               	movwf	___aomod@counter,c
  6256  004B52  D00A               	goto	l4375
  6257  004B54                     l4373:
  6258  004B54  90D8               	bcf	status,0,c
  6259  004B56  3614               	rlcf	___aomod@divisor,f,c
  6260  004B58  3615               	rlcf	___aomod@divisor+1,f,c
  6261  004B5A  3616               	rlcf	___aomod@divisor+2,f,c
  6262  004B5C  3617               	rlcf	___aomod@divisor+3,f,c
  6263  004B5E  3618               	rlcf	___aomod@divisor+4,f,c
  6264  004B60  3619               	rlcf	___aomod@divisor+5,f,c
  6265  004B62  361A               	rlcf	___aomod@divisor+6,f,c
  6266  004B64  361B               	rlcf	___aomod@divisor+7,f,c
  6267  004B66  2A1C               	incf	___aomod@counter,f,c
  6268  004B68                     l4375:
  6269  004B68  AE1B               	btfss	___aomod@divisor+7,7,c
  6270  004B6A  D7F4               	goto	l4373
  6271  004B6C                     u3580:
  6272  004B6C  5014               	movf	___aomod@divisor,w,c
  6273  004B6E  5C0C               	subwf	___aomod@dividend,w,c
  6274  004B70  5015               	movf	___aomod@divisor+1,w,c
  6275  004B72  580D               	subwfb	___aomod@dividend+1,w,c
  6276  004B74  5016               	movf	___aomod@divisor+2,w,c
  6277  004B76  580E               	subwfb	___aomod@dividend+2,w,c
  6278  004B78  5017               	movf	___aomod@divisor+3,w,c
  6279  004B7A  580F               	subwfb	___aomod@dividend+3,w,c
  6280  004B7C  5018               	movf	___aomod@divisor+4,w,c
  6281  004B7E  5810               	subwfb	___aomod@dividend+4,w,c
  6282  004B80  5019               	movf	___aomod@divisor+5,w,c
  6283  004B82  5811               	subwfb	___aomod@dividend+5,w,c
  6284  004B84  501A               	movf	___aomod@divisor+6,w,c
  6285  004B86  5812               	subwfb	___aomod@dividend+6,w,c
  6286  004B88  501B               	movf	___aomod@divisor+7,w,c
  6287  004B8A  5813               	subwfb	___aomod@dividend+7,w,c
  6288  004B8C  A0D8               	btfss	status,0,c
  6289  004B8E  D010               	goto	l4381
  6290  004B90  5014               	movf	___aomod@divisor,w,c
  6291  004B92  5E0C               	subwf	___aomod@dividend,f,c
  6292  004B94  5015               	movf	___aomod@divisor+1,w,c
  6293  004B96  5A0D               	subwfb	___aomod@dividend+1,f,c
  6294  004B98  5016               	movf	___aomod@divisor+2,w,c
  6295  004B9A  5A0E               	subwfb	___aomod@dividend+2,f,c
  6296  004B9C  5017               	movf	___aomod@divisor+3,w,c
  6297  004B9E  5A0F               	subwfb	___aomod@dividend+3,f,c
  6298  004BA0  5018               	movf	___aomod@divisor+4,w,c
  6299  004BA2  5A10               	subwfb	___aomod@dividend+4,f,c
  6300  004BA4  5019               	movf	___aomod@divisor+5,w,c
  6301  004BA6  5A11               	subwfb	___aomod@dividend+5,f,c
  6302  004BA8  501A               	movf	___aomod@divisor+6,w,c
  6303  004BAA  5A12               	subwfb	___aomod@dividend+6,f,c
  6304  004BAC  501B               	movf	___aomod@divisor+7,w,c
  6305  004BAE  5A13               	subwfb	___aomod@dividend+7,f,c
  6306  004BB0                     l4381:
  6307  004BB0  90D8               	bcf	status,0,c
  6308  004BB2  321B               	rrcf	___aomod@divisor+7,f,c
  6309  004BB4  321A               	rrcf	___aomod@divisor+6,f,c
  6310  004BB6  3219               	rrcf	___aomod@divisor+5,f,c
  6311  004BB8  3218               	rrcf	___aomod@divisor+4,f,c
  6312  004BBA  3217               	rrcf	___aomod@divisor+3,f,c
  6313  004BBC  3216               	rrcf	___aomod@divisor+2,f,c
  6314  004BBE  3215               	rrcf	___aomod@divisor+1,f,c
  6315  004BC0  3214               	rrcf	___aomod@divisor,f,c
  6316  004BC2  2E1C               	decfsz	___aomod@counter,f,c
  6317  004BC4  D7D3               	goto	u3580
  6318  004BC6                     l4385:
  6319  004BC6  501D               	movf	___aomod@sign,w,c
  6320  004BC8  B4D8               	btfsc	status,2,c
  6321  004BCA  D010               	goto	l4389
  6322  004BCC  1E13               	comf	___aomod@dividend+7,f,c
  6323  004BCE  1E12               	comf	___aomod@dividend+6,f,c
  6324  004BD0  1E11               	comf	___aomod@dividend+5,f,c
  6325  004BD2  1E10               	comf	___aomod@dividend+4,f,c
  6326  004BD4  1E0F               	comf	___aomod@dividend+3,f,c
  6327  004BD6  1E0E               	comf	___aomod@dividend+2,f,c
  6328  004BD8  1E0D               	comf	___aomod@dividend+1,f,c
  6329  004BDA  6C0C               	negf	___aomod@dividend,c
  6330  004BDC  0E00               	movlw	0
  6331  004BDE  220D               	addwfc	___aomod@dividend+1,f,c
  6332  004BE0  220E               	addwfc	___aomod@dividend+2,f,c
  6333  004BE2  220F               	addwfc	___aomod@dividend+3,f,c
  6334  004BE4  2210               	addwfc	___aomod@dividend+4,f,c
  6335  004BE6  2211               	addwfc	___aomod@dividend+5,f,c
  6336  004BE8  2212               	addwfc	___aomod@dividend+6,f,c
  6337  004BEA  2213               	addwfc	___aomod@dividend+7,f,c
  6338  004BEC                     l4389:
  6339  004BEC  C00C  F00C         	movff	___aomod@dividend,?___aomod
  6340  004BF0  C00D  F00D         	movff	___aomod@dividend+1,?___aomod+1
  6341  004BF4  C00E  F00E         	movff	___aomod@dividend+2,?___aomod+2
  6342  004BF8  C00F  F00F         	movff	___aomod@dividend+3,?___aomod+3
  6343  004BFC  C010  F010         	movff	___aomod@dividend+4,?___aomod+4
  6344  004C00  C011  F011         	movff	___aomod@dividend+5,?___aomod+5
  6345  004C04  C012  F012         	movff	___aomod@dividend+6,?___aomod+6
  6346  004C08  C013  F013         	movff	___aomod@dividend+7,?___aomod+7
  6347  004C0C  0012               	return		;funcret
  6348  004C0E                     __end_of___aomod:
  6349                           	opt callstack 0
  6350                           
  6351 ;; *************** function ___aodiv *****************
  6352 ;; Defined at:
  6353 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;  dividend        8   11[COMRAM] long long 
  6356 ;;  divisor         8   19[COMRAM] long long 
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;  quotient        8   29[COMRAM] long long 
  6359 ;;  sign            1   28[COMRAM] unsigned char 
  6360 ;;  counter         1   27[COMRAM] unsigned char 
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  8   11[COMRAM] long long 
  6363 ;; Registers used:
  6364 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6370 ;;      Params:        16       0       0       0       0       0       0       0       0
  6371 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6373 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6374 ;;Total ram usage:       26 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:    7
  6377 ;; This function calls:
  6378 ;;		Nothing
  6379 ;; This function is called by:
  6380 ;;		_dtoa
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           	psect	text29
  6385  0045E8                     __ptext29:
  6386                           	opt callstack 0
  6387  0045E8                     ___aodiv:
  6388                           	opt callstack 18
  6389                           
  6390                           ;incstack = 0
  6391  0045E8  0E00               	movlw	0
  6392  0045EA  6E1D               	movwf	___aodiv@sign,c
  6393  0045EC  AE1B               	btfss	___aodiv@divisor+7,7,c
  6394  0045EE  D012               	goto	l4321
  6395  0045F0  1E1B               	comf	___aodiv@divisor+7,f,c
  6396  0045F2  1E1A               	comf	___aodiv@divisor+6,f,c
  6397  0045F4  1E19               	comf	___aodiv@divisor+5,f,c
  6398  0045F6  1E18               	comf	___aodiv@divisor+4,f,c
  6399  0045F8  1E17               	comf	___aodiv@divisor+3,f,c
  6400  0045FA  1E16               	comf	___aodiv@divisor+2,f,c
  6401  0045FC  1E15               	comf	___aodiv@divisor+1,f,c
  6402  0045FE  6C14               	negf	___aodiv@divisor,c
  6403  004600  0E00               	movlw	0
  6404  004602  2215               	addwfc	___aodiv@divisor+1,f,c
  6405  004604  2216               	addwfc	___aodiv@divisor+2,f,c
  6406  004606  2217               	addwfc	___aodiv@divisor+3,f,c
  6407  004608  2218               	addwfc	___aodiv@divisor+4,f,c
  6408  00460A  2219               	addwfc	___aodiv@divisor+5,f,c
  6409  00460C  221A               	addwfc	___aodiv@divisor+6,f,c
  6410  00460E  221B               	addwfc	___aodiv@divisor+7,f,c
  6411  004610  0E01               	movlw	1
  6412  004612  6E1D               	movwf	___aodiv@sign,c
  6413  004614                     l4321:
  6414  004614  AE13               	btfss	___aodiv@dividend+7,7,c
  6415  004616  D012               	goto	l4327
  6416  004618  1E13               	comf	___aodiv@dividend+7,f,c
  6417  00461A  1E12               	comf	___aodiv@dividend+6,f,c
  6418  00461C  1E11               	comf	___aodiv@dividend+5,f,c
  6419  00461E  1E10               	comf	___aodiv@dividend+4,f,c
  6420  004620  1E0F               	comf	___aodiv@dividend+3,f,c
  6421  004622  1E0E               	comf	___aodiv@dividend+2,f,c
  6422  004624  1E0D               	comf	___aodiv@dividend+1,f,c
  6423  004626  6C0C               	negf	___aodiv@dividend,c
  6424  004628  0E00               	movlw	0
  6425  00462A  220D               	addwfc	___aodiv@dividend+1,f,c
  6426  00462C  220E               	addwfc	___aodiv@dividend+2,f,c
  6427  00462E  220F               	addwfc	___aodiv@dividend+3,f,c
  6428  004630  2210               	addwfc	___aodiv@dividend+4,f,c
  6429  004632  2211               	addwfc	___aodiv@dividend+5,f,c
  6430  004634  2212               	addwfc	___aodiv@dividend+6,f,c
  6431  004636  2213               	addwfc	___aodiv@dividend+7,f,c
  6432  004638  0E01               	movlw	1
  6433  00463A  1A1D               	xorwf	___aodiv@sign,f,c
  6434  00463C                     l4327:
  6435  00463C  EE20  F01E         	lfsr	2,___aodiv@quotient
  6436  004640  0E07               	movlw	7
  6437  004642                     u3501:
  6438  004642  6ADE               	clrf	postinc2,c
  6439  004644  06E8               	decf	wreg,f,c
  6440  004646  E2FD               	bc	u3501
  6441  004648  5014               	movf	___aodiv@divisor,w,c
  6442  00464A  1015               	iorwf	___aodiv@divisor+1,w,c
  6443  00464C  1016               	iorwf	___aodiv@divisor+2,w,c
  6444  00464E  1017               	iorwf	___aodiv@divisor+3,w,c
  6445  004650  1018               	iorwf	___aodiv@divisor+4,w,c
  6446  004652  1019               	iorwf	___aodiv@divisor+5,w,c
  6447  004654  101A               	iorwf	___aodiv@divisor+6,w,c
  6448  004656  101B               	iorwf	___aodiv@divisor+7,w,c
  6449  004658  B4D8               	btfsc	status,2,c
  6450  00465A  D046               	goto	l4349
  6451  00465C  0E01               	movlw	1
  6452  00465E  6E1C               	movwf	___aodiv@counter,c
  6453  004660  D00A               	goto	l4335
  6454  004662                     l4333:
  6455  004662  90D8               	bcf	status,0,c
  6456  004664  3614               	rlcf	___aodiv@divisor,f,c
  6457  004666  3615               	rlcf	___aodiv@divisor+1,f,c
  6458  004668  3616               	rlcf	___aodiv@divisor+2,f,c
  6459  00466A  3617               	rlcf	___aodiv@divisor+3,f,c
  6460  00466C  3618               	rlcf	___aodiv@divisor+4,f,c
  6461  00466E  3619               	rlcf	___aodiv@divisor+5,f,c
  6462  004670  361A               	rlcf	___aodiv@divisor+6,f,c
  6463  004672  361B               	rlcf	___aodiv@divisor+7,f,c
  6464  004674  2A1C               	incf	___aodiv@counter,f,c
  6465  004676                     l4335:
  6466  004676  AE1B               	btfss	___aodiv@divisor+7,7,c
  6467  004678  D7F4               	goto	l4333
  6468  00467A                     u3520:
  6469  00467A  90D8               	bcf	status,0,c
  6470  00467C  361E               	rlcf	___aodiv@quotient,f,c
  6471  00467E  361F               	rlcf	___aodiv@quotient+1,f,c
  6472  004680  3620               	rlcf	___aodiv@quotient+2,f,c
  6473  004682  3621               	rlcf	___aodiv@quotient+3,f,c
  6474  004684  3622               	rlcf	___aodiv@quotient+4,f,c
  6475  004686  3623               	rlcf	___aodiv@quotient+5,f,c
  6476  004688  3624               	rlcf	___aodiv@quotient+6,f,c
  6477  00468A  3625               	rlcf	___aodiv@quotient+7,f,c
  6478  00468C  5014               	movf	___aodiv@divisor,w,c
  6479  00468E  5C0C               	subwf	___aodiv@dividend,w,c
  6480  004690  5015               	movf	___aodiv@divisor+1,w,c
  6481  004692  580D               	subwfb	___aodiv@dividend+1,w,c
  6482  004694  5016               	movf	___aodiv@divisor+2,w,c
  6483  004696  580E               	subwfb	___aodiv@dividend+2,w,c
  6484  004698  5017               	movf	___aodiv@divisor+3,w,c
  6485  00469A  580F               	subwfb	___aodiv@dividend+3,w,c
  6486  00469C  5018               	movf	___aodiv@divisor+4,w,c
  6487  00469E  5810               	subwfb	___aodiv@dividend+4,w,c
  6488  0046A0  5019               	movf	___aodiv@divisor+5,w,c
  6489  0046A2  5811               	subwfb	___aodiv@dividend+5,w,c
  6490  0046A4  501A               	movf	___aodiv@divisor+6,w,c
  6491  0046A6  5812               	subwfb	___aodiv@dividend+6,w,c
  6492  0046A8  501B               	movf	___aodiv@divisor+7,w,c
  6493  0046AA  5813               	subwfb	___aodiv@dividend+7,w,c
  6494  0046AC  A0D8               	btfss	status,0,c
  6495  0046AE  D011               	goto	l4345
  6496  0046B0  5014               	movf	___aodiv@divisor,w,c
  6497  0046B2  5E0C               	subwf	___aodiv@dividend,f,c
  6498  0046B4  5015               	movf	___aodiv@divisor+1,w,c
  6499  0046B6  5A0D               	subwfb	___aodiv@dividend+1,f,c
  6500  0046B8  5016               	movf	___aodiv@divisor+2,w,c
  6501  0046BA  5A0E               	subwfb	___aodiv@dividend+2,f,c
  6502  0046BC  5017               	movf	___aodiv@divisor+3,w,c
  6503  0046BE  5A0F               	subwfb	___aodiv@dividend+3,f,c
  6504  0046C0  5018               	movf	___aodiv@divisor+4,w,c
  6505  0046C2  5A10               	subwfb	___aodiv@dividend+4,f,c
  6506  0046C4  5019               	movf	___aodiv@divisor+5,w,c
  6507  0046C6  5A11               	subwfb	___aodiv@dividend+5,f,c
  6508  0046C8  501A               	movf	___aodiv@divisor+6,w,c
  6509  0046CA  5A12               	subwfb	___aodiv@dividend+6,f,c
  6510  0046CC  501B               	movf	___aodiv@divisor+7,w,c
  6511  0046CE  5A13               	subwfb	___aodiv@dividend+7,f,c
  6512  0046D0  801E               	bsf	___aodiv@quotient,0,c
  6513  0046D2                     l4345:
  6514  0046D2  90D8               	bcf	status,0,c
  6515  0046D4  321B               	rrcf	___aodiv@divisor+7,f,c
  6516  0046D6  321A               	rrcf	___aodiv@divisor+6,f,c
  6517  0046D8  3219               	rrcf	___aodiv@divisor+5,f,c
  6518  0046DA  3218               	rrcf	___aodiv@divisor+4,f,c
  6519  0046DC  3217               	rrcf	___aodiv@divisor+3,f,c
  6520  0046DE  3216               	rrcf	___aodiv@divisor+2,f,c
  6521  0046E0  3215               	rrcf	___aodiv@divisor+1,f,c
  6522  0046E2  3214               	rrcf	___aodiv@divisor,f,c
  6523  0046E4  2E1C               	decfsz	___aodiv@counter,f,c
  6524  0046E6  D7C9               	goto	u3520
  6525  0046E8                     l4349:
  6526  0046E8  501D               	movf	___aodiv@sign,w,c
  6527  0046EA  B4D8               	btfsc	status,2,c
  6528  0046EC  D010               	goto	l4353
  6529  0046EE  1E25               	comf	___aodiv@quotient+7,f,c
  6530  0046F0  1E24               	comf	___aodiv@quotient+6,f,c
  6531  0046F2  1E23               	comf	___aodiv@quotient+5,f,c
  6532  0046F4  1E22               	comf	___aodiv@quotient+4,f,c
  6533  0046F6  1E21               	comf	___aodiv@quotient+3,f,c
  6534  0046F8  1E20               	comf	___aodiv@quotient+2,f,c
  6535  0046FA  1E1F               	comf	___aodiv@quotient+1,f,c
  6536  0046FC  6C1E               	negf	___aodiv@quotient,c
  6537  0046FE  0E00               	movlw	0
  6538  004700  221F               	addwfc	___aodiv@quotient+1,f,c
  6539  004702  2220               	addwfc	___aodiv@quotient+2,f,c
  6540  004704  2221               	addwfc	___aodiv@quotient+3,f,c
  6541  004706  2222               	addwfc	___aodiv@quotient+4,f,c
  6542  004708  2223               	addwfc	___aodiv@quotient+5,f,c
  6543  00470A  2224               	addwfc	___aodiv@quotient+6,f,c
  6544  00470C  2225               	addwfc	___aodiv@quotient+7,f,c
  6545  00470E                     l4353:
  6546  00470E  C01E  F00C         	movff	___aodiv@quotient,?___aodiv
  6547  004712  C01F  F00D         	movff	___aodiv@quotient+1,?___aodiv+1
  6548  004716  C020  F00E         	movff	___aodiv@quotient+2,?___aodiv+2
  6549  00471A  C021  F00F         	movff	___aodiv@quotient+3,?___aodiv+3
  6550  00471E  C022  F010         	movff	___aodiv@quotient+4,?___aodiv+4
  6551  004722  C023  F011         	movff	___aodiv@quotient+5,?___aodiv+5
  6552  004726  C024  F012         	movff	___aodiv@quotient+6,?___aodiv+6
  6553  00472A  C025  F013         	movff	___aodiv@quotient+7,?___aodiv+7
  6554  00472E  0012               	return		;funcret
  6555  004730                     __end_of___aodiv:
  6556                           	opt callstack 0
  6557                           
  6558 ;; *************** function _ctoa *****************
  6559 ;; Defined at:
  6560 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  6563 ;;		 -> sprintf@f(6), 
  6564 ;;  c               1   40[COMRAM] unsigned char 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  w               2   41[COMRAM] int 
  6567 ;;  l               2    0        int 
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  2   38[COMRAM] int 
  6570 ;; Registers used:
  6571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6577 ;;      Params:         3       0       0       0       0       0       0       0       0
  6578 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6579 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6580 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6581 ;;Total ram usage:        5 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; Hardware stack levels required when called:   11
  6584 ;; This function calls:
  6585 ;;		_pad
  6586 ;; This function is called by:
  6587 ;;		_vfpfcnvrt
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text30
  6592  0054CA                     __ptext30:
  6593                           	opt callstack 0
  6594  0054CA                     _ctoa:
  6595                           	opt callstack 15
  6596                           
  6597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  6598                           
  6599                           ;incstack = 0
  6600  0054CA  0100               	movlb	0	; () banked
  6601  0054CC  51E9               	movf	_width& (0+255),w,b
  6602  0054CE  11EA               	iorwf	(_width+1)& (0+255),w,b
  6603  0054D0  A4D8               	btfss	status,2,c
  6604  0054D2  D005               	goto	l4435
  6605                           
  6606                           ; BSR set to: 0
  6607  0054D4  C0E9  F02A         	movff	_width,ctoa@w
  6608  0054D8  C0EA  F02B         	movff	_width+1,ctoa@w+1
  6609  0054DC  D006               	goto	l4437
  6610  0054DE                     l4435:
  6611                           
  6612                           ; BSR set to: 0
  6613  0054DE  0EFF               	movlw	255
  6614  0054E0  25E9               	addwf	_width& (0+255),w,b
  6615  0054E2  6E2A               	movwf	ctoa@w,c
  6616  0054E4  0EFF               	movlw	255
  6617  0054E6  21EA               	addwfc	(_width+1)& (0+255),w,b
  6618  0054E8  6E2B               	movwf	ctoa@w+1,c
  6619  0054EA                     l4437:
  6620                           
  6621                           ; BSR set to: 0
  6622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  6623  0054EA  C029  F1C4         	movff	ctoa@c,_dbuf
  6624                           
  6625                           ; BSR set to: 0
  6626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  6627  0054EE  0E00               	movlw	0
  6628  0054F0  0101               	movlb	1	; () banked
  6629  0054F2  6FC5               	movwf	(_dbuf+1)& (0+255),b
  6630                           
  6631                           ; BSR set to: 1
  6632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  6633  0054F4  C027  F01C         	movff	ctoa@fp,pad@fp
  6634  0054F8  C028  F01D         	movff	ctoa@fp+1,pad@fp+1
  6635  0054FC  0EC4               	movlw	low _dbuf
  6636  0054FE  6E1E               	movwf	pad@buf,c
  6637  005500  0E01               	movlw	high _dbuf
  6638  005502  6E1F               	movwf	pad@buf+1,c
  6639  005504  C02A  F020         	movff	ctoa@w,pad@p
  6640  005508  C02B  F021         	movff	ctoa@w+1,pad@p+1
  6641  00550C  EC8A  F028         	call	_pad	;wreg free
  6642  005510  C01C  F027         	movff	?_pad,?_ctoa
  6643  005514  C01D  F028         	movff	?_pad+1,?_ctoa+1
  6644  005518  0012               	return		;funcret
  6645  00551A                     __end_of_ctoa:
  6646                           	opt callstack 0
  6647                           
  6648 ;; *************** function _pad *****************
  6649 ;; Defined at:
  6650 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6653 ;;		 -> sprintf@f(6), 
  6654 ;;  buf             2   29[COMRAM] PTR unsigned char 
  6655 ;;		 -> dbuf(32), 
  6656 ;;  p               2   31[COMRAM] int 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  w               2   36[COMRAM] int 
  6659 ;;  i               2   34[COMRAM] int 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  2   27[COMRAM] int 
  6662 ;; Registers used:
  6663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6669 ;;      Params:         6       0       0       0       0       0       0       0       0
  6670 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6671 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6672 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6673 ;;Total ram usage:       11 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; Hardware stack levels required when called:   10
  6676 ;; This function calls:
  6677 ;;		_fputc
  6678 ;;		_fputs
  6679 ;;		_strlen
  6680 ;; This function is called by:
  6681 ;;		_ctoa
  6682 ;;		_dtoa
  6683 ;;		_utoa
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           	psect	text31
  6688  005114                     __ptext31:
  6689                           	opt callstack 0
  6690  005114                     _pad:
  6691                           	opt callstack 15
  6692                           
  6693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6694                           
  6695                           ;incstack = 0
  6696  005114  A03E               	btfss	_flags,0,c
  6697  005116  D00A               	goto	l4291
  6698                           
  6699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6700  005118  C01E  F015         	movff	pad@buf,fputs@s
  6701  00511C  C01F  F016         	movff	pad@buf+1,fputs@s+1
  6702  005120  C01C  F017         	movff	pad@fp,fputs@fp
  6703  005124  C01D  F018         	movff	pad@fp+1,fputs@fp+1
  6704  005128  EC47  F02B         	call	_fputs	;wreg free
  6705  00512C                     l4291:
  6706                           
  6707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6708  00512C  BE21               	btfsc	pad@p+1,7,c
  6709  00512E  D005               	goto	l4295
  6710  005130  C020  F025         	movff	pad@p,pad@w
  6711  005134  C021  F026         	movff	pad@p+1,pad@w+1
  6712  005138  D004               	goto	l719
  6713  00513A                     l4295:
  6714  00513A  0E00               	movlw	0
  6715  00513C  6E26               	movwf	pad@w+1,c
  6716  00513E  0E00               	movlw	0
  6717  005140  6E25               	movwf	pad@w,c
  6718  005142                     l719:
  6719                           
  6720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6721  005142  0E00               	movlw	0
  6722  005144  6E24               	movwf	pad@i+1,c
  6723  005146  0E00               	movlw	0
  6724  005148  6E23               	movwf	pad@i,c
  6725                           
  6726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6727  00514A  D00C               	goto	l4301
  6728  00514C                     l4297:
  6729                           
  6730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6731  00514C  0E00               	movlw	0
  6732  00514E  6E0D               	movwf	fputc@c+1,c
  6733  005150  0E20               	movlw	32
  6734  005152  6E0C               	movwf	fputc@c,c
  6735  005154  C01C  F00E         	movff	pad@fp,fputc@fp
  6736  005158  C01D  F00F         	movff	pad@fp+1,fputc@fp+1
  6737  00515C  EC3A  F028         	call	_fputc	;wreg free
  6738                           
  6739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6740  005160  4A23               	infsnz	pad@i,f,c
  6741  005162  2A24               	incf	pad@i+1,f,c
  6742  005164                     l4301:
  6743                           
  6744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6745  005164  5025               	movf	pad@w,w,c
  6746  005166  5C23               	subwf	pad@i,w,c
  6747  005168  5024               	movf	pad@i+1,w,c
  6748  00516A  0A80               	xorlw	128
  6749  00516C  6E22               	movwf	??_pad& (0+255),c
  6750  00516E  5026               	movf	pad@w+1,w,c
  6751  005170  0A80               	xorlw	128
  6752  005172  5822               	subwfb	??_pad& (0+255),w,c
  6753  005174  A0D8               	btfss	status,0,c
  6754  005176  D7EA               	goto	l4297
  6755                           
  6756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6757  005178  B03E               	btfsc	_flags,0,c
  6758  00517A  D00A               	goto	l4305
  6759                           
  6760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6761  00517C  C01E  F015         	movff	pad@buf,fputs@s
  6762  005180  C01F  F016         	movff	pad@buf+1,fputs@s+1
  6763  005184  C01C  F017         	movff	pad@fp,fputs@fp
  6764  005188  C01D  F018         	movff	pad@fp+1,fputs@fp+1
  6765  00518C  EC47  F02B         	call	_fputs	;wreg free
  6766  005190                     l4305:
  6767                           
  6768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6769  005190  C01E  F00C         	movff	pad@buf,strlen@s
  6770  005194  C01F  F00D         	movff	pad@buf+1,strlen@s+1
  6771  005198  EC9D  F02C         	call	_strlen	;wreg free
  6772  00519C  5025               	movf	pad@w,w,c
  6773  00519E  240C               	addwf	?_strlen,w,c
  6774  0051A0  6E1C               	movwf	?_pad,c
  6775  0051A2  5026               	movf	pad@w+1,w,c
  6776  0051A4  200D               	addwfc	?_strlen+1,w,c
  6777  0051A6  6E1D               	movwf	?_pad+1,c
  6778  0051A8  0012               	return		;funcret
  6779  0051AA                     __end_of_pad:
  6780                           	opt callstack 0
  6781                           
  6782 ;; *************** function _strlen *****************
  6783 ;; Defined at:
  6784 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6787 ;;		 -> dbuf(32), 
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;  a               2   13[COMRAM] PTR const unsigned char 
  6790 ;;		 -> dbuf(32), 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  2   11[COMRAM] unsigned int 
  6793 ;; Registers used:
  6794 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6800 ;;      Params:         2       0       0       0       0       0       0       0       0
  6801 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6802 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6803 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6804 ;;Total ram usage:        4 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; Hardware stack levels required when called:    7
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		_pad
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           	psect	text32
  6815  00593A                     __ptext32:
  6816                           	opt callstack 0
  6817  00593A                     _strlen:
  6818                           	opt callstack 17
  6819                           
  6820                           ;incstack = 0
  6821  00593A  C00C  F00E         	movff	strlen@s,strlen@a
  6822  00593E  C00D  F00F         	movff	strlen@s+1,strlen@a+1
  6823  005942  D002               	goto	l4281
  6824  005944                     l4279:
  6825  005944  4A0C               	infsnz	strlen@s,f,c
  6826  005946  2A0D               	incf	strlen@s+1,f,c
  6827  005948                     l4281:
  6828  005948  C00C  FFD9         	movff	strlen@s,fsr2l
  6829  00594C  C00D  FFDA         	movff	strlen@s+1,fsr2h
  6830  005950  50DF               	movf	indf2,w,c
  6831  005952  A4D8               	btfss	status,2,c
  6832  005954  D7F7               	goto	l4279
  6833  005956  500E               	movf	strlen@a,w,c
  6834  005958  5C0C               	subwf	strlen@s,w,c
  6835  00595A  6E0C               	movwf	?_strlen,c
  6836  00595C  500F               	movf	strlen@a+1,w,c
  6837  00595E  580D               	subwfb	strlen@s+1,w,c
  6838  005960  6E0D               	movwf	?_strlen+1,c
  6839  005962  0012               	return		;funcret
  6840  005964                     __end_of_strlen:
  6841                           	opt callstack 0
  6842                           
  6843 ;; *************** function _fputs *****************
  6844 ;; Defined at:
  6845 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;  s               2   20[COMRAM] PTR const unsigned char 
  6848 ;;		 -> dbuf(32), 
  6849 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  6850 ;;		 -> sprintf@f(6), 
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;  i               2   25[COMRAM] int 
  6853 ;;  c               1   24[COMRAM] unsigned char 
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  2   20[COMRAM] int 
  6856 ;; Registers used:
  6857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6863 ;;      Params:         4       0       0       0       0       0       0       0       0
  6864 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6865 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6866 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6867 ;;Total ram usage:        7 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:    9
  6870 ;; This function calls:
  6871 ;;		_fputc
  6872 ;; This function is called by:
  6873 ;;		_pad
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           	psect	text33
  6878  00568E                     __ptext33:
  6879                           	opt callstack 0
  6880  00568E                     _fputs:
  6881                           	opt callstack 15
  6882                           
  6883                           ;incstack = 0
  6884  00568E  0E00               	movlw	0
  6885  005690  6E1B               	movwf	fputs@i+1,c
  6886  005692  0E00               	movlw	0
  6887  005694  6E1A               	movwf	fputs@i,c
  6888  005696  D00B               	goto	l4275
  6889  005698                     l4271:
  6890  005698  C019  F00C         	movff	fputs@c,fputc@c
  6891  00569C  6A0D               	clrf	fputc@c+1,c
  6892  00569E  C017  F00E         	movff	fputs@fp,fputc@fp
  6893  0056A2  C018  F00F         	movff	fputs@fp+1,fputc@fp+1
  6894  0056A6  EC3A  F028         	call	_fputc	;wreg free
  6895  0056AA  4A1A               	infsnz	fputs@i,f,c
  6896  0056AC  2A1B               	incf	fputs@i+1,f,c
  6897  0056AE                     l4275:
  6898  0056AE  501A               	movf	fputs@i,w,c
  6899  0056B0  2415               	addwf	fputs@s,w,c
  6900  0056B2  6ED9               	movwf	fsr2l,c
  6901  0056B4  501B               	movf	fputs@i+1,w,c
  6902  0056B6  2016               	addwfc	fputs@s+1,w,c
  6903  0056B8  6EDA               	movwf	fsr2h,c
  6904  0056BA  50DF               	movf	indf2,w,c
  6905  0056BC  6E19               	movwf	fputs@c,c
  6906  0056BE  5019               	movf	fputs@c,w,c
  6907  0056C0  B4D8               	btfsc	status,2,c
  6908  0056C2  0012               	return	
  6909  0056C4  D7E9               	goto	l4271
  6910  0056C6                     __end_of_fputs:
  6911                           	opt callstack 0
  6912                           
  6913 ;; *************** function _fputc *****************
  6914 ;; Defined at:
  6915 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;  c               2   11[COMRAM] int 
  6918 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  6919 ;;		 -> sprintf@f(6), 
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;		None
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  2   11[COMRAM] int 
  6924 ;; Registers used:
  6925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6931 ;;      Params:         4       0       0       0       0       0       0       0       0
  6932 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6933 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6934 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6935 ;;Total ram usage:        9 bytes
  6936 ;; Hardware stack levels used:    1
  6937 ;; Hardware stack levels required when called:    8
  6938 ;; This function calls:
  6939 ;;		_putch
  6940 ;; This function is called by:
  6941 ;;		_pad
  6942 ;;		_vfpfcnvrt
  6943 ;;		_fputs
  6944 ;; This function uses a non-reentrant model
  6945 ;;
  6946                           
  6947                           	psect	text34
  6948  005074                     __ptext34:
  6949                           	opt callstack 0
  6950  005074                     _fputc:
  6951                           	opt callstack 15
  6952                           
  6953                           ;incstack = 0
  6954  005074  500E               	movf	fputc@fp,w,c
  6955  005076  100F               	iorwf	fputc@fp+1,w,c
  6956  005078  B4D8               	btfsc	status,2,c
  6957  00507A  D004               	goto	u3380
  6958  00507C  500E               	movf	fputc@fp,w,c
  6959  00507E  100F               	iorwf	fputc@fp+1,w,c
  6960  005080  A4D8               	btfss	status,2,c
  6961  005082  D004               	goto	l4261
  6962  005084                     u3380:
  6963  005084  500C               	movf	fputc@c,w,c
  6964  005086  ECDA  F02D         	call	_putch
  6965  00508A  0012               	return	
  6966  00508C                     l4261:
  6967  00508C  EE20 F004          	lfsr	2,4
  6968  005090  500E               	movf	fputc@fp,w,c
  6969  005092  26D9               	addwf	fsr2l,f,c
  6970  005094  500F               	movf	fputc@fp+1,w,c
  6971  005096  22DA               	addwfc	fsr2h,f,c
  6972  005098  50DE               	movf	postinc2,w,c
  6973  00509A  10DE               	iorwf	postinc2,w,c
  6974  00509C  B4D8               	btfsc	status,2,c
  6975  00509E  D016               	goto	u3400
  6976  0050A0  EE20 F004          	lfsr	2,4
  6977  0050A4  500E               	movf	fputc@fp,w,c
  6978  0050A6  26D9               	addwf	fsr2l,f,c
  6979  0050A8  500F               	movf	fputc@fp+1,w,c
  6980  0050AA  22DA               	addwfc	fsr2h,f,c
  6981  0050AC  EE10 F002          	lfsr	1,2
  6982  0050B0  500E               	movf	fputc@fp,w,c
  6983  0050B2  26E1               	addwf	fsr1l,f,c
  6984  0050B4  500F               	movf	fputc@fp+1,w,c
  6985  0050B6  22E2               	addwfc	fsr1h,f,c
  6986  0050B8  50DE               	movf	postinc2,w,c
  6987  0050BA  5CE6               	subwf	postinc1,w,c
  6988  0050BC  50E6               	movf	postinc1,w,c
  6989  0050BE  0A80               	xorlw	128
  6990  0050C0  6E14               	movwf	(??_fputc+4)& (0+255),c
  6991  0050C2  50DE               	movf	postinc2,w,c
  6992  0050C4  0A80               	xorlw	128
  6993  0050C6  5814               	subwfb	(??_fputc+4)& (0+255),w,c
  6994  0050C8  B0D8               	btfsc	status,0,c
  6995  0050CA  0012               	return	
  6996  0050CC                     u3400:
  6997  0050CC  EE20 F002          	lfsr	2,2
  6998  0050D0  500E               	movf	fputc@fp,w,c
  6999  0050D2  26D9               	addwf	fsr2l,f,c
  7000  0050D4  500F               	movf	fputc@fp+1,w,c
  7001  0050D6  22DA               	addwfc	fsr2h,f,c
  7002  0050D8  CFDE F010          	movff	postinc2,??_fputc
  7003  0050DC  CFDD F011          	movff	postdec2,??_fputc+1
  7004  0050E0  C00E  FFD9         	movff	fputc@fp,fsr2l
  7005  0050E4  C00F  FFDA         	movff	fputc@fp+1,fsr2h
  7006  0050E8  CFDE F012          	movff	postinc2,??_fputc+2
  7007  0050EC  CFDD F013          	movff	postdec2,??_fputc+3
  7008  0050F0  5010               	movf	??_fputc,w,c
  7009  0050F2  2412               	addwf	??_fputc+2,w,c
  7010  0050F4  6ED9               	movwf	fsr2l,c
  7011  0050F6  5011               	movf	??_fputc+1,w,c
  7012  0050F8  2013               	addwfc	??_fputc+3,w,c
  7013  0050FA  6EDA               	movwf	fsr2h,c
  7014  0050FC  C00C  FFDF         	movff	fputc@c,indf2
  7015  005100  EE20 F002          	lfsr	2,2
  7016  005104  500E               	movf	fputc@fp,w,c
  7017  005106  26D9               	addwf	fsr2l,f,c
  7018  005108  500F               	movf	fputc@fp+1,w,c
  7019  00510A  22DA               	addwfc	fsr2h,f,c
  7020  00510C  2ADE               	incf	postinc2,f,c
  7021  00510E  0E00               	movlw	0
  7022  005110  22DD               	addwfc	postdec2,f,c
  7023  005112  0012               	return		;funcret
  7024  005114                     __end_of_fputc:
  7025                           	opt callstack 0
  7026                           
  7027 ;; *************** function _putch *****************
  7028 ;; Defined at:
  7029 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;  c               1    wreg     unsigned char 
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;  c               1    0[COMRAM] unsigned char 
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  1    wreg      void 
  7036 ;; Registers used:
  7037 ;;		wreg
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7043 ;;      Params:         0       0       0       0       0       0       0       0       0
  7044 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7045 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7046 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7047 ;;Total ram usage:        0 bytes
  7048 ;; Hardware stack levels used:    1
  7049 ;; Hardware stack levels required when called:    7
  7050 ;; This function calls:
  7051 ;;		Nothing
  7052 ;; This function is called by:
  7053 ;;		_fputc
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057                           	psect	text35
  7058  005BB4                     __ptext35:
  7059                           	opt callstack 0
  7060  005BB4                     _putch:
  7061                           	opt callstack 15
  7062                           
  7063                           ;incstack = 0
  7064  005BB4  0012               	return		;funcret
  7065  005BB6                     __end_of_putch:
  7066                           	opt callstack 0
  7067                           
  7068 ;; *************** function _atol *****************
  7069 ;; Defined at:
  7070 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atol.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  s               2   23[COMRAM] PTR const unsigned char 
  7073 ;;		 -> rx_data(20), 
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;  n               4   39[COMRAM] long 
  7076 ;;  neg             2   32[COMRAM] int 
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  4   23[COMRAM] long 
  7079 ;; Registers used:
  7080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7086 ;;      Params:         4       0       0       0       0       0       0       0       0
  7087 ;;      Locals:        11       0       0       0       0       0       0       0       0
  7088 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7089 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7090 ;;Total ram usage:       20 bytes
  7091 ;; Hardware stack levels used:    1
  7092 ;; Hardware stack levels required when called:    8
  7093 ;; This function calls:
  7094 ;;		___lmul
  7095 ;;		_isdigit
  7096 ;;		_isspace
  7097 ;; This function is called by:
  7098 ;;		_Parse_Data
  7099 ;; This function uses a non-reentrant model
  7100 ;;
  7101                           
  7102                           	psect	text36
  7103  004460                     __ptext36:
  7104                           	opt callstack 0
  7105  004460                     _atol:
  7106                           	opt callstack 21
  7107                           
  7108                           ;incstack = 0
  7109  004460  0E00               	movlw	0
  7110  004462  6E28               	movwf	atol@n,c
  7111  004464  0E00               	movlw	0
  7112  004466  6E29               	movwf	atol@n+1,c
  7113  004468  0E00               	movlw	0
  7114  00446A  6E2A               	movwf	atol@n+2,c
  7115  00446C  0E00               	movlw	0
  7116  00446E  6E2B               	movwf	atol@n+3,c
  7117  004470  0E00               	movlw	0
  7118  004472  6E22               	movwf	atol@neg+1,c
  7119  004474  0E00               	movlw	0
  7120  004476  6E21               	movwf	atol@neg,c
  7121  004478  D002               	goto	l6075
  7122  00447A                     l6073:
  7123  00447A  4A18               	infsnz	atol@s,f,c
  7124  00447C  2A19               	incf	atol@s+1,f,c
  7125  00447E                     l6075:
  7126  00447E  0E01               	movlw	1
  7127  004480  6E27               	movwf	_atol$2079,c
  7128  004482  C018  FFD9         	movff	atol@s,fsr2l
  7129  004486  C019  FFDA         	movff	atol@s+1,fsr2h
  7130  00448A  0E20               	movlw	32
  7131  00448C  18DE               	xorwf	postinc2,w,c
  7132  00448E  B4D8               	btfsc	status,2,c
  7133  004490  D017               	goto	l6083
  7134  004492  0EF7               	movlw	247
  7135  004494  6E1C               	movwf	??_atol& (0+255),c
  7136  004496  0EFF               	movlw	255
  7137  004498  6E1D               	movwf	(??_atol+1)& (0+255),c
  7138  00449A  C018  FFD9         	movff	atol@s,fsr2l
  7139  00449E  C019  FFDA         	movff	atol@s+1,fsr2h
  7140  0044A2  50DF               	movf	indf2,w,c
  7141  0044A4  6E1E               	movwf	(??_atol+2)& (0+255),c
  7142  0044A6  6A1F               	clrf	(??_atol+3)& (0+255),c
  7143  0044A8  501C               	movf	??_atol,w,c
  7144  0044AA  261E               	addwf	??_atol+2,f,c
  7145  0044AC  501D               	movf	??_atol+1,w,c
  7146  0044AE  221F               	addwfc	??_atol+3,f,c
  7147  0044B0  501F               	movf	??_atol+3,w,c
  7148  0044B2  E104               	bnz	u6040
  7149  0044B4  0E05               	movlw	5
  7150  0044B6  5C1E               	subwf	??_atol+2,w,c
  7151  0044B8  A0D8               	btfss	status,0,c
  7152  0044BA  D002               	goto	l6083
  7153  0044BC                     u6040:
  7154  0044BC  0E00               	movlw	0
  7155  0044BE  6E27               	movwf	_atol$2079,c
  7156  0044C0                     l6083:
  7157  0044C0  C027  F023         	movff	_atol$2079,_atol$2078
  7158  0044C4  6A24               	clrf	_atol$2078+1,c
  7159  0044C6  5023               	movf	_atol$2078,w,c
  7160  0044C8  1024               	iorwf	_atol$2078+1,w,c
  7161  0044CA  B4D8               	btfsc	status,2,c
  7162  0044CC  D008               	goto	l6093
  7163  0044CE  D7D5               	goto	l6073
  7164  0044D0                     l6089:
  7165  0044D0  0E00               	movlw	0
  7166  0044D2  6E22               	movwf	atol@neg+1,c
  7167  0044D4  0E01               	movlw	1
  7168  0044D6  6E21               	movwf	atol@neg,c
  7169  0044D8                     l6091:
  7170  0044D8  4A18               	infsnz	atol@s,f,c
  7171  0044DA  2A19               	incf	atol@s+1,f,c
  7172  0044DC  D040               	goto	l6099
  7173  0044DE                     l6093:
  7174  0044DE  C018  FFD9         	movff	atol@s,fsr2l
  7175  0044E2  C019  FFDA         	movff	atol@s+1,fsr2h
  7176  0044E6  50DF               	movf	indf2,w,c
  7177  0044E8  6E1C               	movwf	??_atol& (0+255),c
  7178  0044EA  6A1D               	clrf	(??_atol+1)& (0+255),c
  7179                           
  7180                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7181                           ; Switch size 1, requested type "simple"
  7182                           ; Number of cases is 1, Range of values is 0 to 0
  7183                           ; switch strategies available:
  7184                           ; Name         Instructions Cycles
  7185                           ; simple_byte            4     3 (average)
  7186                           ;	Chosen strategy is simple_byte
  7187  0044EC  501D               	movf	??_atol+1,w,c
  7188  0044EE  0A00               	xorlw	0	; case 0
  7189  0044F0  A4D8               	btfss	status,2,c
  7190  0044F2  D035               	goto	l6099
  7191                           
  7192                           ; Switch size 1, requested type "simple"
  7193                           ; Number of cases is 2, Range of values is 43 to 45
  7194                           ; switch strategies available:
  7195                           ; Name         Instructions Cycles
  7196                           ; simple_byte            7     4 (average)
  7197                           ;	Chosen strategy is simple_byte
  7198  0044F4  501C               	movf	??_atol,w,c
  7199  0044F6  0A2B               	xorlw	43	; case 43
  7200  0044F8  B4D8               	btfsc	status,2,c
  7201  0044FA  D7EE               	goto	l6091
  7202  0044FC  0A06               	xorlw	6	; case 45
  7203  0044FE  B4D8               	btfsc	status,2,c
  7204  004500  D7E7               	goto	l6089
  7205  004502  D02D               	goto	l6099
  7206  004504                     l6095:
  7207  004504  C018  FFD9         	movff	atol@s,fsr2l
  7208  004508  C019  FFDA         	movff	atol@s+1,fsr2h
  7209  00450C  50DF               	movf	indf2,w,c
  7210  00450E  6E1C               	movwf	??_atol& (0+255),c
  7211  004510  0ED0               	movlw	208
  7212  004512  241C               	addwf	??_atol,w,c
  7213  004514  6E1D               	movwf	(??_atol+1)& (0+255),c
  7214  004516  6A1E               	clrf	(??_atol+2)& (0+255),c
  7215  004518  0EFF               	movlw	255
  7216  00451A  221E               	addwfc	(??_atol+2)& (0+255),f,c
  7217  00451C  6A1F               	clrf	(??_atol+3)& (0+255),c
  7218  00451E  6A20               	clrf	(??_atol+4)& (0+255),c
  7219  004520  C028  F00C         	movff	atol@n,___lmul@multiplier
  7220  004524  C029  F00D         	movff	atol@n+1,___lmul@multiplier+1
  7221  004528  C02A  F00E         	movff	atol@n+2,___lmul@multiplier+2
  7222  00452C  C02B  F00F         	movff	atol@n+3,___lmul@multiplier+3
  7223  004530  0E0A               	movlw	10
  7224  004532  6E10               	movwf	___lmul@multiplicand,c
  7225  004534  0E00               	movlw	0
  7226  004536  6E11               	movwf	___lmul@multiplicand+1,c
  7227  004538  0E00               	movlw	0
  7228  00453A  6E12               	movwf	___lmul@multiplicand+2,c
  7229  00453C  0E00               	movlw	0
  7230  00453E  6E13               	movwf	___lmul@multiplicand+3,c
  7231  004540  ECE8  F029         	call	___lmul	;wreg free
  7232  004544  501D               	movf	??_atol+1,w,c
  7233  004546  5C0C               	subwf	?___lmul,w,c
  7234  004548  6E28               	movwf	atol@n,c
  7235  00454A  501E               	movf	??_atol+2,w,c
  7236  00454C  580D               	subwfb	?___lmul+1,w,c
  7237  00454E  6E29               	movwf	atol@n+1,c
  7238  004550  501F               	movf	??_atol+3,w,c
  7239  004552  580E               	subwfb	?___lmul+2,w,c
  7240  004554  6E2A               	movwf	atol@n+2,c
  7241  004556  5020               	movf	??_atol+4,w,c
  7242  004558  580F               	subwfb	?___lmul+3,w,c
  7243  00455A  6E2B               	movwf	atol@n+3,c
  7244  00455C  D7BD               	goto	l6091
  7245  00455E                     l6099:
  7246  00455E  0ED0               	movlw	208
  7247  004560  6E1C               	movwf	??_atol& (0+255),c
  7248  004562  0EFF               	movlw	255
  7249  004564  6E1D               	movwf	(??_atol+1)& (0+255),c
  7250  004566  C018  FFD9         	movff	atol@s,fsr2l
  7251  00456A  C019  FFDA         	movff	atol@s+1,fsr2h
  7252  00456E  50DF               	movf	indf2,w,c
  7253  004570  6E1E               	movwf	(??_atol+2)& (0+255),c
  7254  004572  6A1F               	clrf	(??_atol+3)& (0+255),c
  7255  004574  501C               	movf	??_atol,w,c
  7256  004576  261E               	addwf	??_atol+2,f,c
  7257  004578  501D               	movf	??_atol+1,w,c
  7258  00457A  221F               	addwfc	??_atol+3,f,c
  7259  00457C  501F               	movf	??_atol+3,w,c
  7260  00457E  E106               	bnz	u6060
  7261  004580  0E0A               	movlw	10
  7262  004582  5C1E               	subwf	??_atol+2,w,c
  7263  004584  B0D8               	btfsc	status,0,c
  7264  004586  D002               	goto	u6060
  7265  004588  0E01               	movlw	1
  7266  00458A  D001               	goto	u6070
  7267  00458C                     u6060:
  7268  00458C  0E00               	movlw	0
  7269  00458E                     u6070:
  7270  00458E  6E25               	movwf	_atol$2080,c
  7271  004590  6A26               	clrf	_atol$2080+1,c
  7272  004592  5025               	movf	_atol$2080,w,c
  7273  004594  1026               	iorwf	_atol$2080+1,w,c
  7274  004596  A4D8               	btfss	status,2,c
  7275  004598  D7B5               	goto	l6095
  7276  00459A  5021               	movf	atol@neg,w,c
  7277  00459C  1022               	iorwf	atol@neg+1,w,c
  7278  00459E  A4D8               	btfss	status,2,c
  7279  0045A0  D01A               	goto	l1532
  7280  0045A2  C028  F01C         	movff	atol@n,??_atol
  7281  0045A6  C029  F01D         	movff	atol@n+1,??_atol+1
  7282  0045AA  C02A  F01E         	movff	atol@n+2,??_atol+2
  7283  0045AE  C02B  F01F         	movff	atol@n+3,??_atol+3
  7284  0045B2  1E1C               	comf	??_atol,f,c
  7285  0045B4  1E1D               	comf	??_atol+1,f,c
  7286  0045B6  1E1E               	comf	??_atol+2,f,c
  7287  0045B8  1E1F               	comf	??_atol+3,f,c
  7288  0045BA  2A1C               	incf	??_atol,f,c
  7289  0045BC  0E00               	movlw	0
  7290  0045BE  221D               	addwfc	??_atol+1,f,c
  7291  0045C0  221E               	addwfc	??_atol+2,f,c
  7292  0045C2  221F               	addwfc	??_atol+3,f,c
  7293  0045C4  C01C  F018         	movff	??_atol,?_atol
  7294  0045C8  C01D  F019         	movff	??_atol+1,?_atol+1
  7295  0045CC  C01E  F01A         	movff	??_atol+2,?_atol+2
  7296  0045D0  C01F  F01B         	movff	??_atol+3,?_atol+3
  7297  0045D4  0012               	return	
  7298  0045D6                     l1532:
  7299  0045D6  C028  F018         	movff	atol@n,?_atol
  7300  0045DA  C029  F019         	movff	atol@n+1,?_atol+1
  7301  0045DE  C02A  F01A         	movff	atol@n+2,?_atol+2
  7302  0045E2  C02B  F01B         	movff	atol@n+3,?_atol+3
  7303  0045E6  0012               	return		;funcret
  7304  0045E8                     __end_of_atol:
  7305                           	opt callstack 0
  7306                           
  7307 ;; *************** function ___lmul *****************
  7308 ;; Defined at:
  7309 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  multiplier      4   11[COMRAM] unsigned long 
  7312 ;;  multiplicand    4   15[COMRAM] unsigned long 
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;  product         4   19[COMRAM] unsigned long 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  4   11[COMRAM] unsigned long 
  7317 ;; Registers used:
  7318 ;;		wreg, status,2, status,0
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7324 ;;      Params:         8       0       0       0       0       0       0       0       0
  7325 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7326 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7327 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7328 ;;Total ram usage:       12 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; Hardware stack levels required when called:    7
  7331 ;; This function calls:
  7332 ;;		Nothing
  7333 ;; This function is called by:
  7334 ;;		_atol
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           	psect	text37
  7339  0053D0                     __ptext37:
  7340                           	opt callstack 0
  7341  0053D0                     ___lmul:
  7342                           	opt callstack 21
  7343                           
  7344                           ;incstack = 0
  7345  0053D0  0E00               	movlw	0
  7346  0053D2  6E14               	movwf	___lmul@product,c
  7347  0053D4  0E00               	movlw	0
  7348  0053D6  6E15               	movwf	___lmul@product+1,c
  7349  0053D8  0E00               	movlw	0
  7350  0053DA  6E16               	movwf	___lmul@product+2,c
  7351  0053DC  0E00               	movlw	0
  7352  0053DE  6E17               	movwf	___lmul@product+3,c
  7353  0053E0                     l5861:
  7354  0053E0  A00C               	btfss	___lmul@multiplier,0,c
  7355  0053E2  D008               	goto	l5865
  7356  0053E4  5010               	movf	___lmul@multiplicand,w,c
  7357  0053E6  2614               	addwf	___lmul@product,f,c
  7358  0053E8  5011               	movf	___lmul@multiplicand+1,w,c
  7359  0053EA  2215               	addwfc	___lmul@product+1,f,c
  7360  0053EC  5012               	movf	___lmul@multiplicand+2,w,c
  7361  0053EE  2216               	addwfc	___lmul@product+2,f,c
  7362  0053F0  5013               	movf	___lmul@multiplicand+3,w,c
  7363  0053F2  2217               	addwfc	___lmul@product+3,f,c
  7364  0053F4                     l5865:
  7365  0053F4  90D8               	bcf	status,0,c
  7366  0053F6  3610               	rlcf	___lmul@multiplicand,f,c
  7367  0053F8  3611               	rlcf	___lmul@multiplicand+1,f,c
  7368  0053FA  3612               	rlcf	___lmul@multiplicand+2,f,c
  7369  0053FC  3613               	rlcf	___lmul@multiplicand+3,f,c
  7370  0053FE  90D8               	bcf	status,0,c
  7371  005400  320F               	rrcf	___lmul@multiplier+3,f,c
  7372  005402  320E               	rrcf	___lmul@multiplier+2,f,c
  7373  005404  320D               	rrcf	___lmul@multiplier+1,f,c
  7374  005406  320C               	rrcf	___lmul@multiplier,f,c
  7375  005408  500C               	movf	___lmul@multiplier,w,c
  7376  00540A  100D               	iorwf	___lmul@multiplier+1,w,c
  7377  00540C  100E               	iorwf	___lmul@multiplier+2,w,c
  7378  00540E  100F               	iorwf	___lmul@multiplier+3,w,c
  7379  005410  A4D8               	btfss	status,2,c
  7380  005412  D7E6               	goto	l5861
  7381  005414  C014  F00C         	movff	___lmul@product,?___lmul
  7382  005418  C015  F00D         	movff	___lmul@product+1,?___lmul+1
  7383  00541C  C016  F00E         	movff	___lmul@product+2,?___lmul+2
  7384  005420  C017  F00F         	movff	___lmul@product+3,?___lmul+3
  7385  005424  0012               	return		;funcret
  7386  005426                     __end_of___lmul:
  7387                           	opt callstack 0
  7388                           
  7389 ;; *************** function _atoi *****************
  7390 ;; Defined at:
  7391 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  7392 ;; Parameters:    Size  Location     Type
  7393 ;;  s               2   18[COMRAM] PTR const unsigned char 
  7394 ;;		 -> rx_data(20), 
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;  n               2   31[COMRAM] int 
  7397 ;;  neg             2   24[COMRAM] int 
  7398 ;; Return value:  Size  Location     Type
  7399 ;;                  2   18[COMRAM] int 
  7400 ;; Registers used:
  7401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7402 ;; Tracked objects:
  7403 ;;		On entry : 0/0
  7404 ;;		On exit  : 0/0
  7405 ;;		Unchanged: 0/0
  7406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7407 ;;      Params:         2       0       0       0       0       0       0       0       0
  7408 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7409 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7410 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7411 ;;Total ram usage:       15 bytes
  7412 ;; Hardware stack levels used:    1
  7413 ;; Hardware stack levels required when called:    8
  7414 ;; This function calls:
  7415 ;;		___wmul
  7416 ;;		_isdigit
  7417 ;;		_isspace
  7418 ;; This function is called by:
  7419 ;;		_Parse_Data
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text38
  7424  0049B0                     __ptext38:
  7425                           	opt callstack 0
  7426  0049B0                     _atoi:
  7427                           	opt callstack 21
  7428                           
  7429                           ;incstack = 0
  7430  0049B0  0E00               	movlw	0
  7431  0049B2  6E21               	movwf	atoi@n+1,c
  7432  0049B4  0E00               	movlw	0
  7433  0049B6  6E20               	movwf	atoi@n,c
  7434  0049B8  0E00               	movlw	0
  7435  0049BA  6E1A               	movwf	atoi@neg+1,c
  7436  0049BC  0E00               	movlw	0
  7437  0049BE  6E19               	movwf	atoi@neg,c
  7438  0049C0  D002               	goto	l6139
  7439  0049C2                     l6137:
  7440  0049C2  4A13               	infsnz	atoi@s,f,c
  7441  0049C4  2A14               	incf	atoi@s+1,f,c
  7442  0049C6                     l6139:
  7443  0049C6  0E01               	movlw	1
  7444  0049C8  6E1F               	movwf	_atoi$2070,c
  7445  0049CA  C013  FFD9         	movff	atoi@s,fsr2l
  7446  0049CE  C014  FFDA         	movff	atoi@s+1,fsr2h
  7447  0049D2  0E20               	movlw	32
  7448  0049D4  18DE               	xorwf	postinc2,w,c
  7449  0049D6  B4D8               	btfsc	status,2,c
  7450  0049D8  D017               	goto	l6147
  7451  0049DA  0EF7               	movlw	247
  7452  0049DC  6E15               	movwf	??_atoi& (0+255),c
  7453  0049DE  0EFF               	movlw	255
  7454  0049E0  6E16               	movwf	(??_atoi+1)& (0+255),c
  7455  0049E2  C013  FFD9         	movff	atoi@s,fsr2l
  7456  0049E6  C014  FFDA         	movff	atoi@s+1,fsr2h
  7457  0049EA  50DF               	movf	indf2,w,c
  7458  0049EC  6E17               	movwf	(??_atoi+2)& (0+255),c
  7459  0049EE  6A18               	clrf	(??_atoi+3)& (0+255),c
  7460  0049F0  5015               	movf	??_atoi,w,c
  7461  0049F2  2617               	addwf	??_atoi+2,f,c
  7462  0049F4  5016               	movf	??_atoi+1,w,c
  7463  0049F6  2218               	addwfc	??_atoi+3,f,c
  7464  0049F8  5018               	movf	??_atoi+3,w,c
  7465  0049FA  E104               	bnz	u6120
  7466  0049FC  0E05               	movlw	5
  7467  0049FE  5C17               	subwf	??_atoi+2,w,c
  7468  004A00  A0D8               	btfss	status,0,c
  7469  004A02  D002               	goto	l6147
  7470  004A04                     u6120:
  7471  004A04  0E00               	movlw	0
  7472  004A06  6E1F               	movwf	_atoi$2070,c
  7473  004A08                     l6147:
  7474  004A08  C01F  F01B         	movff	_atoi$2070,_atoi$2069
  7475  004A0C  6A1C               	clrf	_atoi$2069+1,c
  7476  004A0E  501B               	movf	_atoi$2069,w,c
  7477  004A10  101C               	iorwf	_atoi$2069+1,w,c
  7478  004A12  B4D8               	btfsc	status,2,c
  7479  004A14  D008               	goto	l6157
  7480  004A16  D7D5               	goto	l6137
  7481  004A18                     l6153:
  7482  004A18  0E00               	movlw	0
  7483  004A1A  6E1A               	movwf	atoi@neg+1,c
  7484  004A1C  0E01               	movlw	1
  7485  004A1E  6E19               	movwf	atoi@neg,c
  7486  004A20                     l6155:
  7487  004A20  4A13               	infsnz	atoi@s,f,c
  7488  004A22  2A14               	incf	atoi@s+1,f,c
  7489  004A24  D02E               	goto	l6163
  7490  004A26                     l6157:
  7491  004A26  C013  FFD9         	movff	atoi@s,fsr2l
  7492  004A2A  C014  FFDA         	movff	atoi@s+1,fsr2h
  7493  004A2E  50DF               	movf	indf2,w,c
  7494  004A30  6E15               	movwf	??_atoi& (0+255),c
  7495  004A32  6A16               	clrf	(??_atoi+1)& (0+255),c
  7496                           
  7497                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7498                           ; Switch size 1, requested type "simple"
  7499                           ; Number of cases is 1, Range of values is 0 to 0
  7500                           ; switch strategies available:
  7501                           ; Name         Instructions Cycles
  7502                           ; simple_byte            4     3 (average)
  7503                           ;	Chosen strategy is simple_byte
  7504  004A34  5016               	movf	??_atoi+1,w,c
  7505  004A36  0A00               	xorlw	0	; case 0
  7506  004A38  A4D8               	btfss	status,2,c
  7507  004A3A  D023               	goto	l6163
  7508                           
  7509                           ; Switch size 1, requested type "simple"
  7510                           ; Number of cases is 2, Range of values is 43 to 45
  7511                           ; switch strategies available:
  7512                           ; Name         Instructions Cycles
  7513                           ; simple_byte            7     4 (average)
  7514                           ;	Chosen strategy is simple_byte
  7515  004A3C  5015               	movf	??_atoi,w,c
  7516  004A3E  0A2B               	xorlw	43	; case 43
  7517  004A40  B4D8               	btfsc	status,2,c
  7518  004A42  D7EE               	goto	l6155
  7519  004A44  0A06               	xorlw	6	; case 45
  7520  004A46  B4D8               	btfsc	status,2,c
  7521  004A48  D7E7               	goto	l6153
  7522  004A4A  D01B               	goto	l6163
  7523  004A4C                     l6159:
  7524  004A4C  C020  F00C         	movff	atoi@n,___wmul@multiplier
  7525  004A50  C021  F00D         	movff	atoi@n+1,___wmul@multiplier+1
  7526  004A54  0E00               	movlw	0
  7527  004A56  6E0F               	movwf	___wmul@multiplicand+1,c
  7528  004A58  0E0A               	movlw	10
  7529  004A5A  6E0E               	movwf	___wmul@multiplicand,c
  7530  004A5C  ECDA  F02C         	call	___wmul	;wreg free
  7531  004A60  C013  FFD9         	movff	atoi@s,fsr2l
  7532  004A64  C014  FFDA         	movff	atoi@s+1,fsr2h
  7533  004A68  50DF               	movf	indf2,w,c
  7534  004A6A  6E15               	movwf	??_atoi& (0+255),c
  7535  004A6C  5015               	movf	??_atoi,w,c
  7536  004A6E  5E0C               	subwf	?___wmul,f,c
  7537  004A70  0E00               	movlw	0
  7538  004A72  5A0D               	subwfb	?___wmul+1,f,c
  7539  004A74  0E30               	movlw	48
  7540  004A76  240C               	addwf	?___wmul,w,c
  7541  004A78  6E20               	movwf	atoi@n,c
  7542  004A7A  0E00               	movlw	0
  7543  004A7C  200D               	addwfc	?___wmul+1,w,c
  7544  004A7E  6E21               	movwf	atoi@n+1,c
  7545  004A80  D7CF               	goto	l6155
  7546  004A82                     l6163:
  7547  004A82  0ED0               	movlw	208
  7548  004A84  6E15               	movwf	??_atoi& (0+255),c
  7549  004A86  0EFF               	movlw	255
  7550  004A88  6E16               	movwf	(??_atoi+1)& (0+255),c
  7551  004A8A  C013  FFD9         	movff	atoi@s,fsr2l
  7552  004A8E  C014  FFDA         	movff	atoi@s+1,fsr2h
  7553  004A92  50DF               	movf	indf2,w,c
  7554  004A94  6E17               	movwf	(??_atoi+2)& (0+255),c
  7555  004A96  6A18               	clrf	(??_atoi+3)& (0+255),c
  7556  004A98  5015               	movf	??_atoi,w,c
  7557  004A9A  2617               	addwf	??_atoi+2,f,c
  7558  004A9C  5016               	movf	??_atoi+1,w,c
  7559  004A9E  2218               	addwfc	??_atoi+3,f,c
  7560  004AA0  5018               	movf	??_atoi+3,w,c
  7561  004AA2  E106               	bnz	u6140
  7562  004AA4  0E0A               	movlw	10
  7563  004AA6  5C17               	subwf	??_atoi+2,w,c
  7564  004AA8  B0D8               	btfsc	status,0,c
  7565  004AAA  D002               	goto	u6140
  7566  004AAC  0E01               	movlw	1
  7567  004AAE  D001               	goto	u6150
  7568  004AB0                     u6140:
  7569  004AB0  0E00               	movlw	0
  7570  004AB2                     u6150:
  7571  004AB2  6E1D               	movwf	_atoi$2071,c
  7572  004AB4  6A1E               	clrf	_atoi$2071+1,c
  7573  004AB6  501D               	movf	_atoi$2071,w,c
  7574  004AB8  101E               	iorwf	_atoi$2071+1,w,c
  7575  004ABA  A4D8               	btfss	status,2,c
  7576  004ABC  D7C7               	goto	l6159
  7577  004ABE  5019               	movf	atoi@neg,w,c
  7578  004AC0  101A               	iorwf	atoi@neg+1,w,c
  7579  004AC2  A4D8               	btfss	status,2,c
  7580  004AC4  D00D               	goto	l1501
  7581  004AC6  C020  F015         	movff	atoi@n,??_atoi
  7582  004ACA  C021  F016         	movff	atoi@n+1,??_atoi+1
  7583  004ACE  1E15               	comf	??_atoi,f,c
  7584  004AD0  1E16               	comf	??_atoi+1,f,c
  7585  004AD2  4A15               	infsnz	??_atoi,f,c
  7586  004AD4  2A16               	incf	??_atoi+1,f,c
  7587  004AD6  C015  F013         	movff	??_atoi,?_atoi
  7588  004ADA  C016  F014         	movff	??_atoi+1,?_atoi+1
  7589  004ADE  0012               	return	
  7590  004AE0                     l1501:
  7591  004AE0  C020  F013         	movff	atoi@n,?_atoi
  7592  004AE4  C021  F014         	movff	atoi@n+1,?_atoi+1
  7593  004AE8  0012               	return		;funcret
  7594  004AEA                     __end_of_atoi:
  7595                           	opt callstack 0
  7596                           
  7597 ;; *************** function _isspace *****************
  7598 ;; Defined at:
  7599 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  7600 ;; Parameters:    Size  Location     Type
  7601 ;;  c               2   11[COMRAM] int 
  7602 ;; Auto vars:     Size  Location     Type
  7603 ;;		None
  7604 ;; Return value:  Size  Location     Type
  7605 ;;                  2   11[COMRAM] int 
  7606 ;; Registers used:
  7607 ;;		wreg, status,2, status,0
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7613 ;;      Params:         2       0       0       0       0       0       0       0       0
  7614 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7615 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7616 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7617 ;;Total ram usage:        7 bytes
  7618 ;; Hardware stack levels used:    1
  7619 ;; Hardware stack levels required when called:    7
  7620 ;; This function calls:
  7621 ;;		Nothing
  7622 ;; This function is called by:
  7623 ;;		_atoi
  7624 ;;		_atol
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628                           	psect	text39
  7629  005562                     __ptext39:
  7630                           	opt callstack 0
  7631  005562                     _isspace:
  7632                           	opt callstack 21
  7633                           
  7634                           ;incstack = 0
  7635  005562  0E01               	movlw	1
  7636  005564  6E12               	movwf	_isspace$2096,c
  7637  005566  0E20               	movlw	32
  7638  005568  180C               	xorwf	isspace@c,w,c
  7639  00556A  100D               	iorwf	isspace@c+1,w,c
  7640  00556C  B4D8               	btfsc	status,2,c
  7641  00556E  D014               	goto	l5921
  7642  005570  0EF7               	movlw	247
  7643  005572  6E0E               	movwf	??_isspace& (0+255),c
  7644  005574  0EFF               	movlw	255
  7645  005576  6E0F               	movwf	(??_isspace+1)& (0+255),c
  7646  005578  C00C  F010         	movff	isspace@c,??_isspace+2
  7647  00557C  C00D  F011         	movff	isspace@c+1,??_isspace+3
  7648  005580  500E               	movf	??_isspace,w,c
  7649  005582  2610               	addwf	??_isspace+2,f,c
  7650  005584  500F               	movf	??_isspace+1,w,c
  7651  005586  2211               	addwfc	??_isspace+3,f,c
  7652  005588  5011               	movf	??_isspace+3,w,c
  7653  00558A  E104               	bnz	u5960
  7654  00558C  0E05               	movlw	5
  7655  00558E  5C10               	subwf	??_isspace+2,w,c
  7656  005590  A0D8               	btfss	status,0,c
  7657  005592  D002               	goto	l5921
  7658  005594                     u5960:
  7659  005594  0E00               	movlw	0
  7660  005596  6E12               	movwf	_isspace$2096,c
  7661  005598                     l5921:
  7662  005598  C012  F00C         	movff	_isspace$2096,?_isspace
  7663  00559C  6A0D               	clrf	?_isspace+1,c
  7664  00559E  0012               	return		;funcret
  7665  0055A0                     __end_of_isspace:
  7666                           	opt callstack 0
  7667                           
  7668 ;; *************** function _isdigit *****************
  7669 ;; Defined at:
  7670 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  7671 ;; Parameters:    Size  Location     Type
  7672 ;;  c               2   11[COMRAM] int 
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;		None
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  2   11[COMRAM] int 
  7677 ;; Registers used:
  7678 ;;		wreg, status,2, status,0
  7679 ;; Tracked objects:
  7680 ;;		On entry : 0/0
  7681 ;;		On exit  : 0/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7684 ;;      Params:         2       0       0       0       0       0       0       0       0
  7685 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7686 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7687 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7688 ;;Total ram usage:        6 bytes
  7689 ;; Hardware stack levels used:    1
  7690 ;; Hardware stack levels required when called:    7
  7691 ;; This function calls:
  7692 ;;		Nothing
  7693 ;; This function is called by:
  7694 ;;		_atoi
  7695 ;;		_atol
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           	psect	text40
  7700  0057F6                     __ptext40:
  7701                           	opt callstack 0
  7702  0057F6                     _isdigit:
  7703                           	opt callstack 21
  7704                           
  7705                           ;incstack = 0
  7706  0057F6  0ED0               	movlw	208
  7707  0057F8  6E0E               	movwf	??_isdigit& (0+255),c
  7708  0057FA  0EFF               	movlw	255
  7709  0057FC  6E0F               	movwf	(??_isdigit+1)& (0+255),c
  7710  0057FE  C00C  F010         	movff	isdigit@c,??_isdigit+2
  7711  005802  C00D  F011         	movff	isdigit@c+1,??_isdigit+3
  7712  005806  500E               	movf	??_isdigit,w,c
  7713  005808  2610               	addwf	??_isdigit+2,f,c
  7714  00580A  500F               	movf	??_isdigit+1,w,c
  7715  00580C  2211               	addwfc	??_isdigit+3,f,c
  7716  00580E  5011               	movf	??_isdigit+3,w,c
  7717  005810  E106               	bnz	u5970
  7718  005812  0E0A               	movlw	10
  7719  005814  5C10               	subwf	??_isdigit+2,w,c
  7720  005816  B0D8               	btfsc	status,0,c
  7721  005818  D002               	goto	u5970
  7722  00581A  0E01               	movlw	1
  7723  00581C  D001               	goto	u5980
  7724  00581E                     u5970:
  7725  00581E  0E00               	movlw	0
  7726  005820                     u5980:
  7727  005820  6E0C               	movwf	?_isdigit,c
  7728  005822  6A0D               	clrf	?_isdigit+1,c
  7729  005824  0012               	return		;funcret
  7730  005826                     __end_of_isdigit:
  7731                           	opt callstack 0
  7732                           
  7733 ;; *************** function ___wmul *****************
  7734 ;; Defined at:
  7735 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  multiplier      2   11[COMRAM] unsigned int 
  7738 ;;  multiplicand    2   13[COMRAM] unsigned int 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;  product         2   15[COMRAM] unsigned int 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  2   11[COMRAM] unsigned int 
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, status,0, prodl, prodh
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7750 ;;      Params:         4       0       0       0       0       0       0       0       0
  7751 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7753 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7754 ;;Total ram usage:        6 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; Hardware stack levels required when called:    7
  7757 ;; This function calls:
  7758 ;;		Nothing
  7759 ;; This function is called by:
  7760 ;;		_atoi
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764                           	psect	text41
  7765  0059B4                     __ptext41:
  7766                           	opt callstack 0
  7767  0059B4                     ___wmul:
  7768                           	opt callstack 21
  7769                           
  7770                           ;incstack = 0
  7771  0059B4  500C               	movf	___wmul@multiplier,w,c
  7772  0059B6  020E               	mulwf	___wmul@multiplicand,c
  7773  0059B8  CFF3 F010          	movff	prodl,___wmul@product
  7774  0059BC  CFF4 F011          	movff	prodh,___wmul@product+1
  7775  0059C0  500C               	movf	___wmul@multiplier,w,c
  7776  0059C2  020F               	mulwf	___wmul@multiplicand+1,c
  7777  0059C4  50F3               	movf	prodl,w,c
  7778  0059C6  2611               	addwf	___wmul@product+1,f,c
  7779  0059C8  500D               	movf	___wmul@multiplier+1,w,c
  7780  0059CA  020E               	mulwf	___wmul@multiplicand,c
  7781  0059CC  50F3               	movf	prodl,w,c
  7782  0059CE  2611               	addwf	___wmul@product+1,f,c
  7783  0059D0  C010  F00C         	movff	___wmul@product,?___wmul
  7784  0059D4  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  7785  0059D8  0012               	return		;funcret
  7786  0059DA                     __end_of___wmul:
  7787                           	opt callstack 0
  7788                           
  7789 ;; *************** function _TMR0_StartTimer *****************
  7790 ;; Defined at:
  7791 ;;		line 70 in file "mcc_generated_files/tmr0.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;		None
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;		None
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  1    wreg      void 
  7798 ;; Registers used:
  7799 ;;		None
  7800 ;; Tracked objects:
  7801 ;;		On entry : 0/0
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7805 ;;      Params:         0       0       0       0       0       0       0       0       0
  7806 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7807 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7808 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7809 ;;Total ram usage:        0 bytes
  7810 ;; Hardware stack levels used:    1
  7811 ;; Hardware stack levels required when called:    7
  7812 ;; This function calls:
  7813 ;;		Nothing
  7814 ;; This function is called by:
  7815 ;;		_Parse_Data
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           	psect	text42
  7820  005AF0                     __ptext42:
  7821                           	opt callstack 0
  7822  005AF0                     _TMR0_StartTimer:
  7823                           	opt callstack 22
  7824                           
  7825                           ;mcc_generated_files/tmr0.c: 73:     while(PORTAbits.RA5 == 0);
  7826                           
  7827                           ;incstack = 0
  7828  005AF0  AA8D               	btfss	3981,5,c	;volatile
  7829  005AF2  D7FE               	goto	_TMR0_StartTimer
  7830  005AF4                     u6010:
  7831  005AF4  BA8D               	btfsc	3981,5,c	;volatile
  7832  005AF6  D7FE               	goto	u6010
  7833                           
  7834                           ;mcc_generated_files/tmr0.c: 77:     T0CON0bits.T0EN = 1;
  7835  005AF8  8ED5               	bsf	4053,7,c	;volatile
  7836                           
  7837                           ;mcc_generated_files/tmr0.c: 79:     PORTBbits.RB3 = 1;
  7838  005AFA  868E               	bsf	3982,3,c	;volatile
  7839  005AFC  0012               	return		;funcret
  7840  005AFE                     __end_of_TMR0_StartTimer:
  7841                           	opt callstack 0
  7842                           
  7843 ;; *************** function _TMR0_Reload *****************
  7844 ;; Defined at:
  7845 ;;		line 96 in file "mcc_generated_files/tmr0.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;		None
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;		None
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      void 
  7852 ;; Registers used:
  7853 ;;		wreg, status,2, status,0, cstack
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7859 ;;      Params:         0       0       0       0       0       0       0       0       0
  7860 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7861 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7862 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7863 ;;Total ram usage:        0 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:    8
  7866 ;; This function calls:
  7867 ;;		_TMR0_WriteTimer
  7868 ;; This function is called by:
  7869 ;;		_Parse_Data
  7870 ;; This function uses a non-reentrant model
  7871 ;;
  7872                           
  7873                           	psect	text43
  7874  005826                     __ptext43:
  7875                           	opt callstack 0
  7876  005826                     _TMR0_Reload:
  7877                           	opt callstack 21
  7878                           
  7879                           ;mcc_generated_files/tmr0.c: 99:     temp_cycle = cycle - 1;
  7880                           
  7881                           ;incstack = 0
  7882  005826  0EFF               	movlw	255
  7883  005828  2448               	addwf	_cycle,w,c	;volatile
  7884  00582A  6E4C               	movwf	_temp_cycle,c	;volatile
  7885  00582C  0EFF               	movlw	255
  7886  00582E  2049               	addwfc	_cycle+1,w,c	;volatile
  7887  005830  6E4D               	movwf	_temp_cycle+1,c	;volatile
  7888  005832  0EFF               	movlw	255
  7889  005834  204A               	addwfc	_cycle+2,w,c	;volatile
  7890  005836  6E4E               	movwf	_temp_cycle+2,c	;volatile
  7891  005838  0EFF               	movlw	255
  7892  00583A  204B               	addwfc	_cycle+3,w,c	;volatile
  7893  00583C  6E4F               	movwf	_temp_cycle+3,c	;volatile
  7894                           
  7895                           ;mcc_generated_files/tmr0.c: 100:     TMR0_WriteTimer((0xFFFF - temp_cycle)+1);
  7896  00583E  504C               	movf	_temp_cycle,w,c	;volatile
  7897  005840  0800               	sublw	0
  7898  005842  6E0C               	movwf	TMR0_WriteTimer@timerVal,c
  7899  005844  504D               	movf	_temp_cycle+1,w,c	;volatile
  7900  005846  A0D8               	btfss	status,0,c
  7901  005848  2AE8               	incf	wreg,f,c
  7902  00584A  0800               	sublw	0
  7903  00584C  6E0D               	movwf	TMR0_WriteTimer@timerVal+1,c
  7904  00584E  ECAC  F02D         	call	_TMR0_WriteTimer	;wreg free
  7905  005852  0012               	return		;funcret
  7906  005854                     __end_of_TMR0_Reload:
  7907                           	opt callstack 0
  7908                           
  7909 ;; *************** function _TMR0_WriteTimer *****************
  7910 ;; Defined at:
  7911 ;;		line 89 in file "mcc_generated_files/tmr0.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;  timerVal        2   11[COMRAM] unsigned short 
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;		None
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      void 
  7918 ;; Registers used:
  7919 ;;		wreg, status,2
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7925 ;;      Params:         2       0       0       0       0       0       0       0       0
  7926 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7927 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7928 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7929 ;;Total ram usage:        2 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:    7
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		_TMR0_Reload
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text44
  7940  005B58                     __ptext44:
  7941                           	opt callstack 0
  7942  005B58                     _TMR0_WriteTimer:
  7943                           	opt callstack 21
  7944                           
  7945                           ;mcc_generated_files/tmr0.c: 89: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_f
      +                          iles/tmr0.c: 90: {;mcc_generated_files/tmr0.c: 92:     TMR0H = timerVal >> 8;
  7946                           
  7947                           ;incstack = 0
  7948  005B58  500D               	movf	TMR0_WriteTimer@timerVal+1,w,c
  7949  005B5A  6ED4               	movwf	4052,c	;volatile
  7950                           
  7951                           ;mcc_generated_files/tmr0.c: 93:     TMR0L = (uint8_t) timerVal;
  7952  005B5C  C00C  FFD3         	movff	TMR0_WriteTimer@timerVal,4051	;volatile
  7953  005B60  0012               	return		;funcret
  7954  005B62                     __end_of_TMR0_WriteTimer:
  7955                           	opt callstack 0
  7956                           
  7957 ;; *************** function _SPI1_Close *****************
  7958 ;; Defined at:
  7959 ;;		line 66 in file "mcc_generated_files/spi1.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;		None
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;		None
  7964 ;; Return value:  Size  Location     Type
  7965 ;;                  1    wreg      void 
  7966 ;; Registers used:
  7967 ;;		None
  7968 ;; Tracked objects:
  7969 ;;		On entry : 0/0
  7970 ;;		On exit  : 0/0
  7971 ;;		Unchanged: 0/0
  7972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7973 ;;      Params:         0       0       0       0       0       0       0       0       0
  7974 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7976 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7977 ;;Total ram usage:        0 bytes
  7978 ;; Hardware stack levels used:    1
  7979 ;; Hardware stack levels required when called:    7
  7980 ;; This function calls:
  7981 ;;		Nothing
  7982 ;; This function is called by:
  7983 ;;		_Parse_Data
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987                           	psect	text45
  7988  005B9C                     __ptext45:
  7989                           	opt callstack 0
  7990  005B9C                     _SPI1_Close:
  7991                           	opt callstack 22
  7992                           
  7993                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  7994                           
  7995                           ;incstack = 0
  7996  005B9C  9A96               	bcf	3990,5,c	;volatile
  7997  005B9E  0012               	return		;funcret
  7998  005BA0                     __end_of_SPI1_Close:
  7999                           	opt callstack 0
  8000                           
  8001 ;; *************** function _EUSART_Write_String *****************
  8002 ;; Defined at:
  8003 ;;		line 145 in file "mcc_generated_files/eusart.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;  data            2   12[COMRAM] PTR unsigned char 
  8006 ;;		 -> output(50), rx_data(20), 
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;  i               1   14[COMRAM] unsigned char 
  8009 ;; Return value:  Size  Location     Type
  8010 ;;                  1    wreg      void 
  8011 ;; Registers used:
  8012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8013 ;; Tracked objects:
  8014 ;;		On entry : 0/0
  8015 ;;		On exit  : 0/0
  8016 ;;		Unchanged: 0/0
  8017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8018 ;;      Params:         2       0       0       0       0       0       0       0       0
  8019 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8020 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8021 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8022 ;;Total ram usage:        3 bytes
  8023 ;; Hardware stack levels used:    1
  8024 ;; Hardware stack levels required when called:    8
  8025 ;; This function calls:
  8026 ;;		_EUSART_Write
  8027 ;; This function is called by:
  8028 ;;		_Parse_Data
  8029 ;; This function uses a non-reentrant model
  8030 ;;
  8031                           
  8032                           	psect	text46
  8033  0056C6                     __ptext46:
  8034                           	opt callstack 0
  8035  0056C6                     _EUSART_Write_String:
  8036                           	opt callstack 21
  8037                           
  8038                           ;mcc_generated_files/eusart.c: 145: void EUSART_Write_String(char data[]);mcc_generated_
      +                          files/eusart.c: 146: {;mcc_generated_files/eusart.c: 148:     uint8_t i = 0;
  8039                           
  8040                           ;incstack = 0
  8041  0056C6  0E00               	movlw	0
  8042  0056C8  6E0F               	movwf	EUSART_Write_String@i,c
  8043                           
  8044                           ;mcc_generated_files/eusart.c: 149:     while(data[i] != '\0'){
  8045  0056CA  D00A               	goto	l5963
  8046  0056CC                     l5959:
  8047                           
  8048                           ;mcc_generated_files/eusart.c: 150:             EUSART_Write(data[i]);
  8049  0056CC  500F               	movf	EUSART_Write_String@i,w,c
  8050  0056CE  240D               	addwf	EUSART_Write_String@data,w,c
  8051  0056D0  6ED9               	movwf	fsr2l,c
  8052  0056D2  0E00               	movlw	0
  8053  0056D4  200E               	addwfc	EUSART_Write_String@data+1,w,c
  8054  0056D6  6EDA               	movwf	fsr2h,c
  8055  0056D8  50DF               	movf	indf2,w,c
  8056  0056DA  ECD0  F02A         	call	_EUSART_Write
  8057                           
  8058                           ;mcc_generated_files/eusart.c: 151:             i++;
  8059  0056DE  2A0F               	incf	EUSART_Write_String@i,f,c
  8060  0056E0                     l5963:
  8061                           
  8062                           ;mcc_generated_files/eusart.c: 149:     while(data[i] != '\0'){
  8063  0056E0  500F               	movf	EUSART_Write_String@i,w,c
  8064  0056E2  240D               	addwf	EUSART_Write_String@data,w,c
  8065  0056E4  6ED9               	movwf	fsr2l,c
  8066  0056E6  0E00               	movlw	0
  8067  0056E8  200E               	addwfc	EUSART_Write_String@data+1,w,c
  8068  0056EA  6EDA               	movwf	fsr2h,c
  8069  0056EC  50DF               	movf	indf2,w,c
  8070  0056EE  A4D8               	btfss	status,2,c
  8071  0056F0  D7ED               	goto	l5959
  8072                           
  8073                           ;mcc_generated_files/eusart.c: 155:     EUSART_Write(0x0A);
  8074  0056F2  0E0A               	movlw	10
  8075  0056F4  ECD0  F02A         	call	_EUSART_Write
  8076  0056F8  0012               	return		;funcret
  8077  0056FA                     __end_of_EUSART_Write_String:
  8078                           	opt callstack 0
  8079                           
  8080 ;; *************** function _EUSART_Write *****************
  8081 ;; Defined at:
  8082 ;;		line 119 in file "mcc_generated_files/eusart.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  txData          1    wreg     unsigned char 
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;  txData          1   11[COMRAM] unsigned char 
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  1    wreg      void 
  8089 ;; Registers used:
  8090 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8096 ;;      Params:         0       0       0       0       0       0       0       0       0
  8097 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8099 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8100 ;;Total ram usage:        1 bytes
  8101 ;; Hardware stack levels used:    1
  8102 ;; Hardware stack levels required when called:    7
  8103 ;; This function calls:
  8104 ;;		Nothing
  8105 ;; This function is called by:
  8106 ;;		_EUSART_Write_String
  8107 ;; This function uses a non-reentrant model
  8108 ;;
  8109                           
  8110                           	psect	text47
  8111  0055A0                     __ptext47:
  8112                           	opt callstack 0
  8113  0055A0                     _EUSART_Write:
  8114                           	opt callstack 21
  8115                           
  8116                           ;incstack = 0
  8117                           ;EUSART_Write@txData stored from wreg
  8118  0055A0  6E0C               	movwf	EUSART_Write@txData,c
  8119  0055A2                     
  8120                           ;mcc_generated_files/eusart.c: 122:     while(0 == eusartTxBufferRemaining)
  8121                           
  8122                           ;mcc_generated_files/eusart.c: 119: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 120: {;mcc_generated_files/eusart.c: 122:     while(0 == eusartTxBufferRemai
      +                          ning)
  8123  0055A2  0100               	movlb	0	; () banked
  8124  0055A4  51F5               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
  8125  0055A6  B4D8               	btfsc	status,2,c
  8126  0055A8  D7FC               	goto	l5333
  8127                           
  8128                           ; BSR set to: 0
  8129                           ;mcc_generated_files/eusart.c: 127:     if(0 == PIE3bits.TXIE)
  8130  0055AA  010E               	movlb	14	; () banked
  8131  0055AC  B9C5               	btfsc	197,4,b	;volatile
  8132  0055AE  D003               	goto	l89
  8133                           
  8134                           ; BSR set to: 14
  8135                           ;mcc_generated_files/eusart.c: 128:     {;mcc_generated_files/eusart.c: 129:         TX1
      +                          REG = txData;
  8136  0055B0  C00C  FF9A         	movff	EUSART_Write@txData,3994	;volatile
  8137                           
  8138                           ;mcc_generated_files/eusart.c: 130:     }
  8139  0055B4  D011               	goto	l5349
  8140  0055B6                     l89:
  8141                           
  8142                           ; BSR set to: 14
  8143                           ;mcc_generated_files/eusart.c: 133:     {;mcc_generated_files/eusart.c: 134:         PIE
      +                          3bits.TXIE = 0;
  8144  0055B6  99C5               	bcf	197,4,b	;volatile
  8145                           
  8146                           ; BSR set to: 14
  8147                           ;mcc_generated_files/eusart.c: 135:         eusartTxBuffer[eusartTxHead++] = txData;
  8148  0055B8  0EBC               	movlw	low _eusartTxBuffer
  8149  0055BA  2446               	addwf	_eusartTxHead,w,c	;volatile
  8150  0055BC  6ED9               	movwf	fsr2l,c
  8151  0055BE  6ADA               	clrf	fsr2h,c
  8152  0055C0  0E01               	movlw	high _eusartTxBuffer
  8153  0055C2  22DA               	addwfc	fsr2h,f,c
  8154  0055C4  C00C  FFDF         	movff	EUSART_Write@txData,indf2
  8155                           
  8156                           ; BSR set to: 14
  8157  0055C8  2A46               	incf	_eusartTxHead,f,c	;volatile
  8158                           
  8159                           ; BSR set to: 14
  8160                           ;mcc_generated_files/eusart.c: 136:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  8161  0055CA  0E07               	movlw	7
  8162  0055CC  6446               	cpfsgt	_eusartTxHead,c	;volatile
  8163  0055CE  D002               	goto	l5347
  8164                           
  8165                           ; BSR set to: 14
  8166                           ;mcc_generated_files/eusart.c: 137:         {;mcc_generated_files/eusart.c: 138:        
      +                               eusartTxHead = 0;
  8167  0055D0  0E00               	movlw	0
  8168  0055D2  6E46               	movwf	_eusartTxHead,c	;volatile
  8169  0055D4                     l5347:
  8170                           
  8171                           ; BSR set to: 14
  8172                           ;mcc_generated_files/eusart.c: 140:         eusartTxBufferRemaining--;
  8173  0055D4  0100               	movlb	0	; () banked
  8174  0055D6  07F5               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  8175  0055D8                     l5349:
  8176                           
  8177                           ;mcc_generated_files/eusart.c: 142:     PIE3bits.TXIE = 1;
  8178  0055D8  010E               	movlb	14	; () banked
  8179  0055DA  89C5               	bsf	197,4,b	;volatile
  8180                           
  8181                           ; BSR set to: 14
  8182  0055DC  0012               	return		;funcret
  8183  0055DE                     __end_of_EUSART_Write:
  8184                           	opt callstack 0
  8185                           
  8186 ;; *************** function _AD9833_Init *****************
  8187 ;; Defined at:
  8188 ;;		line 26 in file "ad9833.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;		None
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;		None
  8193 ;; Return value:  Size  Location     Type
  8194 ;;                  1    wreg      void 
  8195 ;; Registers used:
  8196 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8197 ;; Tracked objects:
  8198 ;;		On entry : 0/0
  8199 ;;		On exit  : 0/0
  8200 ;;		Unchanged: 0/0
  8201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8202 ;;      Params:         0       0       0       0       0       0       0       0       0
  8203 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8204 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8205 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8206 ;;Total ram usage:        2 bytes
  8207 ;; Hardware stack levels used:    1
  8208 ;; Hardware stack levels required when called:   11
  8209 ;; This function calls:
  8210 ;;		_AD9833_SetFrequency
  8211 ;;		_SPI1_WriteWord
  8212 ;; This function is called by:
  8213 ;;		_main
  8214 ;; This function uses a non-reentrant model
  8215 ;;
  8216                           
  8217                           	psect	text48
  8218  0055DE                     __ptext48:
  8219                           	opt callstack 0
  8220  0055DE                     _AD9833_Init:
  8221                           	opt callstack 19
  8222                           
  8223                           ;ad9833.c: 29:     SPI1_WriteWord(0x0100);
  8224                           
  8225                           ; BSR set to: 14
  8226                           ;incstack = 0
  8227  0055DE  0E01               	movlw	1
  8228  0055E0  6E0D               	movwf	SPI1_WriteWord@word+1,c
  8229  0055E2  0E00               	movlw	0
  8230  0055E4  6E0C               	movwf	SPI1_WriteWord@word,c
  8231  0055E6  ECB2  F02C         	call	_SPI1_WriteWord	;wreg free
  8232                           
  8233                           ;ad9833.c: 30:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8234  0055EA  0E05               	movlw	5
  8235  0055EC  0100               	movlb	0	; () banked
  8236  0055EE  6FD2               	movwf	(??_AD9833_Init+1)& (0+255),b
  8237  0055F0  0E0F               	movlw	15
  8238  0055F2  6FD1               	movwf	??_AD9833_Init& (0+255),b
  8239  0055F4  0EF1               	movlw	241
  8240  0055F6                     u10277:
  8241  0055F6  2EE8               	decfsz	wreg,f,c
  8242  0055F8  D7FE               	bra	u10277
  8243  0055FA  2FD1               	decfsz	??_AD9833_Init& (0+255),f,b
  8244  0055FC  D7FC               	bra	u10277
  8245  0055FE  2FD2               	decfsz	(??_AD9833_Init+1)& (0+255),f,b
  8246  005600  D7FA               	bra	u10277
  8247                           
  8248                           ;ad9833.c: 33:     AD9833_SetFrequency(3000000);
  8249  005602  0EC0               	movlw	192
  8250  005604  0100               	movlb	0	; () banked
  8251  005606  6FBC               	movwf	AD9833_SetFrequency@frequency& (0+255),b
  8252  005608  0EC6               	movlw	198
  8253  00560A  6FBD               	movwf	(AD9833_SetFrequency@frequency+1)& (0+255),b
  8254  00560C  0E2D               	movlw	45
  8255  00560E  6FBE               	movwf	(AD9833_SetFrequency@frequency+2)& (0+255),b
  8256  005610  0E00               	movlw	0
  8257  005612  6FBF               	movwf	(AD9833_SetFrequency@frequency+3)& (0+255),b
  8258  005614  EC98  F023         	call	_AD9833_SetFrequency	;wreg free
  8259  005618  0012               	return		;funcret
  8260  00561A                     __end_of_AD9833_Init:
  8261                           	opt callstack 0
  8262                           
  8263 ;; *************** function _AD9833_SetFrequency *****************
  8264 ;; Defined at:
  8265 ;;		line 40 in file "ad9833.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  frequency       4   92[BANK0 ] long 
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;  freq            4  109[BANK0 ] long 
  8270 ;;  LSB             2  107[BANK0 ] int 
  8271 ;;  MSB             2  105[BANK0 ] int 
  8272 ;; Return value:  Size  Location     Type
  8273 ;;                  1    wreg      void 
  8274 ;; Registers used:
  8275 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8276 ;; Tracked objects:
  8277 ;;		On entry : 0/0
  8278 ;;		On exit  : 0/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8281 ;;      Params:         0       4       0       0       0       0       0       0       0
  8282 ;;      Locals:         0      12       0       0       0       0       0       0       0
  8283 ;;      Temps:          0       5       0       0       0       0       0       0       0
  8284 ;;      Totals:         0      21       0       0       0       0       0       0       0
  8285 ;;Total ram usage:       21 bytes
  8286 ;; Hardware stack levels used:    1
  8287 ;; Hardware stack levels required when called:   10
  8288 ;; This function calls:
  8289 ;;		_SPI1_WriteWord
  8290 ;;		___fldiv
  8291 ;;		___flmul
  8292 ;;		___fltol
  8293 ;;		___xxtofl
  8294 ;;		_powf
  8295 ;; This function is called by:
  8296 ;;		_Parse_Data
  8297 ;;		_AD9833_Init
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           	psect	text49
  8302  004730                     __ptext49:
  8303                           	opt callstack 0
  8304  004730                     _AD9833_SetFrequency:
  8305                           	opt callstack 19
  8306                           
  8307                           ;ad9833.c: 40: void AD9833_SetFrequency(long frequency);ad9833.c: 41: {;ad9833.c: 43:   
      +                            long freq = (frequency * powf(2,28)) / 25000000;
  8308                           
  8309                           ;incstack = 0
  8310  004730  0E00               	movlw	0
  8311  004732  0100               	movlb	0	; () banked
  8312  004734  6FA5               	movwf	powf@y& (0+255),b
  8313  004736  0E00               	movlw	0
  8314  004738  6FA6               	movwf	(powf@y+1)& (0+255),b
  8315  00473A  0EE0               	movlw	224
  8316  00473C  6FA7               	movwf	(powf@y+2)& (0+255),b
  8317  00473E  0E41               	movlw	65
  8318  004740  6FA8               	movwf	(powf@y+3)& (0+255),b
  8319  004742  0E00               	movlw	0
  8320  004744  6FA1               	movwf	powf@x& (0+255),b
  8321  004746  0E00               	movlw	0
  8322  004748  6FA2               	movwf	(powf@x+1)& (0+255),b
  8323  00474A  0E00               	movlw	0
  8324  00474C  6FA3               	movwf	(powf@x+2)& (0+255),b
  8325  00474E  0E40               	movlw	64
  8326  004750  6FA4               	movwf	(powf@x+3)& (0+255),b
  8327  004752  EC5B  F000         	call	_powf	;wreg free
  8328  004756  C0A1  F0C5         	movff	?_powf,_AD9833_SetFrequency$2518
  8329  00475A  C0A2  F0C6         	movff	?_powf+1,_AD9833_SetFrequency$2518+1
  8330  00475E  C0A3  F0C7         	movff	?_powf+2,_AD9833_SetFrequency$2518+2
  8331  004762  C0A4  F0C8         	movff	?_powf+3,_AD9833_SetFrequency$2518+3
  8332                           
  8333                           ;ad9833.c: 40: void AD9833_SetFrequency(long frequency);ad9833.c: 41: {;ad9833.c: 43:   
      +                            long freq = (frequency * powf(2,28)) / 25000000;
  8334  004766  0E20               	movlw	32
  8335  004768  0100               	movlb	0	; () banked
  8336  00476A  6F6C               	movwf	___fldiv@a& (0+255),b
  8337  00476C  0EBC               	movlw	188
  8338  00476E  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
  8339  004770  0EBE               	movlw	190
  8340  004772  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
  8341  004774  0E4B               	movlw	75
  8342  004776  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
  8343  004778  C0C5  F020         	movff	_AD9833_SetFrequency$2518,___flmul@a
  8344  00477C  C0C6  F021         	movff	_AD9833_SetFrequency$2518+1,___flmul@a+1
  8345  004780  C0C7  F022         	movff	_AD9833_SetFrequency$2518+2,___flmul@a+2
  8346  004784  C0C8  F023         	movff	_AD9833_SetFrequency$2518+3,___flmul@a+3
  8347  004788  C0BC  F00C         	movff	AD9833_SetFrequency@frequency,___xxtofl@val
  8348  00478C  C0BD  F00D         	movff	AD9833_SetFrequency@frequency+1,___xxtofl@val+1
  8349  004790  C0BE  F00E         	movff	AD9833_SetFrequency@frequency+2,___xxtofl@val+2
  8350  004794  C0BF  F00F         	movff	AD9833_SetFrequency@frequency+3,___xxtofl@val+3
  8351  004798  0E01               	movlw	1
  8352  00479A  EC38  F024         	call	___xxtofl
  8353  00479E  C00C  F01C         	movff	?___xxtofl,___flmul@b
  8354  0047A2  C00D  F01D         	movff	?___xxtofl+1,___flmul@b+1
  8355  0047A6  C00E  F01E         	movff	?___xxtofl+2,___flmul@b+2
  8356  0047AA  C00F  F01F         	movff	?___xxtofl+3,___flmul@b+3
  8357  0047AE  ECC9  F01A         	call	___flmul	;wreg free
  8358  0047B2  C01C  F068         	movff	?___flmul,___fldiv@b
  8359  0047B6  C01D  F069         	movff	?___flmul+1,___fldiv@b+1
  8360  0047BA  C01E  F06A         	movff	?___flmul+2,___fldiv@b+2
  8361  0047BE  C01F  F06B         	movff	?___flmul+3,___fldiv@b+3
  8362  0047C2  ECF8  F01D         	call	___fldiv	;wreg free
  8363  0047C6  C068  F0B2         	movff	?___fldiv,___fltol@f1
  8364  0047CA  C069  F0B3         	movff	?___fldiv+1,___fltol@f1+1
  8365  0047CE  C06A  F0B4         	movff	?___fldiv+2,___fltol@f1+2
  8366  0047D2  C06B  F0B5         	movff	?___fldiv+3,___fltol@f1+3
  8367  0047D6  ECD7  F026         	call	___fltol	;wreg free
  8368  0047DA  C0B2  F0CD         	movff	?___fltol,AD9833_SetFrequency@freq
  8369  0047DE  C0B3  F0CE         	movff	?___fltol+1,AD9833_SetFrequency@freq+1
  8370  0047E2  C0B4  F0CF         	movff	?___fltol+2,AD9833_SetFrequency@freq+2
  8371  0047E6  C0B5  F0D0         	movff	?___fltol+3,AD9833_SetFrequency@freq+3
  8372                           
  8373                           ;ad9833.c: 46:     int MSB = (int)((freq & 0xFFFC000) >> 14);
  8374  0047EA  0E0E               	movlw	14
  8375  0047EC  0100               	movlb	0	; () banked
  8376  0047EE  6FC0               	movwf	??_AD9833_SetFrequency& (0+255),b
  8377  0047F0  C0CD  F0C1         	movff	AD9833_SetFrequency@freq,??_AD9833_SetFrequency+1
  8378  0047F4  C0CE  F0C2         	movff	AD9833_SetFrequency@freq+1,??_AD9833_SetFrequency+2
  8379  0047F8  C0CF  F0C3         	movff	AD9833_SetFrequency@freq+2,??_AD9833_SetFrequency+3
  8380  0047FC  C0D0  F0C4         	movff	AD9833_SetFrequency@freq+3,??_AD9833_SetFrequency+4
  8381  004800                     u10005:
  8382  004800  67C0               	tstfsz	??_AD9833_SetFrequency& (0+255),b
  8383  004802  D001               	goto	u10006
  8384  004804  D007               	goto	u10007
  8385  004806                     u10006:
  8386  004806  35C4               	rlcf	(??_AD9833_SetFrequency+4)& (0+255),w,b
  8387  004808  33C4               	rrcf	(??_AD9833_SetFrequency+4)& (0+255),f,b
  8388  00480A  33C3               	rrcf	(??_AD9833_SetFrequency+3)& (0+255),f,b
  8389  00480C  33C2               	rrcf	(??_AD9833_SetFrequency+2)& (0+255),f,b
  8390  00480E  33C1               	rrcf	(??_AD9833_SetFrequency+1)& (0+255),f,b
  8391  004810  2FC0               	decfsz	??_AD9833_SetFrequency& (0+255),f,b
  8392  004812  D7F6               	goto	u10005
  8393  004814                     u10007:
  8394  004814  0EFF               	movlw	255
  8395  004816  0100               	movlb	0	; () banked
  8396  004818  15C1               	andwf	(??_AD9833_SetFrequency+1)& (0+255),w,b
  8397  00481A  6FC9               	movwf	AD9833_SetFrequency@MSB& (0+255),b
  8398  00481C  0E3F               	movlw	63
  8399  00481E  15C2               	andwf	(??_AD9833_SetFrequency+2)& (0+255),w,b
  8400  004820  6FCA               	movwf	(AD9833_SetFrequency@MSB+1)& (0+255),b
  8401                           
  8402                           ; BSR set to: 0
  8403                           ;ad9833.c: 48:     int LSB = (int)(freq & 0x3FFF);
  8404  004822  0EFF               	movlw	255
  8405  004824  15CD               	andwf	AD9833_SetFrequency@freq& (0+255),w,b
  8406  004826  6FCB               	movwf	AD9833_SetFrequency@LSB& (0+255),b
  8407  004828  0E3F               	movlw	63
  8408  00482A  15CE               	andwf	(AD9833_SetFrequency@freq+1)& (0+255),w,b
  8409  00482C  6FCC               	movwf	(AD9833_SetFrequency@LSB+1)& (0+255),b
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;ad9833.c: 51:     LSB |= 0x4000;
  8413  00482E  8DCC               	bsf	(AD9833_SetFrequency@LSB+1)& (0+255),6,b
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;ad9833.c: 52:     MSB |= 0x4000;
  8417  004830  8DCA               	bsf	(AD9833_SetFrequency@MSB+1)& (0+255),6,b
  8418                           
  8419                           ; BSR set to: 0
  8420                           ;ad9833.c: 55:     SPI1_WriteWord(0x2100);
  8421  004832  0E21               	movlw	33
  8422  004834  6E0D               	movwf	SPI1_WriteWord@word+1,c
  8423  004836  0E00               	movlw	0
  8424  004838  6E0C               	movwf	SPI1_WriteWord@word,c
  8425  00483A  ECB2  F02C         	call	_SPI1_WriteWord	;wreg free
  8426                           
  8427                           ;ad9833.c: 58:     SPI1_WriteWord(LSB);
  8428  00483E  C0CB  F00C         	movff	AD9833_SetFrequency@LSB,SPI1_WriteWord@word
  8429  004842  C0CC  F00D         	movff	AD9833_SetFrequency@LSB+1,SPI1_WriteWord@word+1
  8430  004846  ECB2  F02C         	call	_SPI1_WriteWord	;wreg free
  8431                           
  8432                           ;ad9833.c: 60:     SPI1_WriteWord(MSB);
  8433  00484A  C0C9  F00C         	movff	AD9833_SetFrequency@MSB,SPI1_WriteWord@word
  8434  00484E  C0CA  F00D         	movff	AD9833_SetFrequency@MSB+1,SPI1_WriteWord@word+1
  8435  004852  ECB2  F02C         	call	_SPI1_WriteWord	;wreg free
  8436                           
  8437                           ;ad9833.c: 62:     SPI1_WriteWord(0xC000);
  8438  004856  0EC0               	movlw	192
  8439  004858  6E0D               	movwf	SPI1_WriteWord@word+1,c
  8440  00485A  0E00               	movlw	0
  8441  00485C  6E0C               	movwf	SPI1_WriteWord@word,c
  8442  00485E  ECB2  F02C         	call	_SPI1_WriteWord	;wreg free
  8443                           
  8444                           ;ad9833.c: 65:     SPI1_WriteWord(0x2028);
  8445  004862  0E20               	movlw	32
  8446  004864  6E0D               	movwf	SPI1_WriteWord@word+1,c
  8447  004866  0E28               	movlw	40
  8448  004868  6E0C               	movwf	SPI1_WriteWord@word,c
  8449  00486A  ECB2  F02C         	call	_SPI1_WriteWord	;wreg free
  8450  00486E  0012               	return		;funcret
  8451  004870                     __end_of_AD9833_SetFrequency:
  8452                           	opt callstack 0
  8453                           
  8454 ;; *************** function _powf *****************
  8455 ;; Defined at:
  8456 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\powf.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  x               4   65[BANK0 ] float 
  8459 ;;  y               4   69[BANK0 ] float 
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;  s2              4  140[BANK1 ] float 
  8462 ;;  s_h             4  108[BANK1 ] float 
  8463 ;;  t_h             4  104[BANK1 ] float 
  8464 ;;  t_l             4   52[BANK1 ] float 
  8465 ;;  s_l             4   48[BANK1 ] float 
  8466 ;;  __xc8_float_    4  184[BANK1 ] struct .
  8467 ;;  z               4  180[BANK1 ] float 
  8468 ;;  t               4  176[BANK1 ] float 
  8469 ;;  j               4  172[BANK1 ] long 
  8470 ;;  ix              4  168[BANK1 ] long 
  8471 ;;  k               4  160[BANK1 ] long 
  8472 ;;  p_h             4  156[BANK1 ] float 
  8473 ;;  is              4  148[BANK1 ] long 
  8474 ;;  iy              4  144[BANK1 ] long 
  8475 ;;  n               4  136[BANK1 ] long 
  8476 ;;  sn              4  132[BANK1 ] float 
  8477 ;;  t1              4  128[BANK1 ] float 
  8478 ;;  hy              4  124[BANK1 ] long 
  8479 ;;  v               4  120[BANK1 ] float 
  8480 ;;  u               4  116[BANK1 ] float 
  8481 ;;  ax              4  112[BANK1 ] float 
  8482 ;;  p_l             4  100[BANK1 ] float 
  8483 ;;  hx              4   96[BANK1 ] long 
  8484 ;;  s               4   84[BANK1 ] float 
  8485 ;;  yisint          4   80[BANK1 ] long 
  8486 ;;  r               4   76[BANK1 ] float 
  8487 ;;  w               4   68[BANK1 ] float 
  8488 ;;  i               4   44[BANK1 ] long 
  8489 ;;  y1              4   40[BANK1 ] float 
  8490 ;;  z_l             4   36[BANK1 ] float 
  8491 ;;  z_h             4   32[BANK1 ] float 
  8492 ;;  t2              4   28[BANK1 ] float 
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  4   65[BANK0 ] float 
  8495 ;; Registers used:
  8496 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8502 ;;      Params:         0       8       0       0       0       0       0       0       0
  8503 ;;      Locals:         0       0     188       0       0       0       0       0       0
  8504 ;;      Temps:          0       9       0       0       0       0       0       0       0
  8505 ;;      Totals:         0      17     188       0       0       0       0       0       0
  8506 ;;Total ram usage:      205 bytes
  8507 ;; Hardware stack levels used:    1
  8508 ;; Hardware stack levels required when called:    9
  8509 ;; This function calls:
  8510 ;;		___fladd
  8511 ;;		___fldiv
  8512 ;;		___flge
  8513 ;;		___flmul
  8514 ;;		___flneg
  8515 ;;		___flsub
  8516 ;;		___xxtofl
  8517 ;;		_fabsf
  8518 ;;		_scalbnf
  8519 ;;		_sqrtf
  8520 ;; This function is called by:
  8521 ;;		_AD9833_SetFrequency
  8522 ;; This function uses a non-reentrant model
  8523 ;;
  8524                           
  8525                           	psect	text50
  8526  0000B6                     __ptext50:
  8527                           	opt callstack 0
  8528  0000B6                     _powf:
  8529                           	opt callstack 19
  8530                           
  8531                           ;incstack = 0
  8532  0000B6  C0A1  F1B8         	movff	powf@x,powf@__xc8_float_word
  8533  0000BA  C0A2  F1B9         	movff	powf@x+1,powf@__xc8_float_word+1
  8534  0000BE  C0A3  F1BA         	movff	powf@x+2,powf@__xc8_float_word+2
  8535  0000C2  C0A4  F1BB         	movff	powf@x+3,powf@__xc8_float_word+3
  8536  0000C6  C1B8  F160         	movff	powf@__xc8_float_word,powf@hx
  8537  0000CA  C1B9  F161         	movff	powf@__xc8_float_word+1,powf@hx+1
  8538  0000CE  C1BA  F162         	movff	powf@__xc8_float_word+2,powf@hx+2
  8539  0000D2  C1BB  F163         	movff	powf@__xc8_float_word+3,powf@hx+3
  8540  0000D6  C0A5  F1B8         	movff	powf@y,powf@__xc8_float_word
  8541  0000DA  C0A6  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
  8542  0000DE  C0A7  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
  8543  0000E2  C0A8  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
  8544  0000E6  C1B8  F17C         	movff	powf@__xc8_float_word,powf@hy
  8545  0000EA  C1B9  F17D         	movff	powf@__xc8_float_word+1,powf@hy+1
  8546  0000EE  C1BA  F17E         	movff	powf@__xc8_float_word+2,powf@hy+2
  8547  0000F2  C1BB  F17F         	movff	powf@__xc8_float_word+3,powf@hy+3
  8548  0000F6  0EFF               	movlw	255
  8549  0000F8  0101               	movlb	1	; () banked
  8550  0000FA  1560               	andwf	powf@hx& (0+255),w,b
  8551  0000FC  6FA8               	movwf	powf@ix& (0+255),b
  8552  0000FE  0EFF               	movlw	255
  8553  000100  1561               	andwf	(powf@hx+1)& (0+255),w,b
  8554  000102  6FA9               	movwf	(powf@ix+1)& (0+255),b
  8555  000104  0EFF               	movlw	255
  8556  000106  1562               	andwf	(powf@hx+2)& (0+255),w,b
  8557  000108  6FAA               	movwf	(powf@ix+2)& (0+255),b
  8558  00010A  0E7F               	movlw	127
  8559  00010C  1563               	andwf	(powf@hx+3)& (0+255),w,b
  8560  00010E  6FAB               	movwf	(powf@ix+3)& (0+255),b
  8561  000110  0EFF               	movlw	255
  8562  000112  157C               	andwf	powf@hy& (0+255),w,b
  8563  000114  6F90               	movwf	powf@iy& (0+255),b
  8564  000116  0EFF               	movlw	255
  8565  000118  157D               	andwf	(powf@hy+1)& (0+255),w,b
  8566  00011A  6F91               	movwf	(powf@iy+1)& (0+255),b
  8567  00011C  0EFF               	movlw	255
  8568  00011E  157E               	andwf	(powf@hy+2)& (0+255),w,b
  8569  000120  6F92               	movwf	(powf@iy+2)& (0+255),b
  8570  000122  0E7F               	movlw	127
  8571  000124  157F               	andwf	(powf@hy+3)& (0+255),w,b
  8572  000126  6F93               	movwf	(powf@iy+3)& (0+255),b
  8573  000128  5190               	movf	powf@iy& (0+255),w,b
  8574  00012A  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  8575  00012C  1192               	iorwf	(powf@iy+2)& (0+255),w,b
  8576  00012E  1193               	iorwf	(powf@iy+3)& (0+255),w,b
  8577  000130  A4D8               	btfss	status,2,c
  8578  000132  D00A               	goto	l8687
  8579                           
  8580                           ; BSR set to: 1
  8581  000134  0E00               	movlw	0
  8582  000136  0100               	movlb	0	; () banked
  8583  000138  6FA1               	movwf	?_powf& (0+255),b
  8584  00013A  0E00               	movlw	0
  8585  00013C  6FA2               	movwf	(?_powf+1)& (0+255),b
  8586  00013E  0E80               	movlw	128
  8587  000140  6FA3               	movwf	(?_powf+2)& (0+255),b
  8588  000142  0E3F               	movlw	63
  8589  000144  6FA4               	movwf	(?_powf+3)& (0+255),b
  8590  000146  0012               	return	
  8591  000148                     l8687:
  8592                           
  8593                           ; BSR set to: 1
  8594  000148  0E80               	movlw	128
  8595  00014A  1962               	xorwf	(powf@hx+2)& (0+255),w,b
  8596  00014C  E110               	bnz	l8693
  8597  00014E  0E3F               	movlw	63
  8598  000150  1963               	xorwf	(powf@hx+3)& (0+255),w,b
  8599  000152  1160               	iorwf	powf@hx& (0+255),w,b
  8600  000154  1161               	iorwf	(powf@hx+1)& (0+255),w,b
  8601  000156  A4D8               	btfss	status,2,c
  8602  000158  D00A               	goto	l8693
  8603                           
  8604                           ; BSR set to: 1
  8605  00015A  0E00               	movlw	0
  8606  00015C  0100               	movlb	0	; () banked
  8607  00015E  6FA1               	movwf	?_powf& (0+255),b
  8608  000160  0E00               	movlw	0
  8609  000162  6FA2               	movwf	(?_powf+1)& (0+255),b
  8610  000164  0E80               	movlw	128
  8611  000166  6FA3               	movwf	(?_powf+2)& (0+255),b
  8612  000168  0E3F               	movlw	63
  8613  00016A  6FA4               	movwf	(?_powf+3)& (0+255),b
  8614  00016C  0012               	return	
  8615  00016E                     l8693:
  8616                           
  8617                           ; BSR set to: 1
  8618  00016E  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  8619  000170  D009               	goto	u9450
  8620  000172  05A8               	decf	powf@ix& (0+255),w,b
  8621  000174  0E00               	movlw	0
  8622  000176  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  8623  000178  0E80               	movlw	128
  8624  00017A  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  8625  00017C  0E7F               	movlw	127
  8626  00017E  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  8627  000180  B0D8               	btfsc	status,0,c
  8628  000182  D00B               	goto	u9460
  8629  000184                     u9450:
  8630                           
  8631                           ; BSR set to: 1
  8632  000184  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  8633  000186  D024               	goto	l8701
  8634  000188  0590               	decf	powf@iy& (0+255),w,b
  8635  00018A  0E00               	movlw	0
  8636  00018C  5991               	subwfb	(powf@iy+1)& (0+255),w,b
  8637  00018E  0E80               	movlw	128
  8638  000190  5992               	subwfb	(powf@iy+2)& (0+255),w,b
  8639  000192  0E7F               	movlw	127
  8640  000194  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  8641  000196  A0D8               	btfss	status,0,c
  8642  000198  D01B               	goto	l8701
  8643  00019A                     u9460:
  8644                           
  8645                           ; BSR set to: 1
  8646  00019A  C0A1  F00C         	movff	powf@x,___fladd@b
  8647  00019E  C0A2  F00D         	movff	powf@x+1,___fladd@b+1
  8648  0001A2  C0A3  F00E         	movff	powf@x+2,___fladd@b+2
  8649  0001A6  C0A4  F00F         	movff	powf@x+3,___fladd@b+3
  8650  0001AA  C0A5  F010         	movff	powf@y,___fladd@a
  8651  0001AE  C0A6  F011         	movff	powf@y+1,___fladd@a+1
  8652  0001B2  C0A7  F012         	movff	powf@y+2,___fladd@a+2
  8653  0001B6  C0A8  F013         	movff	powf@y+3,___fladd@a+3
  8654  0001BA  EC72  F01C         	call	___fladd	;wreg free
  8655  0001BE  C00C  F0A1         	movff	?___fladd,?_powf
  8656  0001C2  C00D  F0A2         	movff	?___fladd+1,?_powf+1
  8657  0001C6  C00E  F0A3         	movff	?___fladd+2,?_powf+2
  8658  0001CA  C00F  F0A4         	movff	?___fladd+3,?_powf+3
  8659  0001CE  0012               	return	
  8660  0001D0                     l8701:
  8661                           
  8662                           ; BSR set to: 1
  8663  0001D0  0E00               	movlw	0
  8664  0001D2  6F50               	movwf	powf@yisint& (0+255),b
  8665  0001D4  0E00               	movlw	0
  8666  0001D6  6F51               	movwf	(powf@yisint+1)& (0+255),b
  8667  0001D8  0E00               	movlw	0
  8668  0001DA  6F52               	movwf	(powf@yisint+2)& (0+255),b
  8669  0001DC  0E00               	movlw	0
  8670  0001DE  6F53               	movwf	(powf@yisint+3)& (0+255),b
  8671                           
  8672                           ; BSR set to: 1
  8673  0001E0  AF63               	btfss	(powf@hx+3)& (0+255),7,b
  8674  0001E2  D0B1               	goto	l1649
  8675                           
  8676                           ; BSR set to: 1
  8677  0001E4  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  8678  0001E6  D00E               	goto	l8709
  8679  0001E8  0E80               	movlw	128
  8680  0001EA  5D92               	subwf	(powf@iy+2)& (0+255),w,b
  8681  0001EC  0E4B               	movlw	75
  8682  0001EE  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  8683  0001F0  A0D8               	btfss	status,0,c
  8684  0001F2  D008               	goto	l8709
  8685                           
  8686                           ; BSR set to: 1
  8687  0001F4  0E02               	movlw	2
  8688  0001F6  6F50               	movwf	powf@yisint& (0+255),b
  8689  0001F8  0E00               	movlw	0
  8690  0001FA  6F51               	movwf	(powf@yisint+1)& (0+255),b
  8691  0001FC  0E00               	movlw	0
  8692  0001FE  6F52               	movwf	(powf@yisint+2)& (0+255),b
  8693  000200  0E00               	movlw	0
  8694  000202  D0A0               	goto	L3
  8695  000204                     l8709:
  8696                           
  8697                           ; BSR set to: 1
  8698  000204  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  8699  000206  D09F               	goto	l1649
  8700  000208  0E80               	movlw	128
  8701  00020A  5D92               	subwf	(powf@iy+2)& (0+255),w,b
  8702  00020C  0E3F               	movlw	63
  8703  00020E  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  8704  000210  A0D8               	btfss	status,0,c
  8705  000212  D099               	goto	l1649
  8706                           
  8707                           ; BSR set to: 1
  8708  000214  0E17               	movlw	23
  8709  000216  0100               	movlb	0	; () banked
  8710  000218  6FA9               	movwf	??_powf& (0+255),b
  8711  00021A  C190  F0AA         	movff	powf@iy,??_powf+1
  8712  00021E  C191  F0AB         	movff	powf@iy+1,??_powf+2
  8713  000222  C192  F0AC         	movff	powf@iy+2,??_powf+3
  8714  000226  C193  F0AD         	movff	powf@iy+3,??_powf+4
  8715  00022A                     u9505:
  8716  00022A  67A9               	tstfsz	??_powf& (0+255),b
  8717  00022C  D001               	goto	u9506
  8718  00022E  D007               	goto	u9507
  8719  000230                     u9506:
  8720  000230  35AD               	rlcf	(??_powf+4)& (0+255),w,b
  8721  000232  33AD               	rrcf	(??_powf+4)& (0+255),f,b
  8722  000234  33AC               	rrcf	(??_powf+3)& (0+255),f,b
  8723  000236  33AB               	rrcf	(??_powf+2)& (0+255),f,b
  8724  000238  33AA               	rrcf	(??_powf+1)& (0+255),f,b
  8725  00023A  2FA9               	decfsz	??_powf& (0+255),f,b
  8726  00023C  D7F6               	goto	u9505
  8727  00023E                     u9507:
  8728  00023E  0E81               	movlw	129
  8729  000240  0100               	movlb	0	; () banked
  8730  000242  25AA               	addwf	(??_powf+1)& (0+255),w,b
  8731  000244  0101               	movlb	1	; () banked
  8732  000246  6FA0               	movwf	powf@k& (0+255),b
  8733  000248  0EFF               	movlw	255
  8734  00024A  0100               	movlb	0	; () banked
  8735  00024C  21AB               	addwfc	(??_powf+2)& (0+255),w,b
  8736  00024E  0101               	movlb	1	; () banked
  8737  000250  6FA1               	movwf	(powf@k+1)& (0+255),b
  8738  000252  0EFF               	movlw	255
  8739  000254  0100               	movlb	0	; () banked
  8740  000256  21AC               	addwfc	(??_powf+3)& (0+255),w,b
  8741  000258  0101               	movlb	1	; () banked
  8742  00025A  6FA2               	movwf	(powf@k+2)& (0+255),b
  8743  00025C  0EFF               	movlw	255
  8744  00025E  0100               	movlb	0	; () banked
  8745  000260  21AD               	addwfc	(??_powf+4)& (0+255),w,b
  8746  000262  0101               	movlb	1	; () banked
  8747  000264  6FA3               	movwf	(powf@k+3)& (0+255),b
  8748  000266  51A0               	movf	powf@k& (0+255),w,b
  8749  000268  0817               	sublw	23
  8750  00026A  0100               	movlb	0	; () banked
  8751  00026C  6FA9               	movwf	??_powf& (0+255),b
  8752  00026E  C190  F0AA         	movff	powf@iy,??_powf+1
  8753  000272  C191  F0AB         	movff	powf@iy+1,??_powf+2
  8754  000276  C192  F0AC         	movff	powf@iy+2,??_powf+3
  8755  00027A  C193  F0AD         	movff	powf@iy+3,??_powf+4
  8756  00027E                     u9515:
  8757  00027E  67A9               	tstfsz	??_powf& (0+255),b
  8758  000280  D001               	goto	u9516
  8759  000282  D007               	goto	u9517
  8760  000284                     u9516:
  8761  000284  35AD               	rlcf	(??_powf+4)& (0+255),w,b
  8762  000286  33AD               	rrcf	(??_powf+4)& (0+255),f,b
  8763  000288  33AC               	rrcf	(??_powf+3)& (0+255),f,b
  8764  00028A  33AB               	rrcf	(??_powf+2)& (0+255),f,b
  8765  00028C  33AA               	rrcf	(??_powf+1)& (0+255),f,b
  8766  00028E  2FA9               	decfsz	??_powf& (0+255),f,b
  8767  000290  D7F6               	goto	u9515
  8768  000292                     u9517:
  8769  000292  C0AA  F1AC         	movff	??_powf+1,powf@j
  8770  000296  C0AB  F1AD         	movff	??_powf+2,powf@j+1
  8771  00029A  C0AC  F1AE         	movff	??_powf+3,powf@j+2
  8772  00029E  C0AD  F1AF         	movff	??_powf+4,powf@j+3
  8773  0002A2  0101               	movlb	1	; () banked
  8774  0002A4  51A0               	movf	powf@k& (0+255),w,b
  8775  0002A6  0817               	sublw	23
  8776  0002A8  0100               	movlb	0	; () banked
  8777  0002AA  6FA9               	movwf	??_powf& (0+255),b
  8778  0002AC  C1AC  F0AA         	movff	powf@j,??_powf+1
  8779  0002B0  C1AD  F0AB         	movff	powf@j+1,??_powf+2
  8780  0002B4  C1AE  F0AC         	movff	powf@j+2,??_powf+3
  8781  0002B8  C1AF  F0AD         	movff	powf@j+3,??_powf+4
  8782  0002BC  2BA9               	incf	??_powf& (0+255),f,b
  8783  0002BE  D005               	goto	u9520
  8784  0002C0                     u9525:
  8785  0002C0  90D8               	bcf	status,0,c
  8786  0002C2  37AA               	rlcf	(??_powf+1)& (0+255),f,b
  8787  0002C4  37AB               	rlcf	(??_powf+2)& (0+255),f,b
  8788  0002C6  37AC               	rlcf	(??_powf+3)& (0+255),f,b
  8789  0002C8  37AD               	rlcf	(??_powf+4)& (0+255),f,b
  8790  0002CA                     u9520:
  8791  0002CA  2FA9               	decfsz	??_powf& (0+255),f,b
  8792  0002CC  D7F9               	goto	u9525
  8793  0002CE  0101               	movlb	1	; () banked
  8794  0002D0  5190               	movf	powf@iy& (0+255),w,b
  8795  0002D2  0100               	movlb	0	; () banked
  8796  0002D4  19AA               	xorwf	(??_powf+1)& (0+255),w,b
  8797  0002D6  E137               	bnz	l1649
  8798  0002D8  0101               	movlb	1	; () banked
  8799  0002DA  5191               	movf	(powf@iy+1)& (0+255),w,b
  8800  0002DC  0100               	movlb	0	; () banked
  8801  0002DE  19AB               	xorwf	(??_powf+2)& (0+255),w,b
  8802  0002E0  E132               	bnz	l1649
  8803  0002E2  0101               	movlb	1	; () banked
  8804  0002E4  5192               	movf	(powf@iy+2)& (0+255),w,b
  8805  0002E6  0100               	movlb	0	; () banked
  8806  0002E8  19AC               	xorwf	(??_powf+3)& (0+255),w,b
  8807  0002EA  E12D               	bnz	l1649
  8808  0002EC  0101               	movlb	1	; () banked
  8809  0002EE  5193               	movf	(powf@iy+3)& (0+255),w,b
  8810  0002F0  0100               	movlb	0	; () banked
  8811  0002F2  19AD               	xorwf	(??_powf+4)& (0+255),w,b
  8812  0002F4  A4D8               	btfss	status,2,c
  8813  0002F6  D027               	goto	l1649
  8814                           
  8815                           ; BSR set to: 0
  8816  0002F8  0E01               	movlw	1
  8817  0002FA  0101               	movlb	1	; () banked
  8818  0002FC  15AC               	andwf	powf@j& (0+255),w,b
  8819  0002FE  0100               	movlb	0	; () banked
  8820  000300  6FA9               	movwf	??_powf& (0+255),b
  8821  000302  0E00               	movlw	0
  8822  000304  0101               	movlb	1	; () banked
  8823  000306  15AD               	andwf	(powf@j+1)& (0+255),w,b
  8824  000308  0100               	movlb	0	; () banked
  8825  00030A  6FAA               	movwf	(??_powf+1)& (0+255),b
  8826  00030C  0E00               	movlw	0
  8827  00030E  0101               	movlb	1	; () banked
  8828  000310  15AE               	andwf	(powf@j+2)& (0+255),w,b
  8829  000312  0100               	movlb	0	; () banked
  8830  000314  6FAB               	movwf	(??_powf+2)& (0+255),b
  8831  000316  0E00               	movlw	0
  8832  000318  0101               	movlb	1	; () banked
  8833  00031A  15AF               	andwf	(powf@j+3)& (0+255),w,b
  8834  00031C  0100               	movlb	0	; () banked
  8835  00031E  6FAC               	movwf	(??_powf+3)& (0+255),b
  8836  000320  51A9               	movf	??_powf& (0+255),w,b
  8837  000322  0802               	sublw	2
  8838  000324  0101               	movlb	1	; () banked
  8839  000326  6F50               	movwf	powf@yisint& (0+255),b
  8840  000328  0E00               	movlw	0
  8841  00032A  0100               	movlb	0	; () banked
  8842  00032C  55AA               	subfwb	(??_powf+1)& (0+255),w,b
  8843  00032E  0101               	movlb	1	; () banked
  8844  000330  6F51               	movwf	(powf@yisint+1)& (0+255),b
  8845  000332  0E00               	movlw	0
  8846  000334  0100               	movlb	0	; () banked
  8847  000336  55AB               	subfwb	(??_powf+2)& (0+255),w,b
  8848  000338  0101               	movlb	1	; () banked
  8849  00033A  6F52               	movwf	(powf@yisint+2)& (0+255),b
  8850  00033C  0E00               	movlw	0
  8851  00033E  0100               	movlb	0	; () banked
  8852  000340  55AC               	subfwb	(??_powf+3)& (0+255),w,b
  8853  000342  0101               	movlb	1	; () banked
  8854  000344                     L3:
  8855  000344  6F53               	movwf	(powf@yisint+3)& (0+255),b
  8856  000346                     l1649:
  8857  000346  0E80               	movlw	128
  8858  000348  0101               	movlb	1	; () banked
  8859  00034A  1992               	xorwf	(powf@iy+2)& (0+255),w,b
  8860  00034C  E158               	bnz	l8739
  8861  00034E  0E7F               	movlw	127
  8862  000350  1993               	xorwf	(powf@iy+3)& (0+255),w,b
  8863  000352  1190               	iorwf	powf@iy& (0+255),w,b
  8864  000354  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  8865  000356  A4D8               	btfss	status,2,c
  8866  000358  D052               	goto	l8739
  8867                           
  8868                           ; BSR set to: 1
  8869  00035A  0E80               	movlw	128
  8870  00035C  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  8871  00035E  E110               	bnz	l8723
  8872  000360  0E3F               	movlw	63
  8873  000362  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  8874  000364  11A8               	iorwf	powf@ix& (0+255),w,b
  8875  000366  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  8876  000368  A4D8               	btfss	status,2,c
  8877  00036A  D00A               	goto	l8723
  8878                           
  8879                           ; BSR set to: 1
  8880  00036C  0E00               	movlw	0
  8881  00036E  0100               	movlb	0	; () banked
  8882  000370  6FA1               	movwf	?_powf& (0+255),b
  8883  000372  0E00               	movlw	0
  8884  000374  6FA2               	movwf	(?_powf+1)& (0+255),b
  8885  000376  0E80               	movlw	128
  8886  000378  6FA3               	movwf	(?_powf+2)& (0+255),b
  8887  00037A  0E3F               	movlw	63
  8888  00037C  6FA4               	movwf	(?_powf+3)& (0+255),b
  8889  00037E  0012               	return	
  8890  000380                     l8723:
  8891                           
  8892                           ; BSR set to: 1
  8893  000380  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  8894  000382  D01E               	goto	l8731
  8895  000384  05A8               	decf	powf@ix& (0+255),w,b
  8896  000386  0E00               	movlw	0
  8897  000388  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  8898  00038A  0E80               	movlw	128
  8899  00038C  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  8900  00038E  0E3F               	movlw	63
  8901  000390  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  8902  000392  A0D8               	btfss	status,0,c
  8903  000394  D015               	goto	l8731
  8904                           
  8905                           ; BSR set to: 1
  8906  000396  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
  8907  000398  D00A               	goto	l1659
  8908                           
  8909                           ; BSR set to: 1
  8910  00039A  0E00               	movlw	0
  8911  00039C  0100               	movlb	0	; () banked
  8912  00039E  6FA1               	movwf	?_powf& (0+255),b
  8913  0003A0  0E00               	movlw	0
  8914  0003A2  6FA2               	movwf	(?_powf+1)& (0+255),b
  8915  0003A4  0E00               	movlw	0
  8916  0003A6  6FA3               	movwf	(?_powf+2)& (0+255),b
  8917  0003A8  0E00               	movlw	0
  8918  0003AA  6FA4               	movwf	(?_powf+3)& (0+255),b
  8919  0003AC  0012               	return	
  8920  0003AE                     l1659:
  8921                           
  8922                           ; BSR set to: 1
  8923  0003AE  C0A5  F0A1         	movff	powf@y,?_powf
  8924  0003B2  C0A6  F0A2         	movff	powf@y+1,?_powf+1
  8925  0003B6  C0A7  F0A3         	movff	powf@y+2,?_powf+2
  8926  0003BA  C0A8  F0A4         	movff	powf@y+3,?_powf+3
  8927  0003BE  0012               	return	
  8928  0003C0                     l8731:
  8929                           
  8930                           ; BSR set to: 1
  8931  0003C0  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
  8932  0003C2  D013               	goto	l8735
  8933                           
  8934                           ; BSR set to: 1
  8935  0003C4  C0A5  F00C         	movff	powf@y,___flneg@f1
  8936  0003C8  C0A6  F00D         	movff	powf@y+1,___flneg@f1+1
  8937  0003CC  C0A7  F00E         	movff	powf@y+2,___flneg@f1+2
  8938  0003D0  C0A8  F00F         	movff	powf@y+3,___flneg@f1+3
  8939  0003D4  EC2A  F02C         	call	___flneg	;wreg free
  8940  0003D8  C00C  F0A1         	movff	?___flneg,?_powf
  8941  0003DC  C00D  F0A2         	movff	?___flneg+1,?_powf+1
  8942  0003E0  C00E  F0A3         	movff	?___flneg+2,?_powf+2
  8943  0003E4  C00F  F0A4         	movff	?___flneg+3,?_powf+3
  8944  0003E8  0012               	return	
  8945  0003EA                     l8735:
  8946                           
  8947                           ; BSR set to: 1
  8948  0003EA  0E00               	movlw	0
  8949  0003EC  0100               	movlb	0	; () banked
  8950  0003EE  6FA1               	movwf	?_powf& (0+255),b
  8951  0003F0  0E00               	movlw	0
  8952  0003F2  6FA2               	movwf	(?_powf+1)& (0+255),b
  8953  0003F4  0E00               	movlw	0
  8954  0003F6  6FA3               	movwf	(?_powf+2)& (0+255),b
  8955  0003F8  0E00               	movlw	0
  8956  0003FA  6FA4               	movwf	(?_powf+3)& (0+255),b
  8957  0003FC  0012               	return	
  8958  0003FE                     l8739:
  8959                           
  8960                           ; BSR set to: 1
  8961  0003FE  0E80               	movlw	128
  8962  000400  1992               	xorwf	(powf@iy+2)& (0+255),w,b
  8963  000402  E12D               	bnz	l8745
  8964  000404  0E3F               	movlw	63
  8965  000406  1993               	xorwf	(powf@iy+3)& (0+255),w,b
  8966  000408  1190               	iorwf	powf@iy& (0+255),w,b
  8967  00040A  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  8968  00040C  A4D8               	btfss	status,2,c
  8969  00040E  D027               	goto	l8745
  8970                           
  8971                           ; BSR set to: 1
  8972  000410  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
  8973  000412  D01C               	goto	l1669
  8974                           
  8975                           ; BSR set to: 1
  8976  000414  0E00               	movlw	0
  8977  000416  0100               	movlb	0	; () banked
  8978  000418  6F68               	movwf	___fldiv@b& (0+255),b
  8979  00041A  0E00               	movlw	0
  8980  00041C  6F69               	movwf	(___fldiv@b+1)& (0+255),b
  8981  00041E  0E80               	movlw	128
  8982  000420  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
  8983  000422  0E3F               	movlw	63
  8984  000424  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
  8985  000426  C0A1  F06C         	movff	powf@x,___fldiv@a
  8986  00042A  C0A2  F06D         	movff	powf@x+1,___fldiv@a+1
  8987  00042E  C0A3  F06E         	movff	powf@x+2,___fldiv@a+2
  8988  000432  C0A4  F06F         	movff	powf@x+3,___fldiv@a+3
  8989  000436  ECF8  F01D         	call	___fldiv	;wreg free
  8990  00043A  C068  F0A1         	movff	?___fldiv,?_powf
  8991  00043E  C069  F0A2         	movff	?___fldiv+1,?_powf+1
  8992  000442  C06A  F0A3         	movff	?___fldiv+2,?_powf+2
  8993  000446  C06B  F0A4         	movff	?___fldiv+3,?_powf+3
  8994  00044A  0012               	return	
  8995  00044C                     l1669:
  8996                           
  8997                           ; BSR set to: 1
  8998  00044C  C0A1  F0A1         	movff	powf@x,?_powf
  8999  000450  C0A2  F0A2         	movff	powf@x+1,?_powf+1
  9000  000454  C0A3  F0A3         	movff	powf@x+2,?_powf+2
  9001  000458  C0A4  F0A4         	movff	powf@x+3,?_powf+3
  9002  00045C  0012               	return	
  9003  00045E                     l8745:
  9004                           
  9005                           ; BSR set to: 1
  9006  00045E  0E40               	movlw	64
  9007  000460  197F               	xorwf	(powf@hy+3)& (0+255),w,b
  9008  000462  117C               	iorwf	powf@hy& (0+255),w,b
  9009  000464  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  9010  000466  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  9011  000468  A4D8               	btfss	status,2,c
  9012  00046A  D01B               	goto	l8751
  9013                           
  9014                           ; BSR set to: 1
  9015  00046C  C0A1  F01C         	movff	powf@x,___flmul@b
  9016  000470  C0A2  F01D         	movff	powf@x+1,___flmul@b+1
  9017  000474  C0A3  F01E         	movff	powf@x+2,___flmul@b+2
  9018  000478  C0A4  F01F         	movff	powf@x+3,___flmul@b+3
  9019  00047C  C0A1  F020         	movff	powf@x,___flmul@a
  9020  000480  C0A2  F021         	movff	powf@x+1,___flmul@a+1
  9021  000484  C0A3  F022         	movff	powf@x+2,___flmul@a+2
  9022  000488  C0A4  F023         	movff	powf@x+3,___flmul@a+3
  9023  00048C  ECC9  F01A         	call	___flmul	;wreg free
  9024  000490  C01C  F0A1         	movff	?___flmul,?_powf
  9025  000494  C01D  F0A2         	movff	?___flmul+1,?_powf+1
  9026  000498  C01E  F0A3         	movff	?___flmul+2,?_powf+2
  9027  00049C  C01F  F0A4         	movff	?___flmul+3,?_powf+3
  9028  0004A0  0012               	return	
  9029  0004A2                     l8751:
  9030                           
  9031                           ; BSR set to: 1
  9032  0004A2  0E3F               	movlw	63
  9033  0004A4  197F               	xorwf	(powf@hy+3)& (0+255),w,b
  9034  0004A6  117C               	iorwf	powf@hy& (0+255),w,b
  9035  0004A8  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  9036  0004AA  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  9037  0004AC  B4D8               	btfsc	status,2,c
  9038                           
  9039                           ; BSR set to: 1
  9040  0004AE  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
  9041  0004B0  D013               	goto	l8759
  9042                           
  9043                           ; BSR set to: 1
  9044  0004B2  C0A1  F070         	movff	powf@x,sqrtf@x
  9045  0004B6  C0A2  F071         	movff	powf@x+1,sqrtf@x+1
  9046  0004BA  C0A3  F072         	movff	powf@x+2,sqrtf@x+2
  9047  0004BE  C0A4  F073         	movff	powf@x+3,sqrtf@x+3
  9048  0004C2  ECC0  F016         	call	_sqrtf	;wreg free
  9049  0004C6  C070  F0A1         	movff	?_sqrtf,?_powf
  9050  0004CA  C071  F0A2         	movff	?_sqrtf+1,?_powf+1
  9051  0004CE  C072  F0A3         	movff	?_sqrtf+2,?_powf+2
  9052  0004D2  C073  F0A4         	movff	?_sqrtf+3,?_powf+3
  9053  0004D6  0012               	return	
  9054  0004D8                     l8759:
  9055                           
  9056                           ; BSR set to: 1
  9057  0004D8  C0A1  F00C         	movff	powf@x,fabsf@x
  9058  0004DC  C0A2  F00D         	movff	powf@x+1,fabsf@x+1
  9059  0004E0  C0A3  F00E         	movff	powf@x+2,fabsf@x+2
  9060  0004E4  C0A4  F00F         	movff	powf@x+3,fabsf@x+3
  9061  0004E8  EC7D  F02B         	call	_fabsf	;wreg free
  9062  0004EC  C00C  F170         	movff	?_fabsf,powf@ax
  9063  0004F0  C00D  F171         	movff	?_fabsf+1,powf@ax+1
  9064  0004F4  C00E  F172         	movff	?_fabsf+2,powf@ax+2
  9065  0004F8  C00F  F173         	movff	?_fabsf+3,powf@ax+3
  9066  0004FC  0E80               	movlw	128
  9067  0004FE  0101               	movlb	1	; () banked
  9068  000500  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  9069  000502  E106               	bnz	u9640
  9070  000504  0E7F               	movlw	127
  9071  000506  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  9072  000508  11A8               	iorwf	powf@ix& (0+255),w,b
  9073  00050A  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  9074  00050C  B4D8               	btfsc	status,2,c
  9075  00050E  D00F               	goto	u9660
  9076  000510                     u9640:
  9077                           
  9078                           ; BSR set to: 1
  9079  000510  51A8               	movf	powf@ix& (0+255),w,b
  9080  000512  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  9081  000514  11AA               	iorwf	(powf@ix+2)& (0+255),w,b
  9082  000516  11AB               	iorwf	(powf@ix+3)& (0+255),w,b
  9083  000518  B4D8               	btfsc	status,2,c
  9084  00051A  D009               	goto	u9660
  9085                           
  9086                           ; BSR set to: 1
  9087  00051C  0E80               	movlw	128
  9088  00051E  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  9089  000520  E105               	bnz	u9661
  9090  000522  0E3F               	movlw	63
  9091  000524  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  9092  000526  11A8               	iorwf	powf@ix& (0+255),w,b
  9093  000528  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  9094  00052A  A4D8               	btfss	status,2,c
  9095  00052C                     u9661:
  9096  00052C  D0B6               	goto	l8785
  9097  00052E                     u9660:
  9098                           
  9099                           ; BSR set to: 1
  9100  00052E  C170  F1B4         	movff	powf@ax,powf@z
  9101  000532  C171  F1B5         	movff	powf@ax+1,powf@z+1
  9102  000536  C172  F1B6         	movff	powf@ax+2,powf@z+2
  9103  00053A  C173  F1B7         	movff	powf@ax+3,powf@z+3
  9104                           
  9105                           ; BSR set to: 1
  9106  00053E  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
  9107  000540  D01B               	goto	l8771
  9108                           
  9109                           ; BSR set to: 1
  9110  000542  0E00               	movlw	0
  9111  000544  0100               	movlb	0	; () banked
  9112  000546  6F68               	movwf	___fldiv@b& (0+255),b
  9113  000548  0E00               	movlw	0
  9114  00054A  6F69               	movwf	(___fldiv@b+1)& (0+255),b
  9115  00054C  0E80               	movlw	128
  9116  00054E  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
  9117  000550  0E3F               	movlw	63
  9118  000552  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
  9119  000554  C1B4  F06C         	movff	powf@z,___fldiv@a
  9120  000558  C1B5  F06D         	movff	powf@z+1,___fldiv@a+1
  9121  00055C  C1B6  F06E         	movff	powf@z+2,___fldiv@a+2
  9122  000560  C1B7  F06F         	movff	powf@z+3,___fldiv@a+3
  9123  000564  ECF8  F01D         	call	___fldiv	;wreg free
  9124  000568  C068  F1B4         	movff	?___fldiv,powf@z
  9125  00056C  C069  F1B5         	movff	?___fldiv+1,powf@z+1
  9126  000570  C06A  F1B6         	movff	?___fldiv+2,powf@z+2
  9127  000574  C06B  F1B7         	movff	?___fldiv+3,powf@z+3
  9128  000578                     l8771:
  9129  000578  0101               	movlb	1	; () banked
  9130  00057A  AF63               	btfss	(powf@hx+3)& (0+255),7,b
  9131  00057C  D085               	goto	l8781
  9132                           
  9133                           ; BSR set to: 1
  9134  00057E  0E00               	movlw	0
  9135  000580  25A8               	addwf	powf@ix& (0+255),w,b
  9136  000582  0100               	movlb	0	; () banked
  9137  000584  6FA9               	movwf	??_powf& (0+255),b
  9138  000586  0E00               	movlw	0
  9139  000588  0101               	movlb	1	; () banked
  9140  00058A  21A9               	addwfc	(powf@ix+1)& (0+255),w,b
  9141  00058C  0100               	movlb	0	; () banked
  9142  00058E  6FAA               	movwf	(??_powf+1)& (0+255),b
  9143  000590  0E80               	movlw	128
  9144  000592  0101               	movlb	1	; () banked
  9145  000594  21AA               	addwfc	(powf@ix+2)& (0+255),w,b
  9146  000596  0100               	movlb	0	; () banked
  9147  000598  6FAB               	movwf	(??_powf+2)& (0+255),b
  9148  00059A  0EC0               	movlw	192
  9149  00059C  0101               	movlb	1	; () banked
  9150  00059E  21AB               	addwfc	(powf@ix+3)& (0+255),w,b
  9151  0005A0  0100               	movlb	0	; () banked
  9152  0005A2  6FAC               	movwf	(??_powf+3)& (0+255),b
  9153  0005A4  0101               	movlb	1	; () banked
  9154  0005A6  5150               	movf	powf@yisint& (0+255),w,b
  9155  0005A8  0100               	movlb	0	; () banked
  9156  0005AA  11A9               	iorwf	??_powf& (0+255),w,b
  9157  0005AC  6FAD               	movwf	(??_powf+4)& (0+255),b
  9158  0005AE  0101               	movlb	1	; () banked
  9159  0005B0  5151               	movf	(powf@yisint+1)& (0+255),w,b
  9160  0005B2  0100               	movlb	0	; () banked
  9161  0005B4  11AA               	iorwf	(??_powf+1)& (0+255),w,b
  9162  0005B6  6FAE               	movwf	(??_powf+5)& (0+255),b
  9163  0005B8  0101               	movlb	1	; () banked
  9164  0005BA  5152               	movf	(powf@yisint+2)& (0+255),w,b
  9165  0005BC  0100               	movlb	0	; () banked
  9166  0005BE  11AB               	iorwf	(??_powf+2)& (0+255),w,b
  9167  0005C0  6FAF               	movwf	(??_powf+6)& (0+255),b
  9168  0005C2  0101               	movlb	1	; () banked
  9169  0005C4  5153               	movf	(powf@yisint+3)& (0+255),w,b
  9170  0005C6  0100               	movlb	0	; () banked
  9171  0005C8  11AC               	iorwf	(??_powf+3)& (0+255),w,b
  9172  0005CA  6FB0               	movwf	(??_powf+7)& (0+255),b
  9173  0005CC  51AD               	movf	(??_powf+4)& (0+255),w,b
  9174  0005CE  11AE               	iorwf	(??_powf+5)& (0+255),w,b
  9175  0005D0  11AF               	iorwf	(??_powf+6)& (0+255),w,b
  9176  0005D2  11B0               	iorwf	(??_powf+7)& (0+255),w,b
  9177  0005D4  A4D8               	btfss	status,2,c
  9178  0005D6  D03F               	goto	l8777
  9179                           
  9180                           ; BSR set to: 0
  9181  0005D8  C1B4  F064         	movff	powf@z,___flsub@a
  9182  0005DC  C1B5  F065         	movff	powf@z+1,___flsub@a+1
  9183  0005E0  C1B6  F066         	movff	powf@z+2,___flsub@a+2
  9184  0005E4  C1B7  F067         	movff	powf@z+3,___flsub@a+3
  9185  0005E8  C1B4  F060         	movff	powf@z,___flsub@b
  9186  0005EC  C1B5  F061         	movff	powf@z+1,___flsub@b+1
  9187  0005F0  C1B6  F062         	movff	powf@z+2,___flsub@b+2
  9188  0005F4  C1B7  F063         	movff	powf@z+3,___flsub@b+3
  9189  0005F8  EC8D  F02A         	call	___flsub	;wreg free
  9190  0005FC  C060  F068         	movff	?___flsub,___fldiv@b
  9191  000600  C061  F069         	movff	?___flsub+1,___fldiv@b+1
  9192  000604  C062  F06A         	movff	?___flsub+2,___fldiv@b+2
  9193  000608  C063  F06B         	movff	?___flsub+3,___fldiv@b+3
  9194  00060C  C1B4  F064         	movff	powf@z,___flsub@a
  9195  000610  C1B5  F065         	movff	powf@z+1,___flsub@a+1
  9196  000614  C1B6  F066         	movff	powf@z+2,___flsub@a+2
  9197  000618  C1B7  F067         	movff	powf@z+3,___flsub@a+3
  9198  00061C  C1B4  F060         	movff	powf@z,___flsub@b
  9199  000620  C1B5  F061         	movff	powf@z+1,___flsub@b+1
  9200  000624  C1B6  F062         	movff	powf@z+2,___flsub@b+2
  9201  000628  C1B7  F063         	movff	powf@z+3,___flsub@b+3
  9202  00062C  EC8D  F02A         	call	___flsub	;wreg free
  9203  000630  C060  F06C         	movff	?___flsub,___fldiv@a
  9204  000634  C061  F06D         	movff	?___flsub+1,___fldiv@a+1
  9205  000638  C062  F06E         	movff	?___flsub+2,___fldiv@a+2
  9206  00063C  C063  F06F         	movff	?___flsub+3,___fldiv@a+3
  9207  000640  ECF8  F01D         	call	___fldiv	;wreg free
  9208  000644  C068  F1B4         	movff	?___fldiv,powf@z
  9209  000648  C069  F1B5         	movff	?___fldiv+1,powf@z+1
  9210  00064C  C06A  F1B6         	movff	?___fldiv+2,powf@z+2
  9211  000650  C06B  F1B7         	movff	?___fldiv+3,powf@z+3
  9212  000654  D019               	goto	l8781
  9213  000656                     l8777:
  9214                           
  9215                           ; BSR set to: 0
  9216  000656  0101               	movlb	1	; () banked
  9217  000658  0550               	decf	powf@yisint& (0+255),w,b
  9218  00065A  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  9219  00065C  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  9220  00065E  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  9221  000660  A4D8               	btfss	status,2,c
  9222  000662  D012               	goto	l8781
  9223                           
  9224                           ; BSR set to: 1
  9225  000664  C1B4  F00C         	movff	powf@z,___flneg@f1
  9226  000668  C1B5  F00D         	movff	powf@z+1,___flneg@f1+1
  9227  00066C  C1B6  F00E         	movff	powf@z+2,___flneg@f1+2
  9228  000670  C1B7  F00F         	movff	powf@z+3,___flneg@f1+3
  9229  000674  EC2A  F02C         	call	___flneg	;wreg free
  9230  000678  C00C  F1B4         	movff	?___flneg,powf@z
  9231  00067C  C00D  F1B5         	movff	?___flneg+1,powf@z+1
  9232  000680  C00E  F1B6         	movff	?___flneg+2,powf@z+2
  9233  000684  C00F  F1B7         	movff	?___flneg+3,powf@z+3
  9234  000688                     l8781:
  9235  000688  C1B4  F0A1         	movff	powf@z,?_powf
  9236  00068C  C1B5  F0A2         	movff	powf@z+1,?_powf+1
  9237  000690  C1B6  F0A3         	movff	powf@z+2,?_powf+2
  9238  000694  C1B7  F0A4         	movff	powf@z+3,?_powf+3
  9239  000698  0012               	return	
  9240  00069A                     l8785:
  9241                           
  9242                           ; BSR set to: 1
  9243  00069A  0E00               	movlw	0
  9244  00069C  6F84               	movwf	powf@sn& (0+255),b
  9245  00069E  0E00               	movlw	0
  9246  0006A0  6F85               	movwf	(powf@sn+1)& (0+255),b
  9247  0006A2  0E80               	movlw	128
  9248  0006A4  6F86               	movwf	(powf@sn+2)& (0+255),b
  9249  0006A6  0E3F               	movlw	63
  9250  0006A8  6F87               	movwf	(powf@sn+3)& (0+255),b
  9251                           
  9252                           ; BSR set to: 1
  9253  0006AA  AF63               	btfss	(powf@hx+3)& (0+255),7,b
  9254  0006AC  D053               	goto	l8799
  9255                           
  9256                           ; BSR set to: 1
  9257  0006AE  5150               	movf	powf@yisint& (0+255),w,b
  9258  0006B0  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  9259  0006B2  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  9260  0006B4  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  9261  0006B6  A4D8               	btfss	status,2,c
  9262  0006B8  D03F               	goto	l8795
  9263                           
  9264                           ; BSR set to: 1
  9265  0006BA  C0A1  F064         	movff	powf@x,___flsub@a
  9266  0006BE  C0A2  F065         	movff	powf@x+1,___flsub@a+1
  9267  0006C2  C0A3  F066         	movff	powf@x+2,___flsub@a+2
  9268  0006C6  C0A4  F067         	movff	powf@x+3,___flsub@a+3
  9269  0006CA  C0A1  F060         	movff	powf@x,___flsub@b
  9270  0006CE  C0A2  F061         	movff	powf@x+1,___flsub@b+1
  9271  0006D2  C0A3  F062         	movff	powf@x+2,___flsub@b+2
  9272  0006D6  C0A4  F063         	movff	powf@x+3,___flsub@b+3
  9273  0006DA  EC8D  F02A         	call	___flsub	;wreg free
  9274  0006DE  C060  F068         	movff	?___flsub,___fldiv@b
  9275  0006E2  C061  F069         	movff	?___flsub+1,___fldiv@b+1
  9276  0006E6  C062  F06A         	movff	?___flsub+2,___fldiv@b+2
  9277  0006EA  C063  F06B         	movff	?___flsub+3,___fldiv@b+3
  9278  0006EE  C0A1  F064         	movff	powf@x,___flsub@a
  9279  0006F2  C0A2  F065         	movff	powf@x+1,___flsub@a+1
  9280  0006F6  C0A3  F066         	movff	powf@x+2,___flsub@a+2
  9281  0006FA  C0A4  F067         	movff	powf@x+3,___flsub@a+3
  9282  0006FE  C0A1  F060         	movff	powf@x,___flsub@b
  9283  000702  C0A2  F061         	movff	powf@x+1,___flsub@b+1
  9284  000706  C0A3  F062         	movff	powf@x+2,___flsub@b+2
  9285  00070A  C0A4  F063         	movff	powf@x+3,___flsub@b+3
  9286  00070E  EC8D  F02A         	call	___flsub	;wreg free
  9287  000712  C060  F06C         	movff	?___flsub,___fldiv@a
  9288  000716  C061  F06D         	movff	?___flsub+1,___fldiv@a+1
  9289  00071A  C062  F06E         	movff	?___flsub+2,___fldiv@a+2
  9290  00071E  C063  F06F         	movff	?___flsub+3,___fldiv@a+3
  9291  000722  ECF8  F01D         	call	___fldiv	;wreg free
  9292  000726  C068  F0A1         	movff	?___fldiv,?_powf
  9293  00072A  C069  F0A2         	movff	?___fldiv+1,?_powf+1
  9294  00072E  C06A  F0A3         	movff	?___fldiv+2,?_powf+2
  9295  000732  C06B  F0A4         	movff	?___fldiv+3,?_powf+3
  9296  000736  0012               	return	
  9297  000738                     l8795:
  9298                           
  9299                           ; BSR set to: 1
  9300  000738  0550               	decf	powf@yisint& (0+255),w,b
  9301  00073A  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  9302  00073C  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  9303  00073E  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  9304  000740  A4D8               	btfss	status,2,c
  9305  000742  D008               	goto	l8799
  9306                           
  9307                           ; BSR set to: 1
  9308  000744  0E00               	movlw	0
  9309  000746  6F84               	movwf	powf@sn& (0+255),b
  9310  000748  0E00               	movlw	0
  9311  00074A  6F85               	movwf	(powf@sn+1)& (0+255),b
  9312  00074C  0E80               	movlw	128
  9313  00074E  6F86               	movwf	(powf@sn+2)& (0+255),b
  9314  000750  0EBF               	movlw	191
  9315  000752  6F87               	movwf	(powf@sn+3)& (0+255),b
  9316  000754                     l8799:
  9317                           
  9318                           ; BSR set to: 1
  9319  000754  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  9320  000756  D26D               	goto	l8847
  9321  000758  0590               	decf	powf@iy& (0+255),w,b
  9322  00075A  0E00               	movlw	0
  9323  00075C  5991               	subwfb	(powf@iy+1)& (0+255),w,b
  9324  00075E  0E00               	movlw	0
  9325  000760  5992               	subwfb	(powf@iy+2)& (0+255),w,b
  9326  000762  0E4D               	movlw	77
  9327  000764  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  9328  000766  A0D8               	btfss	status,0,c
  9329  000768  D264               	goto	l8847
  9330                           
  9331                           ; BSR set to: 1
  9332  00076A  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  9333  00076C  D00A               	goto	u9750
  9334  00076E  0EF8               	movlw	248
  9335  000770  5DA8               	subwf	powf@ix& (0+255),w,b
  9336  000772  0EFF               	movlw	255
  9337  000774  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  9338  000776  0E7F               	movlw	127
  9339  000778  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  9340  00077A  0E3F               	movlw	63
  9341  00077C  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  9342  00077E  B0D8               	btfsc	status,0,c
  9343  000780  D06C               	goto	l8811
  9344  000782                     u9750:
  9345                           
  9346                           ; BSR set to: 1
  9347  000782  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  9348  000784  D035               	goto	l8807
  9349                           
  9350                           ; BSR set to: 1
  9351  000786  0E60               	movlw	96
  9352  000788  6E20               	movwf	___flmul@a,c
  9353  00078A  0E42               	movlw	66
  9354  00078C  6E21               	movwf	___flmul@a+1,c
  9355  00078E  0EA2               	movlw	162
  9356  000790  6E22               	movwf	___flmul@a+2,c
  9357  000792  0E0D               	movlw	13
  9358  000794  6E23               	movwf	___flmul@a+3,c
  9359  000796  C184  F01C         	movff	powf@sn,___flmul@b
  9360  00079A  C185  F01D         	movff	powf@sn+1,___flmul@b+1
  9361  00079E  C186  F01E         	movff	powf@sn+2,___flmul@b+2
  9362  0007A2  C187  F01F         	movff	powf@sn+3,___flmul@b+3
  9363  0007A6  ECC9  F01A         	call	___flmul	;wreg free
  9364  0007AA  C01C  F1A4         	movff	?___flmul,_powf$2519
  9365  0007AE  C01D  F1A5         	movff	?___flmul+1,_powf$2519+1
  9366  0007B2  C01E  F1A6         	movff	?___flmul+2,_powf$2519+2
  9367  0007B6  C01F  F1A7         	movff	?___flmul+3,_powf$2519+3
  9368  0007BA  C1A4  F01C         	movff	_powf$2519,___flmul@b
  9369  0007BE  C1A5  F01D         	movff	_powf$2519+1,___flmul@b+1
  9370  0007C2  C1A6  F01E         	movff	_powf$2519+2,___flmul@b+2
  9371  0007C6  C1A7  F01F         	movff	_powf$2519+3,___flmul@b+3
  9372  0007CA  0E60               	movlw	96
  9373  0007CC  6E20               	movwf	___flmul@a,c
  9374  0007CE  0E42               	movlw	66
  9375  0007D0  6E21               	movwf	___flmul@a+1,c
  9376  0007D2  0EA2               	movlw	162
  9377  0007D4  6E22               	movwf	___flmul@a+2,c
  9378  0007D6  0E0D               	movlw	13
  9379  0007D8  6E23               	movwf	___flmul@a+3,c
  9380  0007DA  ECC9  F01A         	call	___flmul	;wreg free
  9381  0007DE  C01C  F0A1         	movff	?___flmul,?_powf
  9382  0007E2  C01D  F0A2         	movff	?___flmul+1,?_powf+1
  9383  0007E6  C01E  F0A3         	movff	?___flmul+2,?_powf+2
  9384  0007EA  C01F  F0A4         	movff	?___flmul+3,?_powf+3
  9385  0007EE  0012               	return	
  9386  0007F0                     l8807:
  9387                           
  9388                           ; BSR set to: 1
  9389  0007F0  0ECA               	movlw	202
  9390  0007F2  6E20               	movwf	___flmul@a,c
  9391  0007F4  0EF2               	movlw	242
  9392  0007F6  6E21               	movwf	___flmul@a+1,c
  9393  0007F8  0E49               	movlw	73
  9394  0007FA  6E22               	movwf	___flmul@a+2,c
  9395  0007FC  0E71               	movlw	113
  9396  0007FE  6E23               	movwf	___flmul@a+3,c
  9397  000800  C184  F01C         	movff	powf@sn,___flmul@b
  9398  000804  C185  F01D         	movff	powf@sn+1,___flmul@b+1
  9399  000808  C186  F01E         	movff	powf@sn+2,___flmul@b+2
  9400  00080C  C187  F01F         	movff	powf@sn+3,___flmul@b+3
  9401  000810  ECC9  F01A         	call	___flmul	;wreg free
  9402  000814  C01C  F1A4         	movff	?___flmul,_powf$2519
  9403  000818  C01D  F1A5         	movff	?___flmul+1,_powf$2519+1
  9404  00081C  C01E  F1A6         	movff	?___flmul+2,_powf$2519+2
  9405  000820  C01F  F1A7         	movff	?___flmul+3,_powf$2519+3
  9406  000824  C1A4  F01C         	movff	_powf$2519,___flmul@b
  9407  000828  C1A5  F01D         	movff	_powf$2519+1,___flmul@b+1
  9408  00082C  C1A6  F01E         	movff	_powf$2519+2,___flmul@b+2
  9409  000830  C1A7  F01F         	movff	_powf$2519+3,___flmul@b+3
  9410  000834  0ECA               	movlw	202
  9411  000836  6E20               	movwf	___flmul@a,c
  9412  000838  0EF2               	movlw	242
  9413  00083A  6E21               	movwf	___flmul@a+1,c
  9414  00083C  0E49               	movlw	73
  9415  00083E  6E22               	movwf	___flmul@a+2,c
  9416  000840  0E71               	movlw	113
  9417  000842  6E23               	movwf	___flmul@a+3,c
  9418  000844  ECC9  F01A         	call	___flmul	;wreg free
  9419  000848  C01C  F0A1         	movff	?___flmul,?_powf
  9420  00084C  C01D  F0A2         	movff	?___flmul+1,?_powf+1
  9421  000850  C01E  F0A3         	movff	?___flmul+2,?_powf+2
  9422  000854  C01F  F0A4         	movff	?___flmul+3,?_powf+3
  9423  000858  0012               	return	
  9424  00085A                     l8811:
  9425                           
  9426                           ; BSR set to: 1
  9427  00085A  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  9428  00085C  D07D               	goto	l8821
  9429  00085E  0E08               	movlw	8
  9430  000860  5DA8               	subwf	powf@ix& (0+255),w,b
  9431  000862  0E00               	movlw	0
  9432  000864  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  9433  000866  0E80               	movlw	128
  9434  000868  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  9435  00086A  0E3F               	movlw	63
  9436  00086C  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  9437  00086E  A0D8               	btfss	status,0,c
  9438  000870  D073               	goto	l8821
  9439                           
  9440                           ; BSR set to: 1
  9441  000872  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  9442  000874  D007               	goto	u9780
  9443  000876  517F               	movf	(powf@hy+3)& (0+255),w,b
  9444  000878  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  9445  00087A  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  9446  00087C  E138               	bnz	l8817
  9447  00087E  057C               	decf	powf@hy& (0+255),w,b
  9448  000880  B0D8               	btfsc	status,0,c
  9449  000882  D035               	goto	l8817
  9450  000884                     u9780:
  9451                           
  9452                           ; BSR set to: 1
  9453  000884  0E60               	movlw	96
  9454  000886  6E20               	movwf	___flmul@a,c
  9455  000888  0E42               	movlw	66
  9456  00088A  6E21               	movwf	___flmul@a+1,c
  9457  00088C  0EA2               	movlw	162
  9458  00088E  6E22               	movwf	___flmul@a+2,c
  9459  000890  0E0D               	movlw	13
  9460  000892  6E23               	movwf	___flmul@a+3,c
  9461  000894  C184  F01C         	movff	powf@sn,___flmul@b
  9462  000898  C185  F01D         	movff	powf@sn+1,___flmul@b+1
  9463  00089C  C186  F01E         	movff	powf@sn+2,___flmul@b+2
  9464  0008A0  C187  F01F         	movff	powf@sn+3,___flmul@b+3
  9465  0008A4  ECC9  F01A         	call	___flmul	;wreg free
  9466  0008A8  C01C  F1A4         	movff	?___flmul,_powf$2519
  9467  0008AC  C01D  F1A5         	movff	?___flmul+1,_powf$2519+1
  9468  0008B0  C01E  F1A6         	movff	?___flmul+2,_powf$2519+2
  9469  0008B4  C01F  F1A7         	movff	?___flmul+3,_powf$2519+3
  9470  0008B8  C1A4  F01C         	movff	_powf$2519,___flmul@b
  9471  0008BC  C1A5  F01D         	movff	_powf$2519+1,___flmul@b+1
  9472  0008C0  C1A6  F01E         	movff	_powf$2519+2,___flmul@b+2
  9473  0008C4  C1A7  F01F         	movff	_powf$2519+3,___flmul@b+3
  9474  0008C8  0E60               	movlw	96
  9475  0008CA  6E20               	movwf	___flmul@a,c
  9476  0008CC  0E42               	movlw	66
  9477  0008CE  6E21               	movwf	___flmul@a+1,c
  9478  0008D0  0EA2               	movlw	162
  9479  0008D2  6E22               	movwf	___flmul@a+2,c
  9480  0008D4  0E0D               	movlw	13
  9481  0008D6  6E23               	movwf	___flmul@a+3,c
  9482  0008D8  ECC9  F01A         	call	___flmul	;wreg free
  9483  0008DC  C01C  F0A1         	movff	?___flmul,?_powf
  9484  0008E0  C01D  F0A2         	movff	?___flmul+1,?_powf+1
  9485  0008E4  C01E  F0A3         	movff	?___flmul+2,?_powf+2
  9486  0008E8  C01F  F0A4         	movff	?___flmul+3,?_powf+3
  9487  0008EC  0012               	return	
  9488  0008EE                     l8817:
  9489                           
  9490                           ; BSR set to: 1
  9491  0008EE  0ECA               	movlw	202
  9492  0008F0  6E20               	movwf	___flmul@a,c
  9493  0008F2  0EF2               	movlw	242
  9494  0008F4  6E21               	movwf	___flmul@a+1,c
  9495  0008F6  0E49               	movlw	73
  9496  0008F8  6E22               	movwf	___flmul@a+2,c
  9497  0008FA  0E71               	movlw	113
  9498  0008FC  6E23               	movwf	___flmul@a+3,c
  9499  0008FE  C184  F01C         	movff	powf@sn,___flmul@b
  9500  000902  C185  F01D         	movff	powf@sn+1,___flmul@b+1
  9501  000906  C186  F01E         	movff	powf@sn+2,___flmul@b+2
  9502  00090A  C187  F01F         	movff	powf@sn+3,___flmul@b+3
  9503  00090E  ECC9  F01A         	call	___flmul	;wreg free
  9504  000912  C01C  F1A4         	movff	?___flmul,_powf$2519
  9505  000916  C01D  F1A5         	movff	?___flmul+1,_powf$2519+1
  9506  00091A  C01E  F1A6         	movff	?___flmul+2,_powf$2519+2
  9507  00091E  C01F  F1A7         	movff	?___flmul+3,_powf$2519+3
  9508  000922  C1A4  F01C         	movff	_powf$2519,___flmul@b
  9509  000926  C1A5  F01D         	movff	_powf$2519+1,___flmul@b+1
  9510  00092A  C1A6  F01E         	movff	_powf$2519+2,___flmul@b+2
  9511  00092E  C1A7  F01F         	movff	_powf$2519+3,___flmul@b+3
  9512  000932  0ECA               	movlw	202
  9513  000934  6E20               	movwf	___flmul@a,c
  9514  000936  0EF2               	movlw	242
  9515  000938  6E21               	movwf	___flmul@a+1,c
  9516  00093A  0E49               	movlw	73
  9517  00093C  6E22               	movwf	___flmul@a+2,c
  9518  00093E  0E71               	movlw	113
  9519  000940  6E23               	movwf	___flmul@a+3,c
  9520  000942  ECC9  F01A         	call	___flmul	;wreg free
  9521  000946  C01C  F0A1         	movff	?___flmul,?_powf
  9522  00094A  C01D  F0A2         	movff	?___flmul+1,?_powf+1
  9523  00094E  C01E  F0A3         	movff	?___flmul+2,?_powf+2
  9524  000952  C01F  F0A4         	movff	?___flmul+3,?_powf+3
  9525  000956  0012               	return	
  9526  000958                     l8821:
  9527                           
  9528                           ; BSR set to: 1
  9529  000958  C170  F00C         	movff	powf@ax,___fladd@b
  9530  00095C  C171  F00D         	movff	powf@ax+1,___fladd@b+1
  9531  000960  C172  F00E         	movff	powf@ax+2,___fladd@b+2
  9532  000964  C173  F00F         	movff	powf@ax+3,___fladd@b+3
  9533  000968  0E00               	movlw	0
  9534  00096A  6E10               	movwf	___fladd@a,c
  9535  00096C  0E00               	movlw	0
  9536  00096E  6E11               	movwf	___fladd@a+1,c
  9537  000970  0E80               	movlw	128
  9538  000972  6E12               	movwf	___fladd@a+2,c
  9539  000974  0EBF               	movlw	191
  9540  000976  6E13               	movwf	___fladd@a+3,c
  9541  000978  EC72  F01C         	call	___fladd	;wreg free
  9542  00097C  C00C  F1B0         	movff	?___fladd,powf@t
  9543  000980  C00D  F1B1         	movff	?___fladd+1,powf@t+1
  9544  000984  C00E  F1B2         	movff	?___fladd+2,powf@t+2
  9545  000988  C00F  F1B3         	movff	?___fladd+3,powf@t+3
  9546  00098C  0E00               	movlw	0
  9547  00098E  6E20               	movwf	___flmul@a,c
  9548  000990  0E00               	movlw	0
  9549  000992  6E21               	movwf	___flmul@a+1,c
  9550  000994  0E80               	movlw	128
  9551  000996  6E22               	movwf	___flmul@a+2,c
  9552  000998  0E3E               	movlw	62
  9553  00099A  6E23               	movwf	___flmul@a+3,c
  9554  00099C  C1B0  F01C         	movff	powf@t,___flmul@b
  9555  0009A0  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
  9556  0009A4  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
  9557  0009A8  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
  9558  0009AC  ECC9  F01A         	call	___flmul	;wreg free
  9559  0009B0  C01C  F064         	movff	?___flmul,___flsub@a
  9560  0009B4  C01D  F065         	movff	?___flmul+1,___flsub@a+1
  9561  0009B8  C01E  F066         	movff	?___flmul+2,___flsub@a+2
  9562  0009BC  C01F  F067         	movff	?___flmul+3,___flsub@a+3
  9563  0009C0  0EAB               	movlw	171
  9564  0009C2  0100               	movlb	0	; () banked
  9565  0009C4  6F60               	movwf	___flsub@b& (0+255),b
  9566  0009C6  0EAA               	movlw	170
  9567  0009C8  6F61               	movwf	(___flsub@b+1)& (0+255),b
  9568  0009CA  0EAA               	movlw	170
  9569  0009CC  6F62               	movwf	(___flsub@b+2)& (0+255),b
  9570  0009CE  0E3E               	movlw	62
  9571  0009D0  6F63               	movwf	(___flsub@b+3)& (0+255),b
  9572  0009D2  EC8D  F02A         	call	___flsub	;wreg free
  9573  0009D6  C060  F1A4         	movff	?___flsub,_powf$2519
  9574  0009DA  C061  F1A5         	movff	?___flsub+1,_powf$2519+1
  9575  0009DE  C062  F1A6         	movff	?___flsub+2,_powf$2519+2
  9576  0009E2  C063  F1A7         	movff	?___flsub+3,_powf$2519+3
  9577  0009E6  C1B0  F020         	movff	powf@t,___flmul@a
  9578  0009EA  C1B1  F021         	movff	powf@t+1,___flmul@a+1
  9579  0009EE  C1B2  F022         	movff	powf@t+2,___flmul@a+2
  9580  0009F2  C1B3  F023         	movff	powf@t+3,___flmul@a+3
  9581  0009F6  C1B0  F01C         	movff	powf@t,___flmul@b
  9582  0009FA  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
  9583  0009FE  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
  9584  000A02  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
  9585  000A06  ECC9  F01A         	call	___flmul	;wreg free
  9586  000A0A  C01C  F158         	movff	?___flmul,_powf$2520
  9587  000A0E  C01D  F159         	movff	?___flmul+1,_powf$2520+1
  9588  000A12  C01E  F15A         	movff	?___flmul+2,_powf$2520+2
  9589  000A16  C01F  F15B         	movff	?___flmul+3,_powf$2520+3
  9590  000A1A  C1B0  F020         	movff	powf@t,___flmul@a
  9591  000A1E  C1B1  F021         	movff	powf@t+1,___flmul@a+1
  9592  000A22  C1B2  F022         	movff	powf@t+2,___flmul@a+2
  9593  000A26  C1B3  F023         	movff	powf@t+3,___flmul@a+3
  9594  000A2A  C1A4  F01C         	movff	_powf$2519,___flmul@b
  9595  000A2E  C1A5  F01D         	movff	_powf$2519+1,___flmul@b+1
  9596  000A32  C1A6  F01E         	movff	_powf$2519+2,___flmul@b+2
  9597  000A36  C1A7  F01F         	movff	_powf$2519+3,___flmul@b+3
  9598  000A3A  ECC9  F01A         	call	___flmul	;wreg free
  9599  000A3E  C01C  F064         	movff	?___flmul,___flsub@a
  9600  000A42  C01D  F065         	movff	?___flmul+1,___flsub@a+1
  9601  000A46  C01E  F066         	movff	?___flmul+2,___flsub@a+2
  9602  000A4A  C01F  F067         	movff	?___flmul+3,___flsub@a+3
  9603  000A4E  0E00               	movlw	0
  9604  000A50  0100               	movlb	0	; () banked
  9605  000A52  6F60               	movwf	___flsub@b& (0+255),b
  9606  000A54  0E00               	movlw	0
  9607  000A56  6F61               	movwf	(___flsub@b+1)& (0+255),b
  9608  000A58  0E00               	movlw	0
  9609  000A5A  6F62               	movwf	(___flsub@b+2)& (0+255),b
  9610  000A5C  0E3F               	movlw	63
  9611  000A5E  6F63               	movwf	(___flsub@b+3)& (0+255),b
  9612  000A60  EC8D  F02A         	call	___flsub	;wreg free
  9613  000A64  C060  F148         	movff	?___flsub,_powf$2521
  9614  000A68  C061  F149         	movff	?___flsub+1,_powf$2521+1
  9615  000A6C  C062  F14A         	movff	?___flsub+2,_powf$2521+2
  9616  000A70  C063  F14B         	movff	?___flsub+3,_powf$2521+3
  9617  000A74  C158  F01C         	movff	_powf$2520,___flmul@b
  9618  000A78  C159  F01D         	movff	_powf$2520+1,___flmul@b+1
  9619  000A7C  C15A  F01E         	movff	_powf$2520+2,___flmul@b+2
  9620  000A80  C15B  F01F         	movff	_powf$2520+3,___flmul@b+3
  9621  000A84  C148  F020         	movff	_powf$2521,___flmul@a
  9622  000A88  C149  F021         	movff	_powf$2521+1,___flmul@a+1
  9623  000A8C  C14A  F022         	movff	_powf$2521+2,___flmul@a+2
  9624  000A90  C14B  F023         	movff	_powf$2521+3,___flmul@a+3
  9625  000A94  ECC9  F01A         	call	___flmul	;wreg free
  9626  000A98  C01C  F144         	movff	?___flmul,powf@w
  9627  000A9C  C01D  F145         	movff	?___flmul+1,powf@w+1
  9628  000AA0  C01E  F146         	movff	?___flmul+2,powf@w+2
  9629  000AA4  C01F  F147         	movff	?___flmul+3,powf@w+3
  9630  000AA8  C1B0  F01C         	movff	powf@t,___flmul@b
  9631  000AAC  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
  9632  000AB0  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
  9633  000AB4  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
  9634  000AB8  0E00               	movlw	0
  9635  000ABA  6E20               	movwf	___flmul@a,c
  9636  000ABC  0EAA               	movlw	170
  9637  000ABE  6E21               	movwf	___flmul@a+1,c
  9638  000AC0  0EB8               	movlw	184
  9639  000AC2  6E22               	movwf	___flmul@a+2,c
  9640  000AC4  0E3F               	movlw	63
  9641  000AC6  6E23               	movwf	___flmul@a+3,c
  9642  000AC8  ECC9  F01A         	call	___flmul	;wreg free
  9643  000ACC  C01C  F174         	movff	?___flmul,powf@u
  9644  000AD0  C01D  F175         	movff	?___flmul+1,powf@u+1
  9645  000AD4  C01E  F176         	movff	?___flmul+2,powf@u+2
  9646  000AD8  C01F  F177         	movff	?___flmul+3,powf@u+3
  9647  000ADC  0E70               	movlw	112
  9648  000ADE  6E20               	movwf	___flmul@a,c
  9649  000AE0  0EA5               	movlw	165
  9650  000AE2  6E21               	movwf	___flmul@a+1,c
  9651  000AE4  0EEC               	movlw	236
  9652  000AE6  6E22               	movwf	___flmul@a+2,c
  9653  000AE8  0E36               	movlw	54
  9654  000AEA  6E23               	movwf	___flmul@a+3,c
  9655  000AEC  C1B0  F01C         	movff	powf@t,___flmul@b
  9656  000AF0  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
  9657  000AF4  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
  9658  000AF8  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
  9659  000AFC  ECC9  F01A         	call	___flmul	;wreg free
  9660  000B00  C01C  F060         	movff	?___flmul,___flsub@b
  9661  000B04  C01D  F061         	movff	?___flmul+1,___flsub@b+1
  9662  000B08  C01E  F062         	movff	?___flmul+2,___flsub@b+2
  9663  000B0C  C01F  F063         	movff	?___flmul+3,___flsub@b+3
  9664  000B10  0E3B               	movlw	59
  9665  000B12  6E20               	movwf	___flmul@a,c
  9666  000B14  0EAA               	movlw	170
  9667  000B16  6E21               	movwf	___flmul@a+1,c
  9668  000B18  0EB8               	movlw	184
  9669  000B1A  6E22               	movwf	___flmul@a+2,c
  9670  000B1C  0E3F               	movlw	63
  9671  000B1E  6E23               	movwf	___flmul@a+3,c
  9672  000B20  C144  F01C         	movff	powf@w,___flmul@b
  9673  000B24  C145  F01D         	movff	powf@w+1,___flmul@b+1
  9674  000B28  C146  F01E         	movff	powf@w+2,___flmul@b+2
  9675  000B2C  C147  F01F         	movff	powf@w+3,___flmul@b+3
  9676  000B30  ECC9  F01A         	call	___flmul	;wreg free
  9677  000B34  C01C  F064         	movff	?___flmul,___flsub@a
  9678  000B38  C01D  F065         	movff	?___flmul+1,___flsub@a+1
  9679  000B3C  C01E  F066         	movff	?___flmul+2,___flsub@a+2
  9680  000B40  C01F  F067         	movff	?___flmul+3,___flsub@a+3
  9681  000B44  EC8D  F02A         	call	___flsub	;wreg free
  9682  000B48  C060  F178         	movff	?___flsub,powf@v
  9683  000B4C  C061  F179         	movff	?___flsub+1,powf@v+1
  9684  000B50  C062  F17A         	movff	?___flsub+2,powf@v+2
  9685  000B54  C063  F17B         	movff	?___flsub+3,powf@v+3
  9686  000B58  C174  F00C         	movff	powf@u,___fladd@b
  9687  000B5C  C175  F00D         	movff	powf@u+1,___fladd@b+1
  9688  000B60  C176  F00E         	movff	powf@u+2,___fladd@b+2
  9689  000B64  C177  F00F         	movff	powf@u+3,___fladd@b+3
  9690  000B68  C178  F010         	movff	powf@v,___fladd@a
  9691  000B6C  C179  F011         	movff	powf@v+1,___fladd@a+1
  9692  000B70  C17A  F012         	movff	powf@v+2,___fladd@a+2
  9693  000B74  C17B  F013         	movff	powf@v+3,___fladd@a+3
  9694  000B78  EC72  F01C         	call	___fladd	;wreg free
  9695  000B7C  C00C  F180         	movff	?___fladd,powf@t1
  9696  000B80  C00D  F181         	movff	?___fladd+1,powf@t1+1
  9697  000B84  C00E  F182         	movff	?___fladd+2,powf@t1+2
  9698  000B88  C00F  F183         	movff	?___fladd+3,powf@t1+3
  9699  000B8C  C180  F1B8         	movff	powf@t1,powf@__xc8_float_word
  9700  000B90  C181  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
  9701  000B94  C182  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
  9702  000B98  C183  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
  9703  000B9C  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  9704  000BA0  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  9705  000BA4  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  9706  000BA8  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  9707  000BAC  0E00               	movlw	0
  9708  000BAE  0101               	movlb	1	; () banked
  9709  000BB0  1594               	andwf	powf@is& (0+255),w,b
  9710  000BB2  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  9711  000BB4  0EF0               	movlw	240
  9712  000BB6  1595               	andwf	(powf@is+1)& (0+255),w,b
  9713  000BB8  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  9714  000BBA  0EFF               	movlw	255
  9715  000BBC  1596               	andwf	(powf@is+2)& (0+255),w,b
  9716  000BBE  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  9717  000BC0  0EFF               	movlw	255
  9718  000BC2  1597               	andwf	(powf@is+3)& (0+255),w,b
  9719  000BC4  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  9720                           
  9721                           ; BSR set to: 1
  9722  000BC6  C1B8  F180         	movff	powf@__xc8_float_word,powf@t1
  9723  000BCA  C1B9  F181         	movff	powf@__xc8_float_word+1,powf@t1+1
  9724  000BCE  C1BA  F182         	movff	powf@__xc8_float_word+2,powf@t1+2
  9725  000BD2  C1BB  F183         	movff	powf@__xc8_float_word+3,powf@t1+3
  9726                           
  9727                           ; BSR set to: 1
  9728  000BD6  C174  F064         	movff	powf@u,___flsub@a
  9729  000BDA  C175  F065         	movff	powf@u+1,___flsub@a+1
  9730  000BDE  C176  F066         	movff	powf@u+2,___flsub@a+2
  9731  000BE2  C177  F067         	movff	powf@u+3,___flsub@a+3
  9732  000BE6  C180  F060         	movff	powf@t1,___flsub@b
  9733  000BEA  C181  F061         	movff	powf@t1+1,___flsub@b+1
  9734  000BEE  C182  F062         	movff	powf@t1+2,___flsub@b+2
  9735  000BF2  C183  F063         	movff	powf@t1+3,___flsub@b+3
  9736  000BF6  EC8D  F02A         	call	___flsub	;wreg free
  9737  000BFA  C060  F198         	movff	?___flsub,_powf$2522
  9738  000BFE  C061  F199         	movff	?___flsub+1,_powf$2522+1
  9739  000C02  C062  F19A         	movff	?___flsub+2,_powf$2522+2
  9740  000C06  C063  F19B         	movff	?___flsub+3,_powf$2522+3
  9741  000C0A  C178  F060         	movff	powf@v,___flsub@b
  9742  000C0E  C179  F061         	movff	powf@v+1,___flsub@b+1
  9743  000C12  C17A  F062         	movff	powf@v+2,___flsub@b+2
  9744  000C16  C17B  F063         	movff	powf@v+3,___flsub@b+3
  9745  000C1A  C198  F064         	movff	_powf$2522,___flsub@a
  9746  000C1E  C199  F065         	movff	_powf$2522+1,___flsub@a+1
  9747  000C22  C19A  F066         	movff	_powf$2522+2,___flsub@a+2
  9748  000C26  C19B  F067         	movff	_powf$2522+3,___flsub@a+3
  9749  000C2A  EC8D  F02A         	call	___flsub	;wreg free
  9750  000C2E  EF60  F00D         	goto	L4
  9751  000C32                     l8847:
  9752                           
  9753                           ; BSR set to: 1
  9754  000C32  0E00               	movlw	0
  9755  000C34  6F88               	movwf	powf@n& (0+255),b
  9756  000C36  0E00               	movlw	0
  9757  000C38  6F89               	movwf	(powf@n+1)& (0+255),b
  9758  000C3A  0E00               	movlw	0
  9759  000C3C  6F8A               	movwf	(powf@n+2)& (0+255),b
  9760  000C3E  0E00               	movlw	0
  9761  000C40  6F8B               	movwf	(powf@n+3)& (0+255),b
  9762                           
  9763                           ; BSR set to: 1
  9764  000C42  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  9765  000C44  D006               	goto	u9790
  9766  000C46  51AB               	movf	(powf@ix+3)& (0+255),w,b
  9767  000C48  E137               	bnz	l8859
  9768  000C4A  0E80               	movlw	128
  9769  000C4C  5DAA               	subwf	(powf@ix+2)& (0+255),w,b
  9770  000C4E  B0D8               	btfsc	status,0,c
  9771  000C50  D033               	goto	l8859
  9772  000C52                     u9790:
  9773                           
  9774                           ; BSR set to: 1
  9775  000C52  C170  F01C         	movff	powf@ax,___flmul@b
  9776  000C56  C171  F01D         	movff	powf@ax+1,___flmul@b+1
  9777  000C5A  C172  F01E         	movff	powf@ax+2,___flmul@b+2
  9778  000C5E  C173  F01F         	movff	powf@ax+3,___flmul@b+3
  9779  000C62  0E00               	movlw	0
  9780  000C64  6E20               	movwf	___flmul@a,c
  9781  000C66  0E00               	movlw	0
  9782  000C68  6E21               	movwf	___flmul@a+1,c
  9783  000C6A  0E80               	movlw	128
  9784  000C6C  6E22               	movwf	___flmul@a+2,c
  9785  000C6E  0E4B               	movlw	75
  9786  000C70  6E23               	movwf	___flmul@a+3,c
  9787  000C72  ECC9  F01A         	call	___flmul	;wreg free
  9788  000C76  C01C  F170         	movff	?___flmul,powf@ax
  9789  000C7A  C01D  F171         	movff	?___flmul+1,powf@ax+1
  9790  000C7E  C01E  F172         	movff	?___flmul+2,powf@ax+2
  9791  000C82  C01F  F173         	movff	?___flmul+3,powf@ax+3
  9792  000C86  0EE8               	movlw	232
  9793  000C88  0101               	movlb	1	; () banked
  9794  000C8A  2788               	addwf	powf@n& (0+255),f,b
  9795  000C8C  0EFF               	movlw	255
  9796  000C8E  2389               	addwfc	(powf@n+1)& (0+255),f,b
  9797  000C90  0EFF               	movlw	255
  9798  000C92  238A               	addwfc	(powf@n+2)& (0+255),f,b
  9799  000C94  0EFF               	movlw	255
  9800  000C96  238B               	addwfc	(powf@n+3)& (0+255),f,b
  9801                           
  9802                           ; BSR set to: 1
  9803  000C98  C170  F1B8         	movff	powf@ax,powf@__xc8_float_word
  9804  000C9C  C171  F1B9         	movff	powf@ax+1,powf@__xc8_float_word+1
  9805  000CA0  C172  F1BA         	movff	powf@ax+2,powf@__xc8_float_word+2
  9806  000CA4  C173  F1BB         	movff	powf@ax+3,powf@__xc8_float_word+3
  9807                           
  9808                           ; BSR set to: 1
  9809  000CA8  C1B8  F1A8         	movff	powf@__xc8_float_word,powf@ix
  9810  000CAC  C1B9  F1A9         	movff	powf@__xc8_float_word+1,powf@ix+1
  9811  000CB0  C1BA  F1AA         	movff	powf@__xc8_float_word+2,powf@ix+2
  9812  000CB4  C1BB  F1AB         	movff	powf@__xc8_float_word+3,powf@ix+3
  9813  000CB8                     l8859:
  9814                           
  9815                           ; BSR set to: 1
  9816  000CB8  0E17               	movlw	23
  9817  000CBA  0100               	movlb	0	; () banked
  9818  000CBC  6FA9               	movwf	??_powf& (0+255),b
  9819  000CBE  C1A8  F0AA         	movff	powf@ix,??_powf+1
  9820  000CC2  C1A9  F0AB         	movff	powf@ix+1,??_powf+2
  9821  000CC6  C1AA  F0AC         	movff	powf@ix+2,??_powf+3
  9822  000CCA  C1AB  F0AD         	movff	powf@ix+3,??_powf+4
  9823  000CCE                     u9805:
  9824  000CCE  67A9               	tstfsz	??_powf& (0+255),b
  9825  000CD0  D001               	goto	u9806
  9826  000CD2  D007               	goto	u9807
  9827  000CD4                     u9806:
  9828  000CD4  35AD               	rlcf	(??_powf+4)& (0+255),w,b
  9829  000CD6  33AD               	rrcf	(??_powf+4)& (0+255),f,b
  9830  000CD8  33AC               	rrcf	(??_powf+3)& (0+255),f,b
  9831  000CDA  33AB               	rrcf	(??_powf+2)& (0+255),f,b
  9832  000CDC  33AA               	rrcf	(??_powf+1)& (0+255),f,b
  9833  000CDE  2FA9               	decfsz	??_powf& (0+255),f,b
  9834  000CE0  D7F6               	goto	u9805
  9835  000CE2                     u9807:
  9836  000CE2  0E81               	movlw	129
  9837  000CE4  0100               	movlb	0	; () banked
  9838  000CE6  25AA               	addwf	(??_powf+1)& (0+255),w,b
  9839  000CE8  6FAE               	movwf	(??_powf+5)& (0+255),b
  9840  000CEA  0EFF               	movlw	255
  9841  000CEC  21AB               	addwfc	(??_powf+2)& (0+255),w,b
  9842  000CEE  6FAF               	movwf	(??_powf+6)& (0+255),b
  9843  000CF0  0EFF               	movlw	255
  9844  000CF2  21AC               	addwfc	(??_powf+3)& (0+255),w,b
  9845  000CF4  6FB0               	movwf	(??_powf+7)& (0+255),b
  9846  000CF6  0EFF               	movlw	255
  9847  000CF8  21AD               	addwfc	(??_powf+4)& (0+255),w,b
  9848  000CFA  6FB1               	movwf	(??_powf+8)& (0+255),b
  9849  000CFC  51AE               	movf	(??_powf+5)& (0+255),w,b
  9850  000CFE  0101               	movlb	1	; () banked
  9851  000D00  2788               	addwf	powf@n& (0+255),f,b
  9852  000D02  0100               	movlb	0	; () banked
  9853  000D04  51AF               	movf	(??_powf+6)& (0+255),w,b
  9854  000D06  0101               	movlb	1	; () banked
  9855  000D08  2389               	addwfc	(powf@n+1)& (0+255),f,b
  9856  000D0A  0100               	movlb	0	; () banked
  9857  000D0C  51B0               	movf	(??_powf+7)& (0+255),w,b
  9858  000D0E  0101               	movlb	1	; () banked
  9859  000D10  238A               	addwfc	(powf@n+2)& (0+255),f,b
  9860  000D12  0100               	movlb	0	; () banked
  9861  000D14  51B1               	movf	(??_powf+8)& (0+255),w,b
  9862  000D16  0101               	movlb	1	; () banked
  9863  000D18  238B               	addwfc	(powf@n+3)& (0+255),f,b
  9864                           
  9865                           ; BSR set to: 1
  9866  000D1A  0EFF               	movlw	255
  9867  000D1C  15A8               	andwf	powf@ix& (0+255),w,b
  9868  000D1E  6FAC               	movwf	powf@j& (0+255),b
  9869  000D20  0EFF               	movlw	255
  9870  000D22  15A9               	andwf	(powf@ix+1)& (0+255),w,b
  9871  000D24  6FAD               	movwf	(powf@j+1)& (0+255),b
  9872  000D26  0E7F               	movlw	127
  9873  000D28  15AA               	andwf	(powf@ix+2)& (0+255),w,b
  9874  000D2A  6FAE               	movwf	(powf@j+2)& (0+255),b
  9875  000D2C  0E00               	movlw	0
  9876  000D2E  15AB               	andwf	(powf@ix+3)& (0+255),w,b
  9877  000D30  6FAF               	movwf	(powf@j+3)& (0+255),b
  9878                           
  9879                           ; BSR set to: 1
  9880  000D32  0E00               	movlw	0
  9881  000D34  11AC               	iorwf	powf@j& (0+255),w,b
  9882  000D36  6FA8               	movwf	powf@ix& (0+255),b
  9883  000D38  0E00               	movlw	0
  9884  000D3A  11AD               	iorwf	(powf@j+1)& (0+255),w,b
  9885  000D3C  6FA9               	movwf	(powf@ix+1)& (0+255),b
  9886  000D3E  0E80               	movlw	128
  9887  000D40  11AE               	iorwf	(powf@j+2)& (0+255),w,b
  9888  000D42  6FAA               	movwf	(powf@ix+2)& (0+255),b
  9889  000D44  0E3F               	movlw	63
  9890  000D46  11AF               	iorwf	(powf@j+3)& (0+255),w,b
  9891  000D48  6FAB               	movwf	(powf@ix+3)& (0+255),b
  9892                           
  9893                           ; BSR set to: 1
  9894  000D4A  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  9895  000D4C  D00A               	goto	u9810
  9896  000D4E  51AF               	movf	(powf@j+3)& (0+255),w,b
  9897  000D50  E10A               	bnz	l8869
  9898  000D52  0E72               	movlw	114
  9899  000D54  5DAC               	subwf	powf@j& (0+255),w,b
  9900  000D56  0EC4               	movlw	196
  9901  000D58  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  9902  000D5A  0E1C               	movlw	28
  9903  000D5C  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  9904  000D5E  B0D8               	btfsc	status,0,c
  9905  000D60  D002               	goto	l8869
  9906  000D62                     u9810:
  9907                           
  9908                           ; BSR set to: 1
  9909  000D62  0E00               	movlw	0
  9910  000D64  D00D               	goto	L5
  9911  000D66                     l8869:
  9912                           
  9913                           ; BSR set to: 1
  9914  000D66  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  9915  000D68  D00A               	goto	u9820
  9916  000D6A  51AF               	movf	(powf@j+3)& (0+255),w,b
  9917  000D6C  E111               	bnz	l8873
  9918  000D6E  0ED7               	movlw	215
  9919  000D70  5DAC               	subwf	powf@j& (0+255),w,b
  9920  000D72  0EB3               	movlw	179
  9921  000D74  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  9922  000D76  0E5D               	movlw	93
  9923  000D78  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  9924  000D7A  B0D8               	btfsc	status,0,c
  9925  000D7C  D009               	goto	l8873
  9926  000D7E                     u9820:
  9927                           
  9928                           ; BSR set to: 1
  9929  000D7E  0E01               	movlw	1
  9930  000D80                     L5:
  9931  000D80  6FA0               	movwf	powf@k& (0+255),b
  9932  000D82  0E00               	movlw	0
  9933  000D84  6FA1               	movwf	(powf@k+1)& (0+255),b
  9934  000D86  0E00               	movlw	0
  9935  000D88  6FA2               	movwf	(powf@k+2)& (0+255),b
  9936  000D8A  0E00               	movlw	0
  9937  000D8C  6FA3               	movwf	(powf@k+3)& (0+255),b
  9938  000D8E  D016               	goto	l8879
  9939  000D90                     l8873:
  9940                           
  9941                           ; BSR set to: 1
  9942  000D90  0E00               	movlw	0
  9943  000D92  6FA0               	movwf	powf@k& (0+255),b
  9944  000D94  0E00               	movlw	0
  9945  000D96  6FA1               	movwf	(powf@k+1)& (0+255),b
  9946  000D98  0E00               	movlw	0
  9947  000D9A  6FA2               	movwf	(powf@k+2)& (0+255),b
  9948  000D9C  0E00               	movlw	0
  9949  000D9E  6FA3               	movwf	(powf@k+3)& (0+255),b
  9950                           
  9951                           ; BSR set to: 1
  9952  000DA0  0E01               	movlw	1
  9953  000DA2  2788               	addwf	powf@n& (0+255),f,b
  9954  000DA4  0E00               	movlw	0
  9955  000DA6  2389               	addwfc	(powf@n+1)& (0+255),f,b
  9956  000DA8  238A               	addwfc	(powf@n+2)& (0+255),f,b
  9957  000DAA  238B               	addwfc	(powf@n+3)& (0+255),f,b
  9958                           
  9959                           ; BSR set to: 1
  9960  000DAC  0E00               	movlw	0
  9961  000DAE  27A8               	addwf	powf@ix& (0+255),f,b
  9962  000DB0  0E00               	movlw	0
  9963  000DB2  23A9               	addwfc	(powf@ix+1)& (0+255),f,b
  9964  000DB4  0E80               	movlw	128
  9965  000DB6  23AA               	addwfc	(powf@ix+2)& (0+255),f,b
  9966  000DB8  0EFF               	movlw	255
  9967  000DBA  23AB               	addwfc	(powf@ix+3)& (0+255),f,b
  9968  000DBC                     l8879:
  9969                           
  9970                           ; BSR set to: 1
  9971  000DBC  C1A8  F1B8         	movff	powf@ix,powf@__xc8_float_word
  9972  000DC0  C1A9  F1B9         	movff	powf@ix+1,powf@__xc8_float_word+1
  9973  000DC4  C1AA  F1BA         	movff	powf@ix+2,powf@__xc8_float_word+2
  9974  000DC8  C1AB  F1BB         	movff	powf@ix+3,powf@__xc8_float_word+3
  9975                           
  9976                           ; BSR set to: 1
  9977  000DCC  C1B8  F170         	movff	powf@__xc8_float_word,powf@ax
  9978  000DD0  C1B9  F171         	movff	powf@__xc8_float_word+1,powf@ax+1
  9979  000DD4  C1BA  F172         	movff	powf@__xc8_float_word+2,powf@ax+2
  9980  000DD8  C1BB  F173         	movff	powf@__xc8_float_word+3,powf@ax+3
  9981                           
  9982                           ; BSR set to: 1
  9983  000DDC  C170  F060         	movff	powf@ax,___flsub@b
  9984  000DE0  C171  F061         	movff	powf@ax+1,___flsub@b+1
  9985  000DE4  C172  F062         	movff	powf@ax+2,___flsub@b+2
  9986  000DE8  C173  F063         	movff	powf@ax+3,___flsub@b+3
  9987  000DEC  C1A0  F0A9         	movff	powf@k,??_powf
  9988  000DF0  C1A1  F0AA         	movff	powf@k+1,??_powf+1
  9989  000DF4  0100               	movlb	0	; () banked
  9990  000DF6  90D8               	bcf	status,0,c
  9991  000DF8  37A9               	rlcf	??_powf& (0+255),f,b
  9992  000DFA  37AA               	rlcf	(??_powf+1)& (0+255),f,b
  9993  000DFC  90D8               	bcf	status,0,c
  9994  000DFE  37A9               	rlcf	??_powf& (0+255),f,b
  9995  000E00  37AA               	rlcf	(??_powf+1)& (0+255),f,b
  9996  000E02  0EED               	movlw	low _bp
  9997  000E04  25A9               	addwf	??_powf& (0+255),w,b
  9998  000E06  6EF6               	movwf	tblptrl,c
  9999  000E08  0E7D               	movlw	high _bp
 10000  000E0A  21AA               	addwfc	(??_powf+1)& (0+255),w,b
 10001  000E0C  6EF7               	movwf	tblptrh,c
 10002  000E0E                     	if	0	;There are less than 3 active tblptr bytes
 10003  000E0E                     	endif
 10004  000E0E  0009               	tblrd		*+
 10005  000E10  CFF5 F064          	movff	tablat,___flsub@a
 10006  000E14  0009               	tblrd		*+
 10007  000E16  CFF5 F065          	movff	tablat,___flsub@a+1
 10008  000E1A  0009               	tblrd		*+
 10009  000E1C  CFF5 F066          	movff	tablat,___flsub@a+2
 10010  000E20  000A               	tblrd		*-
 10011  000E22  CFF5 F067          	movff	tablat,___flsub@a+3
 10012  000E26  EC8D  F02A         	call	___flsub	;wreg free
 10013  000E2A  C060  F174         	movff	?___flsub,powf@u
 10014  000E2E  C061  F175         	movff	?___flsub+1,powf@u+1
 10015  000E32  C062  F176         	movff	?___flsub+2,powf@u+2
 10016  000E36  C063  F177         	movff	?___flsub+3,powf@u+3
 10017  000E3A  0E00               	movlw	0
 10018  000E3C  0100               	movlb	0	; () banked
 10019  000E3E  6F68               	movwf	___fldiv@b& (0+255),b
 10020  000E40  0E00               	movlw	0
 10021  000E42  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 10022  000E44  0E80               	movlw	128
 10023  000E46  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 10024  000E48  0E3F               	movlw	63
 10025  000E4A  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 10026  000E4C  C170  F010         	movff	powf@ax,___fladd@a
 10027  000E50  C171  F011         	movff	powf@ax+1,___fladd@a+1
 10028  000E54  C172  F012         	movff	powf@ax+2,___fladd@a+2
 10029  000E58  C173  F013         	movff	powf@ax+3,___fladd@a+3
 10030  000E5C  C1A0  F0A9         	movff	powf@k,??_powf
 10031  000E60  C1A1  F0AA         	movff	powf@k+1,??_powf+1
 10032  000E64  90D8               	bcf	status,0,c
 10033  000E66  37A9               	rlcf	??_powf& (0+255),f,b
 10034  000E68  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 10035  000E6A  90D8               	bcf	status,0,c
 10036  000E6C  37A9               	rlcf	??_powf& (0+255),f,b
 10037  000E6E  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 10038  000E70  0EED               	movlw	low _bp
 10039  000E72  25A9               	addwf	??_powf& (0+255),w,b
 10040  000E74  6EF6               	movwf	tblptrl,c
 10041  000E76  0E7D               	movlw	high _bp
 10042  000E78  21AA               	addwfc	(??_powf+1)& (0+255),w,b
 10043  000E7A  6EF7               	movwf	tblptrh,c
 10044  000E7C                     	if	0	;There are less than 3 active tblptr bytes
 10045  000E7C                     	endif
 10046  000E7C  0009               	tblrd		*+
 10047  000E7E  CFF5 F00C          	movff	tablat,___fladd@b
 10048  000E82  0009               	tblrd		*+
 10049  000E84  CFF5 F00D          	movff	tablat,___fladd@b+1
 10050  000E88  0009               	tblrd		*+
 10051  000E8A  CFF5 F00E          	movff	tablat,___fladd@b+2
 10052  000E8E  000A               	tblrd		*-
 10053  000E90  CFF5 F00F          	movff	tablat,___fladd@b+3
 10054  000E94  EC72  F01C         	call	___fladd	;wreg free
 10055  000E98  C00C  F06C         	movff	?___fladd,___fldiv@a
 10056  000E9C  C00D  F06D         	movff	?___fladd+1,___fldiv@a+1
 10057  000EA0  C00E  F06E         	movff	?___fladd+2,___fldiv@a+2
 10058  000EA4  C00F  F06F         	movff	?___fladd+3,___fldiv@a+3
 10059  000EA8  ECF8  F01D         	call	___fldiv	;wreg free
 10060  000EAC  C068  F178         	movff	?___fldiv,powf@v
 10061  000EB0  C069  F179         	movff	?___fldiv+1,powf@v+1
 10062  000EB4  C06A  F17A         	movff	?___fldiv+2,powf@v+2
 10063  000EB8  C06B  F17B         	movff	?___fldiv+3,powf@v+3
 10064  000EBC  C174  F01C         	movff	powf@u,___flmul@b
 10065  000EC0  C175  F01D         	movff	powf@u+1,___flmul@b+1
 10066  000EC4  C176  F01E         	movff	powf@u+2,___flmul@b+2
 10067  000EC8  C177  F01F         	movff	powf@u+3,___flmul@b+3
 10068  000ECC  C178  F020         	movff	powf@v,___flmul@a
 10069  000ED0  C179  F021         	movff	powf@v+1,___flmul@a+1
 10070  000ED4  C17A  F022         	movff	powf@v+2,___flmul@a+2
 10071  000ED8  C17B  F023         	movff	powf@v+3,___flmul@a+3
 10072  000EDC  ECC9  F01A         	call	___flmul	;wreg free
 10073  000EE0  C01C  F154         	movff	?___flmul,powf@s
 10074  000EE4  C01D  F155         	movff	?___flmul+1,powf@s+1
 10075  000EE8  C01E  F156         	movff	?___flmul+2,powf@s+2
 10076  000EEC  C01F  F157         	movff	?___flmul+3,powf@s+3
 10077  000EF0  C154  F16C         	movff	powf@s,powf@s_h
 10078  000EF4  C155  F16D         	movff	powf@s+1,powf@s_h+1
 10079  000EF8  C156  F16E         	movff	powf@s+2,powf@s_h+2
 10080  000EFC  C157  F16F         	movff	powf@s+3,powf@s_h+3
 10081  000F00  C16C  F1B8         	movff	powf@s_h,powf@__xc8_float_word
 10082  000F04  C16D  F1B9         	movff	powf@s_h+1,powf@__xc8_float_word+1
 10083  000F08  C16E  F1BA         	movff	powf@s_h+2,powf@__xc8_float_word+2
 10084  000F0C  C16F  F1BB         	movff	powf@s_h+3,powf@__xc8_float_word+3
 10085  000F10  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 10086  000F14  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 10087  000F18  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 10088  000F1C  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 10089  000F20  0E00               	movlw	0
 10090  000F22  0101               	movlb	1	; () banked
 10091  000F24  1594               	andwf	powf@is& (0+255),w,b
 10092  000F26  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10093  000F28  0EF0               	movlw	240
 10094  000F2A  1595               	andwf	(powf@is+1)& (0+255),w,b
 10095  000F2C  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10096  000F2E  0EFF               	movlw	255
 10097  000F30  1596               	andwf	(powf@is+2)& (0+255),w,b
 10098  000F32  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10099  000F34  0EFF               	movlw	255
 10100  000F36  1597               	andwf	(powf@is+3)& (0+255),w,b
 10101  000F38  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10102                           
 10103                           ; BSR set to: 1
 10104  000F3A  C1B8  F16C         	movff	powf@__xc8_float_word,powf@s_h
 10105  000F3E  C1B9  F16D         	movff	powf@__xc8_float_word+1,powf@s_h+1
 10106  000F42  C1BA  F16E         	movff	powf@__xc8_float_word+2,powf@s_h+2
 10107  000F46  C1BB  F16F         	movff	powf@__xc8_float_word+3,powf@s_h+3
 10108                           
 10109                           ; BSR set to: 1
 10110  000F4A  C1A8  F0A9         	movff	powf@ix,??_powf
 10111  000F4E  C1A9  F0AA         	movff	powf@ix+1,??_powf+1
 10112  000F52  C1AA  F0AB         	movff	powf@ix+2,??_powf+2
 10113  000F56  C1AB  F0AC         	movff	powf@ix+3,??_powf+3
 10114  000F5A  0100               	movlb	0	; () banked
 10115  000F5C  35AC               	rlcf	(??_powf+3)& (0+255),w,b
 10116  000F5E  33AC               	rrcf	(??_powf+3)& (0+255),f,b
 10117  000F60  33AB               	rrcf	(??_powf+2)& (0+255),f,b
 10118  000F62  33AA               	rrcf	(??_powf+1)& (0+255),f,b
 10119  000F64  33A9               	rrcf	??_powf& (0+255),f,b
 10120  000F66  0E00               	movlw	0
 10121  000F68  15A9               	andwf	??_powf& (0+255),w,b
 10122  000F6A  6FAD               	movwf	(??_powf+4)& (0+255),b
 10123  000F6C  0EF0               	movlw	240
 10124  000F6E  15AA               	andwf	(??_powf+1)& (0+255),w,b
 10125  000F70  6FAE               	movwf	(??_powf+5)& (0+255),b
 10126  000F72  0EFF               	movlw	255
 10127  000F74  15AB               	andwf	(??_powf+2)& (0+255),w,b
 10128  000F76  6FAF               	movwf	(??_powf+6)& (0+255),b
 10129  000F78  0EFF               	movlw	255
 10130  000F7A  15AC               	andwf	(??_powf+3)& (0+255),w,b
 10131  000F7C  6FB0               	movwf	(??_powf+7)& (0+255),b
 10132  000F7E  0E00               	movlw	0
 10133  000F80  11AD               	iorwf	(??_powf+4)& (0+255),w,b
 10134  000F82  0101               	movlb	1	; () banked
 10135  000F84  6F94               	movwf	powf@is& (0+255),b
 10136  000F86  0E00               	movlw	0
 10137  000F88  0100               	movlb	0	; () banked
 10138  000F8A  11AE               	iorwf	(??_powf+5)& (0+255),w,b
 10139  000F8C  0101               	movlb	1	; () banked
 10140  000F8E  6F95               	movwf	(powf@is+1)& (0+255),b
 10141  000F90  0E00               	movlw	0
 10142  000F92  0100               	movlb	0	; () banked
 10143  000F94  11AF               	iorwf	(??_powf+6)& (0+255),w,b
 10144  000F96  0101               	movlb	1	; () banked
 10145  000F98  6F96               	movwf	(powf@is+2)& (0+255),b
 10146  000F9A  0E20               	movlw	32
 10147  000F9C  0100               	movlb	0	; () banked
 10148  000F9E  11B0               	iorwf	(??_powf+7)& (0+255),w,b
 10149  000FA0  0101               	movlb	1	; () banked
 10150  000FA2  6F97               	movwf	(powf@is+3)& (0+255),b
 10151                           
 10152                           ; BSR set to: 1
 10153  000FA4  C1A0  F0A9         	movff	powf@k,??_powf
 10154  000FA8  C1A1  F0AA         	movff	powf@k+1,??_powf+1
 10155  000FAC  C1A2  F0AB         	movff	powf@k+2,??_powf+2
 10156  000FB0  C1A3  F0AC         	movff	powf@k+3,??_powf+3
 10157  000FB4  0E15               	movlw	21
 10158  000FB6                     u9835:
 10159  000FB6  90D8               	bcf	status,0,c
 10160  000FB8  0100               	movlb	0	; () banked
 10161  000FBA  37A9               	rlcf	??_powf& (0+255),f,b
 10162  000FBC  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 10163  000FBE  37AB               	rlcf	(??_powf+2)& (0+255),f,b
 10164  000FC0  37AC               	rlcf	(??_powf+3)& (0+255),f,b
 10165  000FC2  2EE8               	decfsz	wreg,f,c
 10166  000FC4  D7F8               	goto	u9835
 10167  000FC6  0101               	movlb	1	; () banked
 10168  000FC8  5194               	movf	powf@is& (0+255),w,b
 10169  000FCA  0100               	movlb	0	; () banked
 10170  000FCC  25A9               	addwf	??_powf& (0+255),w,b
 10171  000FCE  6FAD               	movwf	(??_powf+4)& (0+255),b
 10172  000FD0  0101               	movlb	1	; () banked
 10173  000FD2  5195               	movf	(powf@is+1)& (0+255),w,b
 10174  000FD4  0100               	movlb	0	; () banked
 10175  000FD6  21AA               	addwfc	(??_powf+1)& (0+255),w,b
 10176  000FD8  6FAE               	movwf	(??_powf+5)& (0+255),b
 10177  000FDA  0101               	movlb	1	; () banked
 10178  000FDC  5196               	movf	(powf@is+2)& (0+255),w,b
 10179  000FDE  0100               	movlb	0	; () banked
 10180  000FE0  21AB               	addwfc	(??_powf+2)& (0+255),w,b
 10181  000FE2  6FAF               	movwf	(??_powf+6)& (0+255),b
 10182  000FE4  0101               	movlb	1	; () banked
 10183  000FE6  5197               	movf	(powf@is+3)& (0+255),w,b
 10184  000FE8  0100               	movlb	0	; () banked
 10185  000FEA  21AC               	addwfc	(??_powf+3)& (0+255),w,b
 10186  000FEC  6FB0               	movwf	(??_powf+7)& (0+255),b
 10187  000FEE  0E00               	movlw	0
 10188  000FF0  25AD               	addwf	(??_powf+4)& (0+255),w,b
 10189  000FF2  0101               	movlb	1	; () banked
 10190  000FF4  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10191  000FF6  0E00               	movlw	0
 10192  000FF8  0100               	movlb	0	; () banked
 10193  000FFA  21AE               	addwfc	(??_powf+5)& (0+255),w,b
 10194  000FFC  0101               	movlb	1	; () banked
 10195  000FFE  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10196  001000  0E40               	movlw	64
 10197  001002  0100               	movlb	0	; () banked
 10198  001004  21AF               	addwfc	(??_powf+6)& (0+255),w,b
 10199  001006  0101               	movlb	1	; () banked
 10200  001008  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10201  00100A  0E00               	movlw	0
 10202  00100C  0100               	movlb	0	; () banked
 10203  00100E  21B0               	addwfc	(??_powf+7)& (0+255),w,b
 10204  001010  0101               	movlb	1	; () banked
 10205  001012  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10206                           
 10207                           ; BSR set to: 1
 10208  001014  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
 10209  001018  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
 10210  00101C  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
 10211  001020  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
 10212                           
 10213                           ; BSR set to: 1
 10214  001024  C1A0  F0A9         	movff	powf@k,??_powf
 10215  001028  C1A1  F0AA         	movff	powf@k+1,??_powf+1
 10216  00102C  0100               	movlb	0	; () banked
 10217  00102E  90D8               	bcf	status,0,c
 10218  001030  37A9               	rlcf	??_powf& (0+255),f,b
 10219  001032  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 10220  001034  90D8               	bcf	status,0,c
 10221  001036  37A9               	rlcf	??_powf& (0+255),f,b
 10222  001038  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 10223  00103A  0EED               	movlw	low _bp
 10224  00103C  25A9               	addwf	??_powf& (0+255),w,b
 10225  00103E  6EF6               	movwf	tblptrl,c
 10226  001040  0E7D               	movlw	high _bp
 10227  001042  21AA               	addwfc	(??_powf+1)& (0+255),w,b
 10228  001044  6EF7               	movwf	tblptrh,c
 10229  001046                     	if	0	;There are less than 3 active tblptr bytes
 10230  001046                     	endif
 10231  001046  0009               	tblrd		*+
 10232  001048  CFF5 F064          	movff	tablat,___flsub@a
 10233  00104C  0009               	tblrd		*+
 10234  00104E  CFF5 F065          	movff	tablat,___flsub@a+1
 10235  001052  0009               	tblrd		*+
 10236  001054  CFF5 F066          	movff	tablat,___flsub@a+2
 10237  001058  000A               	tblrd		*-
 10238  00105A  CFF5 F067          	movff	tablat,___flsub@a+3
 10239  00105E  C168  F060         	movff	powf@t_h,___flsub@b
 10240  001062  C169  F061         	movff	powf@t_h+1,___flsub@b+1
 10241  001066  C16A  F062         	movff	powf@t_h+2,___flsub@b+2
 10242  00106A  C16B  F063         	movff	powf@t_h+3,___flsub@b+3
 10243  00106E  EC8D  F02A         	call	___flsub	;wreg free
 10244  001072  C060  F198         	movff	?___flsub,_powf$2522
 10245  001076  C061  F199         	movff	?___flsub+1,_powf$2522+1
 10246  00107A  C062  F19A         	movff	?___flsub+2,_powf$2522+2
 10247  00107E  C063  F19B         	movff	?___flsub+3,_powf$2522+3
 10248  001082  C170  F060         	movff	powf@ax,___flsub@b
 10249  001086  C171  F061         	movff	powf@ax+1,___flsub@b+1
 10250  00108A  C172  F062         	movff	powf@ax+2,___flsub@b+2
 10251  00108E  C173  F063         	movff	powf@ax+3,___flsub@b+3
 10252  001092  C198  F064         	movff	_powf$2522,___flsub@a
 10253  001096  C199  F065         	movff	_powf$2522+1,___flsub@a+1
 10254  00109A  C19A  F066         	movff	_powf$2522+2,___flsub@a+2
 10255  00109E  C19B  F067         	movff	_powf$2522+3,___flsub@a+3
 10256  0010A2  EC8D  F02A         	call	___flsub	;wreg free
 10257  0010A6  C060  F134         	movff	?___flsub,powf@t_l
 10258  0010AA  C061  F135         	movff	?___flsub+1,powf@t_l+1
 10259  0010AE  C062  F136         	movff	?___flsub+2,powf@t_l+2
 10260  0010B2  C063  F137         	movff	?___flsub+3,powf@t_l+3
 10261  0010B6  C168  F020         	movff	powf@t_h,___flmul@a
 10262  0010BA  C169  F021         	movff	powf@t_h+1,___flmul@a+1
 10263  0010BE  C16A  F022         	movff	powf@t_h+2,___flmul@a+2
 10264  0010C2  C16B  F023         	movff	powf@t_h+3,___flmul@a+3
 10265  0010C6  C16C  F01C         	movff	powf@s_h,___flmul@b
 10266  0010CA  C16D  F01D         	movff	powf@s_h+1,___flmul@b+1
 10267  0010CE  C16E  F01E         	movff	powf@s_h+2,___flmul@b+2
 10268  0010D2  C16F  F01F         	movff	powf@s_h+3,___flmul@b+3
 10269  0010D6  ECC9  F01A         	call	___flmul	;wreg free
 10270  0010DA  C01C  F064         	movff	?___flmul,___flsub@a
 10271  0010DE  C01D  F065         	movff	?___flmul+1,___flsub@a+1
 10272  0010E2  C01E  F066         	movff	?___flmul+2,___flsub@a+2
 10273  0010E6  C01F  F067         	movff	?___flmul+3,___flsub@a+3
 10274  0010EA  C174  F060         	movff	powf@u,___flsub@b
 10275  0010EE  C175  F061         	movff	powf@u+1,___flsub@b+1
 10276  0010F2  C176  F062         	movff	powf@u+2,___flsub@b+2
 10277  0010F6  C177  F063         	movff	powf@u+3,___flsub@b+3
 10278  0010FA  EC8D  F02A         	call	___flsub	;wreg free
 10279  0010FE  C060  F198         	movff	?___flsub,_powf$2522
 10280  001102  C061  F199         	movff	?___flsub+1,_powf$2522+1
 10281  001106  C062  F19A         	movff	?___flsub+2,_powf$2522+2
 10282  00110A  C063  F19B         	movff	?___flsub+3,_powf$2522+3
 10283  00110E  C134  F020         	movff	powf@t_l,___flmul@a
 10284  001112  C135  F021         	movff	powf@t_l+1,___flmul@a+1
 10285  001116  C136  F022         	movff	powf@t_l+2,___flmul@a+2
 10286  00111A  C137  F023         	movff	powf@t_l+3,___flmul@a+3
 10287  00111E  C16C  F01C         	movff	powf@s_h,___flmul@b
 10288  001122  C16D  F01D         	movff	powf@s_h+1,___flmul@b+1
 10289  001126  C16E  F01E         	movff	powf@s_h+2,___flmul@b+2
 10290  00112A  C16F  F01F         	movff	powf@s_h+3,___flmul@b+3
 10291  00112E  ECC9  F01A         	call	___flmul	;wreg free
 10292  001132  C01C  F064         	movff	?___flmul,___flsub@a
 10293  001136  C01D  F065         	movff	?___flmul+1,___flsub@a+1
 10294  00113A  C01E  F066         	movff	?___flmul+2,___flsub@a+2
 10295  00113E  C01F  F067         	movff	?___flmul+3,___flsub@a+3
 10296  001142  C198  F060         	movff	_powf$2522,___flsub@b
 10297  001146  C199  F061         	movff	_powf$2522+1,___flsub@b+1
 10298  00114A  C19A  F062         	movff	_powf$2522+2,___flsub@b+2
 10299  00114E  C19B  F063         	movff	_powf$2522+3,___flsub@b+3
 10300  001152  EC8D  F02A         	call	___flsub	;wreg free
 10301  001156  C060  F158         	movff	?___flsub,_powf$2520
 10302  00115A  C061  F159         	movff	?___flsub+1,_powf$2520+1
 10303  00115E  C062  F15A         	movff	?___flsub+2,_powf$2520+2
 10304  001162  C063  F15B         	movff	?___flsub+3,_powf$2520+3
 10305  001166  C158  F01C         	movff	_powf$2520,___flmul@b
 10306  00116A  C159  F01D         	movff	_powf$2520+1,___flmul@b+1
 10307  00116E  C15A  F01E         	movff	_powf$2520+2,___flmul@b+2
 10308  001172  C15B  F01F         	movff	_powf$2520+3,___flmul@b+3
 10309  001176  C178  F020         	movff	powf@v,___flmul@a
 10310  00117A  C179  F021         	movff	powf@v+1,___flmul@a+1
 10311  00117E  C17A  F022         	movff	powf@v+2,___flmul@a+2
 10312  001182  C17B  F023         	movff	powf@v+3,___flmul@a+3
 10313  001186  ECC9  F01A         	call	___flmul	;wreg free
 10314  00118A  C01C  F130         	movff	?___flmul,powf@s_l
 10315  00118E  C01D  F131         	movff	?___flmul+1,powf@s_l+1
 10316  001192  C01E  F132         	movff	?___flmul+2,powf@s_l+2
 10317  001196  C01F  F133         	movff	?___flmul+3,powf@s_l+3
 10318  00119A  C154  F01C         	movff	powf@s,___flmul@b
 10319  00119E  C155  F01D         	movff	powf@s+1,___flmul@b+1
 10320  0011A2  C156  F01E         	movff	powf@s+2,___flmul@b+2
 10321  0011A6  C157  F01F         	movff	powf@s+3,___flmul@b+3
 10322  0011AA  C154  F020         	movff	powf@s,___flmul@a
 10323  0011AE  C155  F021         	movff	powf@s+1,___flmul@a+1
 10324  0011B2  C156  F022         	movff	powf@s+2,___flmul@a+2
 10325  0011B6  C157  F023         	movff	powf@s+3,___flmul@a+3
 10326  0011BA  ECC9  F01A         	call	___flmul	;wreg free
 10327  0011BE  C01C  F18C         	movff	?___flmul,powf@s2
 10328  0011C2  C01D  F18D         	movff	?___flmul+1,powf@s2+1
 10329  0011C6  C01E  F18E         	movff	?___flmul+2,powf@s2+2
 10330  0011CA  C01F  F18F         	movff	?___flmul+3,powf@s2+3
 10331  0011CE  0E55               	movlw	85
 10332  0011D0  6E10               	movwf	___fladd@a,c
 10333  0011D2  0E32               	movlw	50
 10334  0011D4  6E11               	movwf	___fladd@a+1,c
 10335  0011D6  0E6C               	movlw	108
 10336  0011D8  6E12               	movwf	___fladd@a+2,c
 10337  0011DA  0E3E               	movlw	62
 10338  0011DC  6E13               	movwf	___fladd@a+3,c
 10339  0011DE  0E42               	movlw	66
 10340  0011E0  6E20               	movwf	___flmul@a,c
 10341  0011E2  0EF1               	movlw	241
 10342  0011E4  6E21               	movwf	___flmul@a+1,c
 10343  0011E6  0E53               	movlw	83
 10344  0011E8  6E22               	movwf	___flmul@a+2,c
 10345  0011EA  0E3E               	movlw	62
 10346  0011EC  6E23               	movwf	___flmul@a+3,c
 10347  0011EE  C18C  F01C         	movff	powf@s2,___flmul@b
 10348  0011F2  C18D  F01D         	movff	powf@s2+1,___flmul@b+1
 10349  0011F6  C18E  F01E         	movff	powf@s2+2,___flmul@b+2
 10350  0011FA  C18F  F01F         	movff	powf@s2+3,___flmul@b+3
 10351  0011FE  ECC9  F01A         	call	___flmul	;wreg free
 10352  001202  C01C  F00C         	movff	?___flmul,___fladd@b
 10353  001206  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10354  00120A  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10355  00120E  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10356  001212  EC72  F01C         	call	___fladd	;wreg free
 10357  001216  C00C  F1A4         	movff	?___fladd,_powf$2519
 10358  00121A  C00D  F1A5         	movff	?___fladd+1,_powf$2519+1
 10359  00121E  C00E  F1A6         	movff	?___fladd+2,_powf$2519+2
 10360  001222  C00F  F1A7         	movff	?___fladd+3,_powf$2519+3
 10361  001226  0E05               	movlw	5
 10362  001228  6E10               	movwf	___fladd@a,c
 10363  00122A  0EA3               	movlw	163
 10364  00122C  6E11               	movwf	___fladd@a+1,c
 10365  00122E  0E8B               	movlw	139
 10366  001230  6E12               	movwf	___fladd@a+2,c
 10367  001232  0E3E               	movlw	62
 10368  001234  6E13               	movwf	___fladd@a+3,c
 10369  001236  C18C  F020         	movff	powf@s2,___flmul@a
 10370  00123A  C18D  F021         	movff	powf@s2+1,___flmul@a+1
 10371  00123E  C18E  F022         	movff	powf@s2+2,___flmul@a+2
 10372  001242  C18F  F023         	movff	powf@s2+3,___flmul@a+3
 10373  001246  C1A4  F01C         	movff	_powf$2519,___flmul@b
 10374  00124A  C1A5  F01D         	movff	_powf$2519+1,___flmul@b+1
 10375  00124E  C1A6  F01E         	movff	_powf$2519+2,___flmul@b+2
 10376  001252  C1A7  F01F         	movff	_powf$2519+3,___flmul@b+3
 10377  001256  ECC9  F01A         	call	___flmul	;wreg free
 10378  00125A  C01C  F00C         	movff	?___flmul,___fladd@b
 10379  00125E  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10380  001262  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10381  001266  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10382  00126A  EC72  F01C         	call	___fladd	;wreg free
 10383  00126E  C00C  F158         	movff	?___fladd,_powf$2520
 10384  001272  C00D  F159         	movff	?___fladd+1,_powf$2520+1
 10385  001276  C00E  F15A         	movff	?___fladd+2,_powf$2520+2
 10386  00127A  C00F  F15B         	movff	?___fladd+3,_powf$2520+3
 10387  00127E  0EAB               	movlw	171
 10388  001280  6E10               	movwf	___fladd@a,c
 10389  001282  0EAA               	movlw	170
 10390  001284  6E11               	movwf	___fladd@a+1,c
 10391  001286  0EAA               	movlw	170
 10392  001288  6E12               	movwf	___fladd@a+2,c
 10393  00128A  0E3E               	movlw	62
 10394  00128C  6E13               	movwf	___fladd@a+3,c
 10395  00128E  C18C  F020         	movff	powf@s2,___flmul@a
 10396  001292  C18D  F021         	movff	powf@s2+1,___flmul@a+1
 10397  001296  C18E  F022         	movff	powf@s2+2,___flmul@a+2
 10398  00129A  C18F  F023         	movff	powf@s2+3,___flmul@a+3
 10399  00129E  C158  F01C         	movff	_powf$2520,___flmul@b
 10400  0012A2  C159  F01D         	movff	_powf$2520+1,___flmul@b+1
 10401  0012A6  C15A  F01E         	movff	_powf$2520+2,___flmul@b+2
 10402  0012AA  C15B  F01F         	movff	_powf$2520+3,___flmul@b+3
 10403  0012AE  ECC9  F01A         	call	___flmul	;wreg free
 10404  0012B2  C01C  F00C         	movff	?___flmul,___fladd@b
 10405  0012B6  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10406  0012BA  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10407  0012BE  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10408  0012C2  EC72  F01C         	call	___fladd	;wreg free
 10409  0012C6  C00C  F148         	movff	?___fladd,_powf$2521
 10410  0012CA  C00D  F149         	movff	?___fladd+1,_powf$2521+1
 10411  0012CE  C00E  F14A         	movff	?___fladd+2,_powf$2521+2
 10412  0012D2  C00F  F14B         	movff	?___fladd+3,_powf$2521+3
 10413  0012D6  0EB7               	movlw	183
 10414  0012D8  6E10               	movwf	___fladd@a,c
 10415  0012DA  0E6D               	movlw	109
 10416  0012DC  6E11               	movwf	___fladd@a+1,c
 10417  0012DE  0EDB               	movlw	219
 10418  0012E0  6E12               	movwf	___fladd@a+2,c
 10419  0012E2  0E3E               	movlw	62
 10420  0012E4  6E13               	movwf	___fladd@a+3,c
 10421  0012E6  C18C  F020         	movff	powf@s2,___flmul@a
 10422  0012EA  C18D  F021         	movff	powf@s2+1,___flmul@a+1
 10423  0012EE  C18E  F022         	movff	powf@s2+2,___flmul@a+2
 10424  0012F2  C18F  F023         	movff	powf@s2+3,___flmul@a+3
 10425  0012F6  C148  F01C         	movff	_powf$2521,___flmul@b
 10426  0012FA  C149  F01D         	movff	_powf$2521+1,___flmul@b+1
 10427  0012FE  C14A  F01E         	movff	_powf$2521+2,___flmul@b+2
 10428  001302  C14B  F01F         	movff	_powf$2521+3,___flmul@b+3
 10429  001306  ECC9  F01A         	call	___flmul	;wreg free
 10430  00130A  C01C  F00C         	movff	?___flmul,___fladd@b
 10431  00130E  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10432  001312  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10433  001316  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10434  00131A  EC72  F01C         	call	___fladd	;wreg free
 10435  00131E  C00C  F138         	movff	?___fladd,_powf$2523
 10436  001322  C00D  F139         	movff	?___fladd+1,_powf$2523+1
 10437  001326  C00E  F13A         	movff	?___fladd+2,_powf$2523+2
 10438  00132A  C00F  F13B         	movff	?___fladd+3,_powf$2523+3
 10439  00132E  0E9A               	movlw	154
 10440  001330  6E10               	movwf	___fladd@a,c
 10441  001332  0E99               	movlw	153
 10442  001334  6E11               	movwf	___fladd@a+1,c
 10443  001336  0E19               	movlw	25
 10444  001338  6E12               	movwf	___fladd@a+2,c
 10445  00133A  0E3F               	movlw	63
 10446  00133C  6E13               	movwf	___fladd@a+3,c
 10447  00133E  C18C  F020         	movff	powf@s2,___flmul@a
 10448  001342  C18D  F021         	movff	powf@s2+1,___flmul@a+1
 10449  001346  C18E  F022         	movff	powf@s2+2,___flmul@a+2
 10450  00134A  C18F  F023         	movff	powf@s2+3,___flmul@a+3
 10451  00134E  C138  F01C         	movff	_powf$2523,___flmul@b
 10452  001352  C139  F01D         	movff	_powf$2523+1,___flmul@b+1
 10453  001356  C13A  F01E         	movff	_powf$2523+2,___flmul@b+2
 10454  00135A  C13B  F01F         	movff	_powf$2523+3,___flmul@b+3
 10455  00135E  ECC9  F01A         	call	___flmul	;wreg free
 10456  001362  C01C  F00C         	movff	?___flmul,___fladd@b
 10457  001366  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10458  00136A  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10459  00136E  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10460  001372  EC72  F01C         	call	___fladd	;wreg free
 10461  001376  C00C  F100         	movff	?___fladd,_powf$2524
 10462  00137A  C00D  F101         	movff	?___fladd+1,_powf$2524+1
 10463  00137E  C00E  F102         	movff	?___fladd+2,_powf$2524+2
 10464  001382  C00F  F103         	movff	?___fladd+3,_powf$2524+3
 10465  001386  C18C  F020         	movff	powf@s2,___flmul@a
 10466  00138A  C18D  F021         	movff	powf@s2+1,___flmul@a+1
 10467  00138E  C18E  F022         	movff	powf@s2+2,___flmul@a+2
 10468  001392  C18F  F023         	movff	powf@s2+3,___flmul@a+3
 10469  001396  C18C  F01C         	movff	powf@s2,___flmul@b
 10470  00139A  C18D  F01D         	movff	powf@s2+1,___flmul@b+1
 10471  00139E  C18E  F01E         	movff	powf@s2+2,___flmul@b+2
 10472  0013A2  C18F  F01F         	movff	powf@s2+3,___flmul@b+3
 10473  0013A6  ECC9  F01A         	call	___flmul	;wreg free
 10474  0013AA  C01C  F104         	movff	?___flmul,_powf$2525
 10475  0013AE  C01D  F105         	movff	?___flmul+1,_powf$2525+1
 10476  0013B2  C01E  F106         	movff	?___flmul+2,_powf$2525+2
 10477  0013B6  C01F  F107         	movff	?___flmul+3,_powf$2525+3
 10478  0013BA  C100  F01C         	movff	_powf$2524,___flmul@b
 10479  0013BE  C101  F01D         	movff	_powf$2524+1,___flmul@b+1
 10480  0013C2  C102  F01E         	movff	_powf$2524+2,___flmul@b+2
 10481  0013C6  C103  F01F         	movff	_powf$2524+3,___flmul@b+3
 10482  0013CA  C104  F020         	movff	_powf$2525,___flmul@a
 10483  0013CE  C105  F021         	movff	_powf$2525+1,___flmul@a+1
 10484  0013D2  C106  F022         	movff	_powf$2525+2,___flmul@a+2
 10485  0013D6  C107  F023         	movff	_powf$2525+3,___flmul@a+3
 10486  0013DA  ECC9  F01A         	call	___flmul	;wreg free
 10487  0013DE  C01C  F14C         	movff	?___flmul,powf@r
 10488  0013E2  C01D  F14D         	movff	?___flmul+1,powf@r+1
 10489  0013E6  C01E  F14E         	movff	?___flmul+2,powf@r+2
 10490  0013EA  C01F  F14F         	movff	?___flmul+3,powf@r+3
 10491  0013EE  C130  F020         	movff	powf@s_l,___flmul@a
 10492  0013F2  C131  F021         	movff	powf@s_l+1,___flmul@a+1
 10493  0013F6  C132  F022         	movff	powf@s_l+2,___flmul@a+2
 10494  0013FA  C133  F023         	movff	powf@s_l+3,___flmul@a+3
 10495  0013FE  C154  F010         	movff	powf@s,___fladd@a
 10496  001402  C155  F011         	movff	powf@s+1,___fladd@a+1
 10497  001406  C156  F012         	movff	powf@s+2,___fladd@a+2
 10498  00140A  C157  F013         	movff	powf@s+3,___fladd@a+3
 10499  00140E  C16C  F00C         	movff	powf@s_h,___fladd@b
 10500  001412  C16D  F00D         	movff	powf@s_h+1,___fladd@b+1
 10501  001416  C16E  F00E         	movff	powf@s_h+2,___fladd@b+2
 10502  00141A  C16F  F00F         	movff	powf@s_h+3,___fladd@b+3
 10503  00141E  EC72  F01C         	call	___fladd	;wreg free
 10504  001422  C00C  F01C         	movff	?___fladd,___flmul@b
 10505  001426  C00D  F01D         	movff	?___fladd+1,___flmul@b+1
 10506  00142A  C00E  F01E         	movff	?___fladd+2,___flmul@b+2
 10507  00142E  C00F  F01F         	movff	?___fladd+3,___flmul@b+3
 10508  001432  ECC9  F01A         	call	___flmul	;wreg free
 10509  001436  C01C  F15C         	movff	?___flmul,_powf$2526
 10510  00143A  C01D  F15D         	movff	?___flmul+1,_powf$2526+1
 10511  00143E  C01E  F15E         	movff	?___flmul+2,_powf$2526+2
 10512  001442  C01F  F15F         	movff	?___flmul+3,_powf$2526+3
 10513  001446  C14C  F00C         	movff	powf@r,___fladd@b
 10514  00144A  C14D  F00D         	movff	powf@r+1,___fladd@b+1
 10515  00144E  C14E  F00E         	movff	powf@r+2,___fladd@b+2
 10516  001452  C14F  F00F         	movff	powf@r+3,___fladd@b+3
 10517  001456  C15C  F010         	movff	_powf$2526,___fladd@a
 10518  00145A  C15D  F011         	movff	_powf$2526+1,___fladd@a+1
 10519  00145E  C15E  F012         	movff	_powf$2526+2,___fladd@a+2
 10520  001462  C15F  F013         	movff	_powf$2526+3,___fladd@a+3
 10521  001466  EC72  F01C         	call	___fladd	;wreg free
 10522  00146A  C00C  F14C         	movff	?___fladd,powf@r
 10523  00146E  C00D  F14D         	movff	?___fladd+1,powf@r+1
 10524  001472  C00E  F14E         	movff	?___fladd+2,powf@r+2
 10525  001476  C00F  F14F         	movff	?___fladd+3,powf@r+3
 10526  00147A  C16C  F01C         	movff	powf@s_h,___flmul@b
 10527  00147E  C16D  F01D         	movff	powf@s_h+1,___flmul@b+1
 10528  001482  C16E  F01E         	movff	powf@s_h+2,___flmul@b+2
 10529  001486  C16F  F01F         	movff	powf@s_h+3,___flmul@b+3
 10530  00148A  C16C  F020         	movff	powf@s_h,___flmul@a
 10531  00148E  C16D  F021         	movff	powf@s_h+1,___flmul@a+1
 10532  001492  C16E  F022         	movff	powf@s_h+2,___flmul@a+2
 10533  001496  C16F  F023         	movff	powf@s_h+3,___flmul@a+3
 10534  00149A  ECC9  F01A         	call	___flmul	;wreg free
 10535  00149E  C01C  F18C         	movff	?___flmul,powf@s2
 10536  0014A2  C01D  F18D         	movff	?___flmul+1,powf@s2+1
 10537  0014A6  C01E  F18E         	movff	?___flmul+2,powf@s2+2
 10538  0014AA  C01F  F18F         	movff	?___flmul+3,powf@s2+3
 10539  0014AE  0E00               	movlw	0
 10540  0014B0  6E10               	movwf	___fladd@a,c
 10541  0014B2  0E00               	movlw	0
 10542  0014B4  6E11               	movwf	___fladd@a+1,c
 10543  0014B6  0E40               	movlw	64
 10544  0014B8  6E12               	movwf	___fladd@a+2,c
 10545  0014BA  0E40               	movlw	64
 10546  0014BC  6E13               	movwf	___fladd@a+3,c
 10547  0014BE  C18C  F00C         	movff	powf@s2,___fladd@b
 10548  0014C2  C18D  F00D         	movff	powf@s2+1,___fladd@b+1
 10549  0014C6  C18E  F00E         	movff	powf@s2+2,___fladd@b+2
 10550  0014CA  C18F  F00F         	movff	powf@s2+3,___fladd@b+3
 10551  0014CE  EC72  F01C         	call	___fladd	;wreg free
 10552  0014D2  C00C  F15C         	movff	?___fladd,_powf$2526
 10553  0014D6  C00D  F15D         	movff	?___fladd+1,_powf$2526+1
 10554  0014DA  C00E  F15E         	movff	?___fladd+2,_powf$2526+2
 10555  0014DE  C00F  F15F         	movff	?___fladd+3,_powf$2526+3
 10556  0014E2  C15C  F00C         	movff	_powf$2526,___fladd@b
 10557  0014E6  C15D  F00D         	movff	_powf$2526+1,___fladd@b+1
 10558  0014EA  C15E  F00E         	movff	_powf$2526+2,___fladd@b+2
 10559  0014EE  C15F  F00F         	movff	_powf$2526+3,___fladd@b+3
 10560  0014F2  C14C  F010         	movff	powf@r,___fladd@a
 10561  0014F6  C14D  F011         	movff	powf@r+1,___fladd@a+1
 10562  0014FA  C14E  F012         	movff	powf@r+2,___fladd@a+2
 10563  0014FE  C14F  F013         	movff	powf@r+3,___fladd@a+3
 10564  001502  EC72  F01C         	call	___fladd	;wreg free
 10565  001506  C00C  F168         	movff	?___fladd,powf@t_h
 10566  00150A  C00D  F169         	movff	?___fladd+1,powf@t_h+1
 10567  00150E  C00E  F16A         	movff	?___fladd+2,powf@t_h+2
 10568  001512  C00F  F16B         	movff	?___fladd+3,powf@t_h+3
 10569  001516  C168  F1B8         	movff	powf@t_h,powf@__xc8_float_word
 10570  00151A  C169  F1B9         	movff	powf@t_h+1,powf@__xc8_float_word+1
 10571  00151E  C16A  F1BA         	movff	powf@t_h+2,powf@__xc8_float_word+2
 10572  001522  C16B  F1BB         	movff	powf@t_h+3,powf@__xc8_float_word+3
 10573  001526  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 10574  00152A  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 10575  00152E  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 10576  001532  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 10577  001536  0E00               	movlw	0
 10578  001538  0101               	movlb	1	; () banked
 10579  00153A  1594               	andwf	powf@is& (0+255),w,b
 10580  00153C  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10581  00153E  0EF0               	movlw	240
 10582  001540  1595               	andwf	(powf@is+1)& (0+255),w,b
 10583  001542  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10584  001544  0EFF               	movlw	255
 10585  001546  1596               	andwf	(powf@is+2)& (0+255),w,b
 10586  001548  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10587  00154A  0EFF               	movlw	255
 10588  00154C  1597               	andwf	(powf@is+3)& (0+255),w,b
 10589  00154E  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10590                           
 10591                           ; BSR set to: 1
 10592  001550  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
 10593  001554  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
 10594  001558  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
 10595  00155C  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
 10596                           
 10597                           ; BSR set to: 1
 10598  001560  0E00               	movlw	0
 10599  001562  6E10               	movwf	___fladd@a,c
 10600  001564  0E00               	movlw	0
 10601  001566  6E11               	movwf	___fladd@a+1,c
 10602  001568  0E40               	movlw	64
 10603  00156A  6E12               	movwf	___fladd@a+2,c
 10604  00156C  0EC0               	movlw	192
 10605  00156E  6E13               	movwf	___fladd@a+3,c
 10606  001570  C168  F00C         	movff	powf@t_h,___fladd@b
 10607  001574  C169  F00D         	movff	powf@t_h+1,___fladd@b+1
 10608  001578  C16A  F00E         	movff	powf@t_h+2,___fladd@b+2
 10609  00157C  C16B  F00F         	movff	powf@t_h+3,___fladd@b+3
 10610  001580  EC72  F01C         	call	___fladd	;wreg free
 10611  001584  C00C  F13C         	movff	?___fladd,_powf$2527
 10612  001588  C00D  F13D         	movff	?___fladd+1,_powf$2527+1
 10613  00158C  C00E  F13E         	movff	?___fladd+2,_powf$2527+2
 10614  001590  C00F  F13F         	movff	?___fladd+3,_powf$2527+3
 10615  001594  C18C  F064         	movff	powf@s2,___flsub@a
 10616  001598  C18D  F065         	movff	powf@s2+1,___flsub@a+1
 10617  00159C  C18E  F066         	movff	powf@s2+2,___flsub@a+2
 10618  0015A0  C18F  F067         	movff	powf@s2+3,___flsub@a+3
 10619  0015A4  C13C  F060         	movff	_powf$2527,___flsub@b
 10620  0015A8  C13D  F061         	movff	_powf$2527+1,___flsub@b+1
 10621  0015AC  C13E  F062         	movff	_powf$2527+2,___flsub@b+2
 10622  0015B0  C13F  F063         	movff	_powf$2527+3,___flsub@b+3
 10623  0015B4  EC8D  F02A         	call	___flsub	;wreg free
 10624  0015B8  C060  F140         	movff	?___flsub,_powf$2528
 10625  0015BC  C061  F141         	movff	?___flsub+1,_powf$2528+1
 10626  0015C0  C062  F142         	movff	?___flsub+2,_powf$2528+2
 10627  0015C4  C063  F143         	movff	?___flsub+3,_powf$2528+3
 10628  0015C8  C14C  F060         	movff	powf@r,___flsub@b
 10629  0015CC  C14D  F061         	movff	powf@r+1,___flsub@b+1
 10630  0015D0  C14E  F062         	movff	powf@r+2,___flsub@b+2
 10631  0015D4  C14F  F063         	movff	powf@r+3,___flsub@b+3
 10632  0015D8  C140  F064         	movff	_powf$2528,___flsub@a
 10633  0015DC  C141  F065         	movff	_powf$2528+1,___flsub@a+1
 10634  0015E0  C142  F066         	movff	_powf$2528+2,___flsub@a+2
 10635  0015E4  C143  F067         	movff	_powf$2528+3,___flsub@a+3
 10636  0015E8  EC8D  F02A         	call	___flsub	;wreg free
 10637  0015EC  C060  F134         	movff	?___flsub,powf@t_l
 10638  0015F0  C061  F135         	movff	?___flsub+1,powf@t_l+1
 10639  0015F4  C062  F136         	movff	?___flsub+2,powf@t_l+2
 10640  0015F8  C063  F137         	movff	?___flsub+3,powf@t_l+3
 10641  0015FC  C16C  F01C         	movff	powf@s_h,___flmul@b
 10642  001600  C16D  F01D         	movff	powf@s_h+1,___flmul@b+1
 10643  001604  C16E  F01E         	movff	powf@s_h+2,___flmul@b+2
 10644  001608  C16F  F01F         	movff	powf@s_h+3,___flmul@b+3
 10645  00160C  C168  F020         	movff	powf@t_h,___flmul@a
 10646  001610  C169  F021         	movff	powf@t_h+1,___flmul@a+1
 10647  001614  C16A  F022         	movff	powf@t_h+2,___flmul@a+2
 10648  001618  C16B  F023         	movff	powf@t_h+3,___flmul@a+3
 10649  00161C  ECC9  F01A         	call	___flmul	;wreg free
 10650  001620  C01C  F174         	movff	?___flmul,powf@u
 10651  001624  C01D  F175         	movff	?___flmul+1,powf@u+1
 10652  001628  C01E  F176         	movff	?___flmul+2,powf@u+2
 10653  00162C  C01F  F177         	movff	?___flmul+3,powf@u+3
 10654  001630  C168  F020         	movff	powf@t_h,___flmul@a
 10655  001634  C169  F021         	movff	powf@t_h+1,___flmul@a+1
 10656  001638  C16A  F022         	movff	powf@t_h+2,___flmul@a+2
 10657  00163C  C16B  F023         	movff	powf@t_h+3,___flmul@a+3
 10658  001640  C130  F01C         	movff	powf@s_l,___flmul@b
 10659  001644  C131  F01D         	movff	powf@s_l+1,___flmul@b+1
 10660  001648  C132  F01E         	movff	powf@s_l+2,___flmul@b+2
 10661  00164C  C133  F01F         	movff	powf@s_l+3,___flmul@b+3
 10662  001650  ECC9  F01A         	call	___flmul	;wreg free
 10663  001654  C01C  F00C         	movff	?___flmul,___fladd@b
 10664  001658  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10665  00165C  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10666  001660  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10667  001664  C154  F020         	movff	powf@s,___flmul@a
 10668  001668  C155  F021         	movff	powf@s+1,___flmul@a+1
 10669  00166C  C156  F022         	movff	powf@s+2,___flmul@a+2
 10670  001670  C157  F023         	movff	powf@s+3,___flmul@a+3
 10671  001674  C134  F01C         	movff	powf@t_l,___flmul@b
 10672  001678  C135  F01D         	movff	powf@t_l+1,___flmul@b+1
 10673  00167C  C136  F01E         	movff	powf@t_l+2,___flmul@b+2
 10674  001680  C137  F01F         	movff	powf@t_l+3,___flmul@b+3
 10675  001684  ECC9  F01A         	call	___flmul	;wreg free
 10676  001688  C01C  F010         	movff	?___flmul,___fladd@a
 10677  00168C  C01D  F011         	movff	?___flmul+1,___fladd@a+1
 10678  001690  C01E  F012         	movff	?___flmul+2,___fladd@a+2
 10679  001694  C01F  F013         	movff	?___flmul+3,___fladd@a+3
 10680  001698  EC72  F01C         	call	___fladd	;wreg free
 10681  00169C  C00C  F178         	movff	?___fladd,powf@v
 10682  0016A0  C00D  F179         	movff	?___fladd+1,powf@v+1
 10683  0016A4  C00E  F17A         	movff	?___fladd+2,powf@v+2
 10684  0016A8  C00F  F17B         	movff	?___fladd+3,powf@v+3
 10685  0016AC  C174  F00C         	movff	powf@u,___fladd@b
 10686  0016B0  C175  F00D         	movff	powf@u+1,___fladd@b+1
 10687  0016B4  C176  F00E         	movff	powf@u+2,___fladd@b+2
 10688  0016B8  C177  F00F         	movff	powf@u+3,___fladd@b+3
 10689  0016BC  C178  F010         	movff	powf@v,___fladd@a
 10690  0016C0  C179  F011         	movff	powf@v+1,___fladd@a+1
 10691  0016C4  C17A  F012         	movff	powf@v+2,___fladd@a+2
 10692  0016C8  C17B  F013         	movff	powf@v+3,___fladd@a+3
 10693  0016CC  EC72  F01C         	call	___fladd	;wreg free
 10694  0016D0  C00C  F19C         	movff	?___fladd,powf@p_h
 10695  0016D4  C00D  F19D         	movff	?___fladd+1,powf@p_h+1
 10696  0016D8  C00E  F19E         	movff	?___fladd+2,powf@p_h+2
 10697  0016DC  C00F  F19F         	movff	?___fladd+3,powf@p_h+3
 10698  0016E0  C19C  F1B8         	movff	powf@p_h,powf@__xc8_float_word
 10699  0016E4  C19D  F1B9         	movff	powf@p_h+1,powf@__xc8_float_word+1
 10700  0016E8  C19E  F1BA         	movff	powf@p_h+2,powf@__xc8_float_word+2
 10701  0016EC  C19F  F1BB         	movff	powf@p_h+3,powf@__xc8_float_word+3
 10702  0016F0  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 10703  0016F4  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 10704  0016F8  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 10705  0016FC  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 10706  001700  0E00               	movlw	0
 10707  001702  0101               	movlb	1	; () banked
 10708  001704  1594               	andwf	powf@is& (0+255),w,b
 10709  001706  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10710  001708  0EF0               	movlw	240
 10711  00170A  1595               	andwf	(powf@is+1)& (0+255),w,b
 10712  00170C  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10713  00170E  0EFF               	movlw	255
 10714  001710  1596               	andwf	(powf@is+2)& (0+255),w,b
 10715  001712  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10716  001714  0EFF               	movlw	255
 10717  001716  1597               	andwf	(powf@is+3)& (0+255),w,b
 10718  001718  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10719                           
 10720                           ; BSR set to: 1
 10721  00171A  C1B8  F19C         	movff	powf@__xc8_float_word,powf@p_h
 10722  00171E  C1B9  F19D         	movff	powf@__xc8_float_word+1,powf@p_h+1
 10723  001722  C1BA  F19E         	movff	powf@__xc8_float_word+2,powf@p_h+2
 10724  001726  C1BB  F19F         	movff	powf@__xc8_float_word+3,powf@p_h+3
 10725                           
 10726                           ; BSR set to: 1
 10727  00172A  C174  F064         	movff	powf@u,___flsub@a
 10728  00172E  C175  F065         	movff	powf@u+1,___flsub@a+1
 10729  001732  C176  F066         	movff	powf@u+2,___flsub@a+2
 10730  001736  C177  F067         	movff	powf@u+3,___flsub@a+3
 10731  00173A  C19C  F060         	movff	powf@p_h,___flsub@b
 10732  00173E  C19D  F061         	movff	powf@p_h+1,___flsub@b+1
 10733  001742  C19E  F062         	movff	powf@p_h+2,___flsub@b+2
 10734  001746  C19F  F063         	movff	powf@p_h+3,___flsub@b+3
 10735  00174A  EC8D  F02A         	call	___flsub	;wreg free
 10736  00174E  C060  F198         	movff	?___flsub,_powf$2522
 10737  001752  C061  F199         	movff	?___flsub+1,_powf$2522+1
 10738  001756  C062  F19A         	movff	?___flsub+2,_powf$2522+2
 10739  00175A  C063  F19B         	movff	?___flsub+3,_powf$2522+3
 10740  00175E  C178  F060         	movff	powf@v,___flsub@b
 10741  001762  C179  F061         	movff	powf@v+1,___flsub@b+1
 10742  001766  C17A  F062         	movff	powf@v+2,___flsub@b+2
 10743  00176A  C17B  F063         	movff	powf@v+3,___flsub@b+3
 10744  00176E  C198  F064         	movff	_powf$2522,___flsub@a
 10745  001772  C199  F065         	movff	_powf$2522+1,___flsub@a+1
 10746  001776  C19A  F066         	movff	_powf$2522+2,___flsub@a+2
 10747  00177A  C19B  F067         	movff	_powf$2522+3,___flsub@a+3
 10748  00177E  EC8D  F02A         	call	___flsub	;wreg free
 10749  001782  C060  F164         	movff	?___flsub,powf@p_l
 10750  001786  C061  F165         	movff	?___flsub+1,powf@p_l+1
 10751  00178A  C062  F166         	movff	?___flsub+2,powf@p_l+2
 10752  00178E  C063  F167         	movff	?___flsub+3,powf@p_l+3
 10753  001792  C19C  F01C         	movff	powf@p_h,___flmul@b
 10754  001796  C19D  F01D         	movff	powf@p_h+1,___flmul@b+1
 10755  00179A  C19E  F01E         	movff	powf@p_h+2,___flmul@b+2
 10756  00179E  C19F  F01F         	movff	powf@p_h+3,___flmul@b+3
 10757  0017A2  0E00               	movlw	0
 10758  0017A4  6E20               	movwf	___flmul@a,c
 10759  0017A6  0E40               	movlw	64
 10760  0017A8  6E21               	movwf	___flmul@a+1,c
 10761  0017AA  0E76               	movlw	118
 10762  0017AC  6E22               	movwf	___flmul@a+2,c
 10763  0017AE  0E3F               	movlw	63
 10764  0017B0  6E23               	movwf	___flmul@a+3,c
 10765  0017B2  ECC9  F01A         	call	___flmul	;wreg free
 10766  0017B6  C01C  F120         	movff	?___flmul,powf@z_h
 10767  0017BA  C01D  F121         	movff	?___flmul+1,powf@z_h+1
 10768  0017BE  C01E  F122         	movff	?___flmul+2,powf@z_h+2
 10769  0017C2  C01F  F123         	movff	?___flmul+3,powf@z_h+3
 10770  0017C6  0E4F               	movlw	79
 10771  0017C8  6E20               	movwf	___flmul@a,c
 10772  0017CA  0E38               	movlw	56
 10773  0017CC  6E21               	movwf	___flmul@a+1,c
 10774  0017CE  0E76               	movlw	118
 10775  0017D0  6E22               	movwf	___flmul@a+2,c
 10776  0017D2  0E3F               	movlw	63
 10777  0017D4  6E23               	movwf	___flmul@a+3,c
 10778  0017D6  C164  F01C         	movff	powf@p_l,___flmul@b
 10779  0017DA  C165  F01D         	movff	powf@p_l+1,___flmul@b+1
 10780  0017DE  C166  F01E         	movff	powf@p_l+2,___flmul@b+2
 10781  0017E2  C167  F01F         	movff	powf@p_l+3,___flmul@b+3
 10782  0017E6  ECC9  F01A         	call	___flmul	;wreg free
 10783  0017EA  C01C  F010         	movff	?___flmul,___fladd@a
 10784  0017EE  C01D  F011         	movff	?___flmul+1,___fladd@a+1
 10785  0017F2  C01E  F012         	movff	?___flmul+2,___fladd@a+2
 10786  0017F6  C01F  F013         	movff	?___flmul+3,___fladd@a+3
 10787  0017FA  0EC6               	movlw	198
 10788  0017FC  6E20               	movwf	___flmul@a,c
 10789  0017FE  0E23               	movlw	35
 10790  001800  6E21               	movwf	___flmul@a+1,c
 10791  001802  0EF6               	movlw	246
 10792  001804  6E22               	movwf	___flmul@a+2,c
 10793  001806  0EB8               	movlw	184
 10794  001808  6E23               	movwf	___flmul@a+3,c
 10795  00180A  C19C  F01C         	movff	powf@p_h,___flmul@b
 10796  00180E  C19D  F01D         	movff	powf@p_h+1,___flmul@b+1
 10797  001812  C19E  F01E         	movff	powf@p_h+2,___flmul@b+2
 10798  001816  C19F  F01F         	movff	powf@p_h+3,___flmul@b+3
 10799  00181A  ECC9  F01A         	call	___flmul	;wreg free
 10800  00181E  C01C  F00C         	movff	?___flmul,___fladd@b
 10801  001822  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10802  001826  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10803  00182A  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10804  00182E  EC72  F01C         	call	___fladd	;wreg free
 10805  001832  C00C  F15C         	movff	?___fladd,_powf$2526
 10806  001836  C00D  F15D         	movff	?___fladd+1,_powf$2526+1
 10807  00183A  C00E  F15E         	movff	?___fladd+2,_powf$2526+2
 10808  00183E  C00F  F15F         	movff	?___fladd+3,_powf$2526+3
 10809  001842  C15C  F00C         	movff	_powf$2526,___fladd@b
 10810  001846  C15D  F00D         	movff	_powf$2526+1,___fladd@b+1
 10811  00184A  C15E  F00E         	movff	_powf$2526+2,___fladd@b+2
 10812  00184E  C15F  F00F         	movff	_powf$2526+3,___fladd@b+3
 10813  001852  C1A0  F0A9         	movff	powf@k,??_powf
 10814  001856  C1A1  F0AA         	movff	powf@k+1,??_powf+1
 10815  00185A  0100               	movlb	0	; () banked
 10816  00185C  90D8               	bcf	status,0,c
 10817  00185E  37A9               	rlcf	??_powf& (0+255),f,b
 10818  001860  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 10819  001862  90D8               	bcf	status,0,c
 10820  001864  37A9               	rlcf	??_powf& (0+255),f,b
 10821  001866  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 10822  001868  0E81               	movlw	low _dp_l
 10823  00186A  25A9               	addwf	??_powf& (0+255),w,b
 10824  00186C  6EF6               	movwf	tblptrl,c
 10825  00186E  0E7D               	movlw	high _dp_l
 10826  001870  21AA               	addwfc	(??_powf+1)& (0+255),w,b
 10827  001872  6EF7               	movwf	tblptrh,c
 10828  001874                     	if	0	;There are less than 3 active tblptr bytes
 10829  001874                     	endif
 10830  001874  0009               	tblrd		*+
 10831  001876  CFF5 F010          	movff	tablat,___fladd@a
 10832  00187A  0009               	tblrd		*+
 10833  00187C  CFF5 F011          	movff	tablat,___fladd@a+1
 10834  001880  0009               	tblrd		*+
 10835  001882  CFF5 F012          	movff	tablat,___fladd@a+2
 10836  001886  000A               	tblrd		*-
 10837  001888  CFF5 F013          	movff	tablat,___fladd@a+3
 10838  00188C  EC72  F01C         	call	___fladd	;wreg free
 10839  001890  C00C  F124         	movff	?___fladd,powf@z_l
 10840  001894  C00D  F125         	movff	?___fladd+1,powf@z_l+1
 10841  001898  C00E  F126         	movff	?___fladd+2,powf@z_l+2
 10842  00189C  C00F  F127         	movff	?___fladd+3,powf@z_l+3
 10843  0018A0  C188  F00C         	movff	powf@n,___xxtofl@val
 10844  0018A4  C189  F00D         	movff	powf@n+1,___xxtofl@val+1
 10845  0018A8  C18A  F00E         	movff	powf@n+2,___xxtofl@val+2
 10846  0018AC  C18B  F00F         	movff	powf@n+3,___xxtofl@val+3
 10847  0018B0  0E01               	movlw	1
 10848  0018B2  EC38  F024         	call	___xxtofl
 10849  0018B6  C00C  F1B0         	movff	?___xxtofl,powf@t
 10850  0018BA  C00D  F1B1         	movff	?___xxtofl+1,powf@t+1
 10851  0018BE  C00E  F1B2         	movff	?___xxtofl+2,powf@t+2
 10852  0018C2  C00F  F1B3         	movff	?___xxtofl+3,powf@t+3
 10853  0018C6  C124  F010         	movff	powf@z_l,___fladd@a
 10854  0018CA  C125  F011         	movff	powf@z_l+1,___fladd@a+1
 10855  0018CE  C126  F012         	movff	powf@z_l+2,___fladd@a+2
 10856  0018D2  C127  F013         	movff	powf@z_l+3,___fladd@a+3
 10857  0018D6  C120  F00C         	movff	powf@z_h,___fladd@b
 10858  0018DA  C121  F00D         	movff	powf@z_h+1,___fladd@b+1
 10859  0018DE  C122  F00E         	movff	powf@z_h+2,___fladd@b+2
 10860  0018E2  C123  F00F         	movff	powf@z_h+3,___fladd@b+3
 10861  0018E6  EC72  F01C         	call	___fladd	;wreg free
 10862  0018EA  C00C  F15C         	movff	?___fladd,_powf$2526
 10863  0018EE  C00D  F15D         	movff	?___fladd+1,_powf$2526+1
 10864  0018F2  C00E  F15E         	movff	?___fladd+2,_powf$2526+2
 10865  0018F6  C00F  F15F         	movff	?___fladd+3,_powf$2526+3
 10866  0018FA  C1A0  F0A9         	movff	powf@k,??_powf
 10867  0018FE  C1A1  F0AA         	movff	powf@k+1,??_powf+1
 10868  001902  0100               	movlb	0	; () banked
 10869  001904  90D8               	bcf	status,0,c
 10870  001906  37A9               	rlcf	??_powf& (0+255),f,b
 10871  001908  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 10872  00190A  90D8               	bcf	status,0,c
 10873  00190C  37A9               	rlcf	??_powf& (0+255),f,b
 10874  00190E  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 10875  001910  0E89               	movlw	low _dp_h
 10876  001912  25A9               	addwf	??_powf& (0+255),w,b
 10877  001914  6EF6               	movwf	tblptrl,c
 10878  001916  0E7D               	movlw	high _dp_h
 10879  001918  21AA               	addwfc	(??_powf+1)& (0+255),w,b
 10880  00191A  6EF7               	movwf	tblptrh,c
 10881  00191C                     	if	0	;There are less than 3 active tblptr bytes
 10882  00191C                     	endif
 10883  00191C  0009               	tblrd		*+
 10884  00191E  CFF5 F010          	movff	tablat,___fladd@a
 10885  001922  0009               	tblrd		*+
 10886  001924  CFF5 F011          	movff	tablat,___fladd@a+1
 10887  001928  0009               	tblrd		*+
 10888  00192A  CFF5 F012          	movff	tablat,___fladd@a+2
 10889  00192E  000A               	tblrd		*-
 10890  001930  CFF5 F013          	movff	tablat,___fladd@a+3
 10891  001934  C15C  F00C         	movff	_powf$2526,___fladd@b
 10892  001938  C15D  F00D         	movff	_powf$2526+1,___fladd@b+1
 10893  00193C  C15E  F00E         	movff	_powf$2526+2,___fladd@b+2
 10894  001940  C15F  F00F         	movff	_powf$2526+3,___fladd@b+3
 10895  001944  EC72  F01C         	call	___fladd	;wreg free
 10896  001948  C00C  F108         	movff	?___fladd,_powf$2529
 10897  00194C  C00D  F109         	movff	?___fladd+1,_powf$2529+1
 10898  001950  C00E  F10A         	movff	?___fladd+2,_powf$2529+2
 10899  001954  C00F  F10B         	movff	?___fladd+3,_powf$2529+3
 10900  001958  C108  F00C         	movff	_powf$2529,___fladd@b
 10901  00195C  C109  F00D         	movff	_powf$2529+1,___fladd@b+1
 10902  001960  C10A  F00E         	movff	_powf$2529+2,___fladd@b+2
 10903  001964  C10B  F00F         	movff	_powf$2529+3,___fladd@b+3
 10904  001968  C1B0  F010         	movff	powf@t,___fladd@a
 10905  00196C  C1B1  F011         	movff	powf@t+1,___fladd@a+1
 10906  001970  C1B2  F012         	movff	powf@t+2,___fladd@a+2
 10907  001974  C1B3  F013         	movff	powf@t+3,___fladd@a+3
 10908  001978  EC72  F01C         	call	___fladd	;wreg free
 10909  00197C  C00C  F180         	movff	?___fladd,powf@t1
 10910  001980  C00D  F181         	movff	?___fladd+1,powf@t1+1
 10911  001984  C00E  F182         	movff	?___fladd+2,powf@t1+2
 10912  001988  C00F  F183         	movff	?___fladd+3,powf@t1+3
 10913  00198C  C180  F1B8         	movff	powf@t1,powf@__xc8_float_word
 10914  001990  C181  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
 10915  001994  C182  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
 10916  001998  C183  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
 10917  00199C  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 10918  0019A0  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 10919  0019A4  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 10920  0019A8  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 10921  0019AC  0E00               	movlw	0
 10922  0019AE  0101               	movlb	1	; () banked
 10923  0019B0  1594               	andwf	powf@is& (0+255),w,b
 10924  0019B2  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10925  0019B4  0EF0               	movlw	240
 10926  0019B6  1595               	andwf	(powf@is+1)& (0+255),w,b
 10927  0019B8  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10928  0019BA  0EFF               	movlw	255
 10929  0019BC  1596               	andwf	(powf@is+2)& (0+255),w,b
 10930  0019BE  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10931  0019C0  0EFF               	movlw	255
 10932  0019C2  1597               	andwf	(powf@is+3)& (0+255),w,b
 10933  0019C4  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10934                           
 10935                           ; BSR set to: 1
 10936  0019C6  C1B8  F180         	movff	powf@__xc8_float_word,powf@t1
 10937  0019CA  C1B9  F181         	movff	powf@__xc8_float_word+1,powf@t1+1
 10938  0019CE  C1BA  F182         	movff	powf@__xc8_float_word+2,powf@t1+2
 10939  0019D2  C1BB  F183         	movff	powf@__xc8_float_word+3,powf@t1+3
 10940                           
 10941                           ; BSR set to: 1
 10942  0019D6  C1B0  F064         	movff	powf@t,___flsub@a
 10943  0019DA  C1B1  F065         	movff	powf@t+1,___flsub@a+1
 10944  0019DE  C1B2  F066         	movff	powf@t+2,___flsub@a+2
 10945  0019E2  C1B3  F067         	movff	powf@t+3,___flsub@a+3
 10946  0019E6  C180  F060         	movff	powf@t1,___flsub@b
 10947  0019EA  C181  F061         	movff	powf@t1+1,___flsub@b+1
 10948  0019EE  C182  F062         	movff	powf@t1+2,___flsub@b+2
 10949  0019F2  C183  F063         	movff	powf@t1+3,___flsub@b+3
 10950  0019F6  EC8D  F02A         	call	___flsub	;wreg free
 10951  0019FA  C060  F198         	movff	?___flsub,_powf$2522
 10952  0019FE  C061  F199         	movff	?___flsub+1,_powf$2522+1
 10953  001A02  C062  F19A         	movff	?___flsub+2,_powf$2522+2
 10954  001A06  C063  F19B         	movff	?___flsub+3,_powf$2522+3
 10955  001A0A  C1A0  F0A9         	movff	powf@k,??_powf
 10956  001A0E  C1A1  F0AA         	movff	powf@k+1,??_powf+1
 10957  001A12  0100               	movlb	0	; () banked
 10958  001A14  90D8               	bcf	status,0,c
 10959  001A16  37A9               	rlcf	??_powf& (0+255),f,b
 10960  001A18  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 10961  001A1A  90D8               	bcf	status,0,c
 10962  001A1C  37A9               	rlcf	??_powf& (0+255),f,b
 10963  001A1E  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 10964  001A20  0E89               	movlw	low _dp_h
 10965  001A22  25A9               	addwf	??_powf& (0+255),w,b
 10966  001A24  6EF6               	movwf	tblptrl,c
 10967  001A26  0E7D               	movlw	high _dp_h
 10968  001A28  21AA               	addwfc	(??_powf+1)& (0+255),w,b
 10969  001A2A  6EF7               	movwf	tblptrh,c
 10970  001A2C                     	if	0	;There are less than 3 active tblptr bytes
 10971  001A2C                     	endif
 10972  001A2C  0009               	tblrd		*+
 10973  001A2E  CFF5 F064          	movff	tablat,___flsub@a
 10974  001A32  0009               	tblrd		*+
 10975  001A34  CFF5 F065          	movff	tablat,___flsub@a+1
 10976  001A38  0009               	tblrd		*+
 10977  001A3A  CFF5 F066          	movff	tablat,___flsub@a+2
 10978  001A3E  000A               	tblrd		*-
 10979  001A40  CFF5 F067          	movff	tablat,___flsub@a+3
 10980  001A44  C198  F060         	movff	_powf$2522,___flsub@b
 10981  001A48  C199  F061         	movff	_powf$2522+1,___flsub@b+1
 10982  001A4C  C19A  F062         	movff	_powf$2522+2,___flsub@b+2
 10983  001A50  C19B  F063         	movff	_powf$2522+3,___flsub@b+3
 10984  001A54  EC8D  F02A         	call	___flsub	;wreg free
 10985  001A58  C060  F140         	movff	?___flsub,_powf$2528
 10986  001A5C  C061  F141         	movff	?___flsub+1,_powf$2528+1
 10987  001A60  C062  F142         	movff	?___flsub+2,_powf$2528+2
 10988  001A64  C063  F143         	movff	?___flsub+3,_powf$2528+3
 10989  001A68  C120  F064         	movff	powf@z_h,___flsub@a
 10990  001A6C  C121  F065         	movff	powf@z_h+1,___flsub@a+1
 10991  001A70  C122  F066         	movff	powf@z_h+2,___flsub@a+2
 10992  001A74  C123  F067         	movff	powf@z_h+3,___flsub@a+3
 10993  001A78  C140  F060         	movff	_powf$2528,___flsub@b
 10994  001A7C  C141  F061         	movff	_powf$2528+1,___flsub@b+1
 10995  001A80  C142  F062         	movff	_powf$2528+2,___flsub@b+2
 10996  001A84  C143  F063         	movff	_powf$2528+3,___flsub@b+3
 10997  001A88  EC8D  F02A         	call	___flsub	;wreg free
 10998  001A8C  C060  F10C         	movff	?___flsub,_powf$2530
 10999  001A90  C061  F10D         	movff	?___flsub+1,_powf$2530+1
 11000  001A94  C062  F10E         	movff	?___flsub+2,_powf$2530+2
 11001  001A98  C063  F10F         	movff	?___flsub+3,_powf$2530+3
 11002  001A9C  C124  F060         	movff	powf@z_l,___flsub@b
 11003  001AA0  C125  F061         	movff	powf@z_l+1,___flsub@b+1
 11004  001AA4  C126  F062         	movff	powf@z_l+2,___flsub@b+2
 11005  001AA8  C127  F063         	movff	powf@z_l+3,___flsub@b+3
 11006  001AAC  C10C  F064         	movff	_powf$2530,___flsub@a
 11007  001AB0  C10D  F065         	movff	_powf$2530+1,___flsub@a+1
 11008  001AB4  C10E  F066         	movff	_powf$2530+2,___flsub@a+2
 11009  001AB8  C10F  F067         	movff	_powf$2530+3,___flsub@a+3
 11010  001ABC  EC8D  F02A         	call	___flsub	;wreg free
 11011  001AC0                     L4:
 11012  001AC0  C060  F11C         	movff	?___flsub,powf@t2
 11013  001AC4  C061  F11D         	movff	?___flsub+1,powf@t2+1
 11014  001AC8  C062  F11E         	movff	?___flsub+2,powf@t2+2
 11015  001ACC  C063  F11F         	movff	?___flsub+3,powf@t2+3
 11016  001AD0  C0A5  F1B8         	movff	powf@y,powf@__xc8_float_word
 11017  001AD4  C0A6  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
 11018  001AD8  C0A7  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
 11019  001ADC  C0A8  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
 11020  001AE0  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 11021  001AE4  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 11022  001AE8  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 11023  001AEC  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 11024  001AF0  0E00               	movlw	0
 11025  001AF2  0101               	movlb	1	; () banked
 11026  001AF4  1594               	andwf	powf@is& (0+255),w,b
 11027  001AF6  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 11028  001AF8  0EF0               	movlw	240
 11029  001AFA  1595               	andwf	(powf@is+1)& (0+255),w,b
 11030  001AFC  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 11031  001AFE  0EFF               	movlw	255
 11032  001B00  1596               	andwf	(powf@is+2)& (0+255),w,b
 11033  001B02  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 11034  001B04  0EFF               	movlw	255
 11035  001B06  1597               	andwf	(powf@is+3)& (0+255),w,b
 11036  001B08  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 11037                           
 11038                           ; BSR set to: 1
 11039  001B0A  C1B8  F128         	movff	powf@__xc8_float_word,powf@y1
 11040  001B0E  C1B9  F129         	movff	powf@__xc8_float_word+1,powf@y1+1
 11041  001B12  C1BA  F12A         	movff	powf@__xc8_float_word+2,powf@y1+2
 11042  001B16  C1BB  F12B         	movff	powf@__xc8_float_word+3,powf@y1+3
 11043                           
 11044                           ; BSR set to: 1
 11045  001B1A  C180  F020         	movff	powf@t1,___flmul@a
 11046  001B1E  C181  F021         	movff	powf@t1+1,___flmul@a+1
 11047  001B22  C182  F022         	movff	powf@t1+2,___flmul@a+2
 11048  001B26  C183  F023         	movff	powf@t1+3,___flmul@a+3
 11049  001B2A  C128  F064         	movff	powf@y1,___flsub@a
 11050  001B2E  C129  F065         	movff	powf@y1+1,___flsub@a+1
 11051  001B32  C12A  F066         	movff	powf@y1+2,___flsub@a+2
 11052  001B36  C12B  F067         	movff	powf@y1+3,___flsub@a+3
 11053  001B3A  C0A5  F060         	movff	powf@y,___flsub@b
 11054  001B3E  C0A6  F061         	movff	powf@y+1,___flsub@b+1
 11055  001B42  C0A7  F062         	movff	powf@y+2,___flsub@b+2
 11056  001B46  C0A8  F063         	movff	powf@y+3,___flsub@b+3
 11057  001B4A  EC8D  F02A         	call	___flsub	;wreg free
 11058  001B4E  C060  F01C         	movff	?___flsub,___flmul@b
 11059  001B52  C061  F01D         	movff	?___flsub+1,___flmul@b+1
 11060  001B56  C062  F01E         	movff	?___flsub+2,___flmul@b+2
 11061  001B5A  C063  F01F         	movff	?___flsub+3,___flmul@b+3
 11062  001B5E  ECC9  F01A         	call	___flmul	;wreg free
 11063  001B62  C01C  F110         	movff	?___flmul,_powf$2531
 11064  001B66  C01D  F111         	movff	?___flmul+1,_powf$2531+1
 11065  001B6A  C01E  F112         	movff	?___flmul+2,_powf$2531+2
 11066  001B6E  C01F  F113         	movff	?___flmul+3,_powf$2531+3
 11067  001B72  C110  F00C         	movff	_powf$2531,___fladd@b
 11068  001B76  C111  F00D         	movff	_powf$2531+1,___fladd@b+1
 11069  001B7A  C112  F00E         	movff	_powf$2531+2,___fladd@b+2
 11070  001B7E  C113  F00F         	movff	_powf$2531+3,___fladd@b+3
 11071  001B82  C11C  F020         	movff	powf@t2,___flmul@a
 11072  001B86  C11D  F021         	movff	powf@t2+1,___flmul@a+1
 11073  001B8A  C11E  F022         	movff	powf@t2+2,___flmul@a+2
 11074  001B8E  C11F  F023         	movff	powf@t2+3,___flmul@a+3
 11075  001B92  C0A5  F01C         	movff	powf@y,___flmul@b
 11076  001B96  C0A6  F01D         	movff	powf@y+1,___flmul@b+1
 11077  001B9A  C0A7  F01E         	movff	powf@y+2,___flmul@b+2
 11078  001B9E  C0A8  F01F         	movff	powf@y+3,___flmul@b+3
 11079  001BA2  ECC9  F01A         	call	___flmul	;wreg free
 11080  001BA6  C01C  F010         	movff	?___flmul,___fladd@a
 11081  001BAA  C01D  F011         	movff	?___flmul+1,___fladd@a+1
 11082  001BAE  C01E  F012         	movff	?___flmul+2,___fladd@a+2
 11083  001BB2  C01F  F013         	movff	?___flmul+3,___fladd@a+3
 11084  001BB6  EC72  F01C         	call	___fladd	;wreg free
 11085  001BBA  C00C  F164         	movff	?___fladd,powf@p_l
 11086  001BBE  C00D  F165         	movff	?___fladd+1,powf@p_l+1
 11087  001BC2  C00E  F166         	movff	?___fladd+2,powf@p_l+2
 11088  001BC6  C00F  F167         	movff	?___fladd+3,powf@p_l+3
 11089  001BCA  C128  F01C         	movff	powf@y1,___flmul@b
 11090  001BCE  C129  F01D         	movff	powf@y1+1,___flmul@b+1
 11091  001BD2  C12A  F01E         	movff	powf@y1+2,___flmul@b+2
 11092  001BD6  C12B  F01F         	movff	powf@y1+3,___flmul@b+3
 11093  001BDA  C180  F020         	movff	powf@t1,___flmul@a
 11094  001BDE  C181  F021         	movff	powf@t1+1,___flmul@a+1
 11095  001BE2  C182  F022         	movff	powf@t1+2,___flmul@a+2
 11096  001BE6  C183  F023         	movff	powf@t1+3,___flmul@a+3
 11097  001BEA  ECC9  F01A         	call	___flmul	;wreg free
 11098  001BEE  C01C  F19C         	movff	?___flmul,powf@p_h
 11099  001BF2  C01D  F19D         	movff	?___flmul+1,powf@p_h+1
 11100  001BF6  C01E  F19E         	movff	?___flmul+2,powf@p_h+2
 11101  001BFA  C01F  F19F         	movff	?___flmul+3,powf@p_h+3
 11102  001BFE  C164  F00C         	movff	powf@p_l,___fladd@b
 11103  001C02  C165  F00D         	movff	powf@p_l+1,___fladd@b+1
 11104  001C06  C166  F00E         	movff	powf@p_l+2,___fladd@b+2
 11105  001C0A  C167  F00F         	movff	powf@p_l+3,___fladd@b+3
 11106  001C0E  C19C  F010         	movff	powf@p_h,___fladd@a
 11107  001C12  C19D  F011         	movff	powf@p_h+1,___fladd@a+1
 11108  001C16  C19E  F012         	movff	powf@p_h+2,___fladd@a+2
 11109  001C1A  C19F  F013         	movff	powf@p_h+3,___fladd@a+3
 11110  001C1E  EC72  F01C         	call	___fladd	;wreg free
 11111  001C22  C00C  F1B4         	movff	?___fladd,powf@z
 11112  001C26  C00D  F1B5         	movff	?___fladd+1,powf@z+1
 11113  001C2A  C00E  F1B6         	movff	?___fladd+2,powf@z+2
 11114  001C2E  C00F  F1B7         	movff	?___fladd+3,powf@z+3
 11115  001C32  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
 11116  001C36  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
 11117  001C3A  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
 11118  001C3E  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
 11119  001C42  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
 11120  001C46  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
 11121  001C4A  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
 11122  001C4E  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
 11123  001C52  0101               	movlb	1	; () banked
 11124  001C54  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
 11125  001C56  D03E               	goto	l9031
 11126  001C58  05AC               	decf	powf@j& (0+255),w,b
 11127  001C5A  0E00               	movlw	0
 11128  001C5C  59AD               	subwfb	(powf@j+1)& (0+255),w,b
 11129  001C5E  0E00               	movlw	0
 11130  001C60  59AE               	subwfb	(powf@j+2)& (0+255),w,b
 11131  001C62  0E43               	movlw	67
 11132  001C64  59AF               	subwfb	(powf@j+3)& (0+255),w,b
 11133  001C66  A0D8               	btfss	status,0,c
 11134  001C68  D035               	goto	l9031
 11135                           
 11136                           ; BSR set to: 1
 11137  001C6A  0ECA               	movlw	202
 11138  001C6C  6E20               	movwf	___flmul@a,c
 11139  001C6E  0EF2               	movlw	242
 11140  001C70  6E21               	movwf	___flmul@a+1,c
 11141  001C72  0E49               	movlw	73
 11142  001C74  6E22               	movwf	___flmul@a+2,c
 11143  001C76  0E71               	movlw	113
 11144  001C78  6E23               	movwf	___flmul@a+3,c
 11145  001C7A  C184  F01C         	movff	powf@sn,___flmul@b
 11146  001C7E  C185  F01D         	movff	powf@sn+1,___flmul@b+1
 11147  001C82  C186  F01E         	movff	powf@sn+2,___flmul@b+2
 11148  001C86  C187  F01F         	movff	powf@sn+3,___flmul@b+3
 11149  001C8A  ECC9  F01A         	call	___flmul	;wreg free
 11150  001C8E  C01C  F1A4         	movff	?___flmul,_powf$2519
 11151  001C92  C01D  F1A5         	movff	?___flmul+1,_powf$2519+1
 11152  001C96  C01E  F1A6         	movff	?___flmul+2,_powf$2519+2
 11153  001C9A  C01F  F1A7         	movff	?___flmul+3,_powf$2519+3
 11154  001C9E  C1A4  F01C         	movff	_powf$2519,___flmul@b
 11155  001CA2  C1A5  F01D         	movff	_powf$2519+1,___flmul@b+1
 11156  001CA6  C1A6  F01E         	movff	_powf$2519+2,___flmul@b+2
 11157  001CAA  C1A7  F01F         	movff	_powf$2519+3,___flmul@b+3
 11158  001CAE  0ECA               	movlw	202
 11159  001CB0  6E20               	movwf	___flmul@a,c
 11160  001CB2  0EF2               	movlw	242
 11161  001CB4  6E21               	movwf	___flmul@a+1,c
 11162  001CB6  0E49               	movlw	73
 11163  001CB8  6E22               	movwf	___flmul@a+2,c
 11164  001CBA  0E71               	movlw	113
 11165  001CBC  6E23               	movwf	___flmul@a+3,c
 11166  001CBE  ECC9  F01A         	call	___flmul	;wreg free
 11167  001CC2  C01C  F0A1         	movff	?___flmul,?_powf
 11168  001CC6  C01D  F0A2         	movff	?___flmul+1,?_powf+1
 11169  001CCA  C01E  F0A3         	movff	?___flmul+2,?_powf+2
 11170  001CCE  C01F  F0A4         	movff	?___flmul+3,?_powf+3
 11171  001CD2  0012               	return	
 11172  001CD4                     l9031:
 11173                           
 11174                           ; BSR set to: 1
 11175  001CD4  0E43               	movlw	67
 11176  001CD6  19AF               	xorwf	(powf@j+3)& (0+255),w,b
 11177  001CD8  11AC               	iorwf	powf@j& (0+255),w,b
 11178  001CDA  11AD               	iorwf	(powf@j+1)& (0+255),w,b
 11179  001CDC  11AE               	iorwf	(powf@j+2)& (0+255),w,b
 11180  001CDE  A4D8               	btfss	status,2,c
 11181  001CE0  D06E               	goto	l9039
 11182                           
 11183                           ; BSR set to: 1
 11184  001CE2  C19C  F064         	movff	powf@p_h,___flsub@a
 11185  001CE6  C19D  F065         	movff	powf@p_h+1,___flsub@a+1
 11186  001CEA  C19E  F066         	movff	powf@p_h+2,___flsub@a+2
 11187  001CEE  C19F  F067         	movff	powf@p_h+3,___flsub@a+3
 11188  001CF2  C1B4  F060         	movff	powf@z,___flsub@b
 11189  001CF6  C1B5  F061         	movff	powf@z+1,___flsub@b+1
 11190  001CFA  C1B6  F062         	movff	powf@z+2,___flsub@b+2
 11191  001CFE  C1B7  F063         	movff	powf@z+3,___flsub@b+3
 11192  001D02  EC8D  F02A         	call	___flsub	;wreg free
 11193  001D06  C060  F068         	movff	?___flsub,___flge@ff1
 11194  001D0A  C061  F069         	movff	?___flsub+1,___flge@ff1+1
 11195  001D0E  C062  F06A         	movff	?___flsub+2,___flge@ff1+2
 11196  001D12  C063  F06B         	movff	?___flsub+3,___flge@ff1+3
 11197  001D16  0E3C               	movlw	60
 11198  001D18  6E10               	movwf	___fladd@a,c
 11199  001D1A  0EAA               	movlw	170
 11200  001D1C  6E11               	movwf	___fladd@a+1,c
 11201  001D1E  0E38               	movlw	56
 11202  001D20  6E12               	movwf	___fladd@a+2,c
 11203  001D22  0E33               	movlw	51
 11204  001D24  6E13               	movwf	___fladd@a+3,c
 11205  001D26  C164  F00C         	movff	powf@p_l,___fladd@b
 11206  001D2A  C165  F00D         	movff	powf@p_l+1,___fladd@b+1
 11207  001D2E  C166  F00E         	movff	powf@p_l+2,___fladd@b+2
 11208  001D32  C167  F00F         	movff	powf@p_l+3,___fladd@b+3
 11209  001D36  EC72  F01C         	call	___fladd	;wreg free
 11210  001D3A  C00C  F06C         	movff	?___fladd,___flge@ff2
 11211  001D3E  C00D  F06D         	movff	?___fladd+1,___flge@ff2+1
 11212  001D42  C00E  F06E         	movff	?___fladd+2,___flge@ff2+2
 11213  001D46  C00F  F06F         	movff	?___fladd+3,___flge@ff2+3
 11214  001D4A  EC07  F026         	call	___flge	;wreg free
 11215  001D4E  0100               	movlb	0	; () banked
 11216  001D50  B0D8               	btfsc	status,0,c
 11217  001D52  D0EE               	goto	l9055
 11218                           
 11219                           ; BSR set to: 0
 11220  001D54  0ECA               	movlw	202
 11221  001D56  6E20               	movwf	___flmul@a,c
 11222  001D58  0EF2               	movlw	242
 11223  001D5A  6E21               	movwf	___flmul@a+1,c
 11224  001D5C  0E49               	movlw	73
 11225  001D5E  6E22               	movwf	___flmul@a+2,c
 11226  001D60  0E71               	movlw	113
 11227  001D62  6E23               	movwf	___flmul@a+3,c
 11228  001D64  C184  F01C         	movff	powf@sn,___flmul@b
 11229  001D68  C185  F01D         	movff	powf@sn+1,___flmul@b+1
 11230  001D6C  C186  F01E         	movff	powf@sn+2,___flmul@b+2
 11231  001D70  C187  F01F         	movff	powf@sn+3,___flmul@b+3
 11232  001D74  ECC9  F01A         	call	___flmul	;wreg free
 11233  001D78  C01C  F1A4         	movff	?___flmul,_powf$2519
 11234  001D7C  C01D  F1A5         	movff	?___flmul+1,_powf$2519+1
 11235  001D80  C01E  F1A6         	movff	?___flmul+2,_powf$2519+2
 11236  001D84  C01F  F1A7         	movff	?___flmul+3,_powf$2519+3
 11237  001D88  C1A4  F01C         	movff	_powf$2519,___flmul@b
 11238  001D8C  C1A5  F01D         	movff	_powf$2519+1,___flmul@b+1
 11239  001D90  C1A6  F01E         	movff	_powf$2519+2,___flmul@b+2
 11240  001D94  C1A7  F01F         	movff	_powf$2519+3,___flmul@b+3
 11241  001D98  0ECA               	movlw	202
 11242  001D9A  6E20               	movwf	___flmul@a,c
 11243  001D9C  0EF2               	movlw	242
 11244  001D9E  6E21               	movwf	___flmul@a+1,c
 11245  001DA0  0E49               	movlw	73
 11246  001DA2  6E22               	movwf	___flmul@a+2,c
 11247  001DA4  0E71               	movlw	113
 11248  001DA6  6E23               	movwf	___flmul@a+3,c
 11249  001DA8  ECC9  F01A         	call	___flmul	;wreg free
 11250  001DAC  C01C  F0A1         	movff	?___flmul,?_powf
 11251  001DB0  C01D  F0A2         	movff	?___flmul+1,?_powf+1
 11252  001DB4  C01E  F0A3         	movff	?___flmul+2,?_powf+2
 11253  001DB8  C01F  F0A4         	movff	?___flmul+3,?_powf+3
 11254  001DBC  0012               	return	
 11255  001DBE                     l9039:
 11256                           
 11257                           ; BSR set to: 1
 11258  001DBE  0EFF               	movlw	255
 11259  001DC0  15AC               	andwf	powf@j& (0+255),w,b
 11260  001DC2  0100               	movlb	0	; () banked
 11261  001DC4  6FA9               	movwf	??_powf& (0+255),b
 11262  001DC6  0EFF               	movlw	255
 11263  001DC8  0101               	movlb	1	; () banked
 11264  001DCA  15AD               	andwf	(powf@j+1)& (0+255),w,b
 11265  001DCC  0100               	movlb	0	; () banked
 11266  001DCE  6FAA               	movwf	(??_powf+1)& (0+255),b
 11267  001DD0  0EFF               	movlw	255
 11268  001DD2  0101               	movlb	1	; () banked
 11269  001DD4  15AE               	andwf	(powf@j+2)& (0+255),w,b
 11270  001DD6  0100               	movlb	0	; () banked
 11271  001DD8  6FAB               	movwf	(??_powf+2)& (0+255),b
 11272  001DDA  0E7F               	movlw	127
 11273  001DDC  0101               	movlb	1	; () banked
 11274  001DDE  15AF               	andwf	(powf@j+3)& (0+255),w,b
 11275  001DE0  0100               	movlb	0	; () banked
 11276  001DE2  6FAC               	movwf	(??_powf+3)& (0+255),b
 11277  001DE4  BFAC               	btfsc	(??_powf+3)& (0+255),7,b
 11278  001DE6  D03E               	goto	l9047
 11279  001DE8  05A9               	decf	??_powf& (0+255),w,b
 11280  001DEA  0E00               	movlw	0
 11281  001DEC  59AA               	subwfb	(??_powf+1)& (0+255),w,b
 11282  001DEE  0E16               	movlw	22
 11283  001DF0  59AB               	subwfb	(??_powf+2)& (0+255),w,b
 11284  001DF2  0E43               	movlw	67
 11285  001DF4  59AC               	subwfb	(??_powf+3)& (0+255),w,b
 11286  001DF6  A0D8               	btfss	status,0,c
 11287  001DF8  D035               	goto	l9047
 11288                           
 11289                           ; BSR set to: 0
 11290  001DFA  0E60               	movlw	96
 11291  001DFC  6E20               	movwf	___flmul@a,c
 11292  001DFE  0E42               	movlw	66
 11293  001E00  6E21               	movwf	___flmul@a+1,c
 11294  001E02  0EA2               	movlw	162
 11295  001E04  6E22               	movwf	___flmul@a+2,c
 11296  001E06  0E0D               	movlw	13
 11297  001E08  6E23               	movwf	___flmul@a+3,c
 11298  001E0A  C184  F01C         	movff	powf@sn,___flmul@b
 11299  001E0E  C185  F01D         	movff	powf@sn+1,___flmul@b+1
 11300  001E12  C186  F01E         	movff	powf@sn+2,___flmul@b+2
 11301  001E16  C187  F01F         	movff	powf@sn+3,___flmul@b+3
 11302  001E1A  ECC9  F01A         	call	___flmul	;wreg free
 11303  001E1E  C01C  F1A4         	movff	?___flmul,_powf$2519
 11304  001E22  C01D  F1A5         	movff	?___flmul+1,_powf$2519+1
 11305  001E26  C01E  F1A6         	movff	?___flmul+2,_powf$2519+2
 11306  001E2A  C01F  F1A7         	movff	?___flmul+3,_powf$2519+3
 11307  001E2E  C1A4  F01C         	movff	_powf$2519,___flmul@b
 11308  001E32  C1A5  F01D         	movff	_powf$2519+1,___flmul@b+1
 11309  001E36  C1A6  F01E         	movff	_powf$2519+2,___flmul@b+2
 11310  001E3A  C1A7  F01F         	movff	_powf$2519+3,___flmul@b+3
 11311  001E3E  0E60               	movlw	96
 11312  001E40  6E20               	movwf	___flmul@a,c
 11313  001E42  0E42               	movlw	66
 11314  001E44  6E21               	movwf	___flmul@a+1,c
 11315  001E46  0EA2               	movlw	162
 11316  001E48  6E22               	movwf	___flmul@a+2,c
 11317  001E4A  0E0D               	movlw	13
 11318  001E4C  6E23               	movwf	___flmul@a+3,c
 11319  001E4E  ECC9  F01A         	call	___flmul	;wreg free
 11320  001E52  C01C  F0A1         	movff	?___flmul,?_powf
 11321  001E56  C01D  F0A2         	movff	?___flmul+1,?_powf+1
 11322  001E5A  C01E  F0A3         	movff	?___flmul+2,?_powf+2
 11323  001E5E  C01F  F0A4         	movff	?___flmul+3,?_powf+3
 11324  001E62  0012               	return	
 11325  001E64                     l9047:
 11326                           
 11327                           ; BSR set to: 0
 11328  001E64  0E16               	movlw	22
 11329  001E66  0101               	movlb	1	; () banked
 11330  001E68  19AE               	xorwf	(powf@j+2)& (0+255),w,b
 11331  001E6A  E162               	bnz	l9055
 11332  001E6C  0EC3               	movlw	195
 11333  001E6E  19AF               	xorwf	(powf@j+3)& (0+255),w,b
 11334  001E70  11AC               	iorwf	powf@j& (0+255),w,b
 11335  001E72  11AD               	iorwf	(powf@j+1)& (0+255),w,b
 11336  001E74  A4D8               	btfss	status,2,c
 11337  001E76  D05C               	goto	l9055
 11338                           
 11339                           ; BSR set to: 1
 11340  001E78  C19C  F064         	movff	powf@p_h,___flsub@a
 11341  001E7C  C19D  F065         	movff	powf@p_h+1,___flsub@a+1
 11342  001E80  C19E  F066         	movff	powf@p_h+2,___flsub@a+2
 11343  001E84  C19F  F067         	movff	powf@p_h+3,___flsub@a+3
 11344  001E88  C1B4  F060         	movff	powf@z,___flsub@b
 11345  001E8C  C1B5  F061         	movff	powf@z+1,___flsub@b+1
 11346  001E90  C1B6  F062         	movff	powf@z+2,___flsub@b+2
 11347  001E94  C1B7  F063         	movff	powf@z+3,___flsub@b+3
 11348  001E98  EC8D  F02A         	call	___flsub	;wreg free
 11349  001E9C  C060  F068         	movff	?___flsub,___flge@ff1
 11350  001EA0  C061  F069         	movff	?___flsub+1,___flge@ff1+1
 11351  001EA4  C062  F06A         	movff	?___flsub+2,___flge@ff1+2
 11352  001EA8  C063  F06B         	movff	?___flsub+3,___flge@ff1+3
 11353  001EAC  C164  F06C         	movff	powf@p_l,___flge@ff2
 11354  001EB0  C165  F06D         	movff	powf@p_l+1,___flge@ff2+1
 11355  001EB4  C166  F06E         	movff	powf@p_l+2,___flge@ff2+2
 11356  001EB8  C167  F06F         	movff	powf@p_l+3,___flge@ff2+3
 11357  001EBC  EC07  F026         	call	___flge	;wreg free
 11358  001EC0  0100               	movlb	0	; () banked
 11359  001EC2  A0D8               	btfss	status,0,c
 11360  001EC4  D035               	goto	l9055
 11361                           
 11362                           ; BSR set to: 0
 11363  001EC6  0E60               	movlw	96
 11364  001EC8  6E20               	movwf	___flmul@a,c
 11365  001ECA  0E42               	movlw	66
 11366  001ECC  6E21               	movwf	___flmul@a+1,c
 11367  001ECE  0EA2               	movlw	162
 11368  001ED0  6E22               	movwf	___flmul@a+2,c
 11369  001ED2  0E0D               	movlw	13
 11370  001ED4  6E23               	movwf	___flmul@a+3,c
 11371  001ED6  C184  F01C         	movff	powf@sn,___flmul@b
 11372  001EDA  C185  F01D         	movff	powf@sn+1,___flmul@b+1
 11373  001EDE  C186  F01E         	movff	powf@sn+2,___flmul@b+2
 11374  001EE2  C187  F01F         	movff	powf@sn+3,___flmul@b+3
 11375  001EE6  ECC9  F01A         	call	___flmul	;wreg free
 11376  001EEA  C01C  F1A4         	movff	?___flmul,_powf$2519
 11377  001EEE  C01D  F1A5         	movff	?___flmul+1,_powf$2519+1
 11378  001EF2  C01E  F1A6         	movff	?___flmul+2,_powf$2519+2
 11379  001EF6  C01F  F1A7         	movff	?___flmul+3,_powf$2519+3
 11380  001EFA  C1A4  F01C         	movff	_powf$2519,___flmul@b
 11381  001EFE  C1A5  F01D         	movff	_powf$2519+1,___flmul@b+1
 11382  001F02  C1A6  F01E         	movff	_powf$2519+2,___flmul@b+2
 11383  001F06  C1A7  F01F         	movff	_powf$2519+3,___flmul@b+3
 11384  001F0A  0E60               	movlw	96
 11385  001F0C  6E20               	movwf	___flmul@a,c
 11386  001F0E  0E42               	movlw	66
 11387  001F10  6E21               	movwf	___flmul@a+1,c
 11388  001F12  0EA2               	movlw	162
 11389  001F14  6E22               	movwf	___flmul@a+2,c
 11390  001F16  0E0D               	movlw	13
 11391  001F18  6E23               	movwf	___flmul@a+3,c
 11392  001F1A  ECC9  F01A         	call	___flmul	;wreg free
 11393  001F1E  C01C  F0A1         	movff	?___flmul,?_powf
 11394  001F22  C01D  F0A2         	movff	?___flmul+1,?_powf+1
 11395  001F26  C01E  F0A3         	movff	?___flmul+2,?_powf+2
 11396  001F2A  C01F  F0A4         	movff	?___flmul+3,?_powf+3
 11397  001F2E  0012               	return	
 11398  001F30                     l9055:
 11399  001F30  0EFF               	movlw	255
 11400  001F32  0101               	movlb	1	; () banked
 11401  001F34  15AC               	andwf	powf@j& (0+255),w,b
 11402  001F36  6F2C               	movwf	powf@i& (0+255),b
 11403  001F38  0EFF               	movlw	255
 11404  001F3A  15AD               	andwf	(powf@j+1)& (0+255),w,b
 11405  001F3C  6F2D               	movwf	(powf@i+1)& (0+255),b
 11406  001F3E  0EFF               	movlw	255
 11407  001F40  15AE               	andwf	(powf@j+2)& (0+255),w,b
 11408  001F42  6F2E               	movwf	(powf@i+2)& (0+255),b
 11409  001F44  0E7F               	movlw	127
 11410  001F46  15AF               	andwf	(powf@j+3)& (0+255),w,b
 11411  001F48  6F2F               	movwf	(powf@i+3)& (0+255),b
 11412  001F4A  0E17               	movlw	23
 11413  001F4C  0100               	movlb	0	; () banked
 11414  001F4E  6FA9               	movwf	??_powf& (0+255),b
 11415  001F50  C12C  F0AA         	movff	powf@i,??_powf+1
 11416  001F54  C12D  F0AB         	movff	powf@i+1,??_powf+2
 11417  001F58  C12E  F0AC         	movff	powf@i+2,??_powf+3
 11418  001F5C  C12F  F0AD         	movff	powf@i+3,??_powf+4
 11419  001F60                     u9905:
 11420  001F60  67A9               	tstfsz	??_powf& (0+255),b
 11421  001F62  D001               	goto	u9906
 11422  001F64  D007               	goto	u9907
 11423  001F66                     u9906:
 11424  001F66  35AD               	rlcf	(??_powf+4)& (0+255),w,b
 11425  001F68  33AD               	rrcf	(??_powf+4)& (0+255),f,b
 11426  001F6A  33AC               	rrcf	(??_powf+3)& (0+255),f,b
 11427  001F6C  33AB               	rrcf	(??_powf+2)& (0+255),f,b
 11428  001F6E  33AA               	rrcf	(??_powf+1)& (0+255),f,b
 11429  001F70  2FA9               	decfsz	??_powf& (0+255),f,b
 11430  001F72  D7F6               	goto	u9905
 11431  001F74                     u9907:
 11432  001F74  0E81               	movlw	129
 11433  001F76  0100               	movlb	0	; () banked
 11434  001F78  25AA               	addwf	(??_powf+1)& (0+255),w,b
 11435  001F7A  0101               	movlb	1	; () banked
 11436  001F7C  6FA0               	movwf	powf@k& (0+255),b
 11437  001F7E  0EFF               	movlw	255
 11438  001F80  0100               	movlb	0	; () banked
 11439  001F82  21AB               	addwfc	(??_powf+2)& (0+255),w,b
 11440  001F84  0101               	movlb	1	; () banked
 11441  001F86  6FA1               	movwf	(powf@k+1)& (0+255),b
 11442  001F88  0EFF               	movlw	255
 11443  001F8A  0100               	movlb	0	; () banked
 11444  001F8C  21AC               	addwfc	(??_powf+3)& (0+255),w,b
 11445  001F8E  0101               	movlb	1	; () banked
 11446  001F90  6FA2               	movwf	(powf@k+2)& (0+255),b
 11447  001F92  0EFF               	movlw	255
 11448  001F94  0100               	movlb	0	; () banked
 11449  001F96  21AD               	addwfc	(??_powf+4)& (0+255),w,b
 11450  001F98  0101               	movlb	1	; () banked
 11451  001F9A  6FA3               	movwf	(powf@k+3)& (0+255),b
 11452                           
 11453                           ; BSR set to: 1
 11454  001F9C  0E00               	movlw	0
 11455  001F9E  6F88               	movwf	powf@n& (0+255),b
 11456  001FA0  0E00               	movlw	0
 11457  001FA2  6F89               	movwf	(powf@n+1)& (0+255),b
 11458  001FA4  0E00               	movlw	0
 11459  001FA6  6F8A               	movwf	(powf@n+2)& (0+255),b
 11460  001FA8  0E00               	movlw	0
 11461  001FAA  6F8B               	movwf	(powf@n+3)& (0+255),b
 11462                           
 11463                           ; BSR set to: 1
 11464  001FAC  BF2F               	btfsc	(powf@i+3)& (0+255),7,b
 11465  001FAE  D0FC               	goto	l9069
 11466  001FB0  052C               	decf	powf@i& (0+255),w,b
 11467  001FB2  0E00               	movlw	0
 11468  001FB4  592D               	subwfb	(powf@i+1)& (0+255),w,b
 11469  001FB6  0E00               	movlw	0
 11470  001FB8  592E               	subwfb	(powf@i+2)& (0+255),w,b
 11471  001FBA  0E3F               	movlw	63
 11472  001FBC  592F               	subwfb	(powf@i+3)& (0+255),w,b
 11473  001FBE  A0D8               	btfss	status,0,c
 11474  001FC0  D0F3               	goto	l9069
 11475                           
 11476                           ; BSR set to: 1
 11477  001FC2  C1A0  F0A9         	movff	powf@k,??_powf
 11478  001FC6  0E01               	movlw	1
 11479  001FC8  0100               	movlb	0	; () banked
 11480  001FCA  27A9               	addwf	??_powf& (0+255),f,b
 11481  001FCC  0E00               	movlw	0
 11482  001FCE  6FAA               	movwf	(??_powf+1)& (0+255),b
 11483  001FD0  0E00               	movlw	0
 11484  001FD2  6FAB               	movwf	(??_powf+2)& (0+255),b
 11485  001FD4  0E80               	movlw	128
 11486  001FD6  6FAC               	movwf	(??_powf+3)& (0+255),b
 11487  001FD8  0E00               	movlw	0
 11488  001FDA  6FAD               	movwf	(??_powf+4)& (0+255),b
 11489  001FDC                     u9925:
 11490  001FDC  67A9               	tstfsz	??_powf& (0+255),b
 11491  001FDE  D001               	goto	u9926
 11492  001FE0  D007               	goto	u9927
 11493  001FE2                     u9926:
 11494  001FE2  35AD               	rlcf	(??_powf+4)& (0+255),w,b
 11495  001FE4  33AD               	rrcf	(??_powf+4)& (0+255),f,b
 11496  001FE6  33AC               	rrcf	(??_powf+3)& (0+255),f,b
 11497  001FE8  33AB               	rrcf	(??_powf+2)& (0+255),f,b
 11498  001FEA  33AA               	rrcf	(??_powf+1)& (0+255),f,b
 11499  001FEC  2FA9               	decfsz	??_powf& (0+255),f,b
 11500  001FEE  D7F6               	goto	u9925
 11501  001FF0                     u9927:
 11502  001FF0  0101               	movlb	1	; () banked
 11503  001FF2  51AC               	movf	powf@j& (0+255),w,b
 11504  001FF4  0100               	movlb	0	; () banked
 11505  001FF6  25AA               	addwf	(??_powf+1)& (0+255),w,b
 11506  001FF8  0101               	movlb	1	; () banked
 11507  001FFA  6F88               	movwf	powf@n& (0+255),b
 11508  001FFC  51AD               	movf	(powf@j+1)& (0+255),w,b
 11509  001FFE  0100               	movlb	0	; () banked
 11510  002000  21AB               	addwfc	(??_powf+2)& (0+255),w,b
 11511  002002  0101               	movlb	1	; () banked
 11512  002004  6F89               	movwf	(powf@n+1)& (0+255),b
 11513  002006  51AE               	movf	(powf@j+2)& (0+255),w,b
 11514  002008  0100               	movlb	0	; () banked
 11515  00200A  21AC               	addwfc	(??_powf+3)& (0+255),w,b
 11516  00200C  0101               	movlb	1	; () banked
 11517  00200E  6F8A               	movwf	(powf@n+2)& (0+255),b
 11518  002010  51AF               	movf	(powf@j+3)& (0+255),w,b
 11519  002012  0100               	movlb	0	; () banked
 11520  002014  21AD               	addwfc	(??_powf+4)& (0+255),w,b
 11521  002016  0101               	movlb	1	; () banked
 11522  002018  6F8B               	movwf	(powf@n+3)& (0+255),b
 11523  00201A  0E81               	movlw	129
 11524  00201C  0100               	movlb	0	; () banked
 11525  00201E  6FA9               	movwf	??_powf& (0+255),b
 11526  002020  0EFF               	movlw	255
 11527  002022  6FAA               	movwf	(??_powf+1)& (0+255),b
 11528  002024  0EFF               	movlw	255
 11529  002026  6FAB               	movwf	(??_powf+2)& (0+255),b
 11530  002028  0EFF               	movlw	255
 11531  00202A  6FAC               	movwf	(??_powf+3)& (0+255),b
 11532  00202C  0E17               	movlw	23
 11533  00202E  6FAD               	movwf	(??_powf+4)& (0+255),b
 11534  002030  C188  F0AE         	movff	powf@n,??_powf+5
 11535  002034  C189  F0AF         	movff	powf@n+1,??_powf+6
 11536  002038  C18A  F0B0         	movff	powf@n+2,??_powf+7
 11537  00203C  C18B  F0B1         	movff	powf@n+3,??_powf+8
 11538  002040                     u9935:
 11539  002040  67AD               	tstfsz	(??_powf+4)& (0+255),b
 11540  002042  D001               	goto	u9936
 11541  002044  D007               	goto	u9937
 11542  002046                     u9936:
 11543  002046  35B1               	rlcf	(??_powf+8)& (0+255),w,b
 11544  002048  33B1               	rrcf	(??_powf+8)& (0+255),f,b
 11545  00204A  33B0               	rrcf	(??_powf+7)& (0+255),f,b
 11546  00204C  33AF               	rrcf	(??_powf+6)& (0+255),f,b
 11547  00204E  33AE               	rrcf	(??_powf+5)& (0+255),f,b
 11548  002050  2FAD               	decfsz	(??_powf+4)& (0+255),f,b
 11549  002052  D7F6               	goto	u9935
 11550  002054                     u9937:
 11551  002054  0100               	movlb	0	; () banked
 11552  002056  51AE               	movf	(??_powf+5)& (0+255),w,b
 11553  002058  25A9               	addwf	??_powf& (0+255),w,b
 11554  00205A  0101               	movlb	1	; () banked
 11555  00205C  6FA0               	movwf	powf@k& (0+255),b
 11556  00205E  0E00               	movlw	0
 11557  002060  0100               	movlb	0	; () banked
 11558  002062  21AA               	addwfc	(??_powf+1)& (0+255),w,b
 11559  002064  0101               	movlb	1	; () banked
 11560  002066  6FA1               	movwf	(powf@k+1)& (0+255),b
 11561  002068  0E00               	movlw	0
 11562  00206A  0100               	movlb	0	; () banked
 11563  00206C  21AB               	addwfc	(??_powf+2)& (0+255),w,b
 11564  00206E  0101               	movlb	1	; () banked
 11565  002070  6FA2               	movwf	(powf@k+2)& (0+255),b
 11566  002072  0E00               	movlw	0
 11567  002074  0100               	movlb	0	; () banked
 11568  002076  21AC               	addwfc	(??_powf+3)& (0+255),w,b
 11569  002078  0101               	movlb	1	; () banked
 11570  00207A  6FA3               	movwf	(powf@k+3)& (0+255),b
 11571                           
 11572                           ; BSR set to: 1
 11573  00207C  C1A0  F0A9         	movff	powf@k,??_powf
 11574  002080  0EFF               	movlw	255
 11575  002082  0100               	movlb	0	; () banked
 11576  002084  6FAA               	movwf	(??_powf+1)& (0+255),b
 11577  002086  0EFF               	movlw	255
 11578  002088  6FAB               	movwf	(??_powf+2)& (0+255),b
 11579  00208A  0E7F               	movlw	127
 11580  00208C  6FAC               	movwf	(??_powf+3)& (0+255),b
 11581  00208E  0E00               	movlw	0
 11582  002090  6FAD               	movwf	(??_powf+4)& (0+255),b
 11583  002092                     u9945:
 11584  002092  67A9               	tstfsz	??_powf& (0+255),b
 11585  002094  D001               	goto	u9946
 11586  002096  D007               	goto	u9947
 11587  002098                     u9946:
 11588  002098  35AD               	rlcf	(??_powf+4)& (0+255),w,b
 11589  00209A  33AD               	rrcf	(??_powf+4)& (0+255),f,b
 11590  00209C  33AC               	rrcf	(??_powf+3)& (0+255),f,b
 11591  00209E  33AB               	rrcf	(??_powf+2)& (0+255),f,b
 11592  0020A0  33AA               	rrcf	(??_powf+1)& (0+255),f,b
 11593  0020A2  2FA9               	decfsz	??_powf& (0+255),f,b
 11594  0020A4  D7F6               	goto	u9945
 11595  0020A6                     u9947:
 11596  0020A6  0100               	movlb	0	; () banked
 11597  0020A8  1DAA               	comf	(??_powf+1)& (0+255),w,b
 11598  0020AA  6FAE               	movwf	(??_powf+5)& (0+255),b
 11599  0020AC  1DAB               	comf	(??_powf+2)& (0+255),w,b
 11600  0020AE  6FAF               	movwf	(??_powf+6)& (0+255),b
 11601  0020B0  1DAC               	comf	(??_powf+3)& (0+255),w,b
 11602  0020B2  6FB0               	movwf	(??_powf+7)& (0+255),b
 11603  0020B4  1DAD               	comf	(??_powf+4)& (0+255),w,b
 11604  0020B6  6FB1               	movwf	(??_powf+8)& (0+255),b
 11605  0020B8  0101               	movlb	1	; () banked
 11606  0020BA  5188               	movf	powf@n& (0+255),w,b
 11607  0020BC  0100               	movlb	0	; () banked
 11608  0020BE  15AE               	andwf	(??_powf+5)& (0+255),w,b
 11609  0020C0  0101               	movlb	1	; () banked
 11610  0020C2  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 11611  0020C4  5189               	movf	(powf@n+1)& (0+255),w,b
 11612  0020C6  0100               	movlb	0	; () banked
 11613  0020C8  15AF               	andwf	(??_powf+6)& (0+255),w,b
 11614  0020CA  0101               	movlb	1	; () banked
 11615  0020CC  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 11616  0020CE  518A               	movf	(powf@n+2)& (0+255),w,b
 11617  0020D0  0100               	movlb	0	; () banked
 11618  0020D2  15B0               	andwf	(??_powf+7)& (0+255),w,b
 11619  0020D4  0101               	movlb	1	; () banked
 11620  0020D6  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 11621  0020D8  518B               	movf	(powf@n+3)& (0+255),w,b
 11622  0020DA  0100               	movlb	0	; () banked
 11623  0020DC  15B1               	andwf	(??_powf+8)& (0+255),w,b
 11624  0020DE  0101               	movlb	1	; () banked
 11625  0020E0  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 11626                           
 11627                           ; BSR set to: 1
 11628  0020E2  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
 11629  0020E6  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
 11630  0020EA  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
 11631  0020EE  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
 11632                           
 11633                           ; BSR set to: 1
 11634  0020F2  51A0               	movf	powf@k& (0+255),w,b
 11635  0020F4  0817               	sublw	23
 11636  0020F6  0100               	movlb	0	; () banked
 11637  0020F8  6FA9               	movwf	??_powf& (0+255),b
 11638  0020FA  0EFF               	movlw	255
 11639  0020FC  0101               	movlb	1	; () banked
 11640  0020FE  1588               	andwf	powf@n& (0+255),w,b
 11641  002100  0100               	movlb	0	; () banked
 11642  002102  6FAA               	movwf	(??_powf+1)& (0+255),b
 11643  002104  0EFF               	movlw	255
 11644  002106  0101               	movlb	1	; () banked
 11645  002108  1589               	andwf	(powf@n+1)& (0+255),w,b
 11646  00210A  0100               	movlb	0	; () banked
 11647  00210C  6FAB               	movwf	(??_powf+2)& (0+255),b
 11648  00210E  0E7F               	movlw	127
 11649  002110  0101               	movlb	1	; () banked
 11650  002112  158A               	andwf	(powf@n+2)& (0+255),w,b
 11651  002114  0100               	movlb	0	; () banked
 11652  002116  6FAC               	movwf	(??_powf+3)& (0+255),b
 11653  002118  0E00               	movlw	0
 11654  00211A  0101               	movlb	1	; () banked
 11655  00211C  158B               	andwf	(powf@n+3)& (0+255),w,b
 11656  00211E  0100               	movlb	0	; () banked
 11657  002120  6FAD               	movwf	(??_powf+4)& (0+255),b
 11658  002122  0E00               	movlw	0
 11659  002124  11AA               	iorwf	(??_powf+1)& (0+255),w,b
 11660  002126  6FAE               	movwf	(??_powf+5)& (0+255),b
 11661  002128  0E00               	movlw	0
 11662  00212A  11AB               	iorwf	(??_powf+2)& (0+255),w,b
 11663  00212C  6FAF               	movwf	(??_powf+6)& (0+255),b
 11664  00212E  0E80               	movlw	128
 11665  002130  11AC               	iorwf	(??_powf+3)& (0+255),w,b
 11666  002132  6FB0               	movwf	(??_powf+7)& (0+255),b
 11667  002134  0E00               	movlw	0
 11668  002136  11AD               	iorwf	(??_powf+4)& (0+255),w,b
 11669  002138  6FB1               	movwf	(??_powf+8)& (0+255),b
 11670  00213A                     u9955:
 11671  00213A  67A9               	tstfsz	??_powf& (0+255),b
 11672  00213C  D001               	goto	u9956
 11673  00213E  D007               	goto	u9957
 11674  002140                     u9956:
 11675  002140  35B1               	rlcf	(??_powf+8)& (0+255),w,b
 11676  002142  33B1               	rrcf	(??_powf+8)& (0+255),f,b
 11677  002144  33B0               	rrcf	(??_powf+7)& (0+255),f,b
 11678  002146  33AF               	rrcf	(??_powf+6)& (0+255),f,b
 11679  002148  33AE               	rrcf	(??_powf+5)& (0+255),f,b
 11680  00214A  2FA9               	decfsz	??_powf& (0+255),f,b
 11681  00214C  D7F6               	goto	u9955
 11682  00214E                     u9957:
 11683  00214E  C0AE  F188         	movff	??_powf+5,powf@n
 11684  002152  C0AF  F189         	movff	??_powf+6,powf@n+1
 11685  002156  C0B0  F18A         	movff	??_powf+7,powf@n+2
 11686  00215A  C0B1  F18B         	movff	??_powf+8,powf@n+3
 11687  00215E  0101               	movlb	1	; () banked
 11688  002160  AFAF               	btfss	(powf@j+3)& (0+255),7,b
 11689  002162  D008               	goto	l9067
 11690                           
 11691                           ; BSR set to: 1
 11692  002164  1F8B               	comf	(powf@n+3)& (0+255),f,b
 11693  002166  1F8A               	comf	(powf@n+2)& (0+255),f,b
 11694  002168  1F89               	comf	(powf@n+1)& (0+255),f,b
 11695  00216A  6D88               	negf	powf@n& (0+255),b
 11696  00216C  0E00               	movlw	0
 11697  00216E  2389               	addwfc	(powf@n+1)& (0+255),f,b
 11698  002170  238A               	addwfc	(powf@n+2)& (0+255),f,b
 11699  002172  238B               	addwfc	(powf@n+3)& (0+255),f,b
 11700  002174                     l9067:
 11701                           
 11702                           ; BSR set to: 1
 11703  002174  C19C  F060         	movff	powf@p_h,___flsub@b
 11704  002178  C19D  F061         	movff	powf@p_h+1,___flsub@b+1
 11705  00217C  C19E  F062         	movff	powf@p_h+2,___flsub@b+2
 11706  002180  C19F  F063         	movff	powf@p_h+3,___flsub@b+3
 11707  002184  C1B0  F064         	movff	powf@t,___flsub@a
 11708  002188  C1B1  F065         	movff	powf@t+1,___flsub@a+1
 11709  00218C  C1B2  F066         	movff	powf@t+2,___flsub@a+2
 11710  002190  C1B3  F067         	movff	powf@t+3,___flsub@a+3
 11711  002194  EC8D  F02A         	call	___flsub	;wreg free
 11712  002198  C060  F19C         	movff	?___flsub,powf@p_h
 11713  00219C  C061  F19D         	movff	?___flsub+1,powf@p_h+1
 11714  0021A0  C062  F19E         	movff	?___flsub+2,powf@p_h+2
 11715  0021A4  C063  F19F         	movff	?___flsub+3,powf@p_h+3
 11716  0021A8                     l9069:
 11717  0021A8  C164  F00C         	movff	powf@p_l,___fladd@b
 11718  0021AC  C165  F00D         	movff	powf@p_l+1,___fladd@b+1
 11719  0021B0  C166  F00E         	movff	powf@p_l+2,___fladd@b+2
 11720  0021B4  C167  F00F         	movff	powf@p_l+3,___fladd@b+3
 11721  0021B8  C19C  F010         	movff	powf@p_h,___fladd@a
 11722  0021BC  C19D  F011         	movff	powf@p_h+1,___fladd@a+1
 11723  0021C0  C19E  F012         	movff	powf@p_h+2,___fladd@a+2
 11724  0021C4  C19F  F013         	movff	powf@p_h+3,___fladd@a+3
 11725  0021C8  EC72  F01C         	call	___fladd	;wreg free
 11726  0021CC  C00C  F1B0         	movff	?___fladd,powf@t
 11727  0021D0  C00D  F1B1         	movff	?___fladd+1,powf@t+1
 11728  0021D4  C00E  F1B2         	movff	?___fladd+2,powf@t+2
 11729  0021D8  C00F  F1B3         	movff	?___fladd+3,powf@t+3
 11730  0021DC  C1B0  F1B8         	movff	powf@t,powf@__xc8_float_word
 11731  0021E0  C1B1  F1B9         	movff	powf@t+1,powf@__xc8_float_word+1
 11732  0021E4  C1B2  F1BA         	movff	powf@t+2,powf@__xc8_float_word+2
 11733  0021E8  C1B3  F1BB         	movff	powf@t+3,powf@__xc8_float_word+3
 11734  0021EC  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 11735  0021F0  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 11736  0021F4  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 11737  0021F8  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 11738  0021FC  0E00               	movlw	0
 11739  0021FE  0101               	movlb	1	; () banked
 11740  002200  1594               	andwf	powf@is& (0+255),w,b
 11741  002202  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 11742  002204  0E80               	movlw	128
 11743  002206  1595               	andwf	(powf@is+1)& (0+255),w,b
 11744  002208  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 11745  00220A  0EFF               	movlw	255
 11746  00220C  1596               	andwf	(powf@is+2)& (0+255),w,b
 11747  00220E  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 11748  002210  0EFF               	movlw	255
 11749  002212  1597               	andwf	(powf@is+3)& (0+255),w,b
 11750  002214  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 11751                           
 11752                           ; BSR set to: 1
 11753  002216  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
 11754  00221A  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
 11755  00221E  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
 11756  002222  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
 11757                           
 11758                           ; BSR set to: 1
 11759  002226  C1B0  F01C         	movff	powf@t,___flmul@b
 11760  00222A  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
 11761  00222E  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
 11762  002232  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
 11763  002236  0E00               	movlw	0
 11764  002238  6E20               	movwf	___flmul@a,c
 11765  00223A  0E72               	movlw	114
 11766  00223C  6E21               	movwf	___flmul@a+1,c
 11767  00223E  0E31               	movlw	49
 11768  002240  6E22               	movwf	___flmul@a+2,c
 11769  002242  0E3F               	movlw	63
 11770  002244  6E23               	movwf	___flmul@a+3,c
 11771  002246  ECC9  F01A         	call	___flmul	;wreg free
 11772  00224A  C01C  F174         	movff	?___flmul,powf@u
 11773  00224E  C01D  F175         	movff	?___flmul+1,powf@u+1
 11774  002252  C01E  F176         	movff	?___flmul+2,powf@u+2
 11775  002256  C01F  F177         	movff	?___flmul+3,powf@u+3
 11776  00225A  C19C  F064         	movff	powf@p_h,___flsub@a
 11777  00225E  C19D  F065         	movff	powf@p_h+1,___flsub@a+1
 11778  002262  C19E  F066         	movff	powf@p_h+2,___flsub@a+2
 11779  002266  C19F  F067         	movff	powf@p_h+3,___flsub@a+3
 11780  00226A  C1B0  F060         	movff	powf@t,___flsub@b
 11781  00226E  C1B1  F061         	movff	powf@t+1,___flsub@b+1
 11782  002272  C1B2  F062         	movff	powf@t+2,___flsub@b+2
 11783  002276  C1B3  F063         	movff	powf@t+3,___flsub@b+3
 11784  00227A  EC8D  F02A         	call	___flsub	;wreg free
 11785  00227E  C060  F198         	movff	?___flsub,_powf$2522
 11786  002282  C061  F199         	movff	?___flsub+1,_powf$2522+1
 11787  002286  C062  F19A         	movff	?___flsub+2,_powf$2522+2
 11788  00228A  C063  F19B         	movff	?___flsub+3,_powf$2522+3
 11789  00228E  0E18               	movlw	24
 11790  002290  6E20               	movwf	___flmul@a,c
 11791  002292  0E72               	movlw	114
 11792  002294  6E21               	movwf	___flmul@a+1,c
 11793  002296  0E31               	movlw	49
 11794  002298  6E22               	movwf	___flmul@a+2,c
 11795  00229A  0E3F               	movlw	63
 11796  00229C  6E23               	movwf	___flmul@a+3,c
 11797  00229E  C198  F064         	movff	_powf$2522,___flsub@a
 11798  0022A2  C199  F065         	movff	_powf$2522+1,___flsub@a+1
 11799  0022A6  C19A  F066         	movff	_powf$2522+2,___flsub@a+2
 11800  0022AA  C19B  F067         	movff	_powf$2522+3,___flsub@a+3
 11801  0022AE  C164  F060         	movff	powf@p_l,___flsub@b
 11802  0022B2  C165  F061         	movff	powf@p_l+1,___flsub@b+1
 11803  0022B6  C166  F062         	movff	powf@p_l+2,___flsub@b+2
 11804  0022BA  C167  F063         	movff	powf@p_l+3,___flsub@b+3
 11805  0022BE  EC8D  F02A         	call	___flsub	;wreg free
 11806  0022C2  C060  F01C         	movff	?___flsub,___flmul@b
 11807  0022C6  C061  F01D         	movff	?___flsub+1,___flmul@b+1
 11808  0022CA  C062  F01E         	movff	?___flsub+2,___flmul@b+2
 11809  0022CE  C063  F01F         	movff	?___flsub+3,___flmul@b+3
 11810  0022D2  ECC9  F01A         	call	___flmul	;wreg free
 11811  0022D6  C01C  F114         	movff	?___flmul,_powf$2532
 11812  0022DA  C01D  F115         	movff	?___flmul+1,_powf$2532+1
 11813  0022DE  C01E  F116         	movff	?___flmul+2,_powf$2532+2
 11814  0022E2  C01F  F117         	movff	?___flmul+3,_powf$2532+3
 11815  0022E6  C114  F00C         	movff	_powf$2532,___fladd@b
 11816  0022EA  C115  F00D         	movff	_powf$2532+1,___fladd@b+1
 11817  0022EE  C116  F00E         	movff	_powf$2532+2,___fladd@b+2
 11818  0022F2  C117  F00F         	movff	_powf$2532+3,___fladd@b+3
 11819  0022F6  0E8C               	movlw	140
 11820  0022F8  6E20               	movwf	___flmul@a,c
 11821  0022FA  0EBE               	movlw	190
 11822  0022FC  6E21               	movwf	___flmul@a+1,c
 11823  0022FE  0EBF               	movlw	191
 11824  002300  6E22               	movwf	___flmul@a+2,c
 11825  002302  0E35               	movlw	53
 11826  002304  6E23               	movwf	___flmul@a+3,c
 11827  002306  C1B0  F01C         	movff	powf@t,___flmul@b
 11828  00230A  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
 11829  00230E  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
 11830  002312  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
 11831  002316  ECC9  F01A         	call	___flmul	;wreg free
 11832  00231A  C01C  F010         	movff	?___flmul,___fladd@a
 11833  00231E  C01D  F011         	movff	?___flmul+1,___fladd@a+1
 11834  002322  C01E  F012         	movff	?___flmul+2,___fladd@a+2
 11835  002326  C01F  F013         	movff	?___flmul+3,___fladd@a+3
 11836  00232A  EC72  F01C         	call	___fladd	;wreg free
 11837  00232E  C00C  F178         	movff	?___fladd,powf@v
 11838  002332  C00D  F179         	movff	?___fladd+1,powf@v+1
 11839  002336  C00E  F17A         	movff	?___fladd+2,powf@v+2
 11840  00233A  C00F  F17B         	movff	?___fladd+3,powf@v+3
 11841  00233E  C174  F00C         	movff	powf@u,___fladd@b
 11842  002342  C175  F00D         	movff	powf@u+1,___fladd@b+1
 11843  002346  C176  F00E         	movff	powf@u+2,___fladd@b+2
 11844  00234A  C177  F00F         	movff	powf@u+3,___fladd@b+3
 11845  00234E  C178  F010         	movff	powf@v,___fladd@a
 11846  002352  C179  F011         	movff	powf@v+1,___fladd@a+1
 11847  002356  C17A  F012         	movff	powf@v+2,___fladd@a+2
 11848  00235A  C17B  F013         	movff	powf@v+3,___fladd@a+3
 11849  00235E  EC72  F01C         	call	___fladd	;wreg free
 11850  002362  C00C  F1B4         	movff	?___fladd,powf@z
 11851  002366  C00D  F1B5         	movff	?___fladd+1,powf@z+1
 11852  00236A  C00E  F1B6         	movff	?___fladd+2,powf@z+2
 11853  00236E  C00F  F1B7         	movff	?___fladd+3,powf@z+3
 11854  002372  C174  F064         	movff	powf@u,___flsub@a
 11855  002376  C175  F065         	movff	powf@u+1,___flsub@a+1
 11856  00237A  C176  F066         	movff	powf@u+2,___flsub@a+2
 11857  00237E  C177  F067         	movff	powf@u+3,___flsub@a+3
 11858  002382  C1B4  F060         	movff	powf@z,___flsub@b
 11859  002386  C1B5  F061         	movff	powf@z+1,___flsub@b+1
 11860  00238A  C1B6  F062         	movff	powf@z+2,___flsub@b+2
 11861  00238E  C1B7  F063         	movff	powf@z+3,___flsub@b+3
 11862  002392  EC8D  F02A         	call	___flsub	;wreg free
 11863  002396  C060  F198         	movff	?___flsub,_powf$2522
 11864  00239A  C061  F199         	movff	?___flsub+1,_powf$2522+1
 11865  00239E  C062  F19A         	movff	?___flsub+2,_powf$2522+2
 11866  0023A2  C063  F19B         	movff	?___flsub+3,_powf$2522+3
 11867  0023A6  C178  F060         	movff	powf@v,___flsub@b
 11868  0023AA  C179  F061         	movff	powf@v+1,___flsub@b+1
 11869  0023AE  C17A  F062         	movff	powf@v+2,___flsub@b+2
 11870  0023B2  C17B  F063         	movff	powf@v+3,___flsub@b+3
 11871  0023B6  C198  F064         	movff	_powf$2522,___flsub@a
 11872  0023BA  C199  F065         	movff	_powf$2522+1,___flsub@a+1
 11873  0023BE  C19A  F066         	movff	_powf$2522+2,___flsub@a+2
 11874  0023C2  C19B  F067         	movff	_powf$2522+3,___flsub@a+3
 11875  0023C6  EC8D  F02A         	call	___flsub	;wreg free
 11876  0023CA  C060  F144         	movff	?___flsub,powf@w
 11877  0023CE  C061  F145         	movff	?___flsub+1,powf@w+1
 11878  0023D2  C062  F146         	movff	?___flsub+2,powf@w+2
 11879  0023D6  C063  F147         	movff	?___flsub+3,powf@w+3
 11880  0023DA  C1B4  F01C         	movff	powf@z,___flmul@b
 11881  0023DE  C1B5  F01D         	movff	powf@z+1,___flmul@b+1
 11882  0023E2  C1B6  F01E         	movff	powf@z+2,___flmul@b+2
 11883  0023E6  C1B7  F01F         	movff	powf@z+3,___flmul@b+3
 11884  0023EA  C1B4  F020         	movff	powf@z,___flmul@a
 11885  0023EE  C1B5  F021         	movff	powf@z+1,___flmul@a+1
 11886  0023F2  C1B6  F022         	movff	powf@z+2,___flmul@a+2
 11887  0023F6  C1B7  F023         	movff	powf@z+3,___flmul@a+3
 11888  0023FA  ECC9  F01A         	call	___flmul	;wreg free
 11889  0023FE  C01C  F1B0         	movff	?___flmul,powf@t
 11890  002402  C01D  F1B1         	movff	?___flmul+1,powf@t+1
 11891  002406  C01E  F1B2         	movff	?___flmul+2,powf@t+2
 11892  00240A  C01F  F1B3         	movff	?___flmul+3,powf@t+3
 11893  00240E  0E0E               	movlw	14
 11894  002410  6E10               	movwf	___fladd@a,c
 11895  002412  0EEA               	movlw	234
 11896  002414  6E11               	movwf	___fladd@a+1,c
 11897  002416  0EDD               	movlw	221
 11898  002418  6E12               	movwf	___fladd@a+2,c
 11899  00241A  0EB5               	movlw	181
 11900  00241C  6E13               	movwf	___fladd@a+3,c
 11901  00241E  0E4C               	movlw	76
 11902  002420  6E20               	movwf	___flmul@a,c
 11903  002422  0EBB               	movlw	187
 11904  002424  6E21               	movwf	___flmul@a+1,c
 11905  002426  0E31               	movlw	49
 11906  002428  6E22               	movwf	___flmul@a+2,c
 11907  00242A  0E33               	movlw	51
 11908  00242C  6E23               	movwf	___flmul@a+3,c
 11909  00242E  C1B0  F01C         	movff	powf@t,___flmul@b
 11910  002432  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
 11911  002436  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
 11912  00243A  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
 11913  00243E  ECC9  F01A         	call	___flmul	;wreg free
 11914  002442  C01C  F00C         	movff	?___flmul,___fladd@b
 11915  002446  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 11916  00244A  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 11917  00244E  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 11918  002452  EC72  F01C         	call	___fladd	;wreg free
 11919  002456  C00C  F1A4         	movff	?___fladd,_powf$2519
 11920  00245A  C00D  F1A5         	movff	?___fladd+1,_powf$2519+1
 11921  00245E  C00E  F1A6         	movff	?___fladd+2,_powf$2519+2
 11922  002462  C00F  F1A7         	movff	?___fladd+3,_powf$2519+3
 11923  002466  0E55               	movlw	85
 11924  002468  6E10               	movwf	___fladd@a,c
 11925  00246A  0EB3               	movlw	179
 11926  00246C  6E11               	movwf	___fladd@a+1,c
 11927  00246E  0E8A               	movlw	138
 11928  002470  6E12               	movwf	___fladd@a+2,c
 11929  002472  0E38               	movlw	56
 11930  002474  6E13               	movwf	___fladd@a+3,c
 11931  002476  C1B0  F020         	movff	powf@t,___flmul@a
 11932  00247A  C1B1  F021         	movff	powf@t+1,___flmul@a+1
 11933  00247E  C1B2  F022         	movff	powf@t+2,___flmul@a+2
 11934  002482  C1B3  F023         	movff	powf@t+3,___flmul@a+3
 11935  002486  C1A4  F01C         	movff	_powf$2519,___flmul@b
 11936  00248A  C1A5  F01D         	movff	_powf$2519+1,___flmul@b+1
 11937  00248E  C1A6  F01E         	movff	_powf$2519+2,___flmul@b+2
 11938  002492  C1A7  F01F         	movff	_powf$2519+3,___flmul@b+3
 11939  002496  ECC9  F01A         	call	___flmul	;wreg free
 11940  00249A  C01C  F00C         	movff	?___flmul,___fladd@b
 11941  00249E  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 11942  0024A2  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 11943  0024A6  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 11944  0024AA  EC72  F01C         	call	___fladd	;wreg free
 11945  0024AE  C00C  F158         	movff	?___fladd,_powf$2520
 11946  0024B2  C00D  F159         	movff	?___fladd+1,_powf$2520+1
 11947  0024B6  C00E  F15A         	movff	?___fladd+2,_powf$2520+2
 11948  0024BA  C00F  F15B         	movff	?___fladd+3,_powf$2520+3
 11949  0024BE  0E61               	movlw	97
 11950  0024C0  6E10               	movwf	___fladd@a,c
 11951  0024C2  0E0B               	movlw	11
 11952  0024C4  6E11               	movwf	___fladd@a+1,c
 11953  0024C6  0E36               	movlw	54
 11954  0024C8  6E12               	movwf	___fladd@a+2,c
 11955  0024CA  0EBB               	movlw	187
 11956  0024CC  6E13               	movwf	___fladd@a+3,c
 11957  0024CE  C1B0  F020         	movff	powf@t,___flmul@a
 11958  0024D2  C1B1  F021         	movff	powf@t+1,___flmul@a+1
 11959  0024D6  C1B2  F022         	movff	powf@t+2,___flmul@a+2
 11960  0024DA  C1B3  F023         	movff	powf@t+3,___flmul@a+3
 11961  0024DE  C158  F01C         	movff	_powf$2520,___flmul@b
 11962  0024E2  C159  F01D         	movff	_powf$2520+1,___flmul@b+1
 11963  0024E6  C15A  F01E         	movff	_powf$2520+2,___flmul@b+2
 11964  0024EA  C15B  F01F         	movff	_powf$2520+3,___flmul@b+3
 11965  0024EE  ECC9  F01A         	call	___flmul	;wreg free
 11966  0024F2  C01C  F00C         	movff	?___flmul,___fladd@b
 11967  0024F6  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 11968  0024FA  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 11969  0024FE  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 11970  002502  EC72  F01C         	call	___fladd	;wreg free
 11971  002506  C00C  F148         	movff	?___fladd,_powf$2521
 11972  00250A  C00D  F149         	movff	?___fladd+1,_powf$2521+1
 11973  00250E  C00E  F14A         	movff	?___fladd+2,_powf$2521+2
 11974  002512  C00F  F14B         	movff	?___fladd+3,_powf$2521+3
 11975  002516  0EAB               	movlw	171
 11976  002518  6E10               	movwf	___fladd@a,c
 11977  00251A  0EAA               	movlw	170
 11978  00251C  6E11               	movwf	___fladd@a+1,c
 11979  00251E  0E2A               	movlw	42
 11980  002520  6E12               	movwf	___fladd@a+2,c
 11981  002522  0E3E               	movlw	62
 11982  002524  6E13               	movwf	___fladd@a+3,c
 11983  002526  C1B0  F020         	movff	powf@t,___flmul@a
 11984  00252A  C1B1  F021         	movff	powf@t+1,___flmul@a+1
 11985  00252E  C1B2  F022         	movff	powf@t+2,___flmul@a+2
 11986  002532  C1B3  F023         	movff	powf@t+3,___flmul@a+3
 11987  002536  C148  F01C         	movff	_powf$2521,___flmul@b
 11988  00253A  C149  F01D         	movff	_powf$2521+1,___flmul@b+1
 11989  00253E  C14A  F01E         	movff	_powf$2521+2,___flmul@b+2
 11990  002542  C14B  F01F         	movff	_powf$2521+3,___flmul@b+3
 11991  002546  ECC9  F01A         	call	___flmul	;wreg free
 11992  00254A  C01C  F00C         	movff	?___flmul,___fladd@b
 11993  00254E  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 11994  002552  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 11995  002556  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 11996  00255A  EC72  F01C         	call	___fladd	;wreg free
 11997  00255E  C00C  F138         	movff	?___fladd,_powf$2523
 11998  002562  C00D  F139         	movff	?___fladd+1,_powf$2523+1
 11999  002566  C00E  F13A         	movff	?___fladd+2,_powf$2523+2
 12000  00256A  C00F  F13B         	movff	?___fladd+3,_powf$2523+3
 12001  00256E  C1B4  F060         	movff	powf@z,___flsub@b
 12002  002572  C1B5  F061         	movff	powf@z+1,___flsub@b+1
 12003  002576  C1B6  F062         	movff	powf@z+2,___flsub@b+2
 12004  00257A  C1B7  F063         	movff	powf@z+3,___flsub@b+3
 12005  00257E  C1B0  F020         	movff	powf@t,___flmul@a
 12006  002582  C1B1  F021         	movff	powf@t+1,___flmul@a+1
 12007  002586  C1B2  F022         	movff	powf@t+2,___flmul@a+2
 12008  00258A  C1B3  F023         	movff	powf@t+3,___flmul@a+3
 12009  00258E  C138  F01C         	movff	_powf$2523,___flmul@b
 12010  002592  C139  F01D         	movff	_powf$2523+1,___flmul@b+1
 12011  002596  C13A  F01E         	movff	_powf$2523+2,___flmul@b+2
 12012  00259A  C13B  F01F         	movff	_powf$2523+3,___flmul@b+3
 12013  00259E  ECC9  F01A         	call	___flmul	;wreg free
 12014  0025A2  C01C  F064         	movff	?___flmul,___flsub@a
 12015  0025A6  C01D  F065         	movff	?___flmul+1,___flsub@a+1
 12016  0025AA  C01E  F066         	movff	?___flmul+2,___flsub@a+2
 12017  0025AE  C01F  F067         	movff	?___flmul+3,___flsub@a+3
 12018  0025B2  EC8D  F02A         	call	___flsub	;wreg free
 12019  0025B6  C060  F180         	movff	?___flsub,powf@t1
 12020  0025BA  C061  F181         	movff	?___flsub+1,powf@t1+1
 12021  0025BE  C062  F182         	movff	?___flsub+2,powf@t1+2
 12022  0025C2  C063  F183         	movff	?___flsub+3,powf@t1+3
 12023  0025C6  0E00               	movlw	0
 12024  0025C8  6E10               	movwf	___fladd@a,c
 12025  0025CA  0E00               	movlw	0
 12026  0025CC  6E11               	movwf	___fladd@a+1,c
 12027  0025CE  0E00               	movlw	0
 12028  0025D0  6E12               	movwf	___fladd@a+2,c
 12029  0025D2  0EC0               	movlw	192
 12030  0025D4  6E13               	movwf	___fladd@a+3,c
 12031  0025D6  C180  F00C         	movff	powf@t1,___fladd@b
 12032  0025DA  C181  F00D         	movff	powf@t1+1,___fladd@b+1
 12033  0025DE  C182  F00E         	movff	powf@t1+2,___fladd@b+2
 12034  0025E2  C183  F00F         	movff	powf@t1+3,___fladd@b+3
 12035  0025E6  EC72  F01C         	call	___fladd	;wreg free
 12036  0025EA  C00C  F06C         	movff	?___fladd,___fldiv@a
 12037  0025EE  C00D  F06D         	movff	?___fladd+1,___fldiv@a+1
 12038  0025F2  C00E  F06E         	movff	?___fladd+2,___fldiv@a+2
 12039  0025F6  C00F  F06F         	movff	?___fladd+3,___fldiv@a+3
 12040  0025FA  C180  F020         	movff	powf@t1,___flmul@a
 12041  0025FE  C181  F021         	movff	powf@t1+1,___flmul@a+1
 12042  002602  C182  F022         	movff	powf@t1+2,___flmul@a+2
 12043  002606  C183  F023         	movff	powf@t1+3,___flmul@a+3
 12044  00260A  C1B4  F01C         	movff	powf@z,___flmul@b
 12045  00260E  C1B5  F01D         	movff	powf@z+1,___flmul@b+1
 12046  002612  C1B6  F01E         	movff	powf@z+2,___flmul@b+2
 12047  002616  C1B7  F01F         	movff	powf@z+3,___flmul@b+3
 12048  00261A  ECC9  F01A         	call	___flmul	;wreg free
 12049  00261E  C01C  F068         	movff	?___flmul,___fldiv@b
 12050  002622  C01D  F069         	movff	?___flmul+1,___fldiv@b+1
 12051  002626  C01E  F06A         	movff	?___flmul+2,___fldiv@b+2
 12052  00262A  C01F  F06B         	movff	?___flmul+3,___fldiv@b+3
 12053  00262E  ECF8  F01D         	call	___fldiv	;wreg free
 12054  002632  C068  F13C         	movff	?___fldiv,_powf$2527
 12055  002636  C069  F13D         	movff	?___fldiv+1,_powf$2527+1
 12056  00263A  C06A  F13E         	movff	?___fldiv+2,_powf$2527+2
 12057  00263E  C06B  F13F         	movff	?___fldiv+3,_powf$2527+3
 12058  002642  C144  F010         	movff	powf@w,___fladd@a
 12059  002646  C145  F011         	movff	powf@w+1,___fladd@a+1
 12060  00264A  C146  F012         	movff	powf@w+2,___fladd@a+2
 12061  00264E  C147  F013         	movff	powf@w+3,___fladd@a+3
 12062  002652  C144  F020         	movff	powf@w,___flmul@a
 12063  002656  C145  F021         	movff	powf@w+1,___flmul@a+1
 12064  00265A  C146  F022         	movff	powf@w+2,___flmul@a+2
 12065  00265E  C147  F023         	movff	powf@w+3,___flmul@a+3
 12066  002662  C1B4  F01C         	movff	powf@z,___flmul@b
 12067  002666  C1B5  F01D         	movff	powf@z+1,___flmul@b+1
 12068  00266A  C1B6  F01E         	movff	powf@z+2,___flmul@b+2
 12069  00266E  C1B7  F01F         	movff	powf@z+3,___flmul@b+3
 12070  002672  ECC9  F01A         	call	___flmul	;wreg free
 12071  002676  C01C  F00C         	movff	?___flmul,___fladd@b
 12072  00267A  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 12073  00267E  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 12074  002682  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 12075  002686  EC72  F01C         	call	___fladd	;wreg free
 12076  00268A  C00C  F118         	movff	?___fladd,_powf$2533
 12077  00268E  C00D  F119         	movff	?___fladd+1,_powf$2533+1
 12078  002692  C00E  F11A         	movff	?___fladd+2,_powf$2533+2
 12079  002696  C00F  F11B         	movff	?___fladd+3,_powf$2533+3
 12080  00269A  C13C  F060         	movff	_powf$2527,___flsub@b
 12081  00269E  C13D  F061         	movff	_powf$2527+1,___flsub@b+1
 12082  0026A2  C13E  F062         	movff	_powf$2527+2,___flsub@b+2
 12083  0026A6  C13F  F063         	movff	_powf$2527+3,___flsub@b+3
 12084  0026AA  C118  F064         	movff	_powf$2533,___flsub@a
 12085  0026AE  C119  F065         	movff	_powf$2533+1,___flsub@a+1
 12086  0026B2  C11A  F066         	movff	_powf$2533+2,___flsub@a+2
 12087  0026B6  C11B  F067         	movff	_powf$2533+3,___flsub@a+3
 12088  0026BA  EC8D  F02A         	call	___flsub	;wreg free
 12089  0026BE  C060  F14C         	movff	?___flsub,powf@r
 12090  0026C2  C061  F14D         	movff	?___flsub+1,powf@r+1
 12091  0026C6  C062  F14E         	movff	?___flsub+2,powf@r+2
 12092  0026CA  C063  F14F         	movff	?___flsub+3,powf@r+3
 12093  0026CE  C1B4  F064         	movff	powf@z,___flsub@a
 12094  0026D2  C1B5  F065         	movff	powf@z+1,___flsub@a+1
 12095  0026D6  C1B6  F066         	movff	powf@z+2,___flsub@a+2
 12096  0026DA  C1B7  F067         	movff	powf@z+3,___flsub@a+3
 12097  0026DE  C14C  F060         	movff	powf@r,___flsub@b
 12098  0026E2  C14D  F061         	movff	powf@r+1,___flsub@b+1
 12099  0026E6  C14E  F062         	movff	powf@r+2,___flsub@b+2
 12100  0026EA  C14F  F063         	movff	powf@r+3,___flsub@b+3
 12101  0026EE  EC8D  F02A         	call	___flsub	;wreg free
 12102  0026F2  C060  F198         	movff	?___flsub,_powf$2522
 12103  0026F6  C061  F199         	movff	?___flsub+1,_powf$2522+1
 12104  0026FA  C062  F19A         	movff	?___flsub+2,_powf$2522+2
 12105  0026FE  C063  F19B         	movff	?___flsub+3,_powf$2522+3
 12106  002702  0E00               	movlw	0
 12107  002704  0100               	movlb	0	; () banked
 12108  002706  6F60               	movwf	___flsub@b& (0+255),b
 12109  002708  0E00               	movlw	0
 12110  00270A  6F61               	movwf	(___flsub@b+1)& (0+255),b
 12111  00270C  0E80               	movlw	128
 12112  00270E  6F62               	movwf	(___flsub@b+2)& (0+255),b
 12113  002710  0E3F               	movlw	63
 12114  002712  6F63               	movwf	(___flsub@b+3)& (0+255),b
 12115  002714  C198  F064         	movff	_powf$2522,___flsub@a
 12116  002718  C199  F065         	movff	_powf$2522+1,___flsub@a+1
 12117  00271C  C19A  F066         	movff	_powf$2522+2,___flsub@a+2
 12118  002720  C19B  F067         	movff	_powf$2522+3,___flsub@a+3
 12119  002724  EC8D  F02A         	call	___flsub	;wreg free
 12120  002728  C060  F1B4         	movff	?___flsub,powf@z
 12121  00272C  C061  F1B5         	movff	?___flsub+1,powf@z+1
 12122  002730  C062  F1B6         	movff	?___flsub+2,powf@z+2
 12123  002734  C063  F1B7         	movff	?___flsub+3,powf@z+3
 12124  002738  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
 12125  00273C  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
 12126  002740  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
 12127  002744  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
 12128  002748  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
 12129  00274C  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
 12130  002750  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
 12131  002754  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
 12132  002758  C188  F0A9         	movff	powf@n,??_powf
 12133  00275C  C189  F0AA         	movff	powf@n+1,??_powf+1
 12134  002760  C18A  F0AB         	movff	powf@n+2,??_powf+2
 12135  002764  C18B  F0AC         	movff	powf@n+3,??_powf+3
 12136  002768  0E17               	movlw	23
 12137  00276A                     u9975:
 12138  00276A  90D8               	bcf	status,0,c
 12139  00276C  0100               	movlb	0	; () banked
 12140  00276E  37A9               	rlcf	??_powf& (0+255),f,b
 12141  002770  37AA               	rlcf	(??_powf+1)& (0+255),f,b
 12142  002772  37AB               	rlcf	(??_powf+2)& (0+255),f,b
 12143  002774  37AC               	rlcf	(??_powf+3)& (0+255),f,b
 12144  002776  2EE8               	decfsz	wreg,f,c
 12145  002778  D7F8               	goto	u9975
 12146  00277A  51A9               	movf	??_powf& (0+255),w,b
 12147  00277C  0101               	movlb	1	; () banked
 12148  00277E  27AC               	addwf	powf@j& (0+255),f,b
 12149  002780  0100               	movlb	0	; () banked
 12150  002782  51AA               	movf	(??_powf+1)& (0+255),w,b
 12151  002784  0101               	movlb	1	; () banked
 12152  002786  23AD               	addwfc	(powf@j+1)& (0+255),f,b
 12153  002788  0100               	movlb	0	; () banked
 12154  00278A  51AB               	movf	(??_powf+2)& (0+255),w,b
 12155  00278C  0101               	movlb	1	; () banked
 12156  00278E  23AE               	addwfc	(powf@j+2)& (0+255),f,b
 12157  002790  0100               	movlb	0	; () banked
 12158  002792  51AC               	movf	(??_powf+3)& (0+255),w,b
 12159  002794  0101               	movlb	1	; () banked
 12160  002796  23AF               	addwfc	(powf@j+3)& (0+255),f,b
 12161                           
 12162                           ; BSR set to: 1
 12163  002798  0E17               	movlw	23
 12164  00279A  0100               	movlb	0	; () banked
 12165  00279C  6FA9               	movwf	??_powf& (0+255),b
 12166  00279E  C1AC  F0AA         	movff	powf@j,??_powf+1
 12167  0027A2  C1AD  F0AB         	movff	powf@j+1,??_powf+2
 12168  0027A6  C1AE  F0AC         	movff	powf@j+2,??_powf+3
 12169  0027AA  C1AF  F0AD         	movff	powf@j+3,??_powf+4
 12170  0027AE                     u9985:
 12171  0027AE  67A9               	tstfsz	??_powf& (0+255),b
 12172  0027B0  D001               	goto	u9986
 12173  0027B2  D007               	goto	u9987
 12174  0027B4                     u9986:
 12175  0027B4  35AD               	rlcf	(??_powf+4)& (0+255),w,b
 12176  0027B6  33AD               	rrcf	(??_powf+4)& (0+255),f,b
 12177  0027B8  33AC               	rrcf	(??_powf+3)& (0+255),f,b
 12178  0027BA  33AB               	rrcf	(??_powf+2)& (0+255),f,b
 12179  0027BC  33AA               	rrcf	(??_powf+1)& (0+255),f,b
 12180  0027BE  2FA9               	decfsz	??_powf& (0+255),f,b
 12181  0027C0  D7F6               	goto	u9985
 12182  0027C2                     u9987:
 12183  0027C2  0100               	movlb	0	; () banked
 12184  0027C4  BFAD               	btfsc	(??_powf+4)& (0+255),7,b
 12185  0027C6  D007               	goto	u9990
 12186  0027C8  51AD               	movf	(??_powf+4)& (0+255),w,b
 12187  0027CA  11AC               	iorwf	(??_powf+3)& (0+255),w,b
 12188  0027CC  11AB               	iorwf	(??_powf+2)& (0+255),w,b
 12189  0027CE  E11A               	bnz	l1756
 12190  0027D0  05AA               	decf	(??_powf+1)& (0+255),w,b
 12191  0027D2  B0D8               	btfsc	status,0,c
 12192  0027D4  D017               	goto	l1756
 12193  0027D6                     u9990:
 12194                           
 12195                           ; BSR set to: 0
 12196  0027D6  C1B4  F035         	movff	powf@z,scalbnf@x
 12197  0027DA  C1B5  F036         	movff	powf@z+1,scalbnf@x+1
 12198  0027DE  C1B6  F037         	movff	powf@z+2,scalbnf@x+2
 12199  0027E2  C1B7  F038         	movff	powf@z+3,scalbnf@x+3
 12200  0027E6  C188  F039         	movff	powf@n,scalbnf@n
 12201  0027EA  C189  F03A         	movff	powf@n+1,scalbnf@n+1
 12202  0027EE  EC61  F020         	call	_scalbnf	;wreg free
 12203  0027F2  C035  F1B4         	movff	?_scalbnf,powf@z
 12204  0027F6  C036  F1B5         	movff	?_scalbnf+1,powf@z+1
 12205  0027FA  C037  F1B6         	movff	?_scalbnf+2,powf@z+2
 12206  0027FE  C038  F1B7         	movff	?_scalbnf+3,powf@z+3
 12207  002802  D010               	goto	l9125
 12208  002804                     l1756:
 12209                           
 12210                           ; BSR set to: 0
 12211  002804  C1AC  F1B8         	movff	powf@j,powf@__xc8_float_word
 12212  002808  C1AD  F1B9         	movff	powf@j+1,powf@__xc8_float_word+1
 12213  00280C  C1AE  F1BA         	movff	powf@j+2,powf@__xc8_float_word+2
 12214  002810  C1AF  F1BB         	movff	powf@j+3,powf@__xc8_float_word+3
 12215  002814  C1B8  F1B4         	movff	powf@__xc8_float_word,powf@z
 12216  002818  C1B9  F1B5         	movff	powf@__xc8_float_word+1,powf@z+1
 12217  00281C  C1BA  F1B6         	movff	powf@__xc8_float_word+2,powf@z+2
 12218  002820  C1BB  F1B7         	movff	powf@__xc8_float_word+3,powf@z+3
 12219  002824                     l9125:
 12220  002824  C184  F01C         	movff	powf@sn,___flmul@b
 12221  002828  C185  F01D         	movff	powf@sn+1,___flmul@b+1
 12222  00282C  C186  F01E         	movff	powf@sn+2,___flmul@b+2
 12223  002830  C187  F01F         	movff	powf@sn+3,___flmul@b+3
 12224  002834  C1B4  F020         	movff	powf@z,___flmul@a
 12225  002838  C1B5  F021         	movff	powf@z+1,___flmul@a+1
 12226  00283C  C1B6  F022         	movff	powf@z+2,___flmul@a+2
 12227  002840  C1B7  F023         	movff	powf@z+3,___flmul@a+3
 12228  002844  ECC9  F01A         	call	___flmul	;wreg free
 12229  002848  C01C  F0A1         	movff	?___flmul,?_powf
 12230  00284C  C01D  F0A2         	movff	?___flmul+1,?_powf+1
 12231  002850  C01E  F0A3         	movff	?___flmul+2,?_powf+2
 12232  002854  C01F  F0A4         	movff	?___flmul+3,?_powf+3
 12233  002858  0012               	return		;funcret
 12234  00285A                     __end_of_powf:
 12235                           	opt callstack 0
 12236                           
 12237 ;; *************** function _sqrtf *****************
 12238 ;; Defined at:
 12239 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sqrtf.c"
 12240 ;; Parameters:    Size  Location     Type
 12241 ;;  x               4   16[BANK0 ] float 
 12242 ;; Auto vars:     Size  Location     Type
 12243 ;;  ix              4   61[BANK0 ] long 
 12244 ;;  r               4   57[BANK0 ] unsigned long 
 12245 ;;  m               4   53[BANK0 ] long 
 12246 ;;  z               4   49[BANK0 ] float 
 12247 ;;  t               4   45[BANK0 ] long 
 12248 ;;  q               4   41[BANK0 ] long 
 12249 ;;  __xc8_float_    4   37[BANK0 ] struct .
 12250 ;;  i               4   33[BANK0 ] long 
 12251 ;;  s               4   29[BANK0 ] long 
 12252 ;;  sign            4    0        long 
 12253 ;; Return value:  Size  Location     Type
 12254 ;;                  4   16[BANK0 ] float 
 12255 ;; Registers used:
 12256 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12257 ;; Tracked objects:
 12258 ;;		On entry : 0/0
 12259 ;;		On exit  : 0/0
 12260 ;;		Unchanged: 0/0
 12261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12262 ;;      Params:         0       4       0       0       0       0       0       0       0
 12263 ;;      Locals:         0      40       0       0       0       0       0       0       0
 12264 ;;      Temps:          0       5       0       0       0       0       0       0       0
 12265 ;;      Totals:         0      49       0       0       0       0       0       0       0
 12266 ;;Total ram usage:       49 bytes
 12267 ;; Hardware stack levels used:    1
 12268 ;; Hardware stack levels required when called:    8
 12269 ;; This function calls:
 12270 ;;		___fladd
 12271 ;;		___flge
 12272 ;;		___flmul
 12273 ;;		_nanf
 12274 ;; This function is called by:
 12275 ;;		_powf
 12276 ;; This function uses a non-reentrant model
 12277 ;;
 12278                           
 12279                           	psect	text51
 12280  002D80                     __ptext51:
 12281                           	opt callstack 0
 12282  002D80                     _sqrtf:
 12283                           	opt callstack 19
 12284                           
 12285                           ;incstack = 0
 12286  002D80  C070  F085         	movff	sqrtf@x,sqrtf@__xc8_float_word
 12287  002D84  C071  F086         	movff	sqrtf@x+1,sqrtf@__xc8_float_word+1
 12288  002D88  C072  F087         	movff	sqrtf@x+2,sqrtf@__xc8_float_word+2
 12289  002D8C  C073  F088         	movff	sqrtf@x+3,sqrtf@__xc8_float_word+3
 12290  002D90  C085  F09D         	movff	sqrtf@__xc8_float_word,sqrtf@ix
 12291  002D94  C086  F09E         	movff	sqrtf@__xc8_float_word+1,sqrtf@ix+1
 12292  002D98  C087  F09F         	movff	sqrtf@__xc8_float_word+2,sqrtf@ix+2
 12293  002D9C  C088  F0A0         	movff	sqrtf@__xc8_float_word+3,sqrtf@ix+3
 12294  002DA0  0E00               	movlw	0
 12295  002DA2  0100               	movlb	0	; () banked
 12296  002DA4  159D               	andwf	sqrtf@ix& (0+255),w,b
 12297  002DA6  6F74               	movwf	??_sqrtf& (0+255),b
 12298  002DA8  0E00               	movlw	0
 12299  002DAA  159E               	andwf	(sqrtf@ix+1)& (0+255),w,b
 12300  002DAC  6F75               	movwf	(??_sqrtf+1)& (0+255),b
 12301  002DAE  0E80               	movlw	128
 12302  002DB0  159F               	andwf	(sqrtf@ix+2)& (0+255),w,b
 12303  002DB2  6F76               	movwf	(??_sqrtf+2)& (0+255),b
 12304  002DB4  0E7F               	movlw	127
 12305  002DB6  15A0               	andwf	(sqrtf@ix+3)& (0+255),w,b
 12306  002DB8  6F77               	movwf	(??_sqrtf+3)& (0+255),b
 12307  002DBA  0E80               	movlw	128
 12308  002DBC  1976               	xorwf	(??_sqrtf+2)& (0+255),w,b
 12309  002DBE  E133               	bnz	l8617
 12310  002DC0  0E7F               	movlw	127
 12311  002DC2  1977               	xorwf	(??_sqrtf+3)& (0+255),w,b
 12312  002DC4  1174               	iorwf	??_sqrtf& (0+255),w,b
 12313  002DC6  1175               	iorwf	(??_sqrtf+1)& (0+255),w,b
 12314  002DC8  A4D8               	btfss	status,2,c
 12315  002DCA  D02D               	goto	l8617
 12316                           
 12317                           ; BSR set to: 0
 12318  002DCC  C070  F020         	movff	sqrtf@x,___flmul@a
 12319  002DD0  C071  F021         	movff	sqrtf@x+1,___flmul@a+1
 12320  002DD4  C072  F022         	movff	sqrtf@x+2,___flmul@a+2
 12321  002DD8  C073  F023         	movff	sqrtf@x+3,___flmul@a+3
 12322  002DDC  C070  F01C         	movff	sqrtf@x,___flmul@b
 12323  002DE0  C071  F01D         	movff	sqrtf@x+1,___flmul@b+1
 12324  002DE4  C072  F01E         	movff	sqrtf@x+2,___flmul@b+2
 12325  002DE8  C073  F01F         	movff	sqrtf@x+3,___flmul@b+3
 12326  002DEC  ECC9  F01A         	call	___flmul	;wreg free
 12327  002DF0  C01C  F00C         	movff	?___flmul,___fladd@b
 12328  002DF4  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 12329  002DF8  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 12330  002DFC  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 12331  002E00  C070  F010         	movff	sqrtf@x,___fladd@a
 12332  002E04  C071  F011         	movff	sqrtf@x+1,___fladd@a+1
 12333  002E08  C072  F012         	movff	sqrtf@x+2,___fladd@a+2
 12334  002E0C  C073  F013         	movff	sqrtf@x+3,___fladd@a+3
 12335  002E10  EC72  F01C         	call	___fladd	;wreg free
 12336  002E14  C00C  F070         	movff	?___fladd,?_sqrtf
 12337  002E18  C00D  F071         	movff	?___fladd+1,?_sqrtf+1
 12338  002E1C  C00E  F072         	movff	?___fladd+2,?_sqrtf+2
 12339  002E20  C00F  F073         	movff	?___fladd+3,?_sqrtf+3
 12340  002E24  0012               	return	
 12341  002E26                     l8617:
 12342                           
 12343                           ; BSR set to: 0
 12344  002E26  BFA0               	btfsc	(sqrtf@ix+3)& (0+255),7,b
 12345  002E28  D007               	goto	u9300
 12346  002E2A  51A0               	movf	(sqrtf@ix+3)& (0+255),w,b
 12347  002E2C  119F               	iorwf	(sqrtf@ix+2)& (0+255),w,b
 12348  002E2E  119E               	iorwf	(sqrtf@ix+1)& (0+255),w,b
 12349  002E30  E133               	bnz	l8631
 12350  002E32  059D               	decf	sqrtf@ix& (0+255),w,b
 12351  002E34  B0D8               	btfsc	status,0,c
 12352  002E36  D030               	goto	l8631
 12353  002E38                     u9300:
 12354                           
 12355                           ; BSR set to: 0
 12356  002E38  0EFF               	movlw	255
 12357  002E3A  159D               	andwf	sqrtf@ix& (0+255),w,b
 12358  002E3C  6F74               	movwf	??_sqrtf& (0+255),b
 12359  002E3E  0EFF               	movlw	255
 12360  002E40  159E               	andwf	(sqrtf@ix+1)& (0+255),w,b
 12361  002E42  6F75               	movwf	(??_sqrtf+1)& (0+255),b
 12362  002E44  0EFF               	movlw	255
 12363  002E46  159F               	andwf	(sqrtf@ix+2)& (0+255),w,b
 12364  002E48  6F76               	movwf	(??_sqrtf+2)& (0+255),b
 12365  002E4A  0E7F               	movlw	127
 12366  002E4C  15A0               	andwf	(sqrtf@ix+3)& (0+255),w,b
 12367  002E4E  6F77               	movwf	(??_sqrtf+3)& (0+255),b
 12368  002E50  5174               	movf	??_sqrtf& (0+255),w,b
 12369  002E52  1175               	iorwf	(??_sqrtf+1)& (0+255),w,b
 12370  002E54  1176               	iorwf	(??_sqrtf+2)& (0+255),w,b
 12371  002E56  1177               	iorwf	(??_sqrtf+3)& (0+255),w,b
 12372  002E58  A4D8               	btfss	status,2,c
 12373  002E5A  D009               	goto	l8623
 12374                           
 12375                           ; BSR set to: 0
 12376  002E5C  C070  F070         	movff	sqrtf@x,?_sqrtf
 12377  002E60  C071  F071         	movff	sqrtf@x+1,?_sqrtf+1
 12378  002E64  C072  F072         	movff	sqrtf@x+2,?_sqrtf+2
 12379  002E68  C073  F073         	movff	sqrtf@x+3,?_sqrtf+3
 12380  002E6C  0012               	return	
 12381  002E6E                     l8623:
 12382                           
 12383                           ; BSR set to: 0
 12384  002E6E  AFA0               	btfss	(sqrtf@ix+3)& (0+255),7,b
 12385  002E70  D013               	goto	l8631
 12386                           
 12387                           ; BSR set to: 0
 12388  002E72  0E00               	movlw	0
 12389  002E74  6FE6               	movwf	(_errno+1)& (0+255),b
 12390  002E76  0E21               	movlw	33
 12391  002E78  6FE5               	movwf	_errno& (0+255),b
 12392                           
 12393                           ; BSR set to: 0
 12394  002E7A  0E01               	movlw	low (STR_6+32)
 12395  002E7C  6E0C               	movwf	nanf@s,c
 12396  002E7E  0E7F               	movlw	high (STR_6+32)
 12397  002E80  6E0D               	movwf	nanf@s+1,c
 12398  002E82  ECFF  F02C         	call	_nanf	;wreg free
 12399  002E86  C00C  F070         	movff	?_nanf,?_sqrtf
 12400  002E8A  C00D  F071         	movff	?_nanf+1,?_sqrtf+1
 12401  002E8E  C00E  F072         	movff	?_nanf+2,?_sqrtf+2
 12402  002E92  C00F  F073         	movff	?_nanf+3,?_sqrtf+3
 12403  002E96  0012               	return	
 12404  002E98                     l8631:
 12405                           
 12406                           ; BSR set to: 0
 12407  002E98  0E17               	movlw	23
 12408  002E9A  6F74               	movwf	??_sqrtf& (0+255),b
 12409  002E9C  C09D  F075         	movff	sqrtf@ix,??_sqrtf+1
 12410  002EA0  C09E  F076         	movff	sqrtf@ix+1,??_sqrtf+2
 12411  002EA4  C09F  F077         	movff	sqrtf@ix+2,??_sqrtf+3
 12412  002EA8  C0A0  F078         	movff	sqrtf@ix+3,??_sqrtf+4
 12413  002EAC                     u9335:
 12414  002EAC  6774               	tstfsz	??_sqrtf& (0+255),b
 12415  002EAE  D001               	goto	u9336
 12416  002EB0  D007               	goto	u9337
 12417  002EB2                     u9336:
 12418  002EB2  3578               	rlcf	(??_sqrtf+4)& (0+255),w,b
 12419  002EB4  3378               	rrcf	(??_sqrtf+4)& (0+255),f,b
 12420  002EB6  3377               	rrcf	(??_sqrtf+3)& (0+255),f,b
 12421  002EB8  3376               	rrcf	(??_sqrtf+2)& (0+255),f,b
 12422  002EBA  3375               	rrcf	(??_sqrtf+1)& (0+255),f,b
 12423  002EBC  2F74               	decfsz	??_sqrtf& (0+255),f,b
 12424  002EBE  D7F6               	goto	u9335
 12425  002EC0                     u9337:
 12426  002EC0  C075  F095         	movff	??_sqrtf+1,sqrtf@m
 12427  002EC4  C076  F096         	movff	??_sqrtf+2,sqrtf@m+1
 12428  002EC8  C077  F097         	movff	??_sqrtf+3,sqrtf@m+2
 12429  002ECC  C078  F098         	movff	??_sqrtf+4,sqrtf@m+3
 12430  002ED0  0100               	movlb	0	; () banked
 12431  002ED2  5195               	movf	sqrtf@m& (0+255),w,b
 12432  002ED4  1196               	iorwf	(sqrtf@m+1)& (0+255),w,b
 12433  002ED6  1197               	iorwf	(sqrtf@m+2)& (0+255),w,b
 12434  002ED8  1198               	iorwf	(sqrtf@m+3)& (0+255),w,b
 12435  002EDA  A4D8               	btfss	status,2,c
 12436  002EDC  D02A               	goto	l1786
 12437                           
 12438                           ; BSR set to: 0
 12439  002EDE  0E00               	movlw	0
 12440  002EE0  6F81               	movwf	sqrtf@i& (0+255),b
 12441  002EE2  0E00               	movlw	0
 12442  002EE4  6F82               	movwf	(sqrtf@i+1)& (0+255),b
 12443  002EE6  0E00               	movlw	0
 12444  002EE8  6F83               	movwf	(sqrtf@i+2)& (0+255),b
 12445  002EEA  0E00               	movlw	0
 12446  002EEC  6F84               	movwf	(sqrtf@i+3)& (0+255),b
 12447  002EEE  D00B               	goto	l8639
 12448  002EF0                     l8635:
 12449                           
 12450                           ; BSR set to: 0
 12451  002EF0  90D8               	bcf	status,0,c
 12452  002EF2  379D               	rlcf	sqrtf@ix& (0+255),f,b
 12453  002EF4  379E               	rlcf	(sqrtf@ix+1)& (0+255),f,b
 12454  002EF6  379F               	rlcf	(sqrtf@ix+2)& (0+255),f,b
 12455  002EF8  37A0               	rlcf	(sqrtf@ix+3)& (0+255),f,b
 12456                           
 12457                           ; BSR set to: 0
 12458  002EFA  0E01               	movlw	1
 12459  002EFC  2781               	addwf	sqrtf@i& (0+255),f,b
 12460  002EFE  0E00               	movlw	0
 12461  002F00  2382               	addwfc	(sqrtf@i+1)& (0+255),f,b
 12462  002F02  2383               	addwfc	(sqrtf@i+2)& (0+255),f,b
 12463  002F04  2384               	addwfc	(sqrtf@i+3)& (0+255),f,b
 12464  002F06                     l8639:
 12465                           
 12466                           ; BSR set to: 0
 12467  002F06  AF9F               	btfss	(sqrtf@ix+2)& (0+255),7,b
 12468  002F08  D7F3               	goto	l8635
 12469                           
 12470                           ; BSR set to: 0
 12471  002F0A  0EFF               	movlw	255
 12472  002F0C  2581               	addwf	sqrtf@i& (0+255),w,b
 12473  002F0E  6F74               	movwf	??_sqrtf& (0+255),b
 12474  002F10  0EFF               	movlw	255
 12475  002F12  2182               	addwfc	(sqrtf@i+1)& (0+255),w,b
 12476  002F14  6F75               	movwf	(??_sqrtf+1)& (0+255),b
 12477  002F16  0EFF               	movlw	255
 12478  002F18  2183               	addwfc	(sqrtf@i+2)& (0+255),w,b
 12479  002F1A  6F76               	movwf	(??_sqrtf+2)& (0+255),b
 12480  002F1C  0EFF               	movlw	255
 12481  002F1E  2184               	addwfc	(sqrtf@i+3)& (0+255),w,b
 12482  002F20  6F77               	movwf	(??_sqrtf+3)& (0+255),b
 12483  002F22  5174               	movf	??_sqrtf& (0+255),w,b
 12484  002F24  5F95               	subwf	sqrtf@m& (0+255),f,b
 12485  002F26  5175               	movf	(??_sqrtf+1)& (0+255),w,b
 12486  002F28  5B96               	subwfb	(sqrtf@m+1)& (0+255),f,b
 12487  002F2A  5176               	movf	(??_sqrtf+2)& (0+255),w,b
 12488  002F2C  5B97               	subwfb	(sqrtf@m+2)& (0+255),f,b
 12489  002F2E  5177               	movf	(??_sqrtf+3)& (0+255),w,b
 12490  002F30  5B98               	subwfb	(sqrtf@m+3)& (0+255),f,b
 12491  002F32                     l1786:
 12492                           
 12493                           ; BSR set to: 0
 12494  002F32  0E81               	movlw	129
 12495  002F34  2795               	addwf	sqrtf@m& (0+255),f,b
 12496  002F36  0EFF               	movlw	255
 12497  002F38  2396               	addwfc	(sqrtf@m+1)& (0+255),f,b
 12498  002F3A  0EFF               	movlw	255
 12499  002F3C  2397               	addwfc	(sqrtf@m+2)& (0+255),f,b
 12500  002F3E  0EFF               	movlw	255
 12501  002F40  2398               	addwfc	(sqrtf@m+3)& (0+255),f,b
 12502  002F42  0EFF               	movlw	255
 12503  002F44  159D               	andwf	sqrtf@ix& (0+255),w,b
 12504  002F46  6F74               	movwf	??_sqrtf& (0+255),b
 12505  002F48  0EFF               	movlw	255
 12506  002F4A  159E               	andwf	(sqrtf@ix+1)& (0+255),w,b
 12507  002F4C  6F75               	movwf	(??_sqrtf+1)& (0+255),b
 12508  002F4E  0E7F               	movlw	127
 12509  002F50  159F               	andwf	(sqrtf@ix+2)& (0+255),w,b
 12510  002F52  6F76               	movwf	(??_sqrtf+2)& (0+255),b
 12511  002F54  0E00               	movlw	0
 12512  002F56  15A0               	andwf	(sqrtf@ix+3)& (0+255),w,b
 12513  002F58  6F77               	movwf	(??_sqrtf+3)& (0+255),b
 12514  002F5A  0E00               	movlw	0
 12515  002F5C  1174               	iorwf	??_sqrtf& (0+255),w,b
 12516  002F5E  6F9D               	movwf	sqrtf@ix& (0+255),b
 12517  002F60  0E00               	movlw	0
 12518  002F62  1175               	iorwf	(??_sqrtf+1)& (0+255),w,b
 12519  002F64  6F9E               	movwf	(sqrtf@ix+1)& (0+255),b
 12520  002F66  0E80               	movlw	128
 12521  002F68  1176               	iorwf	(??_sqrtf+2)& (0+255),w,b
 12522  002F6A  6F9F               	movwf	(sqrtf@ix+2)& (0+255),b
 12523  002F6C  0E00               	movlw	0
 12524  002F6E  1177               	iorwf	(??_sqrtf+3)& (0+255),w,b
 12525  002F70  6FA0               	movwf	(sqrtf@ix+3)& (0+255),b
 12526                           
 12527                           ; BSR set to: 0
 12528  002F72  A195               	btfss	sqrtf@m& (0+255),0,b
 12529  002F74  D008               	goto	l1790
 12530                           
 12531                           ; BSR set to: 0
 12532  002F76  519D               	movf	sqrtf@ix& (0+255),w,b
 12533  002F78  279D               	addwf	sqrtf@ix& (0+255),f,b
 12534  002F7A  519E               	movf	(sqrtf@ix+1)& (0+255),w,b
 12535  002F7C  239E               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 12536  002F7E  519F               	movf	(sqrtf@ix+2)& (0+255),w,b
 12537  002F80  239F               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 12538  002F82  51A0               	movf	(sqrtf@ix+3)& (0+255),w,b
 12539  002F84  23A0               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 12540  002F86                     l1790:
 12541                           
 12542                           ; BSR set to: 0
 12543  002F86  3598               	rlcf	(sqrtf@m+3)& (0+255),w,b
 12544  002F88  3398               	rrcf	(sqrtf@m+3)& (0+255),f,b
 12545  002F8A  3397               	rrcf	(sqrtf@m+2)& (0+255),f,b
 12546  002F8C  3396               	rrcf	(sqrtf@m+1)& (0+255),f,b
 12547  002F8E  3395               	rrcf	sqrtf@m& (0+255),f,b
 12548  002F90  519D               	movf	sqrtf@ix& (0+255),w,b
 12549  002F92  279D               	addwf	sqrtf@ix& (0+255),f,b
 12550  002F94  519E               	movf	(sqrtf@ix+1)& (0+255),w,b
 12551  002F96  239E               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 12552  002F98  519F               	movf	(sqrtf@ix+2)& (0+255),w,b
 12553  002F9A  239F               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 12554  002F9C  51A0               	movf	(sqrtf@ix+3)& (0+255),w,b
 12555  002F9E  23A0               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 12556                           
 12557                           ; BSR set to: 0
 12558  002FA0  0E00               	movlw	0
 12559  002FA2  6F7D               	movwf	sqrtf@s& (0+255),b
 12560  002FA4  0E00               	movlw	0
 12561  002FA6  6F7E               	movwf	(sqrtf@s+1)& (0+255),b
 12562  002FA8  0E00               	movlw	0
 12563  002FAA  6F7F               	movwf	(sqrtf@s+2)& (0+255),b
 12564  002FAC  0E00               	movlw	0
 12565  002FAE  6F80               	movwf	(sqrtf@s+3)& (0+255),b
 12566  002FB0  C07D  F089         	movff	sqrtf@s,sqrtf@q
 12567  002FB4  C07E  F08A         	movff	sqrtf@s+1,sqrtf@q+1
 12568  002FB8  C07F  F08B         	movff	sqrtf@s+2,sqrtf@q+2
 12569  002FBC  C080  F08C         	movff	sqrtf@s+3,sqrtf@q+3
 12570                           
 12571                           ; BSR set to: 0
 12572  002FC0  0E00               	movlw	0
 12573  002FC2  6F99               	movwf	sqrtf@r& (0+255),b
 12574  002FC4  0E00               	movlw	0
 12575  002FC6  6F9A               	movwf	(sqrtf@r+1)& (0+255),b
 12576  002FC8  0E00               	movlw	0
 12577  002FCA  6F9B               	movwf	(sqrtf@r+2)& (0+255),b
 12578  002FCC  0E01               	movlw	1
 12579  002FCE  6F9C               	movwf	(sqrtf@r+3)& (0+255),b
 12580  002FD0  D043               	goto	l8657
 12581  002FD2                     l8651:
 12582                           
 12583                           ; BSR set to: 0
 12584  002FD2  5199               	movf	sqrtf@r& (0+255),w,b
 12585  002FD4  257D               	addwf	sqrtf@s& (0+255),w,b
 12586  002FD6  6F8D               	movwf	sqrtf@t& (0+255),b
 12587  002FD8  519A               	movf	(sqrtf@r+1)& (0+255),w,b
 12588  002FDA  217E               	addwfc	(sqrtf@s+1)& (0+255),w,b
 12589  002FDC  6F8E               	movwf	(sqrtf@t+1)& (0+255),b
 12590  002FDE  519B               	movf	(sqrtf@r+2)& (0+255),w,b
 12591  002FE0  217F               	addwfc	(sqrtf@s+2)& (0+255),w,b
 12592  002FE2  6F8F               	movwf	(sqrtf@t+2)& (0+255),b
 12593  002FE4  519C               	movf	(sqrtf@r+3)& (0+255),w,b
 12594  002FE6  2180               	addwfc	(sqrtf@s+3)& (0+255),w,b
 12595  002FE8  6F90               	movwf	(sqrtf@t+3)& (0+255),b
 12596  002FEA  518D               	movf	sqrtf@t& (0+255),w,b
 12597  002FEC  5D9D               	subwf	sqrtf@ix& (0+255),w,b
 12598  002FEE  518E               	movf	(sqrtf@t+1)& (0+255),w,b
 12599  002FF0  599E               	subwfb	(sqrtf@ix+1)& (0+255),w,b
 12600  002FF2  518F               	movf	(sqrtf@t+2)& (0+255),w,b
 12601  002FF4  599F               	subwfb	(sqrtf@ix+2)& (0+255),w,b
 12602  002FF6  51A0               	movf	(sqrtf@ix+3)& (0+255),w,b
 12603  002FF8  0A80               	xorlw	128
 12604  002FFA  6F74               	movwf	??_sqrtf& (0+255),b
 12605  002FFC  5190               	movf	(sqrtf@t+3)& (0+255),w,b
 12606  002FFE  0A80               	xorlw	128
 12607  003000  5974               	subwfb	??_sqrtf& (0+255),w,b
 12608  003002  A0D8               	btfss	status,0,c
 12609  003004  D01C               	goto	l1793
 12610                           
 12611                           ; BSR set to: 0
 12612  003006  5199               	movf	sqrtf@r& (0+255),w,b
 12613  003008  258D               	addwf	sqrtf@t& (0+255),w,b
 12614  00300A  6F7D               	movwf	sqrtf@s& (0+255),b
 12615  00300C  519A               	movf	(sqrtf@r+1)& (0+255),w,b
 12616  00300E  218E               	addwfc	(sqrtf@t+1)& (0+255),w,b
 12617  003010  6F7E               	movwf	(sqrtf@s+1)& (0+255),b
 12618  003012  519B               	movf	(sqrtf@r+2)& (0+255),w,b
 12619  003014  218F               	addwfc	(sqrtf@t+2)& (0+255),w,b
 12620  003016  6F7F               	movwf	(sqrtf@s+2)& (0+255),b
 12621  003018  519C               	movf	(sqrtf@r+3)& (0+255),w,b
 12622  00301A  2190               	addwfc	(sqrtf@t+3)& (0+255),w,b
 12623  00301C  6F80               	movwf	(sqrtf@s+3)& (0+255),b
 12624  00301E  518D               	movf	sqrtf@t& (0+255),w,b
 12625  003020  5F9D               	subwf	sqrtf@ix& (0+255),f,b
 12626  003022  518E               	movf	(sqrtf@t+1)& (0+255),w,b
 12627  003024  5B9E               	subwfb	(sqrtf@ix+1)& (0+255),f,b
 12628  003026  518F               	movf	(sqrtf@t+2)& (0+255),w,b
 12629  003028  5B9F               	subwfb	(sqrtf@ix+2)& (0+255),f,b
 12630  00302A  5190               	movf	(sqrtf@t+3)& (0+255),w,b
 12631  00302C  5BA0               	subwfb	(sqrtf@ix+3)& (0+255),f,b
 12632  00302E  5199               	movf	sqrtf@r& (0+255),w,b
 12633  003030  2789               	addwf	sqrtf@q& (0+255),f,b
 12634  003032  519A               	movf	(sqrtf@r+1)& (0+255),w,b
 12635  003034  238A               	addwfc	(sqrtf@q+1)& (0+255),f,b
 12636  003036  519B               	movf	(sqrtf@r+2)& (0+255),w,b
 12637  003038  238B               	addwfc	(sqrtf@q+2)& (0+255),f,b
 12638  00303A  519C               	movf	(sqrtf@r+3)& (0+255),w,b
 12639  00303C  238C               	addwfc	(sqrtf@q+3)& (0+255),f,b
 12640  00303E                     l1793:
 12641                           
 12642                           ; BSR set to: 0
 12643  00303E  519D               	movf	sqrtf@ix& (0+255),w,b
 12644  003040  279D               	addwf	sqrtf@ix& (0+255),f,b
 12645  003042  519E               	movf	(sqrtf@ix+1)& (0+255),w,b
 12646  003044  239E               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 12647  003046  519F               	movf	(sqrtf@ix+2)& (0+255),w,b
 12648  003048  239F               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 12649  00304A  51A0               	movf	(sqrtf@ix+3)& (0+255),w,b
 12650  00304C  23A0               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 12651                           
 12652                           ; BSR set to: 0
 12653  00304E  90D8               	bcf	status,0,c
 12654  003050  339C               	rrcf	(sqrtf@r+3)& (0+255),f,b
 12655  003052  339B               	rrcf	(sqrtf@r+2)& (0+255),f,b
 12656  003054  339A               	rrcf	(sqrtf@r+1)& (0+255),f,b
 12657  003056  3399               	rrcf	sqrtf@r& (0+255),f,b
 12658  003058                     l8657:
 12659                           
 12660                           ; BSR set to: 0
 12661  003058  5199               	movf	sqrtf@r& (0+255),w,b
 12662  00305A  119A               	iorwf	(sqrtf@r+1)& (0+255),w,b
 12663  00305C  119B               	iorwf	(sqrtf@r+2)& (0+255),w,b
 12664  00305E  119C               	iorwf	(sqrtf@r+3)& (0+255),w,b
 12665  003060  A4D8               	btfss	status,2,c
 12666  003062  D7B7               	goto	l8651
 12667                           
 12668                           ; BSR set to: 0
 12669  003064  519D               	movf	sqrtf@ix& (0+255),w,b
 12670  003066  119E               	iorwf	(sqrtf@ix+1)& (0+255),w,b
 12671  003068  119F               	iorwf	(sqrtf@ix+2)& (0+255),w,b
 12672  00306A  11A0               	iorwf	(sqrtf@ix+3)& (0+255),w,b
 12673  00306C  B4D8               	btfsc	status,2,c
 12674  00306E  D054               	goto	l1795
 12675                           
 12676                           ; BSR set to: 0
 12677  003070  0E00               	movlw	0
 12678  003072  6F91               	movwf	sqrtf@z& (0+255),b
 12679  003074  0E00               	movlw	0
 12680  003076  6F92               	movwf	(sqrtf@z+1)& (0+255),b
 12681  003078  0E80               	movlw	128
 12682  00307A  6F93               	movwf	(sqrtf@z+2)& (0+255),b
 12683  00307C  0E3F               	movlw	63
 12684  00307E  6F94               	movwf	(sqrtf@z+3)& (0+255),b
 12685                           
 12686                           ; BSR set to: 0
 12687  003080  C091  F068         	movff	sqrtf@z,___flge@ff1
 12688  003084  C092  F069         	movff	sqrtf@z+1,___flge@ff1+1
 12689  003088  C093  F06A         	movff	sqrtf@z+2,___flge@ff1+2
 12690  00308C  C094  F06B         	movff	sqrtf@z+3,___flge@ff1+3
 12691  003090  0E00               	movlw	0
 12692  003092  6F6C               	movwf	___flge@ff2& (0+255),b
 12693  003094  0E00               	movlw	0
 12694  003096  6F6D               	movwf	(___flge@ff2+1)& (0+255),b
 12695  003098  0E80               	movlw	128
 12696  00309A  6F6E               	movwf	(___flge@ff2+2)& (0+255),b
 12697  00309C  0E3F               	movlw	63
 12698  00309E  6F6F               	movwf	(___flge@ff2+3)& (0+255),b
 12699  0030A0  EC07  F026         	call	___flge	;wreg free
 12700  0030A4  0100               	movlb	0	; () banked
 12701  0030A6  A0D8               	btfss	status,0,c
 12702  0030A8  D037               	goto	l1795
 12703                           
 12704                           ; BSR set to: 0
 12705  0030AA  0E00               	movlw	0
 12706  0030AC  6F91               	movwf	sqrtf@z& (0+255),b
 12707  0030AE  0E00               	movlw	0
 12708  0030B0  6F92               	movwf	(sqrtf@z+1)& (0+255),b
 12709  0030B2  0E80               	movlw	128
 12710  0030B4  6F93               	movwf	(sqrtf@z+2)& (0+255),b
 12711  0030B6  0E3F               	movlw	63
 12712  0030B8  6F94               	movwf	(sqrtf@z+3)& (0+255),b
 12713                           
 12714                           ; BSR set to: 0
 12715  0030BA  0E00               	movlw	0
 12716  0030BC  6F68               	movwf	___flge@ff1& (0+255),b
 12717  0030BE  0E00               	movlw	0
 12718  0030C0  6F69               	movwf	(___flge@ff1+1)& (0+255),b
 12719  0030C2  0E80               	movlw	128
 12720  0030C4  6F6A               	movwf	(___flge@ff1+2)& (0+255),b
 12721  0030C6  0E3F               	movlw	63
 12722  0030C8  6F6B               	movwf	(___flge@ff1+3)& (0+255),b
 12723  0030CA  C091  F06C         	movff	sqrtf@z,___flge@ff2
 12724  0030CE  C092  F06D         	movff	sqrtf@z+1,___flge@ff2+1
 12725  0030D2  C093  F06E         	movff	sqrtf@z+2,___flge@ff2+2
 12726  0030D6  C094  F06F         	movff	sqrtf@z+3,___flge@ff2+3
 12727  0030DA  EC07  F026         	call	___flge	;wreg free
 12728  0030DE  0100               	movlb	0	; () banked
 12729  0030E0  B0D8               	btfsc	status,0,c
 12730  0030E2  D006               	goto	l8671
 12731                           
 12732                           ; BSR set to: 0
 12733  0030E4  0E02               	movlw	2
 12734  0030E6  2789               	addwf	sqrtf@q& (0+255),f,b
 12735  0030E8  0E00               	movlw	0
 12736  0030EA  238A               	addwfc	(sqrtf@q+1)& (0+255),f,b
 12737  0030EC  238B               	addwfc	(sqrtf@q+2)& (0+255),f,b
 12738  0030EE  D013               	goto	L6
 12739  0030F0                     l8671:
 12740                           
 12741                           ; BSR set to: 0
 12742  0030F0  0E01               	movlw	1
 12743  0030F2  1589               	andwf	sqrtf@q& (0+255),w,b
 12744  0030F4  6F74               	movwf	??_sqrtf& (0+255),b
 12745  0030F6  0E00               	movlw	0
 12746  0030F8  158A               	andwf	(sqrtf@q+1)& (0+255),w,b
 12747  0030FA  6F75               	movwf	(??_sqrtf+1)& (0+255),b
 12748  0030FC  0E00               	movlw	0
 12749  0030FE  158B               	andwf	(sqrtf@q+2)& (0+255),w,b
 12750  003100  6F76               	movwf	(??_sqrtf+2)& (0+255),b
 12751  003102  0E00               	movlw	0
 12752  003104  158C               	andwf	(sqrtf@q+3)& (0+255),w,b
 12753  003106  6F77               	movwf	(??_sqrtf+3)& (0+255),b
 12754  003108  5174               	movf	??_sqrtf& (0+255),w,b
 12755  00310A  2789               	addwf	sqrtf@q& (0+255),f,b
 12756  00310C  5175               	movf	(??_sqrtf+1)& (0+255),w,b
 12757  00310E  238A               	addwfc	(sqrtf@q+1)& (0+255),f,b
 12758  003110  5176               	movf	(??_sqrtf+2)& (0+255),w,b
 12759  003112  238B               	addwfc	(sqrtf@q+2)& (0+255),f,b
 12760  003114  5177               	movf	(??_sqrtf+3)& (0+255),w,b
 12761  003116                     L6:
 12762  003116  238C               	addwfc	(sqrtf@q+3)& (0+255),f,b
 12763  003118                     l1795:
 12764                           
 12765                           ; BSR set to: 0
 12766  003118  C089  F074         	movff	sqrtf@q,??_sqrtf
 12767  00311C  C08A  F075         	movff	sqrtf@q+1,??_sqrtf+1
 12768  003120  C08B  F076         	movff	sqrtf@q+2,??_sqrtf+2
 12769  003124  C08C  F077         	movff	sqrtf@q+3,??_sqrtf+3
 12770  003128  3577               	rlcf	(??_sqrtf+3)& (0+255),w,b
 12771  00312A  3377               	rrcf	(??_sqrtf+3)& (0+255),f,b
 12772  00312C  3376               	rrcf	(??_sqrtf+2)& (0+255),f,b
 12773  00312E  3375               	rrcf	(??_sqrtf+1)& (0+255),f,b
 12774  003130  3374               	rrcf	??_sqrtf& (0+255),f,b
 12775  003132  0E00               	movlw	0
 12776  003134  2574               	addwf	??_sqrtf& (0+255),w,b
 12777  003136  6F9D               	movwf	sqrtf@ix& (0+255),b
 12778  003138  0E00               	movlw	0
 12779  00313A  2175               	addwfc	(??_sqrtf+1)& (0+255),w,b
 12780  00313C  6F9E               	movwf	(sqrtf@ix+1)& (0+255),b
 12781  00313E  0E00               	movlw	0
 12782  003140  2176               	addwfc	(??_sqrtf+2)& (0+255),w,b
 12783  003142  6F9F               	movwf	(sqrtf@ix+2)& (0+255),b
 12784  003144  0E3F               	movlw	63
 12785  003146  2177               	addwfc	(??_sqrtf+3)& (0+255),w,b
 12786  003148  6FA0               	movwf	(sqrtf@ix+3)& (0+255),b
 12787  00314A  C095  F074         	movff	sqrtf@m,??_sqrtf
 12788  00314E  C096  F075         	movff	sqrtf@m+1,??_sqrtf+1
 12789  003152  C097  F076         	movff	sqrtf@m+2,??_sqrtf+2
 12790  003156  C098  F077         	movff	sqrtf@m+3,??_sqrtf+3
 12791  00315A  0E17               	movlw	23
 12792  00315C                     u9425:
 12793  00315C  90D8               	bcf	status,0,c
 12794  00315E  3774               	rlcf	??_sqrtf& (0+255),f,b
 12795  003160  3775               	rlcf	(??_sqrtf+1)& (0+255),f,b
 12796  003162  3776               	rlcf	(??_sqrtf+2)& (0+255),f,b
 12797  003164  3777               	rlcf	(??_sqrtf+3)& (0+255),f,b
 12798  003166  2EE8               	decfsz	wreg,f,c
 12799  003168  D7F9               	goto	u9425
 12800  00316A  5174               	movf	??_sqrtf& (0+255),w,b
 12801  00316C  279D               	addwf	sqrtf@ix& (0+255),f,b
 12802  00316E  5175               	movf	(??_sqrtf+1)& (0+255),w,b
 12803  003170  239E               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 12804  003172  5176               	movf	(??_sqrtf+2)& (0+255),w,b
 12805  003174  239F               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 12806  003176  5177               	movf	(??_sqrtf+3)& (0+255),w,b
 12807  003178  23A0               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 12808                           
 12809                           ; BSR set to: 0
 12810  00317A  C09D  F085         	movff	sqrtf@ix,sqrtf@__xc8_float_word
 12811  00317E  C09E  F086         	movff	sqrtf@ix+1,sqrtf@__xc8_float_word+1
 12812  003182  C09F  F087         	movff	sqrtf@ix+2,sqrtf@__xc8_float_word+2
 12813  003186  C0A0  F088         	movff	sqrtf@ix+3,sqrtf@__xc8_float_word+3
 12814                           
 12815                           ; BSR set to: 0
 12816  00318A  C085  F091         	movff	sqrtf@__xc8_float_word,sqrtf@z
 12817  00318E  C086  F092         	movff	sqrtf@__xc8_float_word+1,sqrtf@z+1
 12818  003192  C087  F093         	movff	sqrtf@__xc8_float_word+2,sqrtf@z+2
 12819  003196  C088  F094         	movff	sqrtf@__xc8_float_word+3,sqrtf@z+3
 12820                           
 12821                           ; BSR set to: 0
 12822  00319A  C091  F070         	movff	sqrtf@z,?_sqrtf
 12823  00319E  C092  F071         	movff	sqrtf@z+1,?_sqrtf+1
 12824  0031A2  C093  F072         	movff	sqrtf@z+2,?_sqrtf+2
 12825  0031A6  C094  F073         	movff	sqrtf@z+3,?_sqrtf+3
 12826  0031AA  0012               	return		;funcret
 12827  0031AC                     __end_of_sqrtf:
 12828                           	opt callstack 0
 12829                           
 12830 ;; *************** function _nanf *****************
 12831 ;; Defined at:
 12832 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nanf.c"
 12833 ;; Parameters:    Size  Location     Type
 12834 ;;  s               2   11[COMRAM] PTR const unsigned char 
 12835 ;;		 -> STR_32(1), 
 12836 ;; Auto vars:     Size  Location     Type
 12837 ;;  u               4   15[COMRAM] struct .
 12838 ;; Return value:  Size  Location     Type
 12839 ;;                  4   11[COMRAM] float 
 12840 ;; Registers used:
 12841 ;;		wreg, status,2
 12842 ;; Tracked objects:
 12843 ;;		On entry : 0/0
 12844 ;;		On exit  : 0/0
 12845 ;;		Unchanged: 0/0
 12846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12847 ;;      Params:         4       0       0       0       0       0       0       0       0
 12848 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12849 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12850 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12851 ;;Total ram usage:        8 bytes
 12852 ;; Hardware stack levels used:    1
 12853 ;; Hardware stack levels required when called:    7
 12854 ;; This function calls:
 12855 ;;		Nothing
 12856 ;; This function is called by:
 12857 ;;		_sqrtf
 12858 ;; This function uses a non-reentrant model
 12859 ;;
 12860                           
 12861                           	psect	text52
 12862  0059FE                     __ptext52:
 12863                           	opt callstack 0
 12864  0059FE                     _nanf:
 12865                           	opt callstack 19
 12866                           
 12867                           ;incstack = 0
 12868  0059FE  0EFF               	movlw	255
 12869  005A00  6E10               	movwf	nanf@u,c
 12870  005A02  0EFF               	movlw	255
 12871  005A04  6E11               	movwf	nanf@u+1,c
 12872  005A06  0EFF               	movlw	255
 12873  005A08  6E12               	movwf	nanf@u+2,c
 12874  005A0A  0E7F               	movlw	127
 12875  005A0C  6E13               	movwf	nanf@u+3,c
 12876  005A0E  C010  F00C         	movff	nanf@u,?_nanf
 12877  005A12  C011  F00D         	movff	nanf@u+1,?_nanf+1
 12878  005A16  C012  F00E         	movff	nanf@u+2,?_nanf+2
 12879  005A1A  C013  F00F         	movff	nanf@u+3,?_nanf+3
 12880  005A1E  0012               	return		;funcret
 12881  005A20                     __end_of_nanf:
 12882                           	opt callstack 0
 12883                           
 12884 ;; *************** function ___flge *****************
 12885 ;; Defined at:
 12886 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 12887 ;; Parameters:    Size  Location     Type
 12888 ;;  ff1             4    8[BANK0 ] float 
 12889 ;;  ff2             4   12[BANK0 ] float 
 12890 ;; Auto vars:     Size  Location     Type
 12891 ;;		None
 12892 ;; Return value:  Size  Location     Type
 12893 ;;		None               void
 12894 ;; Registers used:
 12895 ;;		wreg, status,2, status,0
 12896 ;; Tracked objects:
 12897 ;;		On entry : 0/0
 12898 ;;		On exit  : 0/0
 12899 ;;		Unchanged: 0/0
 12900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12901 ;;      Params:         0       8       0       0       0       0       0       0       0
 12902 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12903 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12904 ;;      Totals:         4       8       0       0       0       0       0       0       0
 12905 ;;Total ram usage:       12 bytes
 12906 ;; Hardware stack levels used:    1
 12907 ;; Hardware stack levels required when called:    7
 12908 ;; This function calls:
 12909 ;;		Nothing
 12910 ;; This function is called by:
 12911 ;;		_powf
 12912 ;;		_sqrtf
 12913 ;; This function uses a non-reentrant model
 12914 ;;
 12915                           
 12916                           	psect	text53
 12917  004C0E                     __ptext53:
 12918                           	opt callstack 0
 12919  004C0E                     ___flge:
 12920                           	opt callstack 19
 12921                           
 12922                           ;incstack = 0
 12923  004C0E  0E00               	movlw	0
 12924  004C10  0100               	movlb	0	; () banked
 12925  004C12  1568               	andwf	___flge@ff1& (0+255),w,b
 12926  004C14  6E35               	movwf	??___flge& (0+255),c
 12927  004C16  0E00               	movlw	0
 12928  004C18  1569               	andwf	(___flge@ff1+1)& (0+255),w,b
 12929  004C1A  6E36               	movwf	(??___flge+1)& (0+255),c
 12930  004C1C  0E80               	movlw	128
 12931  004C1E  156A               	andwf	(___flge@ff1+2)& (0+255),w,b
 12932  004C20  6E37               	movwf	(??___flge+2)& (0+255),c
 12933  004C22  0E7F               	movlw	127
 12934  004C24  156B               	andwf	(___flge@ff1+3)& (0+255),w,b
 12935  004C26  6E38               	movwf	(??___flge+3)& (0+255),c
 12936  004C28  5035               	movf	??___flge,w,c
 12937  004C2A  1036               	iorwf	??___flge+1,w,c
 12938  004C2C  1037               	iorwf	??___flge+2,w,c
 12939  004C2E  1038               	iorwf	??___flge+3,w,c
 12940  004C30  A4D8               	btfss	status,2,c
 12941  004C32  D008               	goto	l8443
 12942                           
 12943                           ; BSR set to: 0
 12944  004C34  0E00               	movlw	0
 12945  004C36  6F68               	movwf	___flge@ff1& (0+255),b
 12946  004C38  0E00               	movlw	0
 12947  004C3A  6F69               	movwf	(___flge@ff1+1)& (0+255),b
 12948  004C3C  0E00               	movlw	0
 12949  004C3E  6F6A               	movwf	(___flge@ff1+2)& (0+255),b
 12950  004C40  0E00               	movlw	0
 12951  004C42  6F6B               	movwf	(___flge@ff1+3)& (0+255),b
 12952  004C44                     l8443:
 12953                           
 12954                           ; BSR set to: 0
 12955  004C44  0E00               	movlw	0
 12956  004C46  156C               	andwf	___flge@ff2& (0+255),w,b
 12957  004C48  6E35               	movwf	??___flge& (0+255),c
 12958  004C4A  0E00               	movlw	0
 12959  004C4C  156D               	andwf	(___flge@ff2+1)& (0+255),w,b
 12960  004C4E  6E36               	movwf	(??___flge+1)& (0+255),c
 12961  004C50  0E80               	movlw	128
 12962  004C52  156E               	andwf	(___flge@ff2+2)& (0+255),w,b
 12963  004C54  6E37               	movwf	(??___flge+2)& (0+255),c
 12964  004C56  0E7F               	movlw	127
 12965  004C58  156F               	andwf	(___flge@ff2+3)& (0+255),w,b
 12966  004C5A  6E38               	movwf	(??___flge+3)& (0+255),c
 12967  004C5C  5035               	movf	??___flge,w,c
 12968  004C5E  1036               	iorwf	??___flge+1,w,c
 12969  004C60  1037               	iorwf	??___flge+2,w,c
 12970  004C62  1038               	iorwf	??___flge+3,w,c
 12971  004C64  A4D8               	btfss	status,2,c
 12972  004C66  D008               	goto	l8447
 12973                           
 12974                           ; BSR set to: 0
 12975  004C68  0E00               	movlw	0
 12976  004C6A  6F6C               	movwf	___flge@ff2& (0+255),b
 12977  004C6C  0E00               	movlw	0
 12978  004C6E  6F6D               	movwf	(___flge@ff2+1)& (0+255),b
 12979  004C70  0E00               	movlw	0
 12980  004C72  6F6E               	movwf	(___flge@ff2+2)& (0+255),b
 12981  004C74  0E00               	movlw	0
 12982  004C76  6F6F               	movwf	(___flge@ff2+3)& (0+255),b
 12983  004C78                     l8447:
 12984                           
 12985                           ; BSR set to: 0
 12986  004C78  AF6B               	btfss	(___flge@ff1+3)& (0+255),7,b
 12987  004C7A  D009               	goto	l8451
 12988                           
 12989                           ; BSR set to: 0
 12990  004C7C  6D68               	negf	___flge@ff1& (0+255),b
 12991  004C7E  1F69               	comf	(___flge@ff1+1)& (0+255),f,b
 12992  004C80  B0D8               	btfsc	status,0,c
 12993  004C82  2B69               	incf	(___flge@ff1+1)& (0+255),f,b
 12994  004C84  1F6A               	comf	(___flge@ff1+2)& (0+255),f,b
 12995  004C86  B0D8               	btfsc	status,0,c
 12996  004C88  2B6A               	incf	(___flge@ff1+2)& (0+255),f,b
 12997  004C8A  0E80               	movlw	128
 12998  004C8C  576B               	subfwb	(___flge@ff1+3)& (0+255),f,b
 12999  004C8E                     l8451:
 13000                           
 13001                           ; BSR set to: 0
 13002  004C8E  AF6F               	btfss	(___flge@ff2+3)& (0+255),7,b
 13003  004C90  D009               	goto	l1060
 13004                           
 13005                           ; BSR set to: 0
 13006  004C92  6D6C               	negf	___flge@ff2& (0+255),b
 13007  004C94  1F6D               	comf	(___flge@ff2+1)& (0+255),f,b
 13008  004C96  B0D8               	btfsc	status,0,c
 13009  004C98  2B6D               	incf	(___flge@ff2+1)& (0+255),f,b
 13010  004C9A  1F6E               	comf	(___flge@ff2+2)& (0+255),f,b
 13011  004C9C  B0D8               	btfsc	status,0,c
 13012  004C9E  2B6E               	incf	(___flge@ff2+2)& (0+255),f,b
 13013  004CA0  0E80               	movlw	128
 13014  004CA2  576F               	subfwb	(___flge@ff2+3)& (0+255),f,b
 13015  004CA4                     l1060:
 13016                           
 13017                           ; BSR set to: 0
 13018  004CA4  0E00               	movlw	0
 13019  004CA6  1B68               	xorwf	___flge@ff1& (0+255),f,b
 13020  004CA8  0E00               	movlw	0
 13021  004CAA  1B69               	xorwf	(___flge@ff1+1)& (0+255),f,b
 13022  004CAC  0E00               	movlw	0
 13023  004CAE  1B6A               	xorwf	(___flge@ff1+2)& (0+255),f,b
 13024  004CB0  0E80               	movlw	128
 13025  004CB2  1B6B               	xorwf	(___flge@ff1+3)& (0+255),f,b
 13026  004CB4  0E00               	movlw	0
 13027  004CB6  1B6C               	xorwf	___flge@ff2& (0+255),f,b
 13028  004CB8  0E00               	movlw	0
 13029  004CBA  1B6D               	xorwf	(___flge@ff2+1)& (0+255),f,b
 13030  004CBC  0E00               	movlw	0
 13031  004CBE  1B6E               	xorwf	(___flge@ff2+2)& (0+255),f,b
 13032  004CC0  0E80               	movlw	128
 13033  004CC2  1B6F               	xorwf	(___flge@ff2+3)& (0+255),f,b
 13034  004CC4  516C               	movf	___flge@ff2& (0+255),w,b
 13035  004CC6  5D68               	subwf	___flge@ff1& (0+255),w,b
 13036  004CC8  516D               	movf	(___flge@ff2+1)& (0+255),w,b
 13037  004CCA  5969               	subwfb	(___flge@ff1+1)& (0+255),w,b
 13038  004CCC  516E               	movf	(___flge@ff2+2)& (0+255),w,b
 13039  004CCE  596A               	subwfb	(___flge@ff1+2)& (0+255),w,b
 13040  004CD0  516F               	movf	(___flge@ff2+3)& (0+255),w,b
 13041  004CD2  596B               	subwfb	(___flge@ff1+3)& (0+255),w,b
 13042  004CD4  B0D8               	btfsc	status,0,c
 13043  004CD6  D002               	goto	l8457
 13044                           
 13045                           ; BSR set to: 0
 13046  004CD8  90D8               	bcf	status,0,c
 13047  004CDA  0012               	return	
 13048  004CDC                     l8457:
 13049                           
 13050                           ; BSR set to: 0
 13051  004CDC  80D8               	bsf	status,0,c
 13052                           
 13053                           ; BSR set to: 0
 13054  004CDE  0012               	return		;funcret
 13055  004CE0                     __end_of___flge:
 13056                           	opt callstack 0
 13057                           
 13058 ;; *************** function _scalbnf *****************
 13059 ;; Defined at:
 13060 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\scalbnf.c"
 13061 ;; Parameters:    Size  Location     Type
 13062 ;;  x               4   52[COMRAM] float 
 13063 ;;  n               2   56[COMRAM] int 
 13064 ;; Auto vars:     Size  Location     Type
 13065 ;;  y               4    8[BANK0 ] float 
 13066 ;;  u               4    4[BANK0 ] struct .
 13067 ;; Return value:  Size  Location     Type
 13068 ;;                  4   52[COMRAM] float 
 13069 ;; Registers used:
 13070 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13071 ;; Tracked objects:
 13072 ;;		On entry : 0/0
 13073 ;;		On exit  : 0/0
 13074 ;;		Unchanged: 0/0
 13075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13076 ;;      Params:         6       0       0       0       0       0       0       0       0
 13077 ;;      Locals:         0       8       0       0       0       0       0       0       0
 13078 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13079 ;;      Totals:         6      12       0       0       0       0       0       0       0
 13080 ;;Total ram usage:       18 bytes
 13081 ;; Hardware stack levels used:    1
 13082 ;; Hardware stack levels required when called:    8
 13083 ;; This function calls:
 13084 ;;		___flmul
 13085 ;; This function is called by:
 13086 ;;		_powf
 13087 ;; This function uses a non-reentrant model
 13088 ;;
 13089                           
 13090                           	psect	text54
 13091  0040C2                     __ptext54:
 13092                           	opt callstack 0
 13093  0040C2                     _scalbnf:
 13094                           	opt callstack 19
 13095                           
 13096                           ; BSR set to: 0
 13097                           ;incstack = 0
 13098  0040C2  C035  F068         	movff	scalbnf@x,scalbnf@y
 13099  0040C6  C036  F069         	movff	scalbnf@x+1,scalbnf@y+1
 13100  0040CA  C037  F06A         	movff	scalbnf@x+2,scalbnf@y+2
 13101  0040CE  C038  F06B         	movff	scalbnf@x+3,scalbnf@y+3
 13102  0040D2  BE3A               	btfsc	scalbnf@n+1,7,c
 13103  0040D4  D056               	goto	l5299
 13104  0040D6  503A               	movf	scalbnf@n+1,w,c
 13105  0040D8  E104               	bnz	u5160
 13106  0040DA  0E80               	movlw	128
 13107  0040DC  5C39               	subwf	scalbnf@n,w,c
 13108  0040DE  A0D8               	btfss	status,0,c
 13109  0040E0  D050               	goto	l5299
 13110  0040E2                     u5160:
 13111  0040E2  C068  F01C         	movff	scalbnf@y,___flmul@b
 13112  0040E6  C069  F01D         	movff	scalbnf@y+1,___flmul@b+1
 13113  0040EA  C06A  F01E         	movff	scalbnf@y+2,___flmul@b+2
 13114  0040EE  C06B  F01F         	movff	scalbnf@y+3,___flmul@b+3
 13115  0040F2  0E00               	movlw	0
 13116  0040F4  6E20               	movwf	___flmul@a,c
 13117  0040F6  0E00               	movlw	0
 13118  0040F8  6E21               	movwf	___flmul@a+1,c
 13119  0040FA  0E00               	movlw	0
 13120  0040FC  6E22               	movwf	___flmul@a+2,c
 13121  0040FE  0E7F               	movlw	127
 13122  004100  6E23               	movwf	___flmul@a+3,c
 13123  004102  ECC9  F01A         	call	___flmul	;wreg free
 13124  004106  C01C  F068         	movff	?___flmul,scalbnf@y
 13125  00410A  C01D  F069         	movff	?___flmul+1,scalbnf@y+1
 13126  00410E  C01E  F06A         	movff	?___flmul+2,scalbnf@y+2
 13127  004112  C01F  F06B         	movff	?___flmul+3,scalbnf@y+3
 13128  004116  0E81               	movlw	129
 13129  004118  2639               	addwf	scalbnf@n,f,c
 13130  00411A  0EFF               	movlw	255
 13131  00411C  223A               	addwfc	scalbnf@n+1,f,c
 13132  00411E  BE3A               	btfsc	scalbnf@n+1,7,c
 13133  004120  D088               	goto	l5315
 13134  004122  503A               	movf	scalbnf@n+1,w,c
 13135  004124  E104               	bnz	u5170
 13136  004126  0E80               	movlw	128
 13137  004128  5C39               	subwf	scalbnf@n,w,c
 13138  00412A  A0D8               	btfss	status,0,c
 13139  00412C  D082               	goto	l5315
 13140  00412E                     u5170:
 13141  00412E  C068  F01C         	movff	scalbnf@y,___flmul@b
 13142  004132  C069  F01D         	movff	scalbnf@y+1,___flmul@b+1
 13143  004136  C06A  F01E         	movff	scalbnf@y+2,___flmul@b+2
 13144  00413A  C06B  F01F         	movff	scalbnf@y+3,___flmul@b+3
 13145  00413E  0E00               	movlw	0
 13146  004140  6E20               	movwf	___flmul@a,c
 13147  004142  0E00               	movlw	0
 13148  004144  6E21               	movwf	___flmul@a+1,c
 13149  004146  0E00               	movlw	0
 13150  004148  6E22               	movwf	___flmul@a+2,c
 13151  00414A  0E7F               	movlw	127
 13152  00414C  6E23               	movwf	___flmul@a+3,c
 13153  00414E  ECC9  F01A         	call	___flmul	;wreg free
 13154  004152  C01C  F068         	movff	?___flmul,scalbnf@y
 13155  004156  C01D  F069         	movff	?___flmul+1,scalbnf@y+1
 13156  00415A  C01E  F06A         	movff	?___flmul+2,scalbnf@y+2
 13157  00415E  C01F  F06B         	movff	?___flmul+3,scalbnf@y+3
 13158  004162  0E81               	movlw	129
 13159  004164  2639               	addwf	scalbnf@n,f,c
 13160  004166  0EFF               	movlw	255
 13161  004168  223A               	addwfc	scalbnf@n+1,f,c
 13162  00416A  BE3A               	btfsc	scalbnf@n+1,7,c
 13163  00416C  D062               	goto	l5315
 13164  00416E  503A               	movf	scalbnf@n+1,w,c
 13165  004170  E104               	bnz	u5180
 13166  004172  0E80               	movlw	128
 13167  004174  5C39               	subwf	scalbnf@n,w,c
 13168  004176  A0D8               	btfss	status,0,c
 13169  004178  D05C               	goto	l5315
 13170  00417A                     u5180:
 13171  00417A  0E00               	movlw	0
 13172  00417C  6E3A               	movwf	scalbnf@n+1,c
 13173  00417E  0E7F               	movlw	127
 13174  004180  D057               	goto	L7
 13175  004182                     l5299:
 13176  004182  AE3A               	btfss	scalbnf@n+1,7,c
 13177  004184  D056               	goto	l5315
 13178  004186  0E82               	movlw	130
 13179  004188  5C39               	subwf	scalbnf@n,w,c
 13180  00418A  0EFF               	movlw	255
 13181  00418C  583A               	subwfb	scalbnf@n+1,w,c
 13182  00418E  B0D8               	btfsc	status,0,c
 13183  004190  D050               	goto	l5315
 13184  004192  C068  F01C         	movff	scalbnf@y,___flmul@b
 13185  004196  C069  F01D         	movff	scalbnf@y+1,___flmul@b+1
 13186  00419A  C06A  F01E         	movff	scalbnf@y+2,___flmul@b+2
 13187  00419E  C06B  F01F         	movff	scalbnf@y+3,___flmul@b+3
 13188  0041A2  0E00               	movlw	0
 13189  0041A4  6E20               	movwf	___flmul@a,c
 13190  0041A6  0E00               	movlw	0
 13191  0041A8  6E21               	movwf	___flmul@a+1,c
 13192  0041AA  0E80               	movlw	128
 13193  0041AC  6E22               	movwf	___flmul@a+2,c
 13194  0041AE  0E0C               	movlw	12
 13195  0041B0  6E23               	movwf	___flmul@a+3,c
 13196  0041B2  ECC9  F01A         	call	___flmul	;wreg free
 13197  0041B6  C01C  F068         	movff	?___flmul,scalbnf@y
 13198  0041BA  C01D  F069         	movff	?___flmul+1,scalbnf@y+1
 13199  0041BE  C01E  F06A         	movff	?___flmul+2,scalbnf@y+2
 13200  0041C2  C01F  F06B         	movff	?___flmul+3,scalbnf@y+3
 13201  0041C6  0E66               	movlw	102
 13202  0041C8  2639               	addwf	scalbnf@n,f,c
 13203  0041CA  0E00               	movlw	0
 13204  0041CC  223A               	addwfc	scalbnf@n+1,f,c
 13205  0041CE  AE3A               	btfss	scalbnf@n+1,7,c
 13206  0041D0  D030               	goto	l5315
 13207  0041D2  0E82               	movlw	130
 13208  0041D4  5C39               	subwf	scalbnf@n,w,c
 13209  0041D6  0EFF               	movlw	255
 13210  0041D8  583A               	subwfb	scalbnf@n+1,w,c
 13211  0041DA  B0D8               	btfsc	status,0,c
 13212  0041DC  D02A               	goto	l5315
 13213  0041DE  C068  F01C         	movff	scalbnf@y,___flmul@b
 13214  0041E2  C069  F01D         	movff	scalbnf@y+1,___flmul@b+1
 13215  0041E6  C06A  F01E         	movff	scalbnf@y+2,___flmul@b+2
 13216  0041EA  C06B  F01F         	movff	scalbnf@y+3,___flmul@b+3
 13217  0041EE  0E00               	movlw	0
 13218  0041F0  6E20               	movwf	___flmul@a,c
 13219  0041F2  0E00               	movlw	0
 13220  0041F4  6E21               	movwf	___flmul@a+1,c
 13221  0041F6  0E80               	movlw	128
 13222  0041F8  6E22               	movwf	___flmul@a+2,c
 13223  0041FA  0E0C               	movlw	12
 13224  0041FC  6E23               	movwf	___flmul@a+3,c
 13225  0041FE  ECC9  F01A         	call	___flmul	;wreg free
 13226  004202  C01C  F068         	movff	?___flmul,scalbnf@y
 13227  004206  C01D  F069         	movff	?___flmul+1,scalbnf@y+1
 13228  00420A  C01E  F06A         	movff	?___flmul+2,scalbnf@y+2
 13229  00420E  C01F  F06B         	movff	?___flmul+3,scalbnf@y+3
 13230  004212  0E66               	movlw	102
 13231  004214  2639               	addwf	scalbnf@n,f,c
 13232  004216  0E00               	movlw	0
 13233  004218  223A               	addwfc	scalbnf@n+1,f,c
 13234  00421A  AE3A               	btfss	scalbnf@n+1,7,c
 13235  00421C  D00A               	goto	l5315
 13236  00421E  0E82               	movlw	130
 13237  004220  5C39               	subwf	scalbnf@n,w,c
 13238  004222  0EFF               	movlw	255
 13239  004224  583A               	subwfb	scalbnf@n+1,w,c
 13240  004226  B0D8               	btfsc	status,0,c
 13241  004228  D004               	goto	l5315
 13242  00422A  0EFF               	movlw	255
 13243  00422C  6E3A               	movwf	scalbnf@n+1,c
 13244  00422E  0E82               	movlw	130
 13245  004230                     L7:
 13246  004230  6E39               	movwf	scalbnf@n,c
 13247  004232                     l5315:
 13248  004232  0E7F               	movlw	127
 13249  004234  2439               	addwf	scalbnf@n,w,c
 13250  004236  0100               	movlb	0	; () banked
 13251  004238  6F60               	movwf	??_scalbnf& (0+255),b
 13252  00423A  0E00               	movlw	0
 13253  00423C  203A               	addwfc	scalbnf@n+1,w,c
 13254  00423E  6F61               	movwf	(??_scalbnf+1)& (0+255),b
 13255  004240  6B62               	clrf	(??_scalbnf+2)& (0+255),b
 13256  004242  6B63               	clrf	(??_scalbnf+3)& (0+255),b
 13257  004244  0E17               	movlw	23
 13258  004246                     u5225:
 13259  004246  90D8               	bcf	status,0,c
 13260  004248  3760               	rlcf	??_scalbnf& (0+255),f,b
 13261  00424A  3761               	rlcf	(??_scalbnf+1)& (0+255),f,b
 13262  00424C  3762               	rlcf	(??_scalbnf+2)& (0+255),f,b
 13263  00424E  3763               	rlcf	(??_scalbnf+3)& (0+255),f,b
 13264  004250  2EE8               	decfsz	wreg,f,c
 13265  004252  D7F9               	goto	u5225
 13266  004254  C060  F064         	movff	??_scalbnf,scalbnf@u
 13267  004258  C061  F065         	movff	??_scalbnf+1,scalbnf@u+1
 13268  00425C  C062  F066         	movff	??_scalbnf+2,scalbnf@u+2
 13269  004260  C063  F067         	movff	??_scalbnf+3,scalbnf@u+3
 13270                           
 13271                           ; BSR set to: 0
 13272  004264  C064  F01C         	movff	scalbnf@u,___flmul@b
 13273  004268  C065  F01D         	movff	scalbnf@u+1,___flmul@b+1
 13274  00426C  C066  F01E         	movff	scalbnf@u+2,___flmul@b+2
 13275  004270  C067  F01F         	movff	scalbnf@u+3,___flmul@b+3
 13276  004274  C068  F020         	movff	scalbnf@y,___flmul@a
 13277  004278  C069  F021         	movff	scalbnf@y+1,___flmul@a+1
 13278  00427C  C06A  F022         	movff	scalbnf@y+2,___flmul@a+2
 13279  004280  C06B  F023         	movff	scalbnf@y+3,___flmul@a+3
 13280  004284  ECC9  F01A         	call	___flmul	;wreg free
 13281  004288  C01C  F035         	movff	?___flmul,scalbnf@x
 13282  00428C  C01D  F036         	movff	?___flmul+1,scalbnf@x+1
 13283  004290  C01E  F037         	movff	?___flmul+2,scalbnf@x+2
 13284  004294  C01F  F038         	movff	?___flmul+3,scalbnf@x+3
 13285  004298  C035  F035         	movff	scalbnf@x,?_scalbnf
 13286  00429C  C036  F036         	movff	scalbnf@x+1,?_scalbnf+1
 13287  0042A0  C037  F037         	movff	scalbnf@x+2,?_scalbnf+2
 13288  0042A4  C038  F038         	movff	scalbnf@x+3,?_scalbnf+3
 13289  0042A8  0012               	return		;funcret
 13290  0042AA                     __end_of_scalbnf:
 13291                           	opt callstack 0
 13292                           
 13293 ;; *************** function ___flmul *****************
 13294 ;; Defined at:
 13295 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 13296 ;; Parameters:    Size  Location     Type
 13297 ;;  b               4   27[COMRAM] float 
 13298 ;;  a               4   31[COMRAM] float 
 13299 ;; Auto vars:     Size  Location     Type
 13300 ;;  prod            4   46[COMRAM] struct .
 13301 ;;  grs             4   40[COMRAM] unsigned long 
 13302 ;;  temp            2   50[COMRAM] struct .
 13303 ;;  bexp            1   45[COMRAM] unsigned char 
 13304 ;;  aexp            1   44[COMRAM] unsigned char 
 13305 ;;  sign            1   39[COMRAM] unsigned char 
 13306 ;; Return value:  Size  Location     Type
 13307 ;;                  4   27[COMRAM] unsigned char 
 13308 ;; Registers used:
 13309 ;;		wreg, status,2, status,0, prodl, prodh
 13310 ;; Tracked objects:
 13311 ;;		On entry : 0/0
 13312 ;;		On exit  : 0/0
 13313 ;;		Unchanged: 0/0
 13314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13315 ;;      Params:         8       0       0       0       0       0       0       0       0
 13316 ;;      Locals:        13       0       0       0       0       0       0       0       0
 13317 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13318 ;;      Totals:        25       0       0       0       0       0       0       0       0
 13319 ;;Total ram usage:       25 bytes
 13320 ;; Hardware stack levels used:    1
 13321 ;; Hardware stack levels required when called:    7
 13322 ;; This function calls:
 13323 ;;		Nothing
 13324 ;; This function is called by:
 13325 ;;		_AD9833_SetFrequency
 13326 ;;		_powf
 13327 ;;		_scalbnf
 13328 ;;		_sqrtf
 13329 ;; This function uses a non-reentrant model
 13330 ;;
 13331                           
 13332                           	psect	text55
 13333  003592                     __ptext55:
 13334                           	opt callstack 0
 13335  003592                     ___flmul:
 13336                           	opt callstack 19
 13337                           
 13338                           ;incstack = 0
 13339  003592  501F               	movf	___flmul@b+3,w,c
 13340  003594  0B80               	andlw	128
 13341  003596  6E28               	movwf	___flmul@sign,c
 13342  003598  501F               	movf	___flmul@b+3,w,c
 13343  00359A  241F               	addwf	___flmul@b+3,w,c
 13344  00359C  6E2E               	movwf	___flmul@bexp,c
 13345  00359E  BE1E               	btfsc	___flmul@b+2,7,c
 13346  0035A0  802E               	bsf	___flmul@bexp,0,c
 13347  0035A2  502E               	movf	___flmul@bexp,w,c
 13348  0035A4  B4D8               	btfsc	status,2,c
 13349  0035A6  D00D               	goto	l4779
 13350  0035A8  282E               	incf	___flmul@bexp,w,c
 13351  0035AA  A4D8               	btfss	status,2,c
 13352  0035AC  D008               	goto	l4777
 13353  0035AE  0E00               	movlw	0
 13354  0035B0  6E1C               	movwf	___flmul@b,c
 13355  0035B2  0E00               	movlw	0
 13356  0035B4  6E1D               	movwf	___flmul@b+1,c
 13357  0035B6  0E00               	movlw	0
 13358  0035B8  6E1E               	movwf	___flmul@b+2,c
 13359  0035BA  0E00               	movlw	0
 13360  0035BC  6E1F               	movwf	___flmul@b+3,c
 13361  0035BE                     l4777:
 13362  0035BE  8E1E               	bsf	___flmul@b+2,7,c
 13363  0035C0  D008               	goto	l4781
 13364  0035C2                     l4779:
 13365  0035C2  0E00               	movlw	0
 13366  0035C4  6E1C               	movwf	___flmul@b,c
 13367  0035C6  0E00               	movlw	0
 13368  0035C8  6E1D               	movwf	___flmul@b+1,c
 13369  0035CA  0E00               	movlw	0
 13370  0035CC  6E1E               	movwf	___flmul@b+2,c
 13371  0035CE  0E00               	movlw	0
 13372  0035D0  6E1F               	movwf	___flmul@b+3,c
 13373  0035D2                     l4781:
 13374  0035D2  5023               	movf	___flmul@a+3,w,c
 13375  0035D4  0B80               	andlw	128
 13376  0035D6  1A28               	xorwf	___flmul@sign,f,c
 13377  0035D8  5023               	movf	___flmul@a+3,w,c
 13378  0035DA  2423               	addwf	___flmul@a+3,w,c
 13379  0035DC  6E2D               	movwf	___flmul@aexp,c
 13380  0035DE  BE22               	btfsc	___flmul@a+2,7,c
 13381  0035E0  802D               	bsf	___flmul@aexp,0,c
 13382  0035E2  502D               	movf	___flmul@aexp,w,c
 13383  0035E4  B4D8               	btfsc	status,2,c
 13384  0035E6  D00D               	goto	l4797
 13385  0035E8  282D               	incf	___flmul@aexp,w,c
 13386  0035EA  A4D8               	btfss	status,2,c
 13387  0035EC  D008               	goto	l4795
 13388  0035EE  0E00               	movlw	0
 13389  0035F0  6E20               	movwf	___flmul@a,c
 13390  0035F2  0E00               	movlw	0
 13391  0035F4  6E21               	movwf	___flmul@a+1,c
 13392  0035F6  0E00               	movlw	0
 13393  0035F8  6E22               	movwf	___flmul@a+2,c
 13394  0035FA  0E00               	movlw	0
 13395  0035FC  6E23               	movwf	___flmul@a+3,c
 13396  0035FE                     l4795:
 13397  0035FE  8E22               	bsf	___flmul@a+2,7,c
 13398  003600  D008               	goto	l1409
 13399  003602                     l4797:
 13400  003602  0E00               	movlw	0
 13401  003604  6E20               	movwf	___flmul@a,c
 13402  003606  0E00               	movlw	0
 13403  003608  6E21               	movwf	___flmul@a+1,c
 13404  00360A  0E00               	movlw	0
 13405  00360C  6E22               	movwf	___flmul@a+2,c
 13406  00360E  0E00               	movlw	0
 13407  003610  6E23               	movwf	___flmul@a+3,c
 13408  003612                     l1409:
 13409  003612  502D               	movf	___flmul@aexp,w,c
 13410  003614  B4D8               	btfsc	status,2,c
 13411  003616  D003               	goto	u4420
 13412  003618  502E               	movf	___flmul@bexp,w,c
 13413  00361A  A4D8               	btfss	status,2,c
 13414  00361C  D009               	goto	l4805
 13415  00361E                     u4420:
 13416  00361E  0E00               	movlw	0
 13417  003620  6E1C               	movwf	?___flmul,c
 13418  003622  0E00               	movlw	0
 13419  003624  6E1D               	movwf	?___flmul+1,c
 13420  003626  0E00               	movlw	0
 13421  003628  6E1E               	movwf	?___flmul+2,c
 13422  00362A  0E00               	movlw	0
 13423  00362C  6E1F               	movwf	?___flmul+3,c
 13424  00362E  0012               	return	
 13425  003630                     l4805:
 13426  003630  5022               	movf	___flmul@a+2,w,c
 13427  003632  021C               	mulwf	___flmul@b,c
 13428  003634  CFF3 F033          	movff	prodl,___flmul@temp
 13429  003638  CFF4 F034          	movff	prodh,___flmul@temp+1
 13430  00363C  5033               	movf	___flmul@temp,w,c
 13431  00363E  6E29               	movwf	___flmul@grs,c
 13432  003640  6A2A               	clrf	___flmul@grs+1,c
 13433  003642  6A2B               	clrf	___flmul@grs+2,c
 13434  003644  6A2C               	clrf	___flmul@grs+3,c
 13435  003646  5034               	movf	___flmul@temp+1,w,c
 13436  003648  6E2F               	movwf	___flmul@prod,c
 13437  00364A  6A30               	clrf	___flmul@prod+1,c
 13438  00364C  6A31               	clrf	___flmul@prod+2,c
 13439  00364E  6A32               	clrf	___flmul@prod+3,c
 13440  003650  5021               	movf	___flmul@a+1,w,c
 13441  003652  021D               	mulwf	___flmul@b+1,c
 13442  003654  CFF3 F033          	movff	prodl,___flmul@temp
 13443  003658  CFF4 F034          	movff	prodh,___flmul@temp+1
 13444  00365C  5033               	movf	___flmul@temp,w,c
 13445  00365E  2629               	addwf	___flmul@grs,f,c
 13446  003660  0E00               	movlw	0
 13447  003662  222A               	addwfc	___flmul@grs+1,f,c
 13448  003664  222B               	addwfc	___flmul@grs+2,f,c
 13449  003666  222C               	addwfc	___flmul@grs+3,f,c
 13450  003668  5034               	movf	___flmul@temp+1,w,c
 13451  00366A  262F               	addwf	___flmul@prod,f,c
 13452  00366C  0E00               	movlw	0
 13453  00366E  2230               	addwfc	___flmul@prod+1,f,c
 13454  003670  2231               	addwfc	___flmul@prod+2,f,c
 13455  003672  2232               	addwfc	___flmul@prod+3,f,c
 13456  003674  5020               	movf	___flmul@a,w,c
 13457  003676  021E               	mulwf	___flmul@b+2,c
 13458  003678  CFF3 F033          	movff	prodl,___flmul@temp
 13459  00367C  CFF4 F034          	movff	prodh,___flmul@temp+1
 13460  003680  5033               	movf	___flmul@temp,w,c
 13461  003682  2629               	addwf	___flmul@grs,f,c
 13462  003684  0E00               	movlw	0
 13463  003686  222A               	addwfc	___flmul@grs+1,f,c
 13464  003688  222B               	addwfc	___flmul@grs+2,f,c
 13465  00368A  222C               	addwfc	___flmul@grs+3,f,c
 13466  00368C  5034               	movf	___flmul@temp+1,w,c
 13467  00368E  262F               	addwf	___flmul@prod,f,c
 13468  003690  0E00               	movlw	0
 13469  003692  2230               	addwfc	___flmul@prod+1,f,c
 13470  003694  2231               	addwfc	___flmul@prod+2,f,c
 13471  003696  2232               	addwfc	___flmul@prod+3,f,c
 13472  003698  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 13473  00369C  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 13474  0036A0  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 13475  0036A4  6A29               	clrf	___flmul@grs,c
 13476  0036A6  5020               	movf	___flmul@a,w,c
 13477  0036A8  021D               	mulwf	___flmul@b+1,c
 13478  0036AA  CFF3 F033          	movff	prodl,___flmul@temp
 13479  0036AE  CFF4 F034          	movff	prodh,___flmul@temp+1
 13480  0036B2  5033               	movf	___flmul@temp,w,c
 13481  0036B4  2629               	addwf	___flmul@grs,f,c
 13482  0036B6  5034               	movf	___flmul@temp+1,w,c
 13483  0036B8  222A               	addwfc	___flmul@grs+1,f,c
 13484  0036BA  0E00               	movlw	0
 13485  0036BC  222B               	addwfc	___flmul@grs+2,f,c
 13486  0036BE  0E00               	movlw	0
 13487  0036C0  222C               	addwfc	___flmul@grs+3,f,c
 13488  0036C2  5021               	movf	___flmul@a+1,w,c
 13489  0036C4  021C               	mulwf	___flmul@b,c
 13490  0036C6  CFF3 F033          	movff	prodl,___flmul@temp
 13491  0036CA  CFF4 F034          	movff	prodh,___flmul@temp+1
 13492  0036CE  5033               	movf	___flmul@temp,w,c
 13493  0036D0  2629               	addwf	___flmul@grs,f,c
 13494  0036D2  5034               	movf	___flmul@temp+1,w,c
 13495  0036D4  222A               	addwfc	___flmul@grs+1,f,c
 13496  0036D6  0E00               	movlw	0
 13497  0036D8  222B               	addwfc	___flmul@grs+2,f,c
 13498  0036DA  0E00               	movlw	0
 13499  0036DC  222C               	addwfc	___flmul@grs+3,f,c
 13500  0036DE  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 13501  0036E2  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 13502  0036E6  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 13503  0036EA  6A29               	clrf	___flmul@grs,c
 13504  0036EC  5020               	movf	___flmul@a,w,c
 13505  0036EE  021C               	mulwf	___flmul@b,c
 13506  0036F0  CFF3 F033          	movff	prodl,___flmul@temp
 13507  0036F4  CFF4 F034          	movff	prodh,___flmul@temp+1
 13508  0036F8  5033               	movf	___flmul@temp,w,c
 13509  0036FA  2629               	addwf	___flmul@grs,f,c
 13510  0036FC  5034               	movf	___flmul@temp+1,w,c
 13511  0036FE  222A               	addwfc	___flmul@grs+1,f,c
 13512  003700  0E00               	movlw	0
 13513  003702  222B               	addwfc	___flmul@grs+2,f,c
 13514  003704  0E00               	movlw	0
 13515  003706  222C               	addwfc	___flmul@grs+3,f,c
 13516  003708  5022               	movf	___flmul@a+2,w,c
 13517  00370A  021D               	mulwf	___flmul@b+1,c
 13518  00370C  CFF3 F033          	movff	prodl,___flmul@temp
 13519  003710  CFF4 F034          	movff	prodh,___flmul@temp+1
 13520  003714  5033               	movf	___flmul@temp,w,c
 13521  003716  262F               	addwf	___flmul@prod,f,c
 13522  003718  5034               	movf	___flmul@temp+1,w,c
 13523  00371A  2230               	addwfc	___flmul@prod+1,f,c
 13524  00371C  0E00               	movlw	0
 13525  00371E  2231               	addwfc	___flmul@prod+2,f,c
 13526  003720  0E00               	movlw	0
 13527  003722  2232               	addwfc	___flmul@prod+3,f,c
 13528  003724  5021               	movf	___flmul@a+1,w,c
 13529  003726  021E               	mulwf	___flmul@b+2,c
 13530  003728  CFF3 F033          	movff	prodl,___flmul@temp
 13531  00372C  CFF4 F034          	movff	prodh,___flmul@temp+1
 13532  003730  5033               	movf	___flmul@temp,w,c
 13533  003732  262F               	addwf	___flmul@prod,f,c
 13534  003734  5034               	movf	___flmul@temp+1,w,c
 13535  003736  2230               	addwfc	___flmul@prod+1,f,c
 13536  003738  0E00               	movlw	0
 13537  00373A  2231               	addwfc	___flmul@prod+2,f,c
 13538  00373C  0E00               	movlw	0
 13539  00373E  2232               	addwfc	___flmul@prod+3,f,c
 13540  003740  5022               	movf	___flmul@a+2,w,c
 13541  003742  021E               	mulwf	___flmul@b+2,c
 13542  003744  CFF3 F033          	movff	prodl,___flmul@temp
 13543  003748  CFF4 F034          	movff	prodh,___flmul@temp+1
 13544  00374C  5033               	movf	___flmul@temp,w,c
 13545  00374E  6E24               	movwf	??___flmul& (0+255),c
 13546  003750  5034               	movf	___flmul@temp+1,w,c
 13547  003752  6E25               	movwf	(??___flmul+1)& (0+255),c
 13548  003754  6A26               	clrf	(??___flmul+2)& (0+255),c
 13549  003756  6A27               	clrf	(??___flmul+3)& (0+255),c
 13550  003758  C026  F027         	movff	??___flmul+2,??___flmul+3
 13551  00375C  C025  F026         	movff	??___flmul+1,??___flmul+2
 13552  003760  C024  F025         	movff	??___flmul,??___flmul+1
 13553  003764  6A24               	clrf	??___flmul,c
 13554  003766  5024               	movf	??___flmul,w,c
 13555  003768  262F               	addwf	___flmul@prod,f,c
 13556  00376A  5025               	movf	??___flmul+1,w,c
 13557  00376C  2230               	addwfc	___flmul@prod+1,f,c
 13558  00376E  5026               	movf	??___flmul+2,w,c
 13559  003770  2231               	addwfc	___flmul@prod+2,f,c
 13560  003772  5027               	movf	??___flmul+3,w,c
 13561  003774  2232               	addwfc	___flmul@prod+3,f,c
 13562  003776  C029  F024         	movff	___flmul@grs,??___flmul
 13563  00377A  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
 13564  00377E  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
 13565  003782  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
 13566  003786  0E19               	movlw	25
 13567  003788  D005               	goto	u4430
 13568  00378A                     u4435:
 13569  00378A  90D8               	bcf	status,0,c
 13570  00378C  3227               	rrcf	??___flmul+3,f,c
 13571  00378E  3226               	rrcf	??___flmul+2,f,c
 13572  003790  3225               	rrcf	??___flmul+1,f,c
 13573  003792  3224               	rrcf	??___flmul,f,c
 13574  003794                     u4430:
 13575  003794  2EE8               	decfsz	wreg,f,c
 13576  003796  D7F9               	goto	u4435
 13577  003798  5024               	movf	??___flmul,w,c
 13578  00379A  262F               	addwf	___flmul@prod,f,c
 13579  00379C  5025               	movf	??___flmul+1,w,c
 13580  00379E  2230               	addwfc	___flmul@prod+1,f,c
 13581  0037A0  5026               	movf	??___flmul+2,w,c
 13582  0037A2  2231               	addwfc	___flmul@prod+2,f,c
 13583  0037A4  5027               	movf	??___flmul+3,w,c
 13584  0037A6  2232               	addwfc	___flmul@prod+3,f,c
 13585  0037A8  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 13586  0037AC  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 13587  0037B0  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 13588  0037B4  6A29               	clrf	___flmul@grs,c
 13589  0037B6  502D               	movf	___flmul@aexp,w,c
 13590  0037B8  C02E  F024         	movff	___flmul@bexp,??___flmul
 13591  0037BC  6A25               	clrf	(??___flmul+1)& (0+255),c
 13592  0037BE  2624               	addwf	??___flmul,f,c
 13593  0037C0  0E00               	movlw	0
 13594  0037C2  2225               	addwfc	??___flmul+1,f,c
 13595  0037C4  0E82               	movlw	130
 13596  0037C6  2424               	addwf	??___flmul,w,c
 13597  0037C8  6E33               	movwf	___flmul@temp,c
 13598  0037CA  0EFF               	movlw	255
 13599  0037CC  2025               	addwfc	??___flmul+1,w,c
 13600  0037CE  6E34               	movwf	___flmul@temp+1,c
 13601  0037D0  D00F               	goto	l4853
 13602  0037D2                     l4847:
 13603  0037D2  90D8               	bcf	status,0,c
 13604  0037D4  362F               	rlcf	___flmul@prod,f,c
 13605  0037D6  3630               	rlcf	___flmul@prod+1,f,c
 13606  0037D8  3631               	rlcf	___flmul@prod+2,f,c
 13607  0037DA  3632               	rlcf	___flmul@prod+3,f,c
 13608  0037DC  BE2C               	btfsc	___flmul@grs+3,7,c
 13609  0037DE  802F               	bsf	___flmul@prod,0,c
 13610  0037E0  90D8               	bcf	status,0,c
 13611  0037E2  3629               	rlcf	___flmul@grs,f,c
 13612  0037E4  362A               	rlcf	___flmul@grs+1,f,c
 13613  0037E6  362B               	rlcf	___flmul@grs+2,f,c
 13614  0037E8  362C               	rlcf	___flmul@grs+3,f,c
 13615  0037EA  0633               	decf	___flmul@temp,f,c
 13616  0037EC  A0D8               	btfss	status,0,c
 13617  0037EE  0634               	decf	___flmul@temp+1,f,c
 13618  0037F0                     l4853:
 13619  0037F0  AE31               	btfss	___flmul@prod+2,7,c
 13620  0037F2  D7EF               	goto	l4847
 13621  0037F4  0E00               	movlw	0
 13622  0037F6  6E2D               	movwf	___flmul@aexp,c
 13623  0037F8  AE2C               	btfss	___flmul@grs+3,7,c
 13624  0037FA  D017               	goto	l1418
 13625  0037FC  0EFF               	movlw	255
 13626  0037FE  1429               	andwf	___flmul@grs,w,c
 13627  003800  6E24               	movwf	??___flmul& (0+255),c
 13628  003802  0EFF               	movlw	255
 13629  003804  142A               	andwf	___flmul@grs+1,w,c
 13630  003806  6E25               	movwf	(??___flmul+1)& (0+255),c
 13631  003808  0EFF               	movlw	255
 13632  00380A  142B               	andwf	___flmul@grs+2,w,c
 13633  00380C  6E26               	movwf	(??___flmul+2)& (0+255),c
 13634  00380E  0E7F               	movlw	127
 13635  003810  142C               	andwf	___flmul@grs+3,w,c
 13636  003812  6E27               	movwf	(??___flmul+3)& (0+255),c
 13637  003814  5024               	movf	??___flmul,w,c
 13638  003816  1025               	iorwf	??___flmul+1,w,c
 13639  003818  1026               	iorwf	??___flmul+2,w,c
 13640  00381A  1027               	iorwf	??___flmul+3,w,c
 13641  00381C  B4D8               	btfsc	status,2,c
 13642  00381E  D003               	goto	l1419
 13643  003820                     u4470:
 13644  003820  0E01               	movlw	1
 13645  003822  6E2D               	movwf	___flmul@aexp,c
 13646  003824  D002               	goto	l1418
 13647  003826                     l1419:
 13648  003826  B02F               	btfsc	___flmul@prod,0,c
 13649  003828  D7FB               	goto	u4470
 13650  00382A                     l1418:
 13651  00382A  502D               	movf	___flmul@aexp,w,c
 13652  00382C  B4D8               	btfsc	status,2,c
 13653  00382E  D01F               	goto	l4873
 13654  003830  0E01               	movlw	1
 13655  003832  262F               	addwf	___flmul@prod,f,c
 13656  003834  0E00               	movlw	0
 13657  003836  2230               	addwfc	___flmul@prod+1,f,c
 13658  003838  2231               	addwfc	___flmul@prod+2,f,c
 13659  00383A  2232               	addwfc	___flmul@prod+3,f,c
 13660  00383C  A032               	btfss	___flmul@prod+3,0,c
 13661  00383E  D017               	goto	l4873
 13662  003840  C02F  F024         	movff	___flmul@prod,??___flmul
 13663  003844  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 13664  003848  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 13665  00384C  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 13666  003850  3427               	rlcf	??___flmul+3,w,c
 13667  003852  3227               	rrcf	??___flmul+3,f,c
 13668  003854  3226               	rrcf	??___flmul+2,f,c
 13669  003856  3225               	rrcf	??___flmul+1,f,c
 13670  003858  3224               	rrcf	??___flmul,f,c
 13671  00385A  C024  F02F         	movff	??___flmul,___flmul@prod
 13672  00385E  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 13673  003862  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 13674  003866  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 13675  00386A  4A33               	infsnz	___flmul@temp,f,c
 13676  00386C  2A34               	incf	___flmul@temp+1,f,c
 13677  00386E                     l4873:
 13678  00386E  BE34               	btfsc	___flmul@temp+1,7,c
 13679  003870  D00D               	goto	l4877
 13680  003872  5034               	movf	___flmul@temp+1,w,c
 13681  003874  E103               	bnz	u4510
 13682  003876  2833               	incf	___flmul@temp,w,c
 13683  003878  A0D8               	btfss	status,0,c
 13684  00387A  D008               	goto	l4877
 13685  00387C                     u4510:
 13686  00387C  0E00               	movlw	0
 13687  00387E  6E2F               	movwf	___flmul@prod,c
 13688  003880  0E00               	movlw	0
 13689  003882  6E30               	movwf	___flmul@prod+1,c
 13690  003884  0E80               	movlw	128
 13691  003886  6E31               	movwf	___flmul@prod+2,c
 13692  003888  0E7F               	movlw	127
 13693  00388A  D020               	goto	L8
 13694  00388C                     l4877:
 13695  00388C  BE34               	btfsc	___flmul@temp+1,7,c
 13696  00388E  D005               	goto	u4520
 13697  003890  5034               	movf	___flmul@temp+1,w,c
 13698  003892  E10E               	bnz	l1426
 13699  003894  0433               	decf	___flmul@temp,w,c
 13700  003896  B0D8               	btfsc	status,0,c
 13701  003898  D00B               	goto	l1426
 13702  00389A                     u4520:
 13703  00389A  0E00               	movlw	0
 13704  00389C  6E2F               	movwf	___flmul@prod,c
 13705  00389E  0E00               	movlw	0
 13706  0038A0  6E30               	movwf	___flmul@prod+1,c
 13707  0038A2  0E00               	movlw	0
 13708  0038A4  6E31               	movwf	___flmul@prod+2,c
 13709  0038A6  0E00               	movlw	0
 13710  0038A8  6E32               	movwf	___flmul@prod+3,c
 13711  0038AA  0E00               	movlw	0
 13712  0038AC  6E28               	movwf	___flmul@sign,c
 13713  0038AE  D00F               	goto	l4889
 13714  0038B0                     l1426:
 13715  0038B0  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 13716  0038B4  0EFF               	movlw	255
 13717  0038B6  162F               	andwf	___flmul@prod,f,c
 13718  0038B8  0EFF               	movlw	255
 13719  0038BA  1630               	andwf	___flmul@prod+1,f,c
 13720  0038BC  0E7F               	movlw	127
 13721  0038BE  1631               	andwf	___flmul@prod+2,f,c
 13722  0038C0  0E00               	movlw	0
 13723  0038C2  1632               	andwf	___flmul@prod+3,f,c
 13724  0038C4  B02E               	btfsc	___flmul@bexp,0,c
 13725  0038C6  8E31               	bsf	___flmul@prod+2,7,c
 13726  0038C8  90D8               	bcf	status,0,c
 13727  0038CA  302E               	rrcf	___flmul@bexp,w,c
 13728  0038CC                     L8:
 13729  0038CC  6E32               	movwf	___flmul@prod+3,c
 13730  0038CE                     l4889:
 13731  0038CE  5028               	movf	___flmul@sign,w,c
 13732  0038D0  1232               	iorwf	___flmul@prod+3,f,c
 13733  0038D2  C02F  F01C         	movff	___flmul@prod,?___flmul
 13734  0038D6  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 13735  0038DA  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 13736  0038DE  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 13737  0038E2  0012               	return		;funcret
 13738  0038E4                     __end_of___flmul:
 13739                           	opt callstack 0
 13740                           
 13741 ;; *************** function _fabsf *****************
 13742 ;; Defined at:
 13743 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fabsf.c"
 13744 ;; Parameters:    Size  Location     Type
 13745 ;;  x               4   11[COMRAM] float 
 13746 ;; Auto vars:     Size  Location     Type
 13747 ;;  u               4   15[COMRAM] struct .
 13748 ;; Return value:  Size  Location     Type
 13749 ;;                  4   11[COMRAM] float 
 13750 ;; Registers used:
 13751 ;;		status,2, status,0
 13752 ;; Tracked objects:
 13753 ;;		On entry : 0/0
 13754 ;;		On exit  : 0/0
 13755 ;;		Unchanged: 0/0
 13756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13757 ;;      Params:         4       0       0       0       0       0       0       0       0
 13758 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13759 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13760 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13761 ;;Total ram usage:        8 bytes
 13762 ;; Hardware stack levels used:    1
 13763 ;; Hardware stack levels required when called:    7
 13764 ;; This function calls:
 13765 ;;		Nothing
 13766 ;; This function is called by:
 13767 ;;		_powf
 13768 ;; This function uses a non-reentrant model
 13769 ;;
 13770                           
 13771                           	psect	text56
 13772  0056FA                     __ptext56:
 13773                           	opt callstack 0
 13774  0056FA                     _fabsf:
 13775                           	opt callstack 20
 13776                           
 13777                           ;incstack = 0
 13778  0056FA  C0DD  F010         	movff	fabsf@F463,fabsf@u
 13779  0056FE  C0DE  F011         	movff	fabsf@F463+1,fabsf@u+1
 13780  005702  C0DF  F012         	movff	fabsf@F463+2,fabsf@u+2
 13781  005706  C0E0  F013         	movff	fabsf@F463+3,fabsf@u+3
 13782  00570A  C00C  F010         	movff	fabsf@x,fabsf@u
 13783  00570E  C00D  F011         	movff	fabsf@x+1,fabsf@u+1
 13784  005712  C00E  F012         	movff	fabsf@x+2,fabsf@u+2
 13785  005716  C00F  F013         	movff	fabsf@x+3,fabsf@u+3
 13786  00571A  9E13               	bcf	fabsf@u+3,7,c
 13787  00571C  C010  F00C         	movff	fabsf@u,?_fabsf
 13788  005720  C011  F00D         	movff	fabsf@u+1,?_fabsf+1
 13789  005724  C012  F00E         	movff	fabsf@u+2,?_fabsf+2
 13790  005728  C013  F00F         	movff	fabsf@u+3,?_fabsf+3
 13791  00572C  0012               	return		;funcret
 13792  00572E                     __end_of_fabsf:
 13793                           	opt callstack 0
 13794                           
 13795 ;; *************** function ___xxtofl *****************
 13796 ;; Defined at:
 13797 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 13798 ;; Parameters:    Size  Location     Type
 13799 ;;  sign            1    wreg     unsigned char 
 13800 ;;  val             4   11[COMRAM] long 
 13801 ;; Auto vars:     Size  Location     Type
 13802 ;;  sign            1   19[COMRAM] unsigned char 
 13803 ;;  arg             4   21[COMRAM] unsigned long 
 13804 ;;  exp             1   20[COMRAM] unsigned char 
 13805 ;; Return value:  Size  Location     Type
 13806 ;;                  4   11[COMRAM] unsigned char 
 13807 ;; Registers used:
 13808 ;;		wreg, status,2, status,0
 13809 ;; Tracked objects:
 13810 ;;		On entry : 0/0
 13811 ;;		On exit  : 0/0
 13812 ;;		Unchanged: 0/0
 13813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13814 ;;      Params:         4       0       0       0       0       0       0       0       0
 13815 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13816 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13817 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13818 ;;Total ram usage:       14 bytes
 13819 ;; Hardware stack levels used:    1
 13820 ;; Hardware stack levels required when called:    7
 13821 ;; This function calls:
 13822 ;;		Nothing
 13823 ;; This function is called by:
 13824 ;;		_AD9833_SetFrequency
 13825 ;;		_powf
 13826 ;; This function uses a non-reentrant model
 13827 ;;
 13828                           
 13829                           	psect	text57
 13830  004870                     __ptext57:
 13831                           	opt callstack 0
 13832  004870                     ___xxtofl:
 13833                           	opt callstack 20
 13834                           
 13835                           ;incstack = 0
 13836                           ;___xxtofl@sign stored from wreg
 13837  004870  6E14               	movwf	___xxtofl@sign,c
 13838  004872  5014               	movf	___xxtofl@sign,w,c
 13839  004874  A4D8               	btfss	status,2,c
 13840  004876  AE0F               	btfss	___xxtofl@val+3,7,c
 13841  004878  D01A               	goto	l1450
 13842  00487A  C00C  F010         	movff	___xxtofl@val,??___xxtofl
 13843  00487E  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
 13844  004882  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
 13845  004886  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
 13846  00488A  1E10               	comf	??___xxtofl,f,c
 13847  00488C  1E11               	comf	??___xxtofl+1,f,c
 13848  00488E  1E12               	comf	??___xxtofl+2,f,c
 13849  004890  1E13               	comf	??___xxtofl+3,f,c
 13850  004892  2A10               	incf	??___xxtofl,f,c
 13851  004894  0E00               	movlw	0
 13852  004896  2211               	addwfc	??___xxtofl+1,f,c
 13853  004898  2212               	addwfc	??___xxtofl+2,f,c
 13854  00489A  2213               	addwfc	??___xxtofl+3,f,c
 13855  00489C  C010  F016         	movff	??___xxtofl,___xxtofl@arg
 13856  0048A0  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
 13857  0048A4  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
 13858  0048A8  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
 13859  0048AC  D008               	goto	l5157
 13860  0048AE                     l1450:
 13861  0048AE  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
 13862  0048B2  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13863  0048B6  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13864  0048BA  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13865  0048BE                     l5157:
 13866  0048BE  500C               	movf	___xxtofl@val,w,c
 13867  0048C0  100D               	iorwf	___xxtofl@val+1,w,c
 13868  0048C2  100E               	iorwf	___xxtofl@val+2,w,c
 13869  0048C4  100F               	iorwf	___xxtofl@val+3,w,c
 13870  0048C6  A4D8               	btfss	status,2,c
 13871  0048C8  D009               	goto	l5163
 13872  0048CA  0E00               	movlw	0
 13873  0048CC  6E0C               	movwf	?___xxtofl,c
 13874  0048CE  0E00               	movlw	0
 13875  0048D0  6E0D               	movwf	?___xxtofl+1,c
 13876  0048D2  0E00               	movlw	0
 13877  0048D4  6E0E               	movwf	?___xxtofl+2,c
 13878  0048D6  0E00               	movlw	0
 13879  0048D8  6E0F               	movwf	?___xxtofl+3,c
 13880  0048DA  0012               	return	
 13881  0048DC                     l5163:
 13882  0048DC  0E96               	movlw	150
 13883  0048DE  6E15               	movwf	___xxtofl@exp,c
 13884  0048E0  D006               	goto	l5167
 13885  0048E2                     l5165:
 13886  0048E2  2A15               	incf	___xxtofl@exp,f,c
 13887  0048E4  90D8               	bcf	status,0,c
 13888  0048E6  3219               	rrcf	___xxtofl@arg+3,f,c
 13889  0048E8  3218               	rrcf	___xxtofl@arg+2,f,c
 13890  0048EA  3217               	rrcf	___xxtofl@arg+1,f,c
 13891  0048EC  3216               	rrcf	___xxtofl@arg,f,c
 13892  0048EE                     l5167:
 13893  0048EE  0E00               	movlw	0
 13894  0048F0  1416               	andwf	___xxtofl@arg,w,c
 13895  0048F2  6E10               	movwf	??___xxtofl& (0+255),c
 13896  0048F4  0E00               	movlw	0
 13897  0048F6  1417               	andwf	___xxtofl@arg+1,w,c
 13898  0048F8  6E11               	movwf	(??___xxtofl+1)& (0+255),c
 13899  0048FA  0E00               	movlw	0
 13900  0048FC  1418               	andwf	___xxtofl@arg+2,w,c
 13901  0048FE  6E12               	movwf	(??___xxtofl+2)& (0+255),c
 13902  004900  0EFE               	movlw	254
 13903  004902  1419               	andwf	___xxtofl@arg+3,w,c
 13904  004904  6E13               	movwf	(??___xxtofl+3)& (0+255),c
 13905  004906  5010               	movf	??___xxtofl,w,c
 13906  004908  1011               	iorwf	??___xxtofl+1,w,c
 13907  00490A  1012               	iorwf	??___xxtofl+2,w,c
 13908  00490C  1013               	iorwf	??___xxtofl+3,w,c
 13909  00490E  B4D8               	btfsc	status,2,c
 13910  004910  D00D               	goto	l1457
 13911  004912  D7E7               	goto	l5165
 13912  004914                     l5169:
 13913  004914  2A15               	incf	___xxtofl@exp,f,c
 13914  004916  0E01               	movlw	1
 13915  004918  2616               	addwf	___xxtofl@arg,f,c
 13916  00491A  0E00               	movlw	0
 13917  00491C  2217               	addwfc	___xxtofl@arg+1,f,c
 13918  00491E  2218               	addwfc	___xxtofl@arg+2,f,c
 13919  004920  2219               	addwfc	___xxtofl@arg+3,f,c
 13920  004922  90D8               	bcf	status,0,c
 13921  004924  3219               	rrcf	___xxtofl@arg+3,f,c
 13922  004926  3218               	rrcf	___xxtofl@arg+2,f,c
 13923  004928  3217               	rrcf	___xxtofl@arg+1,f,c
 13924  00492A  3216               	rrcf	___xxtofl@arg,f,c
 13925  00492C                     l1457:
 13926  00492C  0E00               	movlw	0
 13927  00492E  1416               	andwf	___xxtofl@arg,w,c
 13928  004930  6E10               	movwf	??___xxtofl& (0+255),c
 13929  004932  0E00               	movlw	0
 13930  004934  1417               	andwf	___xxtofl@arg+1,w,c
 13931  004936  6E11               	movwf	(??___xxtofl+1)& (0+255),c
 13932  004938  0E00               	movlw	0
 13933  00493A  1418               	andwf	___xxtofl@arg+2,w,c
 13934  00493C  6E12               	movwf	(??___xxtofl+2)& (0+255),c
 13935  00493E  0EFF               	movlw	255
 13936  004940  1419               	andwf	___xxtofl@arg+3,w,c
 13937  004942  6E13               	movwf	(??___xxtofl+3)& (0+255),c
 13938  004944  5010               	movf	??___xxtofl,w,c
 13939  004946  1011               	iorwf	??___xxtofl+1,w,c
 13940  004948  1012               	iorwf	??___xxtofl+2,w,c
 13941  00494A  1013               	iorwf	??___xxtofl+3,w,c
 13942  00494C  B4D8               	btfsc	status,2,c
 13943  00494E  D007               	goto	l5177
 13944  004950  D7E1               	goto	l5169
 13945  004952                     l5175:
 13946  004952  0615               	decf	___xxtofl@exp,f,c
 13947  004954  90D8               	bcf	status,0,c
 13948  004956  3616               	rlcf	___xxtofl@arg,f,c
 13949  004958  3617               	rlcf	___xxtofl@arg+1,f,c
 13950  00495A  3618               	rlcf	___xxtofl@arg+2,f,c
 13951  00495C  3619               	rlcf	___xxtofl@arg+3,f,c
 13952  00495E                     l5177:
 13953  00495E  BE18               	btfsc	___xxtofl@arg+2,7,c
 13954  004960  D003               	goto	u4980
 13955  004962  0E02               	movlw	2
 13956  004964  6015               	cpfslt	___xxtofl@exp,c
 13957  004966  D7F5               	goto	l5175
 13958  004968                     u4980:
 13959  004968  A015               	btfss	___xxtofl@exp,0,c
 13960  00496A  9E18               	bcf	___xxtofl@arg+2,7,c
 13961  00496C  90D8               	bcf	status,0,c
 13962  00496E  3215               	rrcf	___xxtofl@exp,f,c
 13963  004970  C015  F010         	movff	___xxtofl@exp,??___xxtofl
 13964  004974  6A11               	clrf	(??___xxtofl+1)& (0+255),c
 13965  004976  6A12               	clrf	(??___xxtofl+2)& (0+255),c
 13966  004978  6A13               	clrf	(??___xxtofl+3)& (0+255),c
 13967  00497A  C010  F013         	movff	??___xxtofl,??___xxtofl+3
 13968  00497E  6A12               	clrf	??___xxtofl+2,c
 13969  004980  6A11               	clrf	??___xxtofl+1,c
 13970  004982  6A10               	clrf	??___xxtofl,c
 13971  004984  5010               	movf	??___xxtofl,w,c
 13972  004986  1216               	iorwf	___xxtofl@arg,f,c
 13973  004988  5011               	movf	??___xxtofl+1,w,c
 13974  00498A  1217               	iorwf	___xxtofl@arg+1,f,c
 13975  00498C  5012               	movf	??___xxtofl+2,w,c
 13976  00498E  1218               	iorwf	___xxtofl@arg+2,f,c
 13977  004990  5013               	movf	??___xxtofl+3,w,c
 13978  004992  1219               	iorwf	___xxtofl@arg+3,f,c
 13979  004994  5014               	movf	___xxtofl@sign,w,c
 13980  004996  A4D8               	btfss	status,2,c
 13981  004998  AE0F               	btfss	___xxtofl@val+3,7,c
 13982  00499A  D001               	goto	l5193
 13983  00499C  8E19               	bsf	___xxtofl@arg+3,7,c
 13984  00499E                     l5193:
 13985  00499E  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
 13986  0049A2  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
 13987  0049A6  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
 13988  0049AA  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
 13989  0049AE  0012               	return		;funcret
 13990  0049B0                     __end_of___xxtofl:
 13991                           	opt callstack 0
 13992                           
 13993 ;; *************** function ___flsub *****************
 13994 ;; Defined at:
 13995 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 13996 ;; Parameters:    Size  Location     Type
 13997 ;;  b               4    0[BANK0 ] unsigned char 
 13998 ;;  a               4    4[BANK0 ] unsigned char 
 13999 ;; Auto vars:     Size  Location     Type
 14000 ;;		None
 14001 ;; Return value:  Size  Location     Type
 14002 ;;                  4    0[BANK0 ] unsigned char 
 14003 ;; Registers used:
 14004 ;;		wreg, status,2, status,0, cstack
 14005 ;; Tracked objects:
 14006 ;;		On entry : 0/0
 14007 ;;		On exit  : 0/0
 14008 ;;		Unchanged: 0/0
 14009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14010 ;;      Params:         0       8       0       0       0       0       0       0       0
 14011 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14012 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14013 ;;      Totals:         0       8       0       0       0       0       0       0       0
 14014 ;;Total ram usage:        8 bytes
 14015 ;; Hardware stack levels used:    1
 14016 ;; Hardware stack levels required when called:    8
 14017 ;; This function calls:
 14018 ;;		___fladd
 14019 ;; This function is called by:
 14020 ;;		_powf
 14021 ;; This function uses a non-reentrant model
 14022 ;;
 14023                           
 14024                           	psect	text58
 14025  00551A                     __ptext58:
 14026                           	opt callstack 0
 14027  00551A                     ___flsub:
 14028                           	opt callstack 19
 14029                           
 14030                           ;incstack = 0
 14031  00551A  0E00               	movlw	0
 14032  00551C  0100               	movlb	0	; () banked
 14033  00551E  1B64               	xorwf	___flsub@a& (0+255),f,b
 14034  005520  0E00               	movlw	0
 14035  005522  1B65               	xorwf	(___flsub@a+1)& (0+255),f,b
 14036  005524  0E00               	movlw	0
 14037  005526  1B66               	xorwf	(___flsub@a+2)& (0+255),f,b
 14038  005528  0E80               	movlw	128
 14039  00552A  1B67               	xorwf	(___flsub@a+3)& (0+255),f,b
 14040                           
 14041                           ; BSR set to: 0
 14042  00552C  C060  F00C         	movff	___flsub@b,___fladd@b
 14043  005530  C061  F00D         	movff	___flsub@b+1,___fladd@b+1
 14044  005534  C062  F00E         	movff	___flsub@b+2,___fladd@b+2
 14045  005538  C063  F00F         	movff	___flsub@b+3,___fladd@b+3
 14046  00553C  C064  F010         	movff	___flsub@a,___fladd@a
 14047  005540  C065  F011         	movff	___flsub@a+1,___fladd@a+1
 14048  005544  C066  F012         	movff	___flsub@a+2,___fladd@a+2
 14049  005548  C067  F013         	movff	___flsub@a+3,___fladd@a+3
 14050  00554C  EC72  F01C         	call	___fladd	;wreg free
 14051  005550  C00C  F060         	movff	?___fladd,?___flsub
 14052  005554  C00D  F061         	movff	?___fladd+1,?___flsub+1
 14053  005558  C00E  F062         	movff	?___fladd+2,?___flsub+2
 14054  00555C  C00F  F063         	movff	?___fladd+3,?___flsub+3
 14055  005560  0012               	return		;funcret
 14056  005562                     __end_of___flsub:
 14057                           	opt callstack 0
 14058                           
 14059 ;; *************** function ___fladd *****************
 14060 ;; Defined at:
 14061 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 14062 ;; Parameters:    Size  Location     Type
 14063 ;;  b               4   11[COMRAM] unsigned char 
 14064 ;;  a               4   15[COMRAM] unsigned char 
 14065 ;; Auto vars:     Size  Location     Type
 14066 ;;  grs             1   26[COMRAM] unsigned char 
 14067 ;;  bexp            1   25[COMRAM] unsigned char 
 14068 ;;  aexp            1   24[COMRAM] unsigned char 
 14069 ;;  signs           1   23[COMRAM] unsigned char 
 14070 ;; Return value:  Size  Location     Type
 14071 ;;                  4   11[COMRAM] unsigned char 
 14072 ;; Registers used:
 14073 ;;		wreg, status,2, status,0
 14074 ;; Tracked objects:
 14075 ;;		On entry : 0/0
 14076 ;;		On exit  : 0/0
 14077 ;;		Unchanged: 0/0
 14078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14079 ;;      Params:         8       0       0       0       0       0       0       0       0
 14080 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14081 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14082 ;;      Totals:        16       0       0       0       0       0       0       0       0
 14083 ;;Total ram usage:       16 bytes
 14084 ;; Hardware stack levels used:    1
 14085 ;; Hardware stack levels required when called:    7
 14086 ;; This function calls:
 14087 ;;		Nothing
 14088 ;; This function is called by:
 14089 ;;		___flsub
 14090 ;;		_powf
 14091 ;;		_sqrtf
 14092 ;; This function uses a non-reentrant model
 14093 ;;
 14094                           
 14095                           	psect	text59
 14096  0038E4                     __ptext59:
 14097                           	opt callstack 0
 14098  0038E4                     ___fladd:
 14099                           	opt callstack 19
 14100                           
 14101                           ;incstack = 0
 14102  0038E4  500F               	movf	___fladd@b+3,w,c
 14103  0038E6  0B80               	andlw	128
 14104  0038E8  6E18               	movwf	___fladd@signs,c
 14105  0038EA  500F               	movf	___fladd@b+3,w,c
 14106  0038EC  240F               	addwf	___fladd@b+3,w,c
 14107  0038EE  6E1A               	movwf	___fladd@bexp,c
 14108  0038F0  BE0E               	btfsc	___fladd@b+2,7,c
 14109  0038F2  801A               	bsf	___fladd@bexp,0,c
 14110  0038F4  501A               	movf	___fladd@bexp,w,c
 14111  0038F6  B4D8               	btfsc	status,2,c
 14112  0038F8  D00D               	goto	l8253
 14113  0038FA  281A               	incf	___fladd@bexp,w,c
 14114  0038FC  A4D8               	btfss	status,2,c
 14115  0038FE  D008               	goto	l8249
 14116  003900  0E00               	movlw	0
 14117  003902  6E0C               	movwf	___fladd@b,c
 14118  003904  0E00               	movlw	0
 14119  003906  6E0D               	movwf	___fladd@b+1,c
 14120  003908  0E00               	movlw	0
 14121  00390A  6E0E               	movwf	___fladd@b+2,c
 14122  00390C  0E00               	movlw	0
 14123  00390E  6E0F               	movwf	___fladd@b+3,c
 14124  003910                     l8249:
 14125  003910  8E0E               	bsf	___fladd@b+2,7,c
 14126  003912  D006               	goto	L9
 14127  003914                     l8253:
 14128  003914  0E00               	movlw	0
 14129  003916  6E0C               	movwf	___fladd@b,c
 14130  003918  0E00               	movlw	0
 14131  00391A  6E0D               	movwf	___fladd@b+1,c
 14132  00391C  0E00               	movlw	0
 14133  00391E  6E0E               	movwf	___fladd@b+2,c
 14134  003920                     L9:
 14135  003920  0E00               	movlw	0
 14136  003922  6E0F               	movwf	___fladd@b+3,c
 14137  003924  5013               	movf	___fladd@a+3,w,c
 14138  003926  0B80               	andlw	128
 14139  003928  6E19               	movwf	___fladd@aexp,c
 14140  00392A  5018               	movf	___fladd@signs,w,c
 14141  00392C  1819               	xorwf	___fladd@aexp,w,c
 14142  00392E  A4D8               	btfss	status,2,c
 14143  003930  8C18               	bsf	___fladd@signs,6,c
 14144  003932  5013               	movf	___fladd@a+3,w,c
 14145  003934  2413               	addwf	___fladd@a+3,w,c
 14146  003936  6E19               	movwf	___fladd@aexp,c
 14147  003938  BE12               	btfsc	___fladd@a+2,7,c
 14148  00393A  8019               	bsf	___fladd@aexp,0,c
 14149  00393C  5019               	movf	___fladd@aexp,w,c
 14150  00393E  B4D8               	btfsc	status,2,c
 14151  003940  D00D               	goto	l8277
 14152  003942  2819               	incf	___fladd@aexp,w,c
 14153  003944  A4D8               	btfss	status,2,c
 14154  003946  D008               	goto	l8273
 14155  003948  0E00               	movlw	0
 14156  00394A  6E10               	movwf	___fladd@a,c
 14157  00394C  0E00               	movlw	0
 14158  00394E  6E11               	movwf	___fladd@a+1,c
 14159  003950  0E00               	movlw	0
 14160  003952  6E12               	movwf	___fladd@a+2,c
 14161  003954  0E00               	movlw	0
 14162  003956  6E13               	movwf	___fladd@a+3,c
 14163  003958                     l8273:
 14164  003958  8E12               	bsf	___fladd@a+2,7,c
 14165  00395A  D006               	goto	L10
 14166  00395C                     l8277:
 14167  00395C  0E00               	movlw	0
 14168  00395E  6E10               	movwf	___fladd@a,c
 14169  003960  0E00               	movlw	0
 14170  003962  6E11               	movwf	___fladd@a+1,c
 14171  003964  0E00               	movlw	0
 14172  003966  6E12               	movwf	___fladd@a+2,c
 14173  003968                     L10:
 14174  003968  0E00               	movlw	0
 14175  00396A  6E13               	movwf	___fladd@a+3,c
 14176  00396C  501A               	movf	___fladd@bexp,w,c
 14177  00396E  5C19               	subwf	___fladd@aexp,w,c
 14178  003970  B0D8               	btfsc	status,0,c
 14179  003972  D022               	goto	l8315
 14180  003974  AC18               	btfss	___fladd@signs,6,c
 14181  003976  D002               	goto	l8285
 14182  003978  0E80               	movlw	128
 14183  00397A  1A18               	xorwf	___fladd@signs,f,c
 14184  00397C                     l8285:
 14185  00397C  C01A  F01B         	movff	___fladd@bexp,___fladd@grs
 14186  003980  C019  F01A         	movff	___fladd@aexp,___fladd@bexp
 14187  003984  C01B  F019         	movff	___fladd@grs,___fladd@aexp
 14188  003988  C00C  F01B         	movff	___fladd@b,___fladd@grs
 14189  00398C  C010  F00C         	movff	___fladd@a,___fladd@b
 14190  003990  C01B  F010         	movff	___fladd@grs,___fladd@a
 14191  003994  C00D  F01B         	movff	___fladd@b+1,___fladd@grs
 14192  003998  C011  F00D         	movff	___fladd@a+1,___fladd@b+1
 14193  00399C  C01B  F011         	movff	___fladd@grs,___fladd@a+1
 14194  0039A0  C00E  F01B         	movff	___fladd@b+2,___fladd@grs
 14195  0039A4  C012  F00E         	movff	___fladd@a+2,___fladd@b+2
 14196  0039A8  C01B  F012         	movff	___fladd@grs,___fladd@a+2
 14197  0039AC  C00F  F01B         	movff	___fladd@b+3,___fladd@grs
 14198  0039B0  C013  F00F         	movff	___fladd@a+3,___fladd@b+3
 14199  0039B4  C01B  F013         	movff	___fladd@grs,___fladd@a+3
 14200  0039B8                     l8315:
 14201  0039B8  0E00               	movlw	0
 14202  0039BA  6E1B               	movwf	___fladd@grs,c
 14203  0039BC  501A               	movf	___fladd@bexp,w,c
 14204  0039BE  C019  F014         	movff	___fladd@aexp,??___fladd
 14205  0039C2  6A15               	clrf	(??___fladd+1)& (0+255),c
 14206  0039C4  5E14               	subwf	??___fladd,f,c
 14207  0039C6  0E00               	movlw	0
 14208  0039C8  5A15               	subwfb	??___fladd+1,f,c
 14209  0039CA  BE15               	btfsc	??___fladd+1,7,c
 14210  0039CC  D02C               	goto	l1324
 14211  0039CE  5015               	movf	??___fladd+1,w,c
 14212  0039D0  E104               	bnz	u8710
 14213  0039D2  0E1A               	movlw	26
 14214  0039D4  5C14               	subwf	??___fladd,w,c
 14215  0039D6  A0D8               	btfss	status,0,c
 14216  0039D8  D026               	goto	l1324
 14217  0039DA                     u8710:
 14218  0039DA  500C               	movf	___fladd@b,w,c
 14219  0039DC  100D               	iorwf	___fladd@b+1,w,c
 14220  0039DE  100E               	iorwf	___fladd@b+2,w,c
 14221  0039E0  100F               	iorwf	___fladd@b+3,w,c
 14222  0039E2  B4D8               	btfsc	status,2,c
 14223  0039E4  D002               	goto	u8720
 14224  0039E6  0E01               	movlw	1
 14225  0039E8  D001               	goto	u8730
 14226  0039EA                     u8720:
 14227  0039EA  0E00               	movlw	0
 14228  0039EC                     u8730:
 14229  0039EC  6E1B               	movwf	___fladd@grs,c
 14230  0039EE  0E00               	movlw	0
 14231  0039F0  6E0C               	movwf	___fladd@b,c
 14232  0039F2  0E00               	movlw	0
 14233  0039F4  6E0D               	movwf	___fladd@b+1,c
 14234  0039F6  0E00               	movlw	0
 14235  0039F8  6E0E               	movwf	___fladd@b+2,c
 14236  0039FA  0E00               	movlw	0
 14237  0039FC  6E0F               	movwf	___fladd@b+3,c
 14238  0039FE  C019  F01A         	movff	___fladd@aexp,___fladd@bexp
 14239  003A02  D015               	goto	u8760
 14240  003A04                     l1325:
 14241  003A04  A01B               	btfss	___fladd@grs,0,c
 14242  003A06  D005               	goto	l8327
 14243  003A08  90D8               	bcf	status,0,c
 14244  003A0A  301B               	rrcf	___fladd@grs,w,c
 14245  003A0C  0901               	iorlw	1
 14246  003A0E  6E1B               	movwf	___fladd@grs,c
 14247  003A10  D002               	goto	l8329
 14248  003A12                     l8327:
 14249  003A12  90D8               	bcf	status,0,c
 14250  003A14  321B               	rrcf	___fladd@grs,f,c
 14251  003A16                     l8329:
 14252  003A16  B00C               	btfsc	___fladd@b,0,c
 14253  003A18  8E1B               	bsf	___fladd@grs,7,c
 14254  003A1A  340F               	rlcf	___fladd@b+3,w,c
 14255  003A1C  320F               	rrcf	___fladd@b+3,f,c
 14256  003A1E  320E               	rrcf	___fladd@b+2,f,c
 14257  003A20  320D               	rrcf	___fladd@b+1,f,c
 14258  003A22  320C               	rrcf	___fladd@b,f,c
 14259  003A24  2A1A               	incf	___fladd@bexp,f,c
 14260  003A26                     l1324:
 14261  003A26  5019               	movf	___fladd@aexp,w,c
 14262  003A28  5C1A               	subwf	___fladd@bexp,w,c
 14263  003A2A  A0D8               	btfss	status,0,c
 14264  003A2C  D7EB               	goto	l1325
 14265  003A2E                     u8760:
 14266  003A2E  BC18               	btfsc	___fladd@signs,6,c
 14267  003A30  D028               	goto	l8361
 14268  003A32  501A               	movf	___fladd@bexp,w,c
 14269  003A34  A4D8               	btfss	status,2,c
 14270  003A36  D009               	goto	l8343
 14271  003A38  0E00               	movlw	0
 14272  003A3A  6E0C               	movwf	?___fladd,c
 14273  003A3C  0E00               	movlw	0
 14274  003A3E  6E0D               	movwf	?___fladd+1,c
 14275  003A40  0E00               	movlw	0
 14276  003A42  6E0E               	movwf	?___fladd+2,c
 14277  003A44  0E00               	movlw	0
 14278  003A46  6E0F               	movwf	?___fladd+3,c
 14279  003A48  0012               	return	
 14280  003A4A                     l8343:
 14281  003A4A  5010               	movf	___fladd@a,w,c
 14282  003A4C  260C               	addwf	___fladd@b,f,c
 14283  003A4E  5011               	movf	___fladd@a+1,w,c
 14284  003A50  220D               	addwfc	___fladd@b+1,f,c
 14285  003A52  5012               	movf	___fladd@a+2,w,c
 14286  003A54  220E               	addwfc	___fladd@b+2,f,c
 14287  003A56  5013               	movf	___fladd@a+3,w,c
 14288  003A58  220F               	addwfc	___fladd@b+3,f,c
 14289  003A5A  A00F               	btfss	___fladd@b+3,0,c
 14290  003A5C  D071               	goto	u8890
 14291  003A5E  A01B               	btfss	___fladd@grs,0,c
 14292  003A60  D005               	goto	l8351
 14293  003A62  90D8               	bcf	status,0,c
 14294  003A64  301B               	rrcf	___fladd@grs,w,c
 14295  003A66  0901               	iorlw	1
 14296  003A68  6E1B               	movwf	___fladd@grs,c
 14297  003A6A  D002               	goto	l8353
 14298  003A6C                     l8351:
 14299  003A6C  90D8               	bcf	status,0,c
 14300  003A6E  321B               	rrcf	___fladd@grs,f,c
 14301  003A70                     l8353:
 14302  003A70  B00C               	btfsc	___fladd@b,0,c
 14303  003A72  8E1B               	bsf	___fladd@grs,7,c
 14304  003A74  340F               	rlcf	___fladd@b+3,w,c
 14305  003A76  320F               	rrcf	___fladd@b+3,f,c
 14306  003A78  320E               	rrcf	___fladd@b+2,f,c
 14307  003A7A  320D               	rrcf	___fladd@b+1,f,c
 14308  003A7C  320C               	rrcf	___fladd@b,f,c
 14309  003A7E  2A1A               	incf	___fladd@bexp,f,c
 14310  003A80  D05F               	goto	u8890
 14311  003A82                     l8361:
 14312  003A82  5010               	movf	___fladd@a,w,c
 14313  003A84  5C0C               	subwf	___fladd@b,w,c
 14314  003A86  5011               	movf	___fladd@a+1,w,c
 14315  003A88  580D               	subwfb	___fladd@b+1,w,c
 14316  003A8A  5012               	movf	___fladd@a+2,w,c
 14317  003A8C  580E               	subwfb	___fladd@b+2,w,c
 14318  003A8E  500F               	movf	___fladd@b+3,w,c
 14319  003A90  0A80               	xorlw	128
 14320  003A92  6E14               	movwf	??___fladd& (0+255),c
 14321  003A94  5013               	movf	___fladd@a+3,w,c
 14322  003A96  0A80               	xorlw	128
 14323  003A98  5814               	subwfb	??___fladd& (0+255),w,c
 14324  003A9A  B0D8               	btfsc	status,0,c
 14325  003A9C  D025               	goto	l8371
 14326  003A9E  500C               	movf	___fladd@b,w,c
 14327  003AA0  5C10               	subwf	___fladd@a,w,c
 14328  003AA2  6E14               	movwf	??___fladd& (0+255),c
 14329  003AA4  500D               	movf	___fladd@b+1,w,c
 14330  003AA6  5811               	subwfb	___fladd@a+1,w,c
 14331  003AA8  6E15               	movwf	(??___fladd+1)& (0+255),c
 14332  003AAA  500E               	movf	___fladd@b+2,w,c
 14333  003AAC  5812               	subwfb	___fladd@a+2,w,c
 14334  003AAE  6E16               	movwf	(??___fladd+2)& (0+255),c
 14335  003AB0  500F               	movf	___fladd@b+3,w,c
 14336  003AB2  5813               	subwfb	___fladd@a+3,w,c
 14337  003AB4  6E17               	movwf	(??___fladd+3)& (0+255),c
 14338  003AB6  0EFF               	movlw	255
 14339  003AB8  2414               	addwf	??___fladd,w,c
 14340  003ABA  6E0C               	movwf	___fladd@b,c
 14341  003ABC  0EFF               	movlw	255
 14342  003ABE  2015               	addwfc	??___fladd+1,w,c
 14343  003AC0  6E0D               	movwf	___fladd@b+1,c
 14344  003AC2  0EFF               	movlw	255
 14345  003AC4  2016               	addwfc	??___fladd+2,w,c
 14346  003AC6  6E0E               	movwf	___fladd@b+2,c
 14347  003AC8  0EFF               	movlw	255
 14348  003ACA  2017               	addwfc	??___fladd+3,w,c
 14349  003ACC  6E0F               	movwf	___fladd@b+3,c
 14350  003ACE  0E80               	movlw	128
 14351  003AD0  1A18               	xorwf	___fladd@signs,f,c
 14352  003AD2  6C1B               	negf	___fladd@grs,c
 14353  003AD4  501B               	movf	___fladd@grs,w,c
 14354  003AD6  A4D8               	btfss	status,2,c
 14355  003AD8  D00F               	goto	l1340
 14356  003ADA  0E01               	movlw	1
 14357  003ADC  260C               	addwf	___fladd@b,f,c
 14358  003ADE  0E00               	movlw	0
 14359  003AE0  220D               	addwfc	___fladd@b+1,f,c
 14360  003AE2  220E               	addwfc	___fladd@b+2,f,c
 14361  003AE4  220F               	addwfc	___fladd@b+3,f,c
 14362  003AE6  D008               	goto	l1340
 14363  003AE8                     l8371:
 14364  003AE8  5010               	movf	___fladd@a,w,c
 14365  003AEA  5E0C               	subwf	___fladd@b,f,c
 14366  003AEC  5011               	movf	___fladd@a+1,w,c
 14367  003AEE  5A0D               	subwfb	___fladd@b+1,f,c
 14368  003AF0  5012               	movf	___fladd@a+2,w,c
 14369  003AF2  5A0E               	subwfb	___fladd@b+2,f,c
 14370  003AF4  5013               	movf	___fladd@a+3,w,c
 14371  003AF6  5A0F               	subwfb	___fladd@b+3,f,c
 14372  003AF8                     l1340:
 14373  003AF8  500C               	movf	___fladd@b,w,c
 14374  003AFA  100D               	iorwf	___fladd@b+1,w,c
 14375  003AFC  100E               	iorwf	___fladd@b+2,w,c
 14376  003AFE  100F               	iorwf	___fladd@b+3,w,c
 14377  003B00  A4D8               	btfss	status,2,c
 14378  003B02  D01C               	goto	l8395
 14379  003B04  501B               	movf	___fladd@grs,w,c
 14380  003B06  A4D8               	btfss	status,2,c
 14381  003B08  D019               	goto	l8395
 14382  003B0A  0E00               	movlw	0
 14383  003B0C  6E0C               	movwf	?___fladd,c
 14384  003B0E  0E00               	movlw	0
 14385  003B10  6E0D               	movwf	?___fladd+1,c
 14386  003B12  0E00               	movlw	0
 14387  003B14  6E0E               	movwf	?___fladd+2,c
 14388  003B16  0E00               	movlw	0
 14389  003B18  6E0F               	movwf	?___fladd+3,c
 14390  003B1A  0012               	return	
 14391  003B1C                     l8379:
 14392  003B1C  90D8               	bcf	status,0,c
 14393  003B1E  360C               	rlcf	___fladd@b,f,c
 14394  003B20  360D               	rlcf	___fladd@b+1,f,c
 14395  003B22  360E               	rlcf	___fladd@b+2,f,c
 14396  003B24  360F               	rlcf	___fladd@b+3,f,c
 14397  003B26  BE1B               	btfsc	___fladd@grs,7,c
 14398  003B28  800C               	bsf	___fladd@b,0,c
 14399  003B2A  A01B               	btfss	___fladd@grs,0,c
 14400  003B2C  D002               	goto	l8389
 14401  003B2E  80D8               	bsf	status,0,c
 14402  003B30  D001               	goto	L11
 14403  003B32                     l8389:
 14404  003B32  90D8               	bcf	status,0,c
 14405  003B34                     L11:
 14406  003B34  361B               	rlcf	___fladd@grs,f,c
 14407  003B36  501A               	movf	___fladd@bexp,w,c
 14408  003B38  A4D8               	btfss	status,2,c
 14409  003B3A  061A               	decf	___fladd@bexp,f,c
 14410  003B3C                     l8395:
 14411  003B3C  AE0E               	btfss	___fladd@b+2,7,c
 14412  003B3E  D7EE               	goto	l8379
 14413  003B40                     u8890:
 14414  003B40  0E00               	movlw	0
 14415  003B42  6E19               	movwf	___fladd@aexp,c
 14416  003B44  AE1B               	btfss	___fladd@grs,7,c
 14417  003B46  D00B               	goto	l1349
 14418  003B48  C01B  F014         	movff	___fladd@grs,??___fladd
 14419  003B4C  0E7F               	movlw	127
 14420  003B4E  1614               	andwf	??___fladd,f,c
 14421  003B50  B4D8               	btfsc	status,2,c
 14422  003B52  D003               	goto	l1350
 14423  003B54                     u8910:
 14424  003B54  0E01               	movlw	1
 14425  003B56  6E19               	movwf	___fladd@aexp,c
 14426  003B58  D002               	goto	l1349
 14427  003B5A                     l1350:
 14428  003B5A  B00C               	btfsc	___fladd@b,0,c
 14429  003B5C  D7FB               	goto	u8910
 14430  003B5E                     l1349:
 14431  003B5E  5019               	movf	___fladd@aexp,w,c
 14432  003B60  B4D8               	btfsc	status,2,c
 14433  003B62  D020               	goto	l8415
 14434  003B64  0E01               	movlw	1
 14435  003B66  260C               	addwf	___fladd@b,f,c
 14436  003B68  0E00               	movlw	0
 14437  003B6A  220D               	addwfc	___fladd@b+1,f,c
 14438  003B6C  220E               	addwfc	___fladd@b+2,f,c
 14439  003B6E  220F               	addwfc	___fladd@b+3,f,c
 14440  003B70  A00F               	btfss	___fladd@b+3,0,c
 14441  003B72  D018               	goto	l8415
 14442  003B74  C00C  F014         	movff	___fladd@b,??___fladd
 14443  003B78  C00D  F015         	movff	___fladd@b+1,??___fladd+1
 14444  003B7C  C00E  F016         	movff	___fladd@b+2,??___fladd+2
 14445  003B80  C00F  F017         	movff	___fladd@b+3,??___fladd+3
 14446  003B84  3417               	rlcf	??___fladd+3,w,c
 14447  003B86  3217               	rrcf	??___fladd+3,f,c
 14448  003B88  3216               	rrcf	??___fladd+2,f,c
 14449  003B8A  3215               	rrcf	??___fladd+1,f,c
 14450  003B8C  3214               	rrcf	??___fladd,f,c
 14451  003B8E  C014  F00C         	movff	??___fladd,___fladd@b
 14452  003B92  C015  F00D         	movff	??___fladd+1,___fladd@b+1
 14453  003B96  C016  F00E         	movff	??___fladd+2,___fladd@b+2
 14454  003B9A  C017  F00F         	movff	??___fladd+3,___fladd@b+3
 14455  003B9E  281A               	incf	___fladd@bexp,w,c
 14456  003BA0  A4D8               	btfss	status,2,c
 14457  003BA2  2A1A               	incf	___fladd@bexp,f,c
 14458  003BA4                     l8415:
 14459  003BA4  281A               	incf	___fladd@bexp,w,c
 14460  003BA6  B4D8               	btfsc	status,2,c
 14461  003BA8  D003               	goto	u8970
 14462  003BAA  501A               	movf	___fladd@bexp,w,c
 14463  003BAC  A4D8               	btfss	status,2,c
 14464  003BAE  D00D               	goto	l8423
 14465  003BB0                     u8970:
 14466  003BB0  0E00               	movlw	0
 14467  003BB2  6E0C               	movwf	___fladd@b,c
 14468  003BB4  0E00               	movlw	0
 14469  003BB6  6E0D               	movwf	___fladd@b+1,c
 14470  003BB8  0E00               	movlw	0
 14471  003BBA  6E0E               	movwf	___fladd@b+2,c
 14472  003BBC  0E00               	movlw	0
 14473  003BBE  6E0F               	movwf	___fladd@b+3,c
 14474  003BC0  501A               	movf	___fladd@bexp,w,c
 14475  003BC2  A4D8               	btfss	status,2,c
 14476  003BC4  D002               	goto	l8423
 14477  003BC6  0E00               	movlw	0
 14478  003BC8  6E18               	movwf	___fladd@signs,c
 14479  003BCA                     l8423:
 14480  003BCA  A01A               	btfss	___fladd@bexp,0,c
 14481  003BCC  D002               	goto	l8427
 14482  003BCE  8E0E               	bsf	___fladd@b+2,7,c
 14483  003BD0  D001               	goto	l8429
 14484  003BD2                     l8427:
 14485  003BD2  9E0E               	bcf	___fladd@b+2,7,c
 14486  003BD4                     l8429:
 14487  003BD4  90D8               	bcf	status,0,c
 14488  003BD6  301A               	rrcf	___fladd@bexp,w,c
 14489  003BD8  6E0F               	movwf	___fladd@b+3,c
 14490  003BDA  BE18               	btfsc	___fladd@signs,7,c
 14491  003BDC  8E0F               	bsf	___fladd@b+3,7,c
 14492  003BDE  C00C  F00C         	movff	___fladd@b,?___fladd
 14493  003BE2  C00D  F00D         	movff	___fladd@b+1,?___fladd+1
 14494  003BE6  C00E  F00E         	movff	___fladd@b+2,?___fladd+2
 14495  003BEA  C00F  F00F         	movff	___fladd@b+3,?___fladd+3
 14496  003BEE  0012               	return		;funcret
 14497  003BF0                     __end_of___fladd:
 14498                           	opt callstack 0
 14499                           
 14500 ;; *************** function ___flneg *****************
 14501 ;; Defined at:
 14502 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 14503 ;; Parameters:    Size  Location     Type
 14504 ;;  f1              4   11[COMRAM] unsigned char 
 14505 ;; Auto vars:     Size  Location     Type
 14506 ;;		None
 14507 ;; Return value:  Size  Location     Type
 14508 ;;                  4   11[COMRAM] unsigned char 
 14509 ;; Registers used:
 14510 ;;		wreg, status,2, status,0
 14511 ;; Tracked objects:
 14512 ;;		On entry : 0/0
 14513 ;;		On exit  : 0/0
 14514 ;;		Unchanged: 0/0
 14515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14516 ;;      Params:         4       0       0       0       0       0       0       0       0
 14517 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14518 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14519 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14520 ;;Total ram usage:        4 bytes
 14521 ;; Hardware stack levels used:    1
 14522 ;; Hardware stack levels required when called:    7
 14523 ;; This function calls:
 14524 ;;		Nothing
 14525 ;; This function is called by:
 14526 ;;		_powf
 14527 ;; This function uses a non-reentrant model
 14528 ;;
 14529                           
 14530                           	psect	text60
 14531  005854                     __ptext60:
 14532                           	opt callstack 0
 14533  005854                     ___flneg:
 14534                           	opt callstack 20
 14535                           
 14536                           ;incstack = 0
 14537  005854  500C               	movf	___flneg@f1,w,c
 14538  005856  100D               	iorwf	___flneg@f1+1,w,c
 14539  005858  100E               	iorwf	___flneg@f1+2,w,c
 14540  00585A  100F               	iorwf	___flneg@f1+3,w,c
 14541  00585C  B4D8               	btfsc	status,2,c
 14542  00585E  D008               	goto	l5147
 14543  005860  0E00               	movlw	0
 14544  005862  1A0C               	xorwf	___flneg@f1,f,c
 14545  005864  0E00               	movlw	0
 14546  005866  1A0D               	xorwf	___flneg@f1+1,f,c
 14547  005868  0E00               	movlw	0
 14548  00586A  1A0E               	xorwf	___flneg@f1+2,f,c
 14549  00586C  0E80               	movlw	128
 14550  00586E  1A0F               	xorwf	___flneg@f1+3,f,c
 14551  005870                     l5147:
 14552  005870  C00C  F00C         	movff	___flneg@f1,?___flneg
 14553  005874  C00D  F00D         	movff	___flneg@f1+1,?___flneg+1
 14554  005878  C00E  F00E         	movff	___flneg@f1+2,?___flneg+2
 14555  00587C  C00F  F00F         	movff	___flneg@f1+3,?___flneg+3
 14556  005880  0012               	return		;funcret
 14557  005882                     __end_of___flneg:
 14558                           	opt callstack 0
 14559                           
 14560 ;; *************** function ___fldiv *****************
 14561 ;; Defined at:
 14562 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 14563 ;; Parameters:    Size  Location     Type
 14564 ;;  b               4    8[BANK0 ] unsigned char 
 14565 ;;  a               4   12[BANK0 ] unsigned char 
 14566 ;; Auto vars:     Size  Location     Type
 14567 ;;  grs             4   23[BANK0 ] unsigned long 
 14568 ;;  rem             4   16[BANK0 ] unsigned long 
 14569 ;;  new_exp         2   21[BANK0 ] short 
 14570 ;;  aexp            1   28[BANK0 ] unsigned char 
 14571 ;;  bexp            1   27[BANK0 ] unsigned char 
 14572 ;;  sign            1   20[BANK0 ] unsigned char 
 14573 ;; Return value:  Size  Location     Type
 14574 ;;                  4    8[BANK0 ] unsigned char 
 14575 ;; Registers used:
 14576 ;;		wreg, status,2, status,0
 14577 ;; Tracked objects:
 14578 ;;		On entry : 0/0
 14579 ;;		On exit  : 0/0
 14580 ;;		Unchanged: 0/0
 14581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14582 ;;      Params:         0       8       0       0       0       0       0       0       0
 14583 ;;      Locals:         0      13       0       0       0       0       0       0       0
 14584 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14585 ;;      Totals:         4      21       0       0       0       0       0       0       0
 14586 ;;Total ram usage:       25 bytes
 14587 ;; Hardware stack levels used:    1
 14588 ;; Hardware stack levels required when called:    7
 14589 ;; This function calls:
 14590 ;;		Nothing
 14591 ;; This function is called by:
 14592 ;;		_AD9833_SetFrequency
 14593 ;;		_powf
 14594 ;; This function uses a non-reentrant model
 14595 ;;
 14596                           
 14597                           	psect	text61
 14598  003BF0                     __ptext61:
 14599                           	opt callstack 0
 14600  003BF0                     ___fldiv:
 14601                           	opt callstack 20
 14602                           
 14603                           ;incstack = 0
 14604  003BF0  0100               	movlb	0	; () banked
 14605  003BF2  516B               	movf	(___fldiv@b+3)& (0+255),w,b
 14606  003BF4  0B80               	andlw	128
 14607  003BF6  6F74               	movwf	___fldiv@sign& (0+255),b
 14608  003BF8  516B               	movf	(___fldiv@b+3)& (0+255),w,b
 14609  003BFA  256B               	addwf	(___fldiv@b+3)& (0+255),w,b
 14610  003BFC  6F7B               	movwf	___fldiv@bexp& (0+255),b
 14611                           
 14612                           ; BSR set to: 0
 14613  003BFE  BF6A               	btfsc	(___fldiv@b+2)& (0+255),7,b
 14614                           
 14615                           ; BSR set to: 0
 14616  003C00  817B               	bsf	___fldiv@bexp& (0+255),0,b
 14617                           
 14618                           ; BSR set to: 0
 14619  003C02  517B               	movf	___fldiv@bexp& (0+255),w,b
 14620  003C04  B4D8               	btfsc	status,2,c
 14621  003C06  D00D               	goto	l8477
 14622                           
 14623                           ; BSR set to: 0
 14624  003C08  297B               	incf	___fldiv@bexp& (0+255),w,b
 14625  003C0A  A4D8               	btfss	status,2,c
 14626  003C0C  D008               	goto	l8473
 14627                           
 14628                           ; BSR set to: 0
 14629  003C0E  0E00               	movlw	0
 14630  003C10  6F68               	movwf	___fldiv@b& (0+255),b
 14631  003C12  0E00               	movlw	0
 14632  003C14  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 14633  003C16  0E00               	movlw	0
 14634  003C18  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 14635  003C1A  0E00               	movlw	0
 14636  003C1C  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 14637  003C1E                     l8473:
 14638                           
 14639                           ; BSR set to: 0
 14640  003C1E  8F6A               	bsf	(___fldiv@b+2)& (0+255),7,b
 14641  003C20  D006               	goto	L12
 14642  003C22                     l8477:
 14643                           
 14644                           ; BSR set to: 0
 14645  003C22  0E00               	movlw	0
 14646  003C24  6F68               	movwf	___fldiv@b& (0+255),b
 14647  003C26  0E00               	movlw	0
 14648  003C28  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 14649  003C2A  0E00               	movlw	0
 14650  003C2C  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 14651  003C2E                     L12:
 14652  003C2E  0E00               	movlw	0
 14653  003C30  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 14654                           
 14655                           ; BSR set to: 0
 14656  003C32  516F               	movf	(___fldiv@a+3)& (0+255),w,b
 14657  003C34  0B80               	andlw	128
 14658  003C36  1B74               	xorwf	___fldiv@sign& (0+255),f,b
 14659                           
 14660                           ; BSR set to: 0
 14661  003C38  516F               	movf	(___fldiv@a+3)& (0+255),w,b
 14662  003C3A  256F               	addwf	(___fldiv@a+3)& (0+255),w,b
 14663  003C3C  6F7C               	movwf	___fldiv@aexp& (0+255),b
 14664                           
 14665                           ; BSR set to: 0
 14666  003C3E  BF6E               	btfsc	(___fldiv@a+2)& (0+255),7,b
 14667                           
 14668                           ; BSR set to: 0
 14669  003C40  817C               	bsf	___fldiv@aexp& (0+255),0,b
 14670                           
 14671                           ; BSR set to: 0
 14672  003C42  517C               	movf	___fldiv@aexp& (0+255),w,b
 14673  003C44  B4D8               	btfsc	status,2,c
 14674  003C46  D00D               	goto	l8497
 14675                           
 14676                           ; BSR set to: 0
 14677  003C48  297C               	incf	___fldiv@aexp& (0+255),w,b
 14678  003C4A  A4D8               	btfss	status,2,c
 14679  003C4C  D008               	goto	l8493
 14680                           
 14681                           ; BSR set to: 0
 14682  003C4E  0E00               	movlw	0
 14683  003C50  6F6C               	movwf	___fldiv@a& (0+255),b
 14684  003C52  0E00               	movlw	0
 14685  003C54  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
 14686  003C56  0E00               	movlw	0
 14687  003C58  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
 14688  003C5A  0E00               	movlw	0
 14689  003C5C  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
 14690  003C5E                     l8493:
 14691                           
 14692                           ; BSR set to: 0
 14693  003C5E  8F6E               	bsf	(___fldiv@a+2)& (0+255),7,b
 14694  003C60  D006               	goto	L13
 14695  003C62                     l8497:
 14696                           
 14697                           ; BSR set to: 0
 14698  003C62  0E00               	movlw	0
 14699  003C64  6F6C               	movwf	___fldiv@a& (0+255),b
 14700  003C66  0E00               	movlw	0
 14701  003C68  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
 14702  003C6A  0E00               	movlw	0
 14703  003C6C  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
 14704  003C6E                     L13:
 14705  003C6E  0E00               	movlw	0
 14706  003C70  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
 14707                           
 14708                           ; BSR set to: 0
 14709  003C72  516C               	movf	___fldiv@a& (0+255),w,b
 14710  003C74  116D               	iorwf	(___fldiv@a+1)& (0+255),w,b
 14711  003C76  116E               	iorwf	(___fldiv@a+2)& (0+255),w,b
 14712  003C78  116F               	iorwf	(___fldiv@a+3)& (0+255),w,b
 14713  003C7A  A4D8               	btfss	status,2,c
 14714  003C7C  D017               	goto	l8511
 14715                           
 14716                           ; BSR set to: 0
 14717  003C7E  0E00               	movlw	0
 14718  003C80  6F68               	movwf	___fldiv@b& (0+255),b
 14719  003C82  0E00               	movlw	0
 14720  003C84  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 14721  003C86  0E00               	movlw	0
 14722  003C88  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 14723  003C8A  0E00               	movlw	0
 14724  003C8C  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 14725                           
 14726                           ; BSR set to: 0
 14727  003C8E  0E80               	movlw	128
 14728  003C90  136A               	iorwf	(___fldiv@b+2)& (0+255),f,b
 14729  003C92  0E7F               	movlw	127
 14730  003C94  136B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14731  003C96                     l8505:
 14732                           
 14733                           ; BSR set to: 0
 14734  003C96  5174               	movf	___fldiv@sign& (0+255),w,b
 14735  003C98  136B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14736                           
 14737                           ; BSR set to: 0
 14738  003C9A  C068  F068         	movff	___fldiv@b,?___fldiv
 14739  003C9E  C069  F069         	movff	___fldiv@b+1,?___fldiv+1
 14740  003CA2  C06A  F06A         	movff	___fldiv@b+2,?___fldiv+2
 14741  003CA6  C06B  F06B         	movff	___fldiv@b+3,?___fldiv+3
 14742  003CAA  0012               	return	
 14743  003CAC                     l8511:
 14744                           
 14745                           ; BSR set to: 0
 14746  003CAC  517B               	movf	___fldiv@bexp& (0+255),w,b
 14747  003CAE  A4D8               	btfss	status,2,c
 14748  003CB0  D009               	goto	l8519
 14749                           
 14750                           ; BSR set to: 0
 14751                           
 14752                           ; BSR set to: 0
 14753  003CB2  0E00               	movlw	0
 14754  003CB4  6F68               	movwf	?___fldiv& (0+255),b
 14755  003CB6  0E00               	movlw	0
 14756  003CB8  6F69               	movwf	(?___fldiv+1)& (0+255),b
 14757  003CBA  0E00               	movlw	0
 14758  003CBC  6F6A               	movwf	(?___fldiv+2)& (0+255),b
 14759  003CBE  0E00               	movlw	0
 14760  003CC0  6F6B               	movwf	(?___fldiv+3)& (0+255),b
 14761  003CC2  0012               	return	
 14762  003CC4                     l8519:
 14763                           
 14764                           ; BSR set to: 0
 14765  003CC4  517C               	movf	___fldiv@aexp& (0+255),w,b
 14766  003CC6  C07B  F035         	movff	___fldiv@bexp,??___fldiv
 14767  003CCA  6A36               	clrf	(??___fldiv+1)& (0+255),c
 14768  003CCC  5E35               	subwf	??___fldiv,f,c
 14769  003CCE  0E00               	movlw	0
 14770  003CD0  5A36               	subwfb	??___fldiv+1,f,c
 14771  003CD2  0E7F               	movlw	127
 14772  003CD4  2435               	addwf	??___fldiv,w,c
 14773  003CD6  6F75               	movwf	___fldiv@new_exp& (0+255),b
 14774  003CD8  0E00               	movlw	0
 14775  003CDA  2036               	addwfc	??___fldiv+1,w,c
 14776  003CDC  6F76               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14777                           
 14778                           ; BSR set to: 0
 14779  003CDE  C068  F070         	movff	___fldiv@b,___fldiv@rem
 14780  003CE2  C069  F071         	movff	___fldiv@b+1,___fldiv@rem+1
 14781  003CE6  C06A  F072         	movff	___fldiv@b+2,___fldiv@rem+2
 14782  003CEA  C06B  F073         	movff	___fldiv@b+3,___fldiv@rem+3
 14783                           
 14784                           ; BSR set to: 0
 14785  003CEE  0E00               	movlw	0
 14786  003CF0  6F68               	movwf	___fldiv@b& (0+255),b
 14787  003CF2  0E00               	movlw	0
 14788  003CF4  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 14789  003CF6  0E00               	movlw	0
 14790  003CF8  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 14791  003CFA  0E00               	movlw	0
 14792  003CFC  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 14793                           
 14794                           ; BSR set to: 0
 14795  003CFE  0E00               	movlw	0
 14796  003D00  6F77               	movwf	___fldiv@grs& (0+255),b
 14797  003D02  0E00               	movlw	0
 14798  003D04  6F78               	movwf	(___fldiv@grs+1)& (0+255),b
 14799  003D06  0E00               	movlw	0
 14800  003D08  6F79               	movwf	(___fldiv@grs+2)& (0+255),b
 14801  003D0A  0E00               	movlw	0
 14802  003D0C  6F7A               	movwf	(___fldiv@grs+3)& (0+255),b
 14803                           
 14804                           ; BSR set to: 0
 14805  003D0E  0E00               	movlw	0
 14806  003D10  6F7C               	movwf	___fldiv@aexp& (0+255),b
 14807  003D12  D028               	goto	l1379
 14808  003D14                     l8529:
 14809                           
 14810                           ; BSR set to: 0
 14811  003D14  517C               	movf	___fldiv@aexp& (0+255),w,b
 14812  003D16  B4D8               	btfsc	status,2,c
 14813  003D18  D011               	goto	l8537
 14814                           
 14815                           ; BSR set to: 0
 14816  003D1A  90D8               	bcf	status,0,c
 14817  003D1C  3770               	rlcf	___fldiv@rem& (0+255),f,b
 14818  003D1E  3771               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 14819  003D20  3772               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 14820  003D22  3773               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 14821  003D24  90D8               	bcf	status,0,c
 14822  003D26  3768               	rlcf	___fldiv@b& (0+255),f,b
 14823  003D28  3769               	rlcf	(___fldiv@b+1)& (0+255),f,b
 14824  003D2A  376A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 14825  003D2C  376B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 14826                           
 14827                           ; BSR set to: 0
 14828  003D2E  BF7A               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 14829                           
 14830                           ; BSR set to: 0
 14831  003D30  8168               	bsf	___fldiv@b& (0+255),0,b
 14832                           
 14833                           ; BSR set to: 0
 14834  003D32  90D8               	bcf	status,0,c
 14835  003D34  3777               	rlcf	___fldiv@grs& (0+255),f,b
 14836  003D36  3778               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14837  003D38  3779               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14838  003D3A  377A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14839  003D3C                     l8537:
 14840                           
 14841                           ; BSR set to: 0
 14842  003D3C  516C               	movf	___fldiv@a& (0+255),w,b
 14843  003D3E  5D70               	subwf	___fldiv@rem& (0+255),w,b
 14844  003D40  516D               	movf	(___fldiv@a+1)& (0+255),w,b
 14845  003D42  5971               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 14846  003D44  516E               	movf	(___fldiv@a+2)& (0+255),w,b
 14847  003D46  5972               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 14848  003D48  516F               	movf	(___fldiv@a+3)& (0+255),w,b
 14849  003D4A  5973               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 14850  003D4C  A0D8               	btfss	status,0,c
 14851  003D4E  D009               	goto	l8543
 14852                           
 14853                           ; BSR set to: 0
 14854  003D50  8D7A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 14855                           
 14856                           ; BSR set to: 0
 14857  003D52  516C               	movf	___fldiv@a& (0+255),w,b
 14858  003D54  5F70               	subwf	___fldiv@rem& (0+255),f,b
 14859  003D56  516D               	movf	(___fldiv@a+1)& (0+255),w,b
 14860  003D58  5B71               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 14861  003D5A  516E               	movf	(___fldiv@a+2)& (0+255),w,b
 14862  003D5C  5B72               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 14863  003D5E  516F               	movf	(___fldiv@a+3)& (0+255),w,b
 14864  003D60  5B73               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 14865  003D62                     l8543:
 14866                           
 14867                           ; BSR set to: 0
 14868  003D62  2B7C               	incf	___fldiv@aexp& (0+255),f,b
 14869  003D64                     l1379:
 14870                           
 14871                           ; BSR set to: 0
 14872  003D64  0E19               	movlw	25
 14873  003D66  657C               	cpfsgt	___fldiv@aexp& (0+255),b
 14874  003D68  D7D5               	goto	l8529
 14875                           
 14876                           ; BSR set to: 0
 14877  003D6A  5170               	movf	___fldiv@rem& (0+255),w,b
 14878  003D6C  1171               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 14879  003D6E  1172               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 14880  003D70  1173               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 14881  003D72  B4D8               	btfsc	status,2,c
 14882  003D74  D011               	goto	l8555
 14883                           
 14884                           ; BSR set to: 0
 14885  003D76  8177               	bsf	___fldiv@grs& (0+255),0,b
 14886  003D78  D00F               	goto	l8555
 14887  003D7A                     l8549:
 14888                           
 14889                           ; BSR set to: 0
 14890  003D7A  90D8               	bcf	status,0,c
 14891  003D7C  3768               	rlcf	___fldiv@b& (0+255),f,b
 14892  003D7E  3769               	rlcf	(___fldiv@b+1)& (0+255),f,b
 14893  003D80  376A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 14894  003D82  376B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 14895                           
 14896                           ; BSR set to: 0
 14897  003D84  BF7A               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 14898                           
 14899                           ; BSR set to: 0
 14900  003D86  8168               	bsf	___fldiv@b& (0+255),0,b
 14901                           
 14902                           ; BSR set to: 0
 14903  003D88  90D8               	bcf	status,0,c
 14904  003D8A  3777               	rlcf	___fldiv@grs& (0+255),f,b
 14905  003D8C  3778               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14906  003D8E  3779               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14907  003D90  377A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14908  003D92  0775               	decf	___fldiv@new_exp& (0+255),f,b
 14909  003D94  A0D8               	btfss	status,0,c
 14910  003D96  0776               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 14911  003D98                     l8555:
 14912                           
 14913                           ; BSR set to: 0
 14914  003D98  AF6A               	btfss	(___fldiv@b+2)& (0+255),7,b
 14915  003D9A  D7EF               	goto	l8549
 14916                           
 14917                           ; BSR set to: 0
 14918  003D9C  0E00               	movlw	0
 14919  003D9E  6F7C               	movwf	___fldiv@aexp& (0+255),b
 14920                           
 14921                           ; BSR set to: 0
 14922  003DA0  AF7A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14923  003DA2  D017               	goto	l1390
 14924                           
 14925                           ; BSR set to: 0
 14926  003DA4  0EFF               	movlw	255
 14927  003DA6  1577               	andwf	___fldiv@grs& (0+255),w,b
 14928  003DA8  6E35               	movwf	??___fldiv& (0+255),c
 14929  003DAA  0EFF               	movlw	255
 14930  003DAC  1578               	andwf	(___fldiv@grs+1)& (0+255),w,b
 14931  003DAE  6E36               	movwf	(??___fldiv+1)& (0+255),c
 14932  003DB0  0EFF               	movlw	255
 14933  003DB2  1579               	andwf	(___fldiv@grs+2)& (0+255),w,b
 14934  003DB4  6E37               	movwf	(??___fldiv+2)& (0+255),c
 14935  003DB6  0E7F               	movlw	127
 14936  003DB8  157A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 14937  003DBA  6E38               	movwf	(??___fldiv+3)& (0+255),c
 14938  003DBC  5035               	movf	??___fldiv,w,c
 14939  003DBE  1036               	iorwf	??___fldiv+1,w,c
 14940  003DC0  1037               	iorwf	??___fldiv+2,w,c
 14941  003DC2  1038               	iorwf	??___fldiv+3,w,c
 14942  003DC4  B4D8               	btfsc	status,2,c
 14943  003DC6  D003               	goto	l1391
 14944  003DC8                     u9220:
 14945                           
 14946                           ; BSR set to: 0
 14947  003DC8  0E01               	movlw	1
 14948  003DCA  6F7C               	movwf	___fldiv@aexp& (0+255),b
 14949  003DCC  D002               	goto	l1390
 14950  003DCE                     l1391:
 14951                           
 14952                           ; BSR set to: 0
 14953  003DCE  B168               	btfsc	___fldiv@b& (0+255),0,b
 14954  003DD0  D7FB               	goto	u9220
 14955  003DD2                     l1390:
 14956                           
 14957                           ; BSR set to: 0
 14958  003DD2  517C               	movf	___fldiv@aexp& (0+255),w,b
 14959  003DD4  B4D8               	btfsc	status,2,c
 14960  003DD6  D01F               	goto	l8575
 14961                           
 14962                           ; BSR set to: 0
 14963  003DD8  0E01               	movlw	1
 14964  003DDA  2768               	addwf	___fldiv@b& (0+255),f,b
 14965  003DDC  0E00               	movlw	0
 14966  003DDE  2369               	addwfc	(___fldiv@b+1)& (0+255),f,b
 14967  003DE0  236A               	addwfc	(___fldiv@b+2)& (0+255),f,b
 14968  003DE2  236B               	addwfc	(___fldiv@b+3)& (0+255),f,b
 14969                           
 14970                           ; BSR set to: 0
 14971  003DE4  A16B               	btfss	(___fldiv@b+3)& (0+255),0,b
 14972  003DE6  D017               	goto	l8575
 14973                           
 14974                           ; BSR set to: 0
 14975  003DE8  C068  F035         	movff	___fldiv@b,??___fldiv
 14976  003DEC  C069  F036         	movff	___fldiv@b+1,??___fldiv+1
 14977  003DF0  C06A  F037         	movff	___fldiv@b+2,??___fldiv+2
 14978  003DF4  C06B  F038         	movff	___fldiv@b+3,??___fldiv+3
 14979  003DF8  3438               	rlcf	??___fldiv+3,w,c
 14980  003DFA  3238               	rrcf	??___fldiv+3,f,c
 14981  003DFC  3237               	rrcf	??___fldiv+2,f,c
 14982  003DFE  3236               	rrcf	??___fldiv+1,f,c
 14983  003E00  3235               	rrcf	??___fldiv,f,c
 14984  003E02  C035  F068         	movff	??___fldiv,___fldiv@b
 14985  003E06  C036  F069         	movff	??___fldiv+1,___fldiv@b+1
 14986  003E0A  C037  F06A         	movff	??___fldiv+2,___fldiv@b+2
 14987  003E0E  C038  F06B         	movff	??___fldiv+3,___fldiv@b+3
 14988                           
 14989                           ; BSR set to: 0
 14990  003E12  4B75               	infsnz	___fldiv@new_exp& (0+255),f,b
 14991  003E14  2B76               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 14992  003E16                     l8575:
 14993                           
 14994                           ; BSR set to: 0
 14995  003E16  BF76               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14996  003E18  D010               	goto	l8579
 14997  003E1A  5176               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14998  003E1C  E103               	bnz	u9260
 14999  003E1E  2975               	incf	___fldiv@new_exp& (0+255),w,b
 15000  003E20  A0D8               	btfss	status,0,c
 15001  003E22  D00B               	goto	l8579
 15002  003E24                     u9260:
 15003                           
 15004                           ; BSR set to: 0
 15005  003E24  0E00               	movlw	0
 15006  003E26  6F76               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15007  003E28  6975               	setf	___fldiv@new_exp& (0+255),b
 15008  003E2A  0E00               	movlw	0
 15009  003E2C  6F68               	movwf	___fldiv@b& (0+255),b
 15010  003E2E  0E00               	movlw	0
 15011  003E30  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 15012  003E32  0E00               	movlw	0
 15013  003E34  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 15014  003E36  0E00               	movlw	0
 15015  003E38  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 15016  003E3A                     l8579:
 15017                           
 15018                           ; BSR set to: 0
 15019  003E3A  BF76               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15020  003E3C  D005               	goto	u9270
 15021  003E3E  5176               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15022  003E40  E111               	bnz	l8583
 15023  003E42  0575               	decf	___fldiv@new_exp& (0+255),w,b
 15024  003E44  B0D8               	btfsc	status,0,c
 15025  003E46  D00E               	goto	l8583
 15026  003E48                     u9270:
 15027                           
 15028                           ; BSR set to: 0
 15029  003E48  0E00               	movlw	0
 15030  003E4A  6F76               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15031  003E4C  0E00               	movlw	0
 15032  003E4E  6F75               	movwf	___fldiv@new_exp& (0+255),b
 15033  003E50  0E00               	movlw	0
 15034  003E52  6F68               	movwf	___fldiv@b& (0+255),b
 15035  003E54  0E00               	movlw	0
 15036  003E56  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 15037  003E58  0E00               	movlw	0
 15038  003E5A  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 15039  003E5C  0E00               	movlw	0
 15040  003E5E  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 15041  003E60  0E00               	movlw	0
 15042  003E62  6F74               	movwf	___fldiv@sign& (0+255),b
 15043  003E64                     l8583:
 15044                           
 15045                           ; BSR set to: 0
 15046  003E64  C075  F07B         	movff	___fldiv@new_exp,___fldiv@bexp
 15047                           
 15048                           ; BSR set to: 0
 15049  003E68  A17B               	btfss	___fldiv@bexp& (0+255),0,b
 15050  003E6A  D002               	goto	l8589
 15051                           
 15052                           ; BSR set to: 0
 15053  003E6C  8F6A               	bsf	(___fldiv@b+2)& (0+255),7,b
 15054  003E6E  D001               	goto	l8591
 15055  003E70                     l8589:
 15056                           
 15057                           ; BSR set to: 0
 15058  003E70  9F6A               	bcf	(___fldiv@b+2)& (0+255),7,b
 15059  003E72                     l8591:
 15060                           
 15061                           ; BSR set to: 0
 15062  003E72  90D8               	bcf	status,0,c
 15063  003E74  317B               	rrcf	___fldiv@bexp& (0+255),w,b
 15064  003E76  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 15065  003E78  D70E               	goto	l8505
 15066  003E7A                     __end_of___fldiv:
 15067                           	opt callstack 0
 15068                           
 15069 ;; *************** function ___fltol *****************
 15070 ;; Defined at:
 15071 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 15072 ;; Parameters:    Size  Location     Type
 15073 ;;  f1              4   82[BANK0 ] unsigned char 
 15074 ;; Auto vars:     Size  Location     Type
 15075 ;;  exp1            1   91[BANK0 ] unsigned char 
 15076 ;;  sign1           1   90[BANK0 ] unsigned char 
 15077 ;; Return value:  Size  Location     Type
 15078 ;;                  4   82[BANK0 ] long 
 15079 ;; Registers used:
 15080 ;;		wreg, status,2, status,0
 15081 ;; Tracked objects:
 15082 ;;		On entry : 0/0
 15083 ;;		On exit  : 0/0
 15084 ;;		Unchanged: 0/0
 15085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15086 ;;      Params:         0       4       0       0       0       0       0       0       0
 15087 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15088 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15089 ;;      Totals:         0      10       0       0       0       0       0       0       0
 15090 ;;Total ram usage:       10 bytes
 15091 ;; Hardware stack levels used:    1
 15092 ;; Hardware stack levels required when called:    7
 15093 ;; This function calls:
 15094 ;;		Nothing
 15095 ;; This function is called by:
 15096 ;;		_AD9833_SetFrequency
 15097 ;; This function uses a non-reentrant model
 15098 ;;
 15099                           
 15100                           	psect	text62
 15101  004DAE                     __ptext62:
 15102                           	opt callstack 0
 15103  004DAE                     ___fltol:
 15104                           	opt callstack 21
 15105                           
 15106                           ; BSR set to: 0
 15107                           ;incstack = 0
 15108  004DAE  0100               	movlb	0	; () banked
 15109  004DB0  35B4               	rlcf	(___fltol@f1+2)& (0+255),w,b
 15110  004DB2  35B5               	rlcf	(___fltol@f1+3)& (0+255),w,b
 15111  004DB4  6FBB               	movwf	___fltol@exp1& (0+255),b
 15112  004DB6  51BB               	movf	___fltol@exp1& (0+255),w,b
 15113  004DB8  A4D8               	btfss	status,2,c
 15114  004DBA  D009               	goto	l5875
 15115  004DBC                     u5880:
 15116                           
 15117                           ; BSR set to: 0
 15118  004DBC  0E00               	movlw	0
 15119  004DBE  6FB2               	movwf	?___fltol& (0+255),b
 15120  004DC0  0E00               	movlw	0
 15121  004DC2  6FB3               	movwf	(?___fltol+1)& (0+255),b
 15122  004DC4  0E00               	movlw	0
 15123  004DC6  6FB4               	movwf	(?___fltol+2)& (0+255),b
 15124  004DC8  0E00               	movlw	0
 15125  004DCA  6FB5               	movwf	(?___fltol+3)& (0+255),b
 15126  004DCC  0012               	return	
 15127  004DCE                     l5875:
 15128                           
 15129                           ; BSR set to: 0
 15130  004DCE  C0B2  F0B6         	movff	___fltol@f1,??___fltol
 15131  004DD2  C0B3  F0B7         	movff	___fltol@f1+1,??___fltol+1
 15132  004DD6  C0B4  F0B8         	movff	___fltol@f1+2,??___fltol+2
 15133  004DDA  C0B5  F0B9         	movff	___fltol@f1+3,??___fltol+3
 15134  004DDE  0E20               	movlw	32
 15135  004DE0  D005               	goto	u5890
 15136  004DE2                     u5895:
 15137  004DE2  90D8               	bcf	status,0,c
 15138  004DE4  33B9               	rrcf	(??___fltol+3)& (0+255),f,b
 15139  004DE6  33B8               	rrcf	(??___fltol+2)& (0+255),f,b
 15140  004DE8  33B7               	rrcf	(??___fltol+1)& (0+255),f,b
 15141  004DEA  33B6               	rrcf	??___fltol& (0+255),f,b
 15142  004DEC                     u5890:
 15143  004DEC  2EE8               	decfsz	wreg,f,c
 15144  004DEE  D7F9               	goto	u5895
 15145  004DF0  51B6               	movf	??___fltol& (0+255),w,b
 15146  004DF2  6FBA               	movwf	___fltol@sign1& (0+255),b
 15147                           
 15148                           ; BSR set to: 0
 15149  004DF4  8FB4               	bsf	(___fltol@f1+2)& (0+255),7,b
 15150                           
 15151                           ; BSR set to: 0
 15152  004DF6  0EFF               	movlw	255
 15153  004DF8  17B2               	andwf	___fltol@f1& (0+255),f,b
 15154  004DFA  0EFF               	movlw	255
 15155  004DFC  17B3               	andwf	(___fltol@f1+1)& (0+255),f,b
 15156  004DFE  0EFF               	movlw	255
 15157  004E00  17B4               	andwf	(___fltol@f1+2)& (0+255),f,b
 15158  004E02  0E00               	movlw	0
 15159  004E04  17B5               	andwf	(___fltol@f1+3)& (0+255),f,b
 15160                           
 15161                           ; BSR set to: 0
 15162  004E06  0E96               	movlw	150
 15163  004E08  5FBB               	subwf	___fltol@exp1& (0+255),f,b
 15164                           
 15165                           ; BSR set to: 0
 15166  004E0A  AFBB               	btfss	___fltol@exp1& (0+255),7,b
 15167  004E0C  D00D               	goto	l5895
 15168                           
 15169                           ; BSR set to: 0
 15170  004E0E  51BB               	movf	___fltol@exp1& (0+255),w,b
 15171  004E10  0A80               	xorlw	128
 15172  004E12  0F97               	addlw	151
 15173  004E14  A0D8               	btfss	status,0,c
 15174  004E16  D7D2               	goto	u5880
 15175  004E18                     l5891:
 15176                           
 15177                           ; BSR set to: 0
 15178  004E18  90D8               	bcf	status,0,c
 15179  004E1A  33B5               	rrcf	(___fltol@f1+3)& (0+255),f,b
 15180  004E1C  33B4               	rrcf	(___fltol@f1+2)& (0+255),f,b
 15181  004E1E  33B3               	rrcf	(___fltol@f1+1)& (0+255),f,b
 15182  004E20  33B2               	rrcf	___fltol@f1& (0+255),f,b
 15183                           
 15184                           ; BSR set to: 0
 15185  004E22  3FBB               	incfsz	___fltol@exp1& (0+255),f,b
 15186  004E24  D7F9               	goto	l5891
 15187  004E26  D00D               	goto	u5930
 15188  004E28                     l5895:
 15189                           
 15190                           ; BSR set to: 0
 15191  004E28  0E1F               	movlw	31
 15192  004E2A  65BB               	cpfsgt	___fltol@exp1& (0+255),b
 15193  004E2C  D007               	goto	l5903
 15194  004E2E  D7C6               	goto	u5880
 15195  004E30                     l5901:
 15196                           
 15197                           ; BSR set to: 0
 15198  004E30  90D8               	bcf	status,0,c
 15199  004E32  37B2               	rlcf	___fltol@f1& (0+255),f,b
 15200  004E34  37B3               	rlcf	(___fltol@f1+1)& (0+255),f,b
 15201  004E36  37B4               	rlcf	(___fltol@f1+2)& (0+255),f,b
 15202  004E38  37B5               	rlcf	(___fltol@f1+3)& (0+255),f,b
 15203  004E3A  07BB               	decf	___fltol@exp1& (0+255),f,b
 15204  004E3C                     l5903:
 15205                           
 15206                           ; BSR set to: 0
 15207  004E3C  51BB               	movf	___fltol@exp1& (0+255),w,b
 15208  004E3E  A4D8               	btfss	status,2,c
 15209  004E40  D7F7               	goto	l5901
 15210  004E42                     u5930:
 15211                           
 15212                           ; BSR set to: 0
 15213  004E42  51BA               	movf	___fltol@sign1& (0+255),w,b
 15214  004E44  B4D8               	btfsc	status,2,c
 15215  004E46  D008               	goto	l5909
 15216                           
 15217                           ; BSR set to: 0
 15218  004E48  1FB5               	comf	(___fltol@f1+3)& (0+255),f,b
 15219  004E4A  1FB4               	comf	(___fltol@f1+2)& (0+255),f,b
 15220  004E4C  1FB3               	comf	(___fltol@f1+1)& (0+255),f,b
 15221  004E4E  6DB2               	negf	___fltol@f1& (0+255),b
 15222  004E50  0E00               	movlw	0
 15223  004E52  23B3               	addwfc	(___fltol@f1+1)& (0+255),f,b
 15224  004E54  23B4               	addwfc	(___fltol@f1+2)& (0+255),f,b
 15225  004E56  23B5               	addwfc	(___fltol@f1+3)& (0+255),f,b
 15226  004E58                     l5909:
 15227                           
 15228                           ; BSR set to: 0
 15229  004E58  C0B2  F0B2         	movff	___fltol@f1,?___fltol
 15230  004E5C  C0B3  F0B3         	movff	___fltol@f1+1,?___fltol+1
 15231  004E60  C0B4  F0B4         	movff	___fltol@f1+2,?___fltol+2
 15232  004E64  C0B5  F0B5         	movff	___fltol@f1+3,?___fltol+3
 15233                           
 15234                           ; BSR set to: 0
 15235  004E68  0012               	return		;funcret
 15236  004E6A                     __end_of___fltol:
 15237                           	opt callstack 0
 15238                           
 15239 ;; *************** function _SPI1_WriteWord *****************
 15240 ;; Defined at:
 15241 ;;		line 87 in file "mcc_generated_files/spi1.c"
 15242 ;; Parameters:    Size  Location     Type
 15243 ;;  word            2   11[COMRAM] unsigned short 
 15244 ;; Auto vars:     Size  Location     Type
 15245 ;;  byteh           1   14[COMRAM] unsigned char 
 15246 ;;  bytel           1   13[COMRAM] unsigned char 
 15247 ;; Return value:  Size  Location     Type
 15248 ;;                  1    wreg      void 
 15249 ;; Registers used:
 15250 ;;		wreg, status,2
 15251 ;; Tracked objects:
 15252 ;;		On entry : 0/0
 15253 ;;		On exit  : 0/0
 15254 ;;		Unchanged: 0/0
 15255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15256 ;;      Params:         2       0       0       0       0       0       0       0       0
 15257 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15258 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15259 ;;      Totals:         4       0       0       0       0       0       0       0       0
 15260 ;;Total ram usage:        4 bytes
 15261 ;; Hardware stack levels used:    1
 15262 ;; Hardware stack levels required when called:    7
 15263 ;; This function calls:
 15264 ;;		Nothing
 15265 ;; This function is called by:
 15266 ;;		_AD9833_Init
 15267 ;;		_AD9833_SetFrequency
 15268 ;; This function uses a non-reentrant model
 15269 ;;
 15270                           
 15271                           	psect	text63
 15272  005964                     __ptext63:
 15273                           	opt callstack 0
 15274  005964                     _SPI1_WriteWord:
 15275                           	opt callstack 21
 15276                           
 15277                           ;mcc_generated_files/spi1.c: 87: void SPI1_WriteWord(uint16_t word);mcc_generated_files/
      +                          spi1.c: 88: {;mcc_generated_files/spi1.c: 90:     uint8_t bytel = word;
 15278                           
 15279                           ; BSR set to: 0
 15280                           ;incstack = 0
 15281  005964  C00C  F00E         	movff	SPI1_WriteWord@word,SPI1_WriteWord@bytel
 15282                           
 15283                           ;mcc_generated_files/spi1.c: 91:     uint8_t byteh = word >> 8;
 15284  005968  500D               	movf	SPI1_WriteWord@word+1,w,c
 15285  00596A  6E0F               	movwf	SPI1_WriteWord@byteh,c
 15286                           
 15287                           ;mcc_generated_files/spi1.c: 94:     PORTCbits.RC0 = 0;
 15288  00596C  908F               	bcf	3983,0,c	;volatile
 15289                           
 15290                           ;mcc_generated_files/spi1.c: 96:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 15291  00596E  0E35               	movlw	53
 15292  005970                     u10287:
 15293  005970  2EE8               	decfsz	wreg,f,c
 15294  005972  D7FE               	bra	u10287
 15295  005974  F000               	nop	
 15296                           
 15297                           ;mcc_generated_files/spi1.c: 98:     SSP1BUF = byteh;
 15298  005976  C00F  FF92         	movff	SPI1_WriteWord@byteh,3986	;volatile
 15299                           
 15300                           ;mcc_generated_files/spi1.c: 100:     _delay((unsigned long)((33)*(64000000/4000000.0)))
      +                          ;
 15301  00597A  0EB0               	movlw	176
 15302  00597C                     u10297:
 15303  00597C  2EE8               	decfsz	wreg,f,c
 15304  00597E  D7FE               	bra	u10297
 15305                           
 15306                           ;mcc_generated_files/spi1.c: 102:     SSP1BUF = bytel;
 15307  005980  C00E  FF92         	movff	SPI1_WriteWord@bytel,3986	;volatile
 15308                           
 15309                           ;mcc_generated_files/spi1.c: 104:     _delay((unsigned long)((33)*(64000000/4000000.0)))
      +                          ;
 15310  005984  0EB0               	movlw	176
 15311  005986                     u10307:
 15312  005986  2EE8               	decfsz	wreg,f,c
 15313  005988  D7FE               	bra	u10307
 15314                           
 15315                           ;mcc_generated_files/spi1.c: 106:     PORTCbits.RC0 = 1;
 15316  00598A  808F               	bsf	3983,0,c	;volatile
 15317  00598C  0012               	return		;funcret
 15318  00598E                     __end_of_SPI1_WriteWord:
 15319                           	opt callstack 0
 15320                           
 15321 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 15322 ;; Defined at:
 15323 ;;		line 111 in file "mcc_generated_files/interrupt_manager.c"
 15324 ;; Parameters:    Size  Location     Type
 15325 ;;		None
 15326 ;; Auto vars:     Size  Location     Type
 15327 ;;		None
 15328 ;; Return value:  Size  Location     Type
 15329 ;;                  1    wreg      void 
 15330 ;; Registers used:
 15331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15332 ;; Tracked objects:
 15333 ;;		On entry : 0/0
 15334 ;;		On exit  : 0/0
 15335 ;;		Unchanged: 0/0
 15336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15337 ;;      Params:         0       0       0       0       0       0       0       0       0
 15338 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15339 ;;      Temps:          7       0       0       0       0       0       0       0       0
 15340 ;;      Totals:         7       0       0       0       0       0       0       0       0
 15341 ;;Total ram usage:        7 bytes
 15342 ;; Hardware stack levels used:    1
 15343 ;; Hardware stack levels required when called:    6
 15344 ;; This function calls:
 15345 ;;		Absolute function
 15346 ;;		_EUSART_Receive_ISR
 15347 ;;		_EUSART_Transmit_ISR
 15348 ;;		_INT0_ISR
 15349 ;;		_TMR1_ISR
 15350 ;;		_TMR3_ISR
 15351 ;; This function is called by:
 15352 ;;		Interrupt level 1
 15353 ;; This function uses a non-reentrant model
 15354 ;;
 15355                           
 15356                           	psect	intcodelo
 15357  000018                     __pintcodelo:
 15358                           	opt callstack 0
 15359  000018                     _INTERRUPT_InterruptManagerLow:
 15360                           	opt callstack 15
 15361                           
 15362                           ;incstack = 0
 15363  000018  8054               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 15364  00001A  CFD8 F005          	movff	status,??_INTERRUPT_InterruptManagerLow
 15365  00001E  CFE8 F006          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 15366  000022  CFE0 F007          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 15367  000026  CFFA F008          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 15368  00002A  CFFB F009          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 15369  00002E  CFD9 F00A          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+5
 15370  000032  CFDA F00B          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+6
 15371                           
 15372                           ;mcc_generated_files/interrupt_manager.c: 114:     if(PIE4bits.TMR3IE == 1 && PIR4bits.T
      +                          MR3IF == 1)
 15373  000036  010E               	movlb	14	; () banked
 15374  000038  B5C6               	btfsc	198,2,b	;volatile
 15375                           
 15376                           ; BSR set to: 14
 15377  00003A  A5CE               	btfss	206,2,b	;volatile
 15378  00003C  D003               	goto	i1l207
 15379                           
 15380                           ; BSR set to: 14
 15381                           ;mcc_generated_files/interrupt_manager.c: 115:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 117:         TMR3_ISR();
 15382  00003E  EC41  F02C         	call	_TMR3_ISR	;wreg free
 15383                           
 15384                           ;mcc_generated_files/interrupt_manager.c: 118:     }
 15385  000042  D027               	goto	i1l212
 15386  000044                     i1l207:
 15387                           
 15388                           ; BSR set to: 14
 15389  000044  B1C6               	btfsc	198,0,b	;volatile
 15390                           
 15391                           ; BSR set to: 14
 15392  000046  A1CE               	btfss	206,0,b	;volatile
 15393  000048  D003               	goto	i1l209
 15394                           
 15395                           ; BSR set to: 14
 15396                           ;mcc_generated_files/interrupt_manager.c: 120:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 122:         TMR1_ISR();
 15397  00004A  EC54  F02D         	call	_TMR1_ISR	;wreg free
 15398                           
 15399                           ;mcc_generated_files/interrupt_manager.c: 123:     }
 15400  00004E  D021               	goto	i1l212
 15401  000050                     i1l209:
 15402                           
 15403                           ; BSR set to: 14
 15404  000050  B9C5               	btfsc	197,4,b	;volatile
 15405                           
 15406                           ; BSR set to: 14
 15407  000052  A9CD               	btfss	205,4,b	;volatile
 15408  000054  D009               	goto	i1l211
 15409                           
 15410                           ; BSR set to: 14
 15411                           ;mcc_generated_files/interrupt_manager.c: 125:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 127:         EUSART_TxDefaultInterruptHandler();
 15412  000056  D801               	call	i1u666_28
 15413  000058  D01C               	goto	i1l212
 15414  00005A                     i1u666_28:
 15415  00005A  0005               	push	
 15416  00005C  0100               	movlb	0	; () banked
 15417  00005E  6EFA               	movwf	pclath,c
 15418  000060  51F3               	movf	_EUSART_TxDefaultInterruptHandler& (0+255),w,b
 15419  000062  6EFD               	movwf	tosl,c
 15420  000064  51F4               	movf	(_EUSART_TxDefaultInterruptHandler+1)& (0+255),w,b
 15421  000066  D00B               	goto	L14
 15422  000068                     i1l211:
 15423                           
 15424                           ; BSR set to: 14
 15425  000068  BBC5               	btfsc	197,5,b	;volatile
 15426                           
 15427                           ; BSR set to: 14
 15428  00006A  ABCD               	btfss	205,5,b	;volatile
 15429  00006C  D00D               	goto	i1l213
 15430                           
 15431                           ; BSR set to: 14
 15432                           ;mcc_generated_files/interrupt_manager.c: 130:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 132:         EUSART_RxDefaultInterruptHandler();
 15433  00006E  D801               	call	i1u669_28
 15434  000070  D010               	goto	i1l212
 15435  000072                     i1u669_28:
 15436  000072  0005               	push	
 15437  000074  0101               	movlb	1	; () banked
 15438  000076  6EFA               	movwf	pclath,c
 15439  000078  51FE               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
 15440  00007A  6EFD               	movwf	tosl,c
 15441  00007C  51FF               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
 15442  00007E                     L14:
 15443  00007E  6EFE               	movwf	tosh,c
 15444  000080  50F8               	movf	tblptru,w,c
 15445  000082  6EFF               	movwf	tosu,c
 15446  000084  50FA               	movf	pclath,w,c
 15447  000086  0012               	return		;indir
 15448  000088                     i1l213:
 15449                           
 15450                           ; BSR set to: 14
 15451  000088  B1C2               	btfsc	194,0,b	;volatile
 15452                           
 15453                           ; BSR set to: 14
 15454  00008A  A1CA               	btfss	202,0,b	;volatile
 15455  00008C  D002               	goto	i1l212
 15456                           
 15457                           ; BSR set to: 14
 15458                           ;mcc_generated_files/interrupt_manager.c: 135:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 137:         INT0_ISR();
 15459  00008E  ECCA  F02B         	call	_INT0_ISR	;wreg free
 15460  000092                     i1l212:
 15461                           
 15462                           ; BSR set to: 14
 15463  000092  C00B  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr2h
 15464  000096  C00A  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr2l
 15465  00009A  C009  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 15466  00009E  C008  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 15467  0000A2  C007  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 15468  0000A6  C006  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 15469  0000AA  C005  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 15470  0000AE  9054               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 15471  0000B0  0010               	retfie	
 15472  0000B2                     __end_of_INTERRUPT_InterruptManagerLow:
 15473                           	opt callstack 0
 15474                           
 15475 ;; *************** function _TMR3_ISR *****************
 15476 ;; Defined at:
 15477 ;;		line 109 in file "mcc_generated_files/tmr3.c"
 15478 ;; Parameters:    Size  Location     Type
 15479 ;;		None
 15480 ;; Auto vars:     Size  Location     Type
 15481 ;;		None
 15482 ;; Return value:  Size  Location     Type
 15483 ;;                  1    wreg      void 
 15484 ;; Registers used:
 15485 ;;		wreg, status,2, status,0, cstack
 15486 ;; Tracked objects:
 15487 ;;		On entry : 0/0
 15488 ;;		On exit  : 0/0
 15489 ;;		Unchanged: 0/0
 15490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15491 ;;      Params:         0       0       0       0       0       0       0       0       0
 15492 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15493 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15494 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15495 ;;Total ram usage:        0 bytes
 15496 ;; Hardware stack levels used:    1
 15497 ;; Hardware stack levels required when called:    5
 15498 ;; This function calls:
 15499 ;;		_TMR3_StartTimer
 15500 ;;		_TMR3_StopTimer
 15501 ;;		_TMR3_WriteTimer
 15502 ;;		i1_TMR0_StartTimer
 15503 ;; This function is called by:
 15504 ;;		_INTERRUPT_InterruptManagerLow
 15505 ;; This function uses a non-reentrant model
 15506 ;;
 15507                           
 15508                           	psect	text65
 15509  005882                     __ptext65:
 15510                           	opt callstack 0
 15511  005882                     _TMR3_ISR:
 15512                           	opt callstack 15
 15513                           
 15514                           ;mcc_generated_files/tmr3.c: 112:     TMR3_StopTimer();
 15515                           
 15516                           ;incstack = 0
 15517  005882  ECD0  F02D         	call	_TMR3_StopTimer	;wreg free
 15518                           
 15519                           ;mcc_generated_files/tmr3.c: 114:     PIR4bits.TMR3IF = 0;
 15520  005886  010E               	movlb	14	; () banked
 15521  005888  95CE               	bcf	206,2,b	;volatile
 15522                           
 15523                           ; BSR set to: 14
 15524                           ;mcc_generated_files/tmr3.c: 116:     TMR3_WriteTimer(timer3ReloadVal);
 15525  00588A  C0EF  F003         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 15526  00588E  C0F0  F004         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 15527  005892  EC1E  F02D         	call	_TMR3_WriteTimer	;wreg free
 15528                           
 15529                           ;mcc_generated_files/tmr3.c: 118:     temp_break_duration--;
 15530  005896  0642               	decf	_temp_break_duration,f,c	;volatile
 15531  005898  A0D8               	btfss	status,0,c
 15532  00589A  0643               	decf	_temp_break_duration+1,f,c	;volatile
 15533                           
 15534                           ;mcc_generated_files/tmr3.c: 120:     if(temp_break_duration > 0){
 15535  00589C  5042               	movf	_temp_break_duration,w,c	;volatile
 15536  00589E  1043               	iorwf	_temp_break_duration+1,w,c	;volatile
 15537  0058A0  B4D8               	btfsc	status,2,c
 15538  0058A2  D003               	goto	i1l6263
 15539                           
 15540                           ;mcc_generated_files/tmr3.c: 122:         TMR3_StartTimer();
 15541  0058A4  EC68  F02D         	call	_TMR3_StartTimer	;wreg free
 15542                           
 15543                           ;mcc_generated_files/tmr3.c: 123:     }else{
 15544  0058A8  0012               	return	
 15545  0058AA                     i1l6263:
 15546                           
 15547                           ;mcc_generated_files/tmr3.c: 125:         TMR0_StartTimer();
 15548  0058AA  EC7F  F02D         	call	i1_TMR0_StartTimer	;wreg free
 15549  0058AE  0012               	return		;funcret
 15550  0058B0                     __end_of_TMR3_ISR:
 15551                           	opt callstack 0
 15552                           
 15553 ;; *************** function _TMR3_StopTimer *****************
 15554 ;; Defined at:
 15555 ;;		line 81 in file "mcc_generated_files/tmr3.c"
 15556 ;; Parameters:    Size  Location     Type
 15557 ;;		None
 15558 ;; Auto vars:     Size  Location     Type
 15559 ;;		None
 15560 ;; Return value:  Size  Location     Type
 15561 ;;                  1    wreg      void 
 15562 ;; Registers used:
 15563 ;;		None
 15564 ;; Tracked objects:
 15565 ;;		On entry : 0/0
 15566 ;;		On exit  : 0/0
 15567 ;;		Unchanged: 0/0
 15568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15569 ;;      Params:         0       0       0       0       0       0       0       0       0
 15570 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15571 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15572 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15573 ;;Total ram usage:        0 bytes
 15574 ;; Hardware stack levels used:    1
 15575 ;; Hardware stack levels required when called:    3
 15576 ;; This function calls:
 15577 ;;		Nothing
 15578 ;; This function is called by:
 15579 ;;		_TMR3_ISR
 15580 ;; This function uses a non-reentrant model
 15581 ;;
 15582                           
 15583                           	psect	text66
 15584  005BA0                     __ptext66:
 15585                           	opt callstack 0
 15586  005BA0                     _TMR3_StopTimer:
 15587                           	opt callstack 16
 15588                           
 15589                           ;mcc_generated_files/tmr3.c: 84:     T3CONbits.TMR3ON = 0;
 15590                           
 15591                           ;incstack = 0
 15592  005BA0  90C9               	bcf	4041,0,c	;volatile
 15593  005BA2  0012               	return		;funcret
 15594  005BA4                     __end_of_TMR3_StopTimer:
 15595                           	opt callstack 0
 15596                           
 15597 ;; *************** function _TMR3_StartTimer *****************
 15598 ;; Defined at:
 15599 ;;		line 74 in file "mcc_generated_files/tmr3.c"
 15600 ;; Parameters:    Size  Location     Type
 15601 ;;		None
 15602 ;; Auto vars:     Size  Location     Type
 15603 ;;		None
 15604 ;; Return value:  Size  Location     Type
 15605 ;;                  1    wreg      void 
 15606 ;; Registers used:
 15607 ;;		wreg, status,2, cstack
 15608 ;; Tracked objects:
 15609 ;;		On entry : 0/0
 15610 ;;		On exit  : 0/0
 15611 ;;		Unchanged: 0/0
 15612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15613 ;;      Params:         0       0       0       0       0       0       0       0       0
 15614 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15615 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15616 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15617 ;;Total ram usage:        0 bytes
 15618 ;; Hardware stack levels used:    1
 15619 ;; Hardware stack levels required when called:    4
 15620 ;; This function calls:
 15621 ;;		_TMR3_WriteTimer
 15622 ;; This function is called by:
 15623 ;;		_TMR3_ISR
 15624 ;; This function uses a non-reentrant model
 15625 ;;
 15626                           
 15627                           	psect	text67
 15628  005AD0                     __ptext67:
 15629                           	opt callstack 0
 15630  005AD0                     _TMR3_StartTimer:
 15631                           	opt callstack 15
 15632                           
 15633                           ;mcc_generated_files/tmr3.c: 76:     TMR3_WriteTimer(timer3ReloadVal);
 15634                           
 15635                           ;incstack = 0
 15636  005AD0  C0EF  F003         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 15637  005AD4  C0F0  F004         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 15638  005AD8  EC1E  F02D         	call	_TMR3_WriteTimer	;wreg free
 15639                           
 15640                           ;mcc_generated_files/tmr3.c: 78:     T3CONbits.TMR3ON = 1;
 15641  005ADC  80C9               	bsf	4041,0,c	;volatile
 15642  005ADE  0012               	return		;funcret
 15643  005AE0                     __end_of_TMR3_StartTimer:
 15644                           	opt callstack 0
 15645                           
 15646 ;; *************** function _TMR3_WriteTimer *****************
 15647 ;; Defined at:
 15648 ;;		line 87 in file "mcc_generated_files/tmr3.c"
 15649 ;; Parameters:    Size  Location     Type
 15650 ;;  timerVal        2    2[COMRAM] unsigned short 
 15651 ;; Auto vars:     Size  Location     Type
 15652 ;;		None
 15653 ;; Return value:  Size  Location     Type
 15654 ;;                  1    wreg      void 
 15655 ;; Registers used:
 15656 ;;		wreg, status,2
 15657 ;; Tracked objects:
 15658 ;;		On entry : 0/0
 15659 ;;		On exit  : 0/0
 15660 ;;		Unchanged: 0/0
 15661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15662 ;;      Params:         2       0       0       0       0       0       0       0       0
 15663 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15664 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15665 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15666 ;;Total ram usage:        2 bytes
 15667 ;; Hardware stack levels used:    1
 15668 ;; Hardware stack levels required when called:    3
 15669 ;; This function calls:
 15670 ;;		Nothing
 15671 ;; This function is called by:
 15672 ;;		_TMR3_StartTimer
 15673 ;;		_TMR3_ISR
 15674 ;; This function uses a non-reentrant model
 15675 ;;
 15676                           
 15677                           	psect	text68
 15678  005A3C                     __ptext68:
 15679                           	opt callstack 0
 15680  005A3C                     _TMR3_WriteTimer:
 15681                           	opt callstack 16
 15682                           
 15683                           ;mcc_generated_files/tmr3.c: 87: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_f
      +                          iles/tmr3.c: 88: {;mcc_generated_files/tmr3.c: 89:     if (T3CONbits.nT3SYNC == 1)
 15684                           
 15685                           ;incstack = 0
 15686  005A3C  A4C9               	btfss	4041,2,c	;volatile
 15687  005A3E  D007               	goto	i1l5393
 15688                           
 15689                           ;mcc_generated_files/tmr3.c: 90:     {;mcc_generated_files/tmr3.c: 92:         T3CONbits
      +                          .TMR3ON = 0;
 15690  005A40  90C9               	bcf	4041,0,c	;volatile
 15691                           
 15692                           ;mcc_generated_files/tmr3.c: 95:         TMR3H = (timerVal >> 8);
 15693  005A42  5004               	movf	TMR3_WriteTimer@timerVal+1,w,c
 15694  005A44  6EC8               	movwf	4040,c	;volatile
 15695                           
 15696                           ;mcc_generated_files/tmr3.c: 96:         TMR3L = timerVal;
 15697  005A46  C003  FFC7         	movff	TMR3_WriteTimer@timerVal,4039	;volatile
 15698                           
 15699                           ;mcc_generated_files/tmr3.c: 99:         T3CONbits.TMR3ON =1;
 15700  005A4A  80C9               	bsf	4041,0,c	;volatile
 15701                           
 15702                           ;mcc_generated_files/tmr3.c: 100:     }
 15703  005A4C  0012               	return	
 15704  005A4E                     i1l5393:
 15705                           
 15706                           ;mcc_generated_files/tmr3.c: 102:     {;mcc_generated_files/tmr3.c: 104:         TMR3H =
      +                           (timerVal >> 8);
 15707  005A4E  5004               	movf	TMR3_WriteTimer@timerVal+1,w,c
 15708  005A50  6EC8               	movwf	4040,c	;volatile
 15709                           
 15710                           ;mcc_generated_files/tmr3.c: 105:         TMR3L = timerVal;
 15711  005A52  C003  FFC7         	movff	TMR3_WriteTimer@timerVal,4039	;volatile
 15712  005A56  0012               	return		;funcret
 15713  005A58                     __end_of_TMR3_WriteTimer:
 15714                           	opt callstack 0
 15715                           
 15716 ;; *************** function _TMR1_ISR *****************
 15717 ;; Defined at:
 15718 ;;		line 110 in file "mcc_generated_files/tmr1.c"
 15719 ;; Parameters:    Size  Location     Type
 15720 ;;		None
 15721 ;; Auto vars:     Size  Location     Type
 15722 ;;		None
 15723 ;; Return value:  Size  Location     Type
 15724 ;;                  1    wreg      void 
 15725 ;; Registers used:
 15726 ;;		wreg, status,2, cstack
 15727 ;; Tracked objects:
 15728 ;;		On entry : 0/0
 15729 ;;		On exit  : 0/0
 15730 ;;		Unchanged: 0/0
 15731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15732 ;;      Params:         0       0       0       0       0       0       0       0       0
 15733 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15734 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15735 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15736 ;;Total ram usage:        0 bytes
 15737 ;; Hardware stack levels used:    1
 15738 ;; Hardware stack levels required when called:    4
 15739 ;; This function calls:
 15740 ;;		_TMR1_WriteTimer
 15741 ;; This function is called by:
 15742 ;;		_INTERRUPT_InterruptManagerLow
 15743 ;; This function uses a non-reentrant model
 15744 ;;
 15745                           
 15746                           	psect	text69
 15747  005AA8                     __ptext69:
 15748                           	opt callstack 0
 15749  005AA8                     _TMR1_ISR:
 15750                           	opt callstack 16
 15751                           
 15752                           ;mcc_generated_files/tmr1.c: 114:     PIR4bits.TMR1IF = 0;
 15753                           
 15754                           ;incstack = 0
 15755  005AA8  010E               	movlb	14	; () banked
 15756  005AAA  91CE               	bcf	206,0,b	;volatile
 15757                           
 15758                           ; BSR set to: 14
 15759                           ;mcc_generated_files/tmr1.c: 115:     TMR1_WriteTimer(timer1ReloadVal);
 15760  005AAC  C0F1  F003         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 15761  005AB0  C0F2  F004         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 15762  005AB4  EC2C  F02D         	call	_TMR1_WriteTimer	;wreg free
 15763                           
 15764                           ;mcc_generated_files/tmr1.c: 118:     sec = 1;
 15765  005AB8  0E01               	movlw	1
 15766  005ABA  6E47               	movwf	_sec,c
 15767  005ABC  0012               	return		;funcret
 15768  005ABE                     __end_of_TMR1_ISR:
 15769                           	opt callstack 0
 15770                           
 15771 ;; *************** function _INT0_ISR *****************
 15772 ;; Defined at:
 15773 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 15774 ;; Parameters:    Size  Location     Type
 15775 ;;		None
 15776 ;; Auto vars:     Size  Location     Type
 15777 ;;		None
 15778 ;; Return value:  Size  Location     Type
 15779 ;;                  1    wreg      void 
 15780 ;; Registers used:
 15781 ;;		wreg, status,2, status,0, cstack
 15782 ;; Tracked objects:
 15783 ;;		On entry : 0/0
 15784 ;;		On exit  : 0/0
 15785 ;;		Unchanged: 0/0
 15786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15787 ;;      Params:         0       0       0       0       0       0       0       0       0
 15788 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15789 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15790 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15791 ;;Total ram usage:        0 bytes
 15792 ;; Hardware stack levels used:    1
 15793 ;; Hardware stack levels required when called:    5
 15794 ;; This function calls:
 15795 ;;		i1_SPI1_Close
 15796 ;;		i1_TMR0_Reload
 15797 ;;		i1_TMR0_StartTimer
 15798 ;; This function is called by:
 15799 ;;		_INTERRUPT_InterruptManagerLow
 15800 ;; This function uses a non-reentrant model
 15801 ;;
 15802                           
 15803                           	psect	text70
 15804  005794                     __ptext70:
 15805                           	opt callstack 0
 15806  005794                     _INT0_ISR:
 15807                           	opt callstack 15
 15808                           
 15809                           ;mcc_generated_files/ext_int.c: 44:     (PIR0bits.INT0IF = 0);
 15810                           
 15811                           ;incstack = 0
 15812  005794  010E               	movlb	14	; () banked
 15813  005796  91CA               	bcf	202,0,b	;volatile
 15814                           
 15815                           ;mcc_generated_files/ext_int.c: 46:     (PIE0bits.INT0IE = 0);
 15816  005798  91C2               	bcf	194,0,b	;volatile
 15817                           
 15818                           ;mcc_generated_files/ext_int.c: 48:     PIE3bits.RCIE = 0;
 15819  00579A  9BC5               	bcf	197,5,b	;volatile
 15820                           
 15821                           ;mcc_generated_files/ext_int.c: 49:     PIE3bits.TXIE = 0;
 15822  00579C  99C5               	bcf	197,4,b	;volatile
 15823                           
 15824                           ; BSR set to: 14
 15825                           ;mcc_generated_files/ext_int.c: 51:     SPI1_Close();
 15826  00579E  ECD2  F02D         	call	i1_SPI1_Close	;wreg free
 15827                           
 15828                           ;mcc_generated_files/ext_int.c: 53:     state = 2;
 15829  0057A2  0E00               	movlw	0
 15830  0057A4  0100               	movlb	0	; () banked
 15831  0057A6  6FFB               	movwf	(_state+1)& (0+255),b	;volatile
 15832  0057A8  0E02               	movlw	2
 15833  0057AA  6FFA               	movwf	_state& (0+255),b	;volatile
 15834                           
 15835                           ; BSR set to: 0
 15836                           ;mcc_generated_files/ext_int.c: 55:     temp_packages = packages;
 15837  0057AC  C050  F052         	movff	_packages,_temp_packages	;volatile
 15838  0057B0  C051  F053         	movff	_packages+1,_temp_packages+1	;volatile
 15839                           
 15840                           ; BSR set to: 0
 15841                           ;mcc_generated_files/ext_int.c: 56:     temp_break_duration = break_duration;
 15842  0057B4  C040  F042         	movff	_break_duration,_temp_break_duration	;volatile
 15843  0057B8  C041  F043         	movff	_break_duration+1,_temp_break_duration+1	;volatile
 15844                           
 15845                           ; BSR set to: 0
 15846                           ;mcc_generated_files/ext_int.c: 58:     TMR0_Reload();
 15847  0057BC  EC58  F02C         	call	i1_TMR0_Reload	;wreg free
 15848                           
 15849                           ;mcc_generated_files/ext_int.c: 60:     TMR0_StartTimer();
 15850  0057C0  EC7F  F02D         	call	i1_TMR0_StartTimer	;wreg free
 15851  0057C4  0012               	return		;funcret
 15852  0057C6                     __end_of_INT0_ISR:
 15853                           	opt callstack 0
 15854                           
 15855 ;; *************** function i1_TMR0_StartTimer *****************
 15856 ;; Defined at:
 15857 ;;		line 70 in file "mcc_generated_files/tmr0.c"
 15858 ;; Parameters:    Size  Location     Type
 15859 ;;		None
 15860 ;; Auto vars:     Size  Location     Type
 15861 ;;		None
 15862 ;; Return value:  Size  Location     Type
 15863 ;;                  1    wreg      void 
 15864 ;; Registers used:
 15865 ;;		None
 15866 ;; Tracked objects:
 15867 ;;		On entry : 0/0
 15868 ;;		On exit  : 0/0
 15869 ;;		Unchanged: 0/0
 15870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15871 ;;      Params:         0       0       0       0       0       0       0       0       0
 15872 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15873 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15874 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15875 ;;Total ram usage:        0 bytes
 15876 ;; Hardware stack levels used:    1
 15877 ;; Hardware stack levels required when called:    3
 15878 ;; This function calls:
 15879 ;;		Nothing
 15880 ;; This function is called by:
 15881 ;;		_INT0_ISR
 15882 ;;		_TMR3_ISR
 15883 ;; This function uses a non-reentrant model
 15884 ;;
 15885                           
 15886                           	psect	text71
 15887  005AFE                     __ptext71:
 15888                           	opt callstack 0
 15889  005AFE                     i1_TMR0_StartTimer:
 15890                           	opt callstack 16
 15891                           
 15892                           ;mcc_generated_files/tmr0.c: 73:     while(PORTAbits.RA5 == 0);
 15893                           
 15894                           ;incstack = 0
 15895  005AFE  AA8D               	btfss	3981,5,c	;volatile
 15896  005B00  D7FE               	goto	i1_TMR0_StartTimer
 15897  005B02                     i1u618_20:
 15898  005B02  BA8D               	btfsc	3981,5,c	;volatile
 15899  005B04  D7FE               	goto	i1u618_20
 15900                           
 15901                           ;mcc_generated_files/tmr0.c: 77:     T0CON0bits.T0EN = 1;
 15902  005B06  8ED5               	bsf	4053,7,c	;volatile
 15903                           
 15904                           ;mcc_generated_files/tmr0.c: 79:     PORTBbits.RB3 = 1;
 15905  005B08  868E               	bsf	3982,3,c	;volatile
 15906  005B0A  0012               	return		;funcret
 15907  005B0C                     __end_ofi1_TMR0_StartTimer:
 15908                           	opt callstack 0
 15909                           
 15910 ;; *************** function i1_TMR0_Reload *****************
 15911 ;; Defined at:
 15912 ;;		line 96 in file "mcc_generated_files/tmr0.c"
 15913 ;; Parameters:    Size  Location     Type
 15914 ;;		None
 15915 ;; Auto vars:     Size  Location     Type
 15916 ;;		None
 15917 ;; Return value:  Size  Location     Type
 15918 ;;                  1    wreg      void 
 15919 ;; Registers used:
 15920 ;;		wreg, status,2, status,0, cstack
 15921 ;; Tracked objects:
 15922 ;;		On entry : 0/0
 15923 ;;		On exit  : 0/0
 15924 ;;		Unchanged: 0/0
 15925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15926 ;;      Params:         0       0       0       0       0       0       0       0       0
 15927 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15928 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15929 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15930 ;;Total ram usage:        0 bytes
 15931 ;; Hardware stack levels used:    1
 15932 ;; Hardware stack levels required when called:    4
 15933 ;; This function calls:
 15934 ;;		i1_TMR0_WriteTimer
 15935 ;; This function is called by:
 15936 ;;		_INT0_ISR
 15937 ;; This function uses a non-reentrant model
 15938 ;;
 15939                           
 15940                           	psect	text72
 15941  0058B0                     __ptext72:
 15942                           	opt callstack 0
 15943  0058B0                     i1_TMR0_Reload:
 15944                           	opt callstack 15
 15945                           
 15946                           ;mcc_generated_files/tmr0.c: 99:     temp_cycle = cycle - 1;
 15947                           
 15948                           ;incstack = 0
 15949  0058B0  0EFF               	movlw	255
 15950  0058B2  2448               	addwf	_cycle,w,c	;volatile
 15951  0058B4  6E4C               	movwf	_temp_cycle,c	;volatile
 15952  0058B6  0EFF               	movlw	255
 15953  0058B8  2049               	addwfc	_cycle+1,w,c	;volatile
 15954  0058BA  6E4D               	movwf	_temp_cycle+1,c	;volatile
 15955  0058BC  0EFF               	movlw	255
 15956  0058BE  204A               	addwfc	_cycle+2,w,c	;volatile
 15957  0058C0  6E4E               	movwf	_temp_cycle+2,c	;volatile
 15958  0058C2  0EFF               	movlw	255
 15959  0058C4  204B               	addwfc	_cycle+3,w,c	;volatile
 15960  0058C6  6E4F               	movwf	_temp_cycle+3,c	;volatile
 15961                           
 15962                           ;mcc_generated_files/tmr0.c: 100:     TMR0_WriteTimer((0xFFFF - temp_cycle)+1);
 15963  0058C8  504C               	movf	_temp_cycle,w,c	;volatile
 15964  0058CA  0800               	sublw	0
 15965  0058CC  6E03               	movwf	i1TMR0_WriteTimer@timerVal,c
 15966  0058CE  504D               	movf	_temp_cycle+1,w,c	;volatile
 15967  0058D0  A0D8               	btfss	status,0,c
 15968  0058D2  2AE8               	incf	wreg,f,c
 15969  0058D4  0800               	sublw	0
 15970  0058D6  6E04               	movwf	i1TMR0_WriteTimer@timerVal+1,c
 15971  0058D8  ECB1  F02D         	call	i1_TMR0_WriteTimer	;wreg free
 15972  0058DC  0012               	return		;funcret
 15973  0058DE                     __end_ofi1_TMR0_Reload:
 15974                           	opt callstack 0
 15975                           
 15976 ;; *************** function i1_TMR0_WriteTimer *****************
 15977 ;; Defined at:
 15978 ;;		line 89 in file "mcc_generated_files/tmr0.c"
 15979 ;; Parameters:    Size  Location     Type
 15980 ;;  timerVal        2    2[COMRAM] unsigned short 
 15981 ;; Auto vars:     Size  Location     Type
 15982 ;;		None
 15983 ;; Return value:  Size  Location     Type
 15984 ;;                  1    wreg      void 
 15985 ;; Registers used:
 15986 ;;		wreg, status,2
 15987 ;; Tracked objects:
 15988 ;;		On entry : 0/0
 15989 ;;		On exit  : 0/0
 15990 ;;		Unchanged: 0/0
 15991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15992 ;;      Params:         2       0       0       0       0       0       0       0       0
 15993 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15994 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15995 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15996 ;;Total ram usage:        2 bytes
 15997 ;; Hardware stack levels used:    1
 15998 ;; Hardware stack levels required when called:    3
 15999 ;; This function calls:
 16000 ;;		Nothing
 16001 ;; This function is called by:
 16002 ;;		i1_TMR0_Reload
 16003 ;; This function uses a non-reentrant model
 16004 ;;
 16005                           
 16006                           	psect	text73
 16007  005B62                     __ptext73:
 16008                           	opt callstack 0
 16009  005B62                     i1_TMR0_WriteTimer:
 16010                           	opt callstack 15
 16011                           
 16012                           ;mcc_generated_files/tmr0.c: 89: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_f
      +                          iles/tmr0.c: 90: {;mcc_generated_files/tmr0.c: 92:     TMR0H = timerVal >> 8;
 16013                           
 16014                           ;incstack = 0
 16015  005B62  5004               	movf	i1TMR0_WriteTimer@timerVal+1,w,c
 16016  005B64  6ED4               	movwf	4052,c	;volatile
 16017                           
 16018                           ;mcc_generated_files/tmr0.c: 93:     TMR0L = (uint8_t) timerVal;
 16019  005B66  C003  FFD3         	movff	i1TMR0_WriteTimer@timerVal,4051	;volatile
 16020  005B6A  0012               	return		;funcret
 16021  005B6C                     __end_ofi1_TMR0_WriteTimer:
 16022                           	opt callstack 0
 16023                           
 16024 ;; *************** function i1_SPI1_Close *****************
 16025 ;; Defined at:
 16026 ;;		line 66 in file "mcc_generated_files/spi1.c"
 16027 ;; Parameters:    Size  Location     Type
 16028 ;;		None
 16029 ;; Auto vars:     Size  Location     Type
 16030 ;;		None
 16031 ;; Return value:  Size  Location     Type
 16032 ;;                  1    wreg      void 
 16033 ;; Registers used:
 16034 ;;		None
 16035 ;; Tracked objects:
 16036 ;;		On entry : 0/0
 16037 ;;		On exit  : 0/0
 16038 ;;		Unchanged: 0/0
 16039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16040 ;;      Params:         0       0       0       0       0       0       0       0       0
 16041 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16042 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16043 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16044 ;;Total ram usage:        0 bytes
 16045 ;; Hardware stack levels used:    1
 16046 ;; Hardware stack levels required when called:    3
 16047 ;; This function calls:
 16048 ;;		Nothing
 16049 ;; This function is called by:
 16050 ;;		_INT0_ISR
 16051 ;; This function uses a non-reentrant model
 16052 ;;
 16053                           
 16054                           	psect	text74
 16055  005BA4                     __ptext74:
 16056                           	opt callstack 0
 16057  005BA4                     i1_SPI1_Close:
 16058                           	opt callstack 16
 16059                           
 16060                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
 16061                           
 16062                           ;incstack = 0
 16063  005BA4  9A96               	bcf	3990,5,c	;volatile
 16064  005BA6  0012               	return		;funcret
 16065  005BA8                     __end_ofi1_SPI1_Close:
 16066                           	opt callstack 0
 16067                           
 16068 ;; *************** function _EUSART_Transmit_ISR *****************
 16069 ;; Defined at:
 16070 ;;		line 159 in file "mcc_generated_files/eusart.c"
 16071 ;; Parameters:    Size  Location     Type
 16072 ;;		None
 16073 ;; Auto vars:     Size  Location     Type
 16074 ;;		None
 16075 ;; Return value:  Size  Location     Type
 16076 ;;                  1    wreg      void 
 16077 ;; Registers used:
 16078 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16079 ;; Tracked objects:
 16080 ;;		On entry : 0/0
 16081 ;;		On exit  : 0/0
 16082 ;;		Unchanged: 0/0
 16083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16084 ;;      Params:         0       0       0       0       0       0       0       0       0
 16085 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16086 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16087 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16088 ;;Total ram usage:        0 bytes
 16089 ;; Hardware stack levels used:    1
 16090 ;; Hardware stack levels required when called:    3
 16091 ;; This function calls:
 16092 ;;		Nothing
 16093 ;; This function is called by:
 16094 ;;		_EUSART_Initialize
 16095 ;;		_INTERRUPT_InterruptManagerLow
 16096 ;; This function uses a non-reentrant model
 16097 ;;
 16098                           
 16099                           	psect	text75
 16100  0058DE                     __ptext75:
 16101                           	opt callstack 0
 16102  0058DE                     _EUSART_Transmit_ISR:
 16103                           	opt callstack 17
 16104                           
 16105                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 16106                           
 16107                           ;incstack = 0
 16108  0058DE  0E08               	movlw	8
 16109  0058E0  0100               	movlb	0	; () banked
 16110  0058E2  61F5               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 16111  0058E4  D010               	goto	i1l101
 16112                           
 16113                           ; BSR set to: 0
 16114                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 165:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
 16115  0058E6  0EBC               	movlw	low _eusartTxBuffer
 16116  0058E8  2445               	addwf	_eusartTxTail,w,c	;volatile
 16117  0058EA  6ED9               	movwf	fsr2l,c
 16118  0058EC  6ADA               	clrf	fsr2h,c
 16119  0058EE  0E01               	movlw	high _eusartTxBuffer
 16120  0058F0  22DA               	addwfc	fsr2h,f,c
 16121  0058F2  50DF               	movf	indf2,w,c
 16122  0058F4  6E9A               	movwf	3994,c	;volatile
 16123                           
 16124                           ; BSR set to: 0
 16125  0058F6  2A45               	incf	_eusartTxTail,f,c	;volatile
 16126                           
 16127                           ; BSR set to: 0
 16128                           ;mcc_generated_files/eusart.c: 168:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 16129  0058F8  0E07               	movlw	7
 16130  0058FA  6445               	cpfsgt	_eusartTxTail,c	;volatile
 16131  0058FC  D002               	goto	i1l6215
 16132                           
 16133                           ; BSR set to: 0
 16134                           ;mcc_generated_files/eusart.c: 169:         {;mcc_generated_files/eusart.c: 170:        
      +                               eusartTxTail = 0;
 16135  0058FE  0E00               	movlw	0
 16136  005900  6E45               	movwf	_eusartTxTail,c	;volatile
 16137  005902                     i1l6215:
 16138                           
 16139                           ; BSR set to: 0
 16140                           ;mcc_generated_files/eusart.c: 172:         eusartTxBufferRemaining++;
 16141  005902  2BF5               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 16142                           
 16143                           ;mcc_generated_files/eusart.c: 173:     }
 16144  005904  0012               	return	
 16145  005906                     i1l101:
 16146                           
 16147                           ; BSR set to: 0
 16148                           ;mcc_generated_files/eusart.c: 175:     {;mcc_generated_files/eusart.c: 177:         PIE
      +                          3bits.TXIE = 0;
 16149  005906  010E               	movlb	14	; () banked
 16150  005908  99C5               	bcf	197,4,b	;volatile
 16151  00590A  0012               	return		;funcret
 16152  00590C                     __end_of_EUSART_Transmit_ISR:
 16153                           	opt callstack 0
 16154                           
 16155 ;; *************** function _EUSART_Receive_ISR *****************
 16156 ;; Defined at:
 16157 ;;		line 181 in file "mcc_generated_files/eusart.c"
 16158 ;; Parameters:    Size  Location     Type
 16159 ;;		None
 16160 ;; Auto vars:     Size  Location     Type
 16161 ;;		None
 16162 ;; Return value:  Size  Location     Type
 16163 ;;                  1    wreg      void 
 16164 ;; Registers used:
 16165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16166 ;; Tracked objects:
 16167 ;;		On entry : 0/0
 16168 ;;		On exit  : 0/0
 16169 ;;		Unchanged: 0/0
 16170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16171 ;;      Params:         0       0       0       0       0       0       0       0       0
 16172 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16173 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16174 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16175 ;;Total ram usage:        0 bytes
 16176 ;; Hardware stack levels used:    1
 16177 ;; Hardware stack levels required when called:    5
 16178 ;; This function calls:
 16179 ;;		Absolute function
 16180 ;;		_EUSART_DefaultErrorHandler
 16181 ;;		_EUSART_DefaultFramingErrorHandler
 16182 ;;		_EUSART_DefaultOverrunErrorHandler
 16183 ;;		_EUSART_RxDataHandler
 16184 ;;		_TMR1_StartTimer
 16185 ;;		_TMR1_WriteTimer
 16186 ;;		i1_TMR1_StopTimer
 16187 ;; This function is called by:
 16188 ;;		_EUSART_Initialize
 16189 ;;		_INTERRUPT_InterruptManagerLow
 16190 ;; This function uses a non-reentrant model
 16191 ;;
 16192                           
 16193                           	psect	text76
 16194  004E6A                     __ptext76:
 16195                           	opt callstack 0
 16196  004E6A                     _EUSART_Receive_ISR:
 16197                           	opt callstack 15
 16198                           
 16199                           ;mcc_generated_files/eusart.c: 184:     TMR1_StopTimer();
 16200                           
 16201                           ;incstack = 0
 16202  004E6A  ECD4  F02D         	call	i1_TMR1_StopTimer	;wreg free
 16203                           
 16204                           ;mcc_generated_files/eusart.c: 185:     TMR1_WriteTimer(0x00);
 16205  004E6E  0E00               	movlw	0
 16206  004E70  6E04               	movwf	TMR1_WriteTimer@timerVal+1,c
 16207  004E72  0E00               	movlw	0
 16208  004E74  6E03               	movwf	TMR1_WriteTimer@timerVal,c
 16209  004E76  EC2C  F02D         	call	_TMR1_WriteTimer	;wreg free
 16210                           
 16211                           ;mcc_generated_files/eusart.c: 188:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 16212  004E7A  0ED5               	movlw	low _eusartRxStatusBuffer
 16213  004E7C  2444               	addwf	_eusartRxHead,w,c	;volatile
 16214  004E7E  6ED9               	movwf	fsr2l,c
 16215  004E80  6ADA               	clrf	fsr2h,c
 16216  004E82  0E00               	movlw	high _eusartRxStatusBuffer
 16217  004E84  22DA               	addwfc	fsr2h,f,c
 16218  004E86  0E00               	movlw	0
 16219  004E88  6EDF               	movwf	indf2,c
 16220                           
 16221                           ;mcc_generated_files/eusart.c: 191:     if(RC1STAbits.FERR){
 16222  004E8A  A49D               	btfss	3997,2,c	;volatile
 16223  004E8C  D015               	goto	i1u624_29
 16224                           
 16225                           ;mcc_generated_files/eusart.c: 192:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 16226  004E8E  0ED5               	movlw	low _eusartRxStatusBuffer
 16227  004E90  2444               	addwf	_eusartRxHead,w,c	;volatile
 16228  004E92  6ED9               	movwf	fsr2l,c
 16229  004E94  6ADA               	clrf	fsr2h,c
 16230  004E96  0E00               	movlw	high _eusartRxStatusBuffer
 16231  004E98  22DA               	addwfc	fsr2h,f,c
 16232  004E9A  0100               	movlb	0	; () banked
 16233  004E9C  82DF               	bsf	indf2,1,c
 16234                           
 16235                           ; BSR set to: 0
 16236                           ;mcc_generated_files/eusart.c: 193:         EUSART_FramingErrorHandler();
 16237  004E9E  D801               	call	i1u624_28
 16238  004EA0  D00B               	goto	i1u624_29
 16239  004EA2                     i1u624_28:
 16240  004EA2  0005               	push	
 16241  004EA4  0101               	movlb	1	; () banked
 16242  004EA6  6EFA               	movwf	pclath,c
 16243  004EA8  51FC               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
 16244  004EAA  6EFD               	movwf	tosl,c
 16245  004EAC  51FD               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
 16246  004EAE  6EFE               	movwf	tosh,c
 16247  004EB0  50F8               	movf	tblptru,w,c
 16248  004EB2  6EFF               	movwf	tosu,c
 16249  004EB4  50FA               	movf	pclath,w,c
 16250  004EB6  0012               	return		;indir
 16251  004EB8                     i1u624_29:
 16252                           
 16253                           ;mcc_generated_files/eusart.c: 197:     if(RC1STAbits.OERR){
 16254  004EB8  A29D               	btfss	3997,1,c	;volatile
 16255  004EBA  D015               	goto	i1u626_29
 16256                           
 16257                           ;mcc_generated_files/eusart.c: 198:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 16258  004EBC  0ED5               	movlw	low _eusartRxStatusBuffer
 16259  004EBE  2444               	addwf	_eusartRxHead,w,c	;volatile
 16260  004EC0  6ED9               	movwf	fsr2l,c
 16261  004EC2  6ADA               	clrf	fsr2h,c
 16262  004EC4  0E00               	movlw	high _eusartRxStatusBuffer
 16263  004EC6  22DA               	addwfc	fsr2h,f,c
 16264  004EC8  0100               	movlb	0	; () banked
 16265  004ECA  84DF               	bsf	indf2,2,c
 16266                           
 16267                           ; BSR set to: 0
 16268                           ;mcc_generated_files/eusart.c: 199:         EUSART_OverrunErrorHandler();
 16269  004ECC  D801               	call	i1u626_28
 16270  004ECE  D00B               	goto	i1u626_29
 16271  004ED0                     i1u626_28:
 16272  004ED0  0005               	push	
 16273  004ED2  0101               	movlb	1	; () banked
 16274  004ED4  6EFA               	movwf	pclath,c
 16275  004ED6  51FA               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
 16276  004ED8  6EFD               	movwf	tosl,c
 16277  004EDA  51FB               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
 16278  004EDC  6EFE               	movwf	tosh,c
 16279  004EDE  50F8               	movf	tblptru,w,c
 16280  004EE0  6EFF               	movwf	tosu,c
 16281  004EE2  50FA               	movf	pclath,w,c
 16282  004EE4  0012               	return		;indir
 16283  004EE6                     i1u626_29:
 16284                           
 16285                           ;mcc_generated_files/eusart.c: 203:     if(eusartRxStatusBuffer[eusartRxHead].status){
 16286  004EE6  0ED5               	movlw	low _eusartRxStatusBuffer
 16287  004EE8  2444               	addwf	_eusartRxHead,w,c	;volatile
 16288  004EEA  6ED9               	movwf	fsr2l,c
 16289  004EEC  6ADA               	clrf	fsr2h,c
 16290  004EEE  0E00               	movlw	high _eusartRxStatusBuffer
 16291  004EF0  22DA               	addwfc	fsr2h,f,c
 16292  004EF2  50DF               	movf	indf2,w,c
 16293  004EF4  B4D8               	btfsc	status,2,c
 16294  004EF6  D00D               	goto	i1l6239
 16295                           
 16296                           ;mcc_generated_files/eusart.c: 204:         EUSART_ErrorHandler();
 16297  004EF8  D801               	call	i1u628_28
 16298  004EFA  0012               	return	
 16299  004EFC                     i1u628_28:
 16300  004EFC  0005               	push	
 16301  004EFE  0101               	movlb	1	; () banked
 16302  004F00  6EFA               	movwf	pclath,c
 16303  004F02  51F8               	movf	_EUSART_ErrorHandler& (0+255),w,b
 16304  004F04  6EFD               	movwf	tosl,c
 16305  004F06  51F9               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
 16306  004F08  6EFE               	movwf	tosh,c
 16307  004F0A  50F8               	movf	tblptru,w,c
 16308  004F0C  6EFF               	movwf	tosu,c
 16309  004F0E  50FA               	movf	pclath,w,c
 16310  004F10  0012               	return		;indir
 16311  004F12                     i1l6239:
 16312                           
 16313                           ;mcc_generated_files/eusart.c: 208:         EUSART_RxDataHandler();
 16314  004F12  EC97  F02B         	call	_EUSART_RxDataHandler	;wreg free
 16315                           
 16316                           ;mcc_generated_files/eusart.c: 211:         TMR1_StartTimer();
 16317  004F16  ECD6  F02D         	call	_TMR1_StartTimer	;wreg free
 16318  004F1A  0012               	return		;funcret
 16319  004F1C                     __end_of_EUSART_Receive_ISR:
 16320                           	opt callstack 0
 16321                           
 16322 ;; *************** function i1_TMR1_StopTimer *****************
 16323 ;; Defined at:
 16324 ;;		line 82 in file "mcc_generated_files/tmr1.c"
 16325 ;; Parameters:    Size  Location     Type
 16326 ;;		None
 16327 ;; Auto vars:     Size  Location     Type
 16328 ;;		None
 16329 ;; Return value:  Size  Location     Type
 16330 ;;                  1    wreg      void 
 16331 ;; Registers used:
 16332 ;;		None
 16333 ;; Tracked objects:
 16334 ;;		On entry : 0/0
 16335 ;;		On exit  : 0/0
 16336 ;;		Unchanged: 0/0
 16337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16338 ;;      Params:         0       0       0       0       0       0       0       0       0
 16339 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16340 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16341 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16342 ;;Total ram usage:        0 bytes
 16343 ;; Hardware stack levels used:    1
 16344 ;; Hardware stack levels required when called:    3
 16345 ;; This function calls:
 16346 ;;		Nothing
 16347 ;; This function is called by:
 16348 ;;		_EUSART_Receive_ISR
 16349 ;; This function uses a non-reentrant model
 16350 ;;
 16351                           
 16352                           	psect	text77
 16353  005BA8                     __ptext77:
 16354                           	opt callstack 0
 16355  005BA8                     i1_TMR1_StopTimer:
 16356                           	opt callstack 16
 16357                           
 16358                           ;mcc_generated_files/tmr1.c: 85:     T1CONbits.TMR1ON = 0;
 16359                           
 16360                           ;incstack = 0
 16361  005BA8  90CF               	bcf	4047,0,c	;volatile
 16362  005BAA  0012               	return		;funcret
 16363  005BAC                     __end_ofi1_TMR1_StopTimer:
 16364                           	opt callstack 0
 16365                           
 16366 ;; *************** function _TMR1_WriteTimer *****************
 16367 ;; Defined at:
 16368 ;;		line 88 in file "mcc_generated_files/tmr1.c"
 16369 ;; Parameters:    Size  Location     Type
 16370 ;;  timerVal        2    2[COMRAM] unsigned short 
 16371 ;; Auto vars:     Size  Location     Type
 16372 ;;		None
 16373 ;; Return value:  Size  Location     Type
 16374 ;;                  1    wreg      void 
 16375 ;; Registers used:
 16376 ;;		wreg, status,2
 16377 ;; Tracked objects:
 16378 ;;		On entry : 0/0
 16379 ;;		On exit  : 0/0
 16380 ;;		Unchanged: 0/0
 16381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16382 ;;      Params:         2       0       0       0       0       0       0       0       0
 16383 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16384 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16385 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16386 ;;Total ram usage:        2 bytes
 16387 ;; Hardware stack levels used:    1
 16388 ;; Hardware stack levels required when called:    3
 16389 ;; This function calls:
 16390 ;;		Nothing
 16391 ;; This function is called by:
 16392 ;;		_EUSART_Receive_ISR
 16393 ;;		_TMR1_ISR
 16394 ;; This function uses a non-reentrant model
 16395 ;;
 16396                           
 16397                           	psect	text78
 16398  005A58                     __ptext78:
 16399                           	opt callstack 0
 16400  005A58                     _TMR1_WriteTimer:
 16401                           	opt callstack 16
 16402                           
 16403                           ;mcc_generated_files/tmr1.c: 88: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_f
      +                          iles/tmr1.c: 89: {;mcc_generated_files/tmr1.c: 90:     if (T1CONbits.nT1SYNC == 1)
 16404                           
 16405                           ;incstack = 0
 16406  005A58  A4CF               	btfss	4047,2,c	;volatile
 16407  005A5A  D007               	goto	i1l5977
 16408                           
 16409                           ;mcc_generated_files/tmr1.c: 91:     {;mcc_generated_files/tmr1.c: 93:         T1CONbits
      +                          .TMR1ON = 0;
 16410  005A5C  90CF               	bcf	4047,0,c	;volatile
 16411                           
 16412                           ;mcc_generated_files/tmr1.c: 96:         TMR1H = (timerVal >> 8);
 16413  005A5E  5004               	movf	TMR1_WriteTimer@timerVal+1,w,c
 16414  005A60  6ECE               	movwf	4046,c	;volatile
 16415                           
 16416                           ;mcc_generated_files/tmr1.c: 97:         TMR1L = timerVal;
 16417  005A62  C003  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 16418                           
 16419                           ;mcc_generated_files/tmr1.c: 100:         T1CONbits.TMR1ON =1;
 16420  005A66  80CF               	bsf	4047,0,c	;volatile
 16421                           
 16422                           ;mcc_generated_files/tmr1.c: 101:     }
 16423  005A68  0012               	return	
 16424  005A6A                     i1l5977:
 16425                           
 16426                           ;mcc_generated_files/tmr1.c: 103:     {;mcc_generated_files/tmr1.c: 105:         TMR1H =
      +                           (timerVal >> 8);
 16427  005A6A  5004               	movf	TMR1_WriteTimer@timerVal+1,w,c
 16428  005A6C  6ECE               	movwf	4046,c	;volatile
 16429                           
 16430                           ;mcc_generated_files/tmr1.c: 106:         TMR1L = timerVal;
 16431  005A6E  C003  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 16432  005A72  0012               	return		;funcret
 16433  005A74                     __end_of_TMR1_WriteTimer:
 16434                           	opt callstack 0
 16435                           
 16436 ;; *************** function _TMR1_StartTimer *****************
 16437 ;; Defined at:
 16438 ;;		line 76 in file "mcc_generated_files/tmr1.c"
 16439 ;; Parameters:    Size  Location     Type
 16440 ;;		None
 16441 ;; Auto vars:     Size  Location     Type
 16442 ;;		None
 16443 ;; Return value:  Size  Location     Type
 16444 ;;                  1    wreg      void 
 16445 ;; Registers used:
 16446 ;;		None
 16447 ;; Tracked objects:
 16448 ;;		On entry : 0/0
 16449 ;;		On exit  : 0/0
 16450 ;;		Unchanged: 0/0
 16451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16452 ;;      Params:         0       0       0       0       0       0       0       0       0
 16453 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16454 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16455 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16456 ;;Total ram usage:        0 bytes
 16457 ;; Hardware stack levels used:    1
 16458 ;; Hardware stack levels required when called:    3
 16459 ;; This function calls:
 16460 ;;		Nothing
 16461 ;; This function is called by:
 16462 ;;		_EUSART_Receive_ISR
 16463 ;; This function uses a non-reentrant model
 16464 ;;
 16465                           
 16466                           	psect	text79
 16467  005BAC                     __ptext79:
 16468                           	opt callstack 0
 16469  005BAC                     _TMR1_StartTimer:
 16470                           	opt callstack 16
 16471                           
 16472                           ;mcc_generated_files/tmr1.c: 79:     T1CONbits.TMR1ON = 1;
 16473                           
 16474                           ;incstack = 0
 16475  005BAC  80CF               	bsf	4047,0,c	;volatile
 16476  005BAE  0012               	return		;funcret
 16477  005BB0                     __end_of_TMR1_StartTimer:
 16478                           	opt callstack 0
 16479                           
 16480 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 16481 ;; Defined at:
 16482 ;;		line 232 in file "mcc_generated_files/eusart.c"
 16483 ;; Parameters:    Size  Location     Type
 16484 ;;		None
 16485 ;; Auto vars:     Size  Location     Type
 16486 ;;		None
 16487 ;; Return value:  Size  Location     Type
 16488 ;;                  1    wreg      void 
 16489 ;; Registers used:
 16490 ;;		None
 16491 ;; Tracked objects:
 16492 ;;		On entry : 0/0
 16493 ;;		On exit  : 0/0
 16494 ;;		Unchanged: 0/0
 16495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16496 ;;      Params:         0       0       0       0       0       0       0       0       0
 16497 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16498 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16499 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16500 ;;Total ram usage:        0 bytes
 16501 ;; Hardware stack levels used:    1
 16502 ;; Hardware stack levels required when called:    3
 16503 ;; This function calls:
 16504 ;;		Nothing
 16505 ;; This function is called by:
 16506 ;;		_EUSART_Initialize
 16507 ;;		_EUSART_Receive_ISR
 16508 ;; This function uses a non-reentrant model
 16509 ;;
 16510                           
 16511                           	psect	text80
 16512  005B8C                     __ptext80:
 16513                           	opt callstack 0
 16514  005B8C                     _EUSART_DefaultOverrunErrorHandler:
 16515                           	opt callstack 16
 16516                           
 16517                           ;mcc_generated_files/eusart.c: 235:     RC1STAbits.CREN = 0;
 16518                           
 16519                           ;incstack = 0
 16520  005B8C  989D               	bcf	3997,4,c	;volatile
 16521                           
 16522                           ;mcc_generated_files/eusart.c: 236:     RC1STAbits.CREN = 1;
 16523  005B8E  889D               	bsf	3997,4,c	;volatile
 16524  005B90  0012               	return		;funcret
 16525  005B92                     __end_of_EUSART_DefaultOverrunErrorHandler:
 16526                           	opt callstack 0
 16527                           
 16528 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 16529 ;; Defined at:
 16530 ;;		line 230 in file "mcc_generated_files/eusart.c"
 16531 ;; Parameters:    Size  Location     Type
 16532 ;;		None
 16533 ;; Auto vars:     Size  Location     Type
 16534 ;;		None
 16535 ;; Return value:  Size  Location     Type
 16536 ;;                  1    wreg      void 
 16537 ;; Registers used:
 16538 ;;		None
 16539 ;; Tracked objects:
 16540 ;;		On entry : 0/0
 16541 ;;		On exit  : 0/0
 16542 ;;		Unchanged: 0/0
 16543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16544 ;;      Params:         0       0       0       0       0       0       0       0       0
 16545 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16546 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16547 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16548 ;;Total ram usage:        0 bytes
 16549 ;; Hardware stack levels used:    1
 16550 ;; Hardware stack levels required when called:    3
 16551 ;; This function calls:
 16552 ;;		Nothing
 16553 ;; This function is called by:
 16554 ;;		_EUSART_Initialize
 16555 ;;		_EUSART_Receive_ISR
 16556 ;; This function uses a non-reentrant model
 16557 ;;
 16558                           
 16559                           	psect	text81
 16560  005BB6                     __ptext81:
 16561                           	opt callstack 0
 16562  005BB6                     _EUSART_DefaultFramingErrorHandler:
 16563                           	opt callstack 16
 16564                           
 16565                           ;incstack = 0
 16566  005BB6  0012               	return		;funcret
 16567  005BB8                     __end_of_EUSART_DefaultFramingErrorHandler:
 16568                           	opt callstack 0
 16569                           
 16570 ;; *************** function _EUSART_DefaultErrorHandler *****************
 16571 ;; Defined at:
 16572 ;;		line 240 in file "mcc_generated_files/eusart.c"
 16573 ;; Parameters:    Size  Location     Type
 16574 ;;		None
 16575 ;; Auto vars:     Size  Location     Type
 16576 ;;		None
 16577 ;; Return value:  Size  Location     Type
 16578 ;;                  1    wreg      void 
 16579 ;; Registers used:
 16580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16581 ;; Tracked objects:
 16582 ;;		On entry : 0/0
 16583 ;;		On exit  : 0/0
 16584 ;;		Unchanged: 0/0
 16585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16586 ;;      Params:         0       0       0       0       0       0       0       0       0
 16587 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16588 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16589 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16590 ;;Total ram usage:        0 bytes
 16591 ;; Hardware stack levels used:    1
 16592 ;; Hardware stack levels required when called:    4
 16593 ;; This function calls:
 16594 ;;		_EUSART_RxDataHandler
 16595 ;; This function is called by:
 16596 ;;		_EUSART_Initialize
 16597 ;;		_EUSART_Receive_ISR
 16598 ;; This function uses a non-reentrant model
 16599 ;;
 16600                           
 16601                           	psect	text82
 16602  005B92                     __ptext82:
 16603                           	opt callstack 0
 16604  005B92                     _EUSART_DefaultErrorHandler:
 16605                           	opt callstack 15
 16606                           
 16607                           ;mcc_generated_files/eusart.c: 241:     EUSART_RxDataHandler();
 16608                           
 16609                           ;incstack = 0
 16610  005B92  EC97  F02B         	call	_EUSART_RxDataHandler	;wreg free
 16611  005B96  0012               	return		;funcret
 16612  005B98                     __end_of_EUSART_DefaultErrorHandler:
 16613                           	opt callstack 0
 16614                           
 16615 ;; *************** function _EUSART_RxDataHandler *****************
 16616 ;; Defined at:
 16617 ;;		line 217 in file "mcc_generated_files/eusart.c"
 16618 ;; Parameters:    Size  Location     Type
 16619 ;;		None
 16620 ;; Auto vars:     Size  Location     Type
 16621 ;;		None
 16622 ;; Return value:  Size  Location     Type
 16623 ;;                  1    wreg      void 
 16624 ;; Registers used:
 16625 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16626 ;; Tracked objects:
 16627 ;;		On entry : 0/0
 16628 ;;		On exit  : 0/0
 16629 ;;		Unchanged: 0/0
 16630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16631 ;;      Params:         0       0       0       0       0       0       0       0       0
 16632 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16633 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16634 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16635 ;;Total ram usage:        0 bytes
 16636 ;; Hardware stack levels used:    1
 16637 ;; Hardware stack levels required when called:    3
 16638 ;; This function calls:
 16639 ;;		Nothing
 16640 ;; This function is called by:
 16641 ;;		_EUSART_Receive_ISR
 16642 ;;		_EUSART_DefaultErrorHandler
 16643 ;; This function uses a non-reentrant model
 16644 ;;
 16645                           
 16646                           	psect	text83
 16647  00572E                     __ptext83:
 16648                           	opt callstack 0
 16649  00572E                     _EUSART_RxDataHandler:
 16650                           	opt callstack 16
 16651                           
 16652                           ;mcc_generated_files/eusart.c: 219:     if(RC1REG == 0x0D)
 16653                           
 16654                           ;incstack = 0
 16655  00572E  0E0D               	movlw	13
 16656  005730  1899               	xorwf	3993,w,c	;volatile
 16657  005732  A4D8               	btfss	status,2,c
 16658  005734  D003               	goto	i1l5355
 16659                           
 16660                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:      sec = 
      +                          1;
 16661  005736  0E01               	movlw	1
 16662  005738  6E47               	movwf	_sec,c
 16663                           
 16664                           ;mcc_generated_files/eusart.c: 222:     }else
 16665  00573A  0012               	return	
 16666  00573C                     i1l5355:
 16667                           
 16668                           ;mcc_generated_files/eusart.c: 223:     {;mcc_generated_files/eusart.c: 224:     rx_data
      +                          [rx_data_end++] = RC1REG;
 16669  00573C  0EE4               	movlw	low _rx_data
 16670  00573E  0100               	movlb	0	; () banked
 16671  005740  25EE               	addwf	_rx_data_end& (0+255),w,b	;volatile
 16672  005742  6ED9               	movwf	fsr2l,c
 16673  005744  6ADA               	clrf	fsr2h,c
 16674  005746  0E01               	movlw	high _rx_data
 16675  005748  22DA               	addwfc	fsr2h,f,c
 16676  00574A  CF99 FFDF          	movff	3993,indf2	;volatile
 16677                           
 16678                           ; BSR set to: 0
 16679  00574E  2BEE               	incf	_rx_data_end& (0+255),f,b	;volatile
 16680                           
 16681                           ; BSR set to: 0
 16682                           ;mcc_generated_files/eusart.c: 225:     rx_data[rx_data_end] = '\0';
 16683  005750  0EE4               	movlw	low _rx_data
 16684  005752  25EE               	addwf	_rx_data_end& (0+255),w,b	;volatile
 16685  005754  6ED9               	movwf	fsr2l,c
 16686  005756  6ADA               	clrf	fsr2h,c
 16687  005758  0E01               	movlw	high _rx_data
 16688  00575A  22DA               	addwfc	fsr2h,f,c
 16689  00575C  0E00               	movlw	0
 16690  00575E  6EDF               	movwf	indf2,c
 16691  005760  0012               	return		;funcret
 16692  005762                     __end_of_EUSART_RxDataHandler:
 16693                           	opt callstack 0
 16694                           
 16695 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 16696 ;; Defined at:
 16697 ;;		line 64 in file "mcc_generated_files/interrupt_manager.c"
 16698 ;; Parameters:    Size  Location     Type
 16699 ;;		None
 16700 ;; Auto vars:     Size  Location     Type
 16701 ;;		None
 16702 ;; Return value:  Size  Location     Type
 16703 ;;                  1    wreg      void 
 16704 ;; Registers used:
 16705 ;;		wreg, status,2, status,0, cstack
 16706 ;; Tracked objects:
 16707 ;;		On entry : 0/0
 16708 ;;		On exit  : 0/0
 16709 ;;		Unchanged: 0/0
 16710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16711 ;;      Params:         0       0       0       0       0       0       0       0       0
 16712 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16713 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16714 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16715 ;;Total ram usage:        0 bytes
 16716 ;; Hardware stack levels used:    1
 16717 ;; Hardware stack levels required when called:    2
 16718 ;; This function calls:
 16719 ;;		_TMR0_StopTimer
 16720 ;;		i2_SPI1_Start
 16721 ;;		i2_TMR0_Reload
 16722 ;;		i2_TMR0_StartTimer
 16723 ;;		i2_TMR3_StartTimer
 16724 ;; This function is called by:
 16725 ;;		Interrupt level 2
 16726 ;; This function uses a non-reentrant model
 16727 ;;
 16728                           
 16729                           	psect	intcode
 16730  000008                     __pintcode:
 16731                           	opt callstack 0
 16732  000008                     _INTERRUPT_InterruptManagerHigh:
 16733                           	opt callstack 15
 16734                           
 16735                           ;incstack = 0
 16736  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16737  00000A  EF3C  F02A         	goto	int_func
 16738                           
 16739                           	psect	intcode_body
 16740  005478                     __pintcode_body:
 16741                           	opt callstack 15
 16742  005478                     int_func:
 16743                           	opt callstack 15
 16744                           
 16745                           ;mcc_generated_files/interrupt_manager.c: 71:     PORTBbits.RB3 = 0;
 16746  005478  968E               	bcf	3982,3,c	;volatile
 16747                           
 16748                           ;mcc_generated_files/interrupt_manager.c: 73:     TMR0_StopTimer();
 16749  00547A  ECD8  F02D         	call	_TMR0_StopTimer	;wreg free
 16750                           
 16751                           ;mcc_generated_files/interrupt_manager.c: 75:     temp_packages--;
 16752  00547E  0652               	decf	_temp_packages,f,c	;volatile
 16753  005480  A0D8               	btfss	status,0,c
 16754  005482  0653               	decf	_temp_packages+1,f,c	;volatile
 16755                           
 16756                           ;mcc_generated_files/interrupt_manager.c: 77:     PIR0bits.TMR0IF = 0;
 16757  005484  010E               	movlb	14	; () banked
 16758  005486  9BCA               	bcf	202,5,b	;volatile
 16759                           
 16760                           ; BSR set to: 14
 16761                           ;mcc_generated_files/interrupt_manager.c: 79:     TMR0_Reload();
 16762  005488  EC86  F02C         	call	i2_TMR0_Reload	;wreg free
 16763                           
 16764                           ;mcc_generated_files/interrupt_manager.c: 82:     if(temp_packages < 1)
 16765  00548C  5052               	movf	_temp_packages,w,c	;volatile
 16766  00548E  1053               	iorwf	_temp_packages+1,w,c	;volatile
 16767  005490  A4D8               	btfss	status,2,c
 16768  005492  D00C               	goto	i2l198
 16769                           
 16770                           ;mcc_generated_files/interrupt_manager.c: 83:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 85:         (PIE0bits.INT0IE = 1);
 16771  005494  010E               	movlb	14	; () banked
 16772  005496  81C2               	bsf	194,0,b	;volatile
 16773                           
 16774                           ;mcc_generated_files/interrupt_manager.c: 87:         PIE3bits.RCIE = 1;
 16775  005498  8BC5               	bsf	197,5,b	;volatile
 16776                           
 16777                           ;mcc_generated_files/interrupt_manager.c: 88:         PIE3bits.TXIE = 1;
 16778  00549A  89C5               	bsf	197,4,b	;volatile
 16779                           
 16780                           ; BSR set to: 14
 16781                           ;mcc_generated_files/interrupt_manager.c: 90:         SPI1_Start();
 16782  00549C  ECBF  F02D         	call	i2_SPI1_Start	;wreg free
 16783                           
 16784                           ;mcc_generated_files/interrupt_manager.c: 92:         state = 1;
 16785  0054A0  0E00               	movlw	0
 16786  0054A2  0100               	movlb	0	; () banked
 16787  0054A4  6FFB               	movwf	(_state+1)& (0+255),b	;volatile
 16788  0054A6  0E01               	movlw	1
 16789  0054A8  6FFA               	movwf	_state& (0+255),b	;volatile
 16790                           
 16791                           ;mcc_generated_files/interrupt_manager.c: 93:     }else
 16792  0054AA  D00D               	goto	i2l202
 16793  0054AC                     i2l198:
 16794                           
 16795                           ;mcc_generated_files/interrupt_manager.c: 94:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 96:         temp_break_duration = break_duration;
 16796  0054AC  C040  F042         	movff	_break_duration,_temp_break_duration	;volatile
 16797  0054B0  C041  F043         	movff	_break_duration+1,_temp_break_duration+1	;volatile
 16798                           
 16799                           ;mcc_generated_files/interrupt_manager.c: 98:         if(temp_break_duration > 0)
 16800  0054B4  5042               	movf	_temp_break_duration,w,c	;volatile
 16801  0054B6  1043               	iorwf	_temp_break_duration+1,w,c	;volatile
 16802  0054B8  B4D8               	btfsc	status,2,c
 16803  0054BA  D003               	goto	i2l6555
 16804                           
 16805                           ;mcc_generated_files/interrupt_manager.c: 99:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 101:             TMR3_StartTimer();
 16806  0054BC  EC70  F02D         	call	i2_TMR3_StartTimer	;wreg free
 16807                           
 16808                           ;mcc_generated_files/interrupt_manager.c: 102:         }else{
 16809  0054C0  D002               	goto	i2l202
 16810  0054C2                     i2l6555:
 16811                           
 16812                           ;mcc_generated_files/interrupt_manager.c: 104:             TMR0_StartTimer();
 16813  0054C2  EC86  F02D         	call	i2_TMR0_StartTimer	;wreg free
 16814  0054C6                     i2l202:
 16815  0054C6  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 16816  0054C8  0011               	retfie		f
 16817  0054CA                     __end_of_INTERRUPT_InterruptManagerHigh:
 16818                           	opt callstack 0
 16819                           
 16820 ;; *************** function i2_TMR3_StartTimer *****************
 16821 ;; Defined at:
 16822 ;;		line 74 in file "mcc_generated_files/tmr3.c"
 16823 ;; Parameters:    Size  Location     Type
 16824 ;;		None
 16825 ;; Auto vars:     Size  Location     Type
 16826 ;;		None
 16827 ;; Return value:  Size  Location     Type
 16828 ;;                  1    wreg      void 
 16829 ;; Registers used:
 16830 ;;		wreg, status,2, cstack
 16831 ;; Tracked objects:
 16832 ;;		On entry : 0/0
 16833 ;;		On exit  : 0/0
 16834 ;;		Unchanged: 0/0
 16835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16836 ;;      Params:         0       0       0       0       0       0       0       0       0
 16837 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16838 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16839 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16840 ;;Total ram usage:        0 bytes
 16841 ;; Hardware stack levels used:    1
 16842 ;; Hardware stack levels required when called:    1
 16843 ;; This function calls:
 16844 ;;		i2_TMR3_WriteTimer
 16845 ;; This function is called by:
 16846 ;;		_INTERRUPT_InterruptManagerHigh
 16847 ;; This function uses a non-reentrant model
 16848 ;;
 16849                           
 16850                           	psect	text85
 16851  005AE0                     __ptext85:
 16852                           	opt callstack 0
 16853  005AE0                     i2_TMR3_StartTimer:
 16854                           	opt callstack 15
 16855                           
 16856                           ;mcc_generated_files/tmr3.c: 76:     TMR3_WriteTimer(timer3ReloadVal);
 16857                           
 16858                           ;incstack = 0
 16859  005AE0  C0EF  F001         	movff	_timer3ReloadVal,i2TMR3_WriteTimer@timerVal	;volatile
 16860  005AE4  C0F0  F002         	movff	_timer3ReloadVal+1,i2TMR3_WriteTimer@timerVal+1	;volatile
 16861  005AE8  EC3A  F02D         	call	i2_TMR3_WriteTimer	;wreg free
 16862                           
 16863                           ;mcc_generated_files/tmr3.c: 78:     T3CONbits.TMR3ON = 1;
 16864  005AEC  80C9               	bsf	4041,0,c	;volatile
 16865  005AEE  0012               	return		;funcret
 16866  005AF0                     __end_ofi2_TMR3_StartTimer:
 16867                           	opt callstack 0
 16868                           
 16869 ;; *************** function i2_TMR3_WriteTimer *****************
 16870 ;; Defined at:
 16871 ;;		line 87 in file "mcc_generated_files/tmr3.c"
 16872 ;; Parameters:    Size  Location     Type
 16873 ;;  timerVal        2    0[COMRAM] unsigned short 
 16874 ;; Auto vars:     Size  Location     Type
 16875 ;;		None
 16876 ;; Return value:  Size  Location     Type
 16877 ;;                  1    wreg      void 
 16878 ;; Registers used:
 16879 ;;		wreg, status,2
 16880 ;; Tracked objects:
 16881 ;;		On entry : 0/0
 16882 ;;		On exit  : 0/0
 16883 ;;		Unchanged: 0/0
 16884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16885 ;;      Params:         2       0       0       0       0       0       0       0       0
 16886 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16887 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16888 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16889 ;;Total ram usage:        2 bytes
 16890 ;; Hardware stack levels used:    1
 16891 ;; This function calls:
 16892 ;;		Nothing
 16893 ;; This function is called by:
 16894 ;;		i2_TMR3_StartTimer
 16895 ;; This function uses a non-reentrant model
 16896 ;;
 16897                           
 16898                           	psect	text86
 16899  005A74                     __ptext86:
 16900                           	opt callstack 0
 16901  005A74                     i2_TMR3_WriteTimer:
 16902                           	opt callstack 15
 16903                           
 16904                           ;mcc_generated_files/tmr3.c: 87: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_f
      +                          iles/tmr3.c: 88: {;mcc_generated_files/tmr3.c: 89:     if (T3CONbits.nT3SYNC == 1)
 16905                           
 16906                           ;incstack = 0
 16907  005A74  A4C9               	btfss	4041,2,c	;volatile
 16908  005A76  D007               	goto	i2l6201
 16909                           
 16910                           ;mcc_generated_files/tmr3.c: 90:     {;mcc_generated_files/tmr3.c: 92:         T3CONbits
      +                          .TMR3ON = 0;
 16911  005A78  90C9               	bcf	4041,0,c	;volatile
 16912                           
 16913                           ;mcc_generated_files/tmr3.c: 95:         TMR3H = (timerVal >> 8);
 16914  005A7A  5002               	movf	i2TMR3_WriteTimer@timerVal+1,w,c
 16915  005A7C  6EC8               	movwf	4040,c	;volatile
 16916                           
 16917                           ;mcc_generated_files/tmr3.c: 96:         TMR3L = timerVal;
 16918  005A7E  C001  FFC7         	movff	i2TMR3_WriteTimer@timerVal,4039	;volatile
 16919                           
 16920                           ;mcc_generated_files/tmr3.c: 99:         T3CONbits.TMR3ON =1;
 16921  005A82  80C9               	bsf	4041,0,c	;volatile
 16922                           
 16923                           ;mcc_generated_files/tmr3.c: 100:     }
 16924  005A84  0012               	return	
 16925  005A86                     i2l6201:
 16926                           
 16927                           ;mcc_generated_files/tmr3.c: 102:     {;mcc_generated_files/tmr3.c: 104:         TMR3H =
      +                           (timerVal >> 8);
 16928  005A86  5002               	movf	i2TMR3_WriteTimer@timerVal+1,w,c
 16929  005A88  6EC8               	movwf	4040,c	;volatile
 16930                           
 16931                           ;mcc_generated_files/tmr3.c: 105:         TMR3L = timerVal;
 16932  005A8A  C001  FFC7         	movff	i2TMR3_WriteTimer@timerVal,4039	;volatile
 16933  005A8E  0012               	return		;funcret
 16934  005A90                     __end_ofi2_TMR3_WriteTimer:
 16935                           	opt callstack 0
 16936                           
 16937 ;; *************** function i2_TMR0_StartTimer *****************
 16938 ;; Defined at:
 16939 ;;		line 70 in file "mcc_generated_files/tmr0.c"
 16940 ;; Parameters:    Size  Location     Type
 16941 ;;		None
 16942 ;; Auto vars:     Size  Location     Type
 16943 ;;		None
 16944 ;; Return value:  Size  Location     Type
 16945 ;;                  1    wreg      void 
 16946 ;; Registers used:
 16947 ;;		None
 16948 ;; Tracked objects:
 16949 ;;		On entry : 0/0
 16950 ;;		On exit  : 0/0
 16951 ;;		Unchanged: 0/0
 16952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16953 ;;      Params:         0       0       0       0       0       0       0       0       0
 16954 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16955 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16956 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16957 ;;Total ram usage:        0 bytes
 16958 ;; Hardware stack levels used:    1
 16959 ;; This function calls:
 16960 ;;		Nothing
 16961 ;; This function is called by:
 16962 ;;		_INTERRUPT_InterruptManagerHigh
 16963 ;; This function uses a non-reentrant model
 16964 ;;
 16965                           
 16966                           	psect	text87
 16967  005B0C                     __ptext87:
 16968                           	opt callstack 0
 16969  005B0C                     i2_TMR0_StartTimer:
 16970                           	opt callstack 16
 16971                           
 16972                           ;mcc_generated_files/tmr0.c: 73:     while(PORTAbits.RA5 == 0);
 16973                           
 16974                           ;incstack = 0
 16975  005B0C  AA8D               	btfss	3981,5,c	;volatile
 16976  005B0E  D7FE               	goto	i2_TMR0_StartTimer
 16977  005B10                     i2u655_40:
 16978  005B10  BA8D               	btfsc	3981,5,c	;volatile
 16979  005B12  D7FE               	goto	i2u655_40
 16980                           
 16981                           ;mcc_generated_files/tmr0.c: 77:     T0CON0bits.T0EN = 1;
 16982  005B14  8ED5               	bsf	4053,7,c	;volatile
 16983                           
 16984                           ;mcc_generated_files/tmr0.c: 79:     PORTBbits.RB3 = 1;
 16985  005B16  868E               	bsf	3982,3,c	;volatile
 16986  005B18  0012               	return		;funcret
 16987  005B1A                     __end_ofi2_TMR0_StartTimer:
 16988                           	opt callstack 0
 16989                           
 16990 ;; *************** function i2_TMR0_Reload *****************
 16991 ;; Defined at:
 16992 ;;		line 96 in file "mcc_generated_files/tmr0.c"
 16993 ;; Parameters:    Size  Location     Type
 16994 ;;		None
 16995 ;; Auto vars:     Size  Location     Type
 16996 ;;		None
 16997 ;; Return value:  Size  Location     Type
 16998 ;;                  1    wreg      void 
 16999 ;; Registers used:
 17000 ;;		wreg, status,2, status,0, cstack
 17001 ;; Tracked objects:
 17002 ;;		On entry : 0/0
 17003 ;;		On exit  : 0/0
 17004 ;;		Unchanged: 0/0
 17005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17006 ;;      Params:         0       0       0       0       0       0       0       0       0
 17007 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17008 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17009 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17010 ;;Total ram usage:        0 bytes
 17011 ;; Hardware stack levels used:    1
 17012 ;; Hardware stack levels required when called:    1
 17013 ;; This function calls:
 17014 ;;		i2_TMR0_WriteTimer
 17015 ;; This function is called by:
 17016 ;;		_INTERRUPT_InterruptManagerHigh
 17017 ;; This function uses a non-reentrant model
 17018 ;;
 17019                           
 17020                           	psect	text88
 17021  00590C                     __ptext88:
 17022                           	opt callstack 0
 17023  00590C                     i2_TMR0_Reload:
 17024                           	opt callstack 15
 17025                           
 17026                           ;mcc_generated_files/tmr0.c: 99:     temp_cycle = cycle - 1;
 17027                           
 17028                           ;incstack = 0
 17029  00590C  0EFF               	movlw	255
 17030  00590E  2448               	addwf	_cycle,w,c	;volatile
 17031  005910  6E4C               	movwf	_temp_cycle,c	;volatile
 17032  005912  0EFF               	movlw	255
 17033  005914  2049               	addwfc	_cycle+1,w,c	;volatile
 17034  005916  6E4D               	movwf	_temp_cycle+1,c	;volatile
 17035  005918  0EFF               	movlw	255
 17036  00591A  204A               	addwfc	_cycle+2,w,c	;volatile
 17037  00591C  6E4E               	movwf	_temp_cycle+2,c	;volatile
 17038  00591E  0EFF               	movlw	255
 17039  005920  204B               	addwfc	_cycle+3,w,c	;volatile
 17040  005922  6E4F               	movwf	_temp_cycle+3,c	;volatile
 17041                           
 17042                           ;mcc_generated_files/tmr0.c: 100:     TMR0_WriteTimer((0xFFFF - temp_cycle)+1);
 17043  005924  504C               	movf	_temp_cycle,w,c	;volatile
 17044  005926  0800               	sublw	0
 17045  005928  6E01               	movwf	i2TMR0_WriteTimer@timerVal,c
 17046  00592A  504D               	movf	_temp_cycle+1,w,c	;volatile
 17047  00592C  A0D8               	btfss	status,0,c
 17048  00592E  2AE8               	incf	wreg,f,c
 17049  005930  0800               	sublw	0
 17050  005932  6E02               	movwf	i2TMR0_WriteTimer@timerVal+1,c
 17051  005934  ECB6  F02D         	call	i2_TMR0_WriteTimer	;wreg free
 17052  005938  0012               	return		;funcret
 17053  00593A                     __end_ofi2_TMR0_Reload:
 17054                           	opt callstack 0
 17055                           
 17056 ;; *************** function i2_TMR0_WriteTimer *****************
 17057 ;; Defined at:
 17058 ;;		line 89 in file "mcc_generated_files/tmr0.c"
 17059 ;; Parameters:    Size  Location     Type
 17060 ;;  timerVal        2    0[COMRAM] unsigned short 
 17061 ;; Auto vars:     Size  Location     Type
 17062 ;;		None
 17063 ;; Return value:  Size  Location     Type
 17064 ;;                  1    wreg      void 
 17065 ;; Registers used:
 17066 ;;		wreg, status,2
 17067 ;; Tracked objects:
 17068 ;;		On entry : 0/0
 17069 ;;		On exit  : 0/0
 17070 ;;		Unchanged: 0/0
 17071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17072 ;;      Params:         2       0       0       0       0       0       0       0       0
 17073 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17074 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17075 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17076 ;;Total ram usage:        2 bytes
 17077 ;; Hardware stack levels used:    1
 17078 ;; This function calls:
 17079 ;;		Nothing
 17080 ;; This function is called by:
 17081 ;;		i2_TMR0_Reload
 17082 ;; This function uses a non-reentrant model
 17083 ;;
 17084                           
 17085                           	psect	text89
 17086  005B6C                     __ptext89:
 17087                           	opt callstack 0
 17088  005B6C                     i2_TMR0_WriteTimer:
 17089                           	opt callstack 15
 17090                           
 17091                           ;mcc_generated_files/tmr0.c: 89: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_f
      +                          iles/tmr0.c: 90: {;mcc_generated_files/tmr0.c: 92:     TMR0H = timerVal >> 8;
 17092                           
 17093                           ;incstack = 0
 17094  005B6C  5002               	movf	i2TMR0_WriteTimer@timerVal+1,w,c
 17095  005B6E  6ED4               	movwf	4052,c	;volatile
 17096                           
 17097                           ;mcc_generated_files/tmr0.c: 93:     TMR0L = (uint8_t) timerVal;
 17098  005B70  C001  FFD3         	movff	i2TMR0_WriteTimer@timerVal,4051	;volatile
 17099  005B74  0012               	return		;funcret
 17100  005B76                     __end_ofi2_TMR0_WriteTimer:
 17101                           	opt callstack 0
 17102                           
 17103 ;; *************** function i2_SPI1_Start *****************
 17104 ;; Defined at:
 17105 ;;		line 56 in file "mcc_generated_files/spi1.c"
 17106 ;; Parameters:    Size  Location     Type
 17107 ;;		None
 17108 ;; Auto vars:     Size  Location     Type
 17109 ;;		None
 17110 ;; Return value:  Size  Location     Type
 17111 ;;                  1    wreg      void 
 17112 ;; Registers used:
 17113 ;;		None
 17114 ;; Tracked objects:
 17115 ;;		On entry : 0/0
 17116 ;;		On exit  : 0/0
 17117 ;;		Unchanged: 0/0
 17118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17119 ;;      Params:         0       0       0       0       0       0       0       0       0
 17120 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17121 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17122 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17123 ;;Total ram usage:        0 bytes
 17124 ;; Hardware stack levels used:    1
 17125 ;; This function calls:
 17126 ;;		Nothing
 17127 ;; This function is called by:
 17128 ;;		_INTERRUPT_InterruptManagerHigh
 17129 ;; This function uses a non-reentrant model
 17130 ;;
 17131                           
 17132                           	psect	text90
 17133  005B7E                     __ptext90:
 17134                           	opt callstack 0
 17135  005B7E                     i2_SPI1_Start:
 17136                           	opt callstack 16
 17137                           
 17138                           ;mcc_generated_files/spi1.c: 59:     if(!SSP1CON1bits.SSPEN)
 17139                           
 17140                           ;incstack = 0
 17141  005B7E  BA96               	btfsc	3990,5,c	;volatile
 17142  005B80  0012               	return	
 17143                           
 17144                           ;mcc_generated_files/spi1.c: 60:     {;mcc_generated_files/spi1.c: 62:         SSP1CON1b
      +                          its.SSPEN = 1;
 17145  005B82  8A96               	bsf	3990,5,c	;volatile
 17146  005B84  0012               	return		;funcret
 17147  005B86                     __end_ofi2_SPI1_Start:
 17148                           	opt callstack 0
 17149                           
 17150 ;; *************** function _TMR0_StopTimer *****************
 17151 ;; Defined at:
 17152 ;;		line 82 in file "mcc_generated_files/tmr0.c"
 17153 ;; Parameters:    Size  Location     Type
 17154 ;;		None
 17155 ;; Auto vars:     Size  Location     Type
 17156 ;;		None
 17157 ;; Return value:  Size  Location     Type
 17158 ;;                  1    wreg      void 
 17159 ;; Registers used:
 17160 ;;		None
 17161 ;; Tracked objects:
 17162 ;;		On entry : 0/0
 17163 ;;		On exit  : 0/0
 17164 ;;		Unchanged: 0/0
 17165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17166 ;;      Params:         0       0       0       0       0       0       0       0       0
 17167 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17168 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17169 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17170 ;;Total ram usage:        0 bytes
 17171 ;; Hardware stack levels used:    1
 17172 ;; This function calls:
 17173 ;;		Nothing
 17174 ;; This function is called by:
 17175 ;;		_INTERRUPT_InterruptManagerHigh
 17176 ;; This function uses a non-reentrant model
 17177 ;;
 17178                           
 17179                           	psect	text91
 17180  005BB0                     __ptext91:
 17181                           	opt callstack 0
 17182  005BB0                     _TMR0_StopTimer:
 17183                           	opt callstack 16
 17184                           
 17185                           ;mcc_generated_files/tmr0.c: 85:     T0CON0bits.T0EN = 0;
 17186                           
 17187                           ;incstack = 0
 17188  005BB0  9ED5               	bcf	4053,7,c	;volatile
 17189  005BB2  0012               	return		;funcret
 17190  005BB4                     __end_of_TMR0_StopTimer:
 17191                           	opt callstack 0
 17192                           
 17193                           	psect	text92
 17194  000000                     __ptext92:
 17195                           	opt callstack 0
 17196                           
 17197                           	psect	rparam
 17198  0000                     
 17199                           	psect	temp
 17200  000054                     btemp:
 17201                           	opt callstack 0
 17202  000054                     	ds	1
 17203  0000                     int$flags	set	btemp
 17204  0000                     wtemp8	set	btemp+1
 17205  0000                     ttemp5	set	btemp+1
 17206  0000                     ttemp6	set	btemp+4
 17207  0000                     ttemp7	set	btemp+8
 17208                           tosu	equ	0xFFF
 17209                           tosh	equ	0xFFE
 17210                           tosl	equ	0xFFD
 17211                           stkptr	equ	0xFFC
 17212                           pclatu	equ	0xFFB
 17213                           pclath	equ	0xFFA
 17214                           pcl	equ	0xFF9
 17215                           tblptru	equ	0xFF8
 17216                           tblptrh	equ	0xFF7
 17217                           tblptrl	equ	0xFF6
 17218                           tablat	equ	0xFF5
 17219                           prodh	equ	0xFF4
 17220                           prodl	equ	0xFF3
 17221                           indf0	equ	0xFEF
 17222                           postinc0	equ	0xFEE
 17223                           postdec0	equ	0xFED
 17224                           preinc0	equ	0xFEC
 17225                           plusw0	equ	0xFEB
 17226                           fsr0h	equ	0xFEA
 17227                           fsr0l	equ	0xFE9
 17228                           wreg	equ	0xFE8
 17229                           indf1	equ	0xFE7
 17230                           postinc1	equ	0xFE6
 17231                           postdec1	equ	0xFE5
 17232                           preinc1	equ	0xFE4
 17233                           plusw1	equ	0xFE3
 17234                           fsr1h	equ	0xFE2
 17235                           fsr1l	equ	0xFE1
 17236                           bsr	equ	0xFE0
 17237                           indf2	equ	0xFDF
 17238                           postinc2	equ	0xFDE
 17239                           postdec2	equ	0xFDD
 17240                           preinc2	equ	0xFDC
 17241                           plusw2	equ	0xFDB
 17242                           fsr2h	equ	0xFDA
 17243                           fsr2l	equ	0xFD9
 17244                           status	equ	0xFD8


Data Sizes:
    Strings     510
    Constant    128
    Data        18
    BSS         148
    Persistent  17
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      83
    BANK0           160    117     156
    BANK1           256    188     256
    BANK2           256      0      52
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_32(CODE[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_17(CODE[19]), STR_16(CODE[24]), STR_15(CODE[23]), STR_14(CODE[13]), 
		 -> STR_13(CODE[19]), STR_12(CODE[42]), STR_11(CODE[34]), STR_10(CODE[32]), 
		 -> STR_9(CODE[32]), STR_8(CODE[37]), STR_7(CODE[28]), STR_6(CODE[33]), 
		 -> STR_5(CODE[29]), STR_4(CODE[28]), STR_3(CODE[36]), STR_2(CODE[36]), 
		 -> STR_1(CODE[39]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_17(CODE[19]), STR_16(CODE[24]), STR_15(CODE[23]), STR_14(CODE[13]), 
		 -> STR_13(CODE[19]), STR_12(CODE[42]), STR_11(CODE[34]), STR_10(CODE[32]), 
		 -> STR_9(CODE[32]), STR_8(CODE[37]), STR_7(CODE[28]), STR_6(CODE[33]), 
		 -> STR_5(CODE[29]), STR_4(CODE[28]), STR_3(CODE[36]), STR_2(CODE[36]), 
		 -> STR_1(CODE[39]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_17(CODE[19]), STR_16(CODE[24]), STR_15(CODE[23]), STR_14(CODE[13]), 
		 -> STR_13(CODE[19]), STR_12(CODE[42]), STR_11(CODE[34]), STR_10(CODE[32]), 
		 -> STR_9(CODE[32]), STR_8(CODE[37]), STR_7(CODE[28]), STR_6(CODE[33]), 
		 -> STR_5(CODE[29]), STR_4(CODE[28]), STR_3(CODE[36]), STR_2(CODE[36]), 
		 -> STR_1(CODE[39]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> output(BANK2[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> output(BANK2[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S2100_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> output(BANK2[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> output(BANK2[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 20
		 -> rx_data(BANK1[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> rx_data(BANK1[20]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_17(CODE[19]), STR_16(CODE[24]), STR_15(CODE[23]), STR_14(CODE[13]), 
		 -> STR_13(CODE[19]), STR_12(CODE[42]), STR_11(CODE[34]), STR_10(CODE[32]), 
		 -> STR_9(CODE[32]), STR_8(CODE[37]), STR_7(CODE[28]), STR_6(CODE[33]), 
		 -> STR_5(CODE[29]), STR_4(CODE[28]), STR_3(CODE[36]), STR_2(CODE[36]), 
		 -> STR_1(CODE[39]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 42
		 -> STR_17(CODE[19]), STR_16(CODE[24]), STR_15(CODE[23]), STR_14(CODE[13]), 
		 -> STR_13(CODE[19]), STR_12(CODE[42]), STR_11(CODE[34]), STR_10(CODE[32]), 
		 -> STR_9(CODE[32]), STR_8(CODE[37]), STR_7(CODE[28]), STR_6(CODE[33]), 
		 -> STR_5(CODE[29]), STR_4(CODE[28]), STR_3(CODE[36]), STR_2(CODE[36]), 
		 -> STR_1(CODE[39]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    EUSART_Write_String@data	PTR unsigned char  size(2) Largest target is 50
		 -> output(BANK2[50]), rx_data(BANK1[20]), 


Critical Paths under _main in COMRAM

    _main->_Parse_Data
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _sprintf->_vfprintf
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atol->___lmul
    _atoi->_isspace
    _TMR0_Reload->_TMR0_WriteTimer
    _EUSART_Write_String->_EUSART_Write
    _powf->_scalbnf
    _sqrtf->___flge
    _scalbnf->___flmul
    ___flmul->___fladd
    ___flsub->___flmul
    ___fldiv->___flmul

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    _TMR3_ISR->_TMR3_WriteTimer
    _TMR3_StartTimer->_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    i1_TMR0_Reload->i1_TMR0_WriteTimer
    _EUSART_Receive_ISR->_TMR1_WriteTimer

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    i2_TMR3_StartTimer->i2_TMR3_WriteTimer
    i2_TMR0_Reload->i2_TMR0_WriteTimer

Critical Paths under _main in BANK0

    _main->_AD9833_Init
    _main->_Parse_Data
    _Parse_Data->_AD9833_SetFrequency
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _AD9833_Init->_AD9833_SetFrequency
    _AD9833_SetFrequency->___fltol
    _powf->_sqrtf
    _sqrtf->___flge
    ___flge->___flsub
    ___fldiv->___flsub
    ___fltol->_powf

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _AD9833_SetFrequency->_powf
    ___fltol->_powf

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  263784
                                            115 BANK0      2     2      0
                        _AD9833_Init
                         _Parse_Data
                         _SPI1_Start
                  _SYSTEM_Initialize
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (1) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             11 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                             11 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             11 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Parse_Data                                           3     3      0  143135
                                             58 COMRAM     1     1      0
                                            113 BANK0      2     2      0
                _AD9833_SetFrequency
                _EUSART_Write_String
                         _SPI1_Close
                        _TMR0_Reload
                    _TMR0_StartTimer
                               _atoi
                               _atol
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   18644
                                             61 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   15853
                                             56 COMRAM     2     2      0
                                             55 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           54    48      6   15486
                                             18 BANK0     37    31      6
                               _ctoa
                               _dtoa
                              _fputc
                            _strncmp
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    4367
                                             38 COMRAM    18     8     10
                                              0 BANK0     14    14      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                             11 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                             11 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     909
                                             11 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4966
                                             38 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             29 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                             11 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                             11 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    3385
                                             38 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             27 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                             20 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                             11 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _atol                                                20    16      4    1363
                                             23 COMRAM    20    16      4
                             ___lmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                             11 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _atoi                                                15    13      2    1488
                                             18 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              7     5      2     283
                                             11 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     237
                                             11 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     495
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Reload                                          0     0      0     120
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_WriteTimer                                      2     0      2     120
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write_String                                  3     1      2    1502
                                             12 COMRAM     3     1      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      44
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AD9833_Init                                          2     2      0  120159
                                            113 BANK0      2     2      0
                _AD9833_SetFrequency
                     _SPI1_WriteWord
 ---------------------------------------------------------------------------------
 (2) _AD9833_SetFrequency                                 21    17      4  119613
                                             92 BANK0     21    17      4
                     _SPI1_WriteWord
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                               _powf
 ---------------------------------------------------------------------------------
 (3) _powf                                               205   197      8  101964
                                             65 BANK0     17     9      8
                                              0 BANK1    188   188      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                              _fabsf
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (4) _sqrtf                                               49    45      4   26715
                                             16 BANK0     49    45      4
                            ___fladd
                             ___flge
                            ___flmul
                               _nanf
 ---------------------------------------------------------------------------------
 (5) _nanf                                                 8     4      4      99
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1220
                                             52 COMRAM     4     4      0
                                              8 BANK0      8     0      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (4) _scalbnf                                             18    12      6   12271
                                             52 COMRAM     6     0      6
                                              0 BANK0     12    12      0
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8   11776
                                             27 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     123
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     474
                                             11 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8   19190
                                              0 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8   11738
                                             11 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     197
                                             11 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    4044
                                             52 COMRAM     4     4      0
                                              8 BANK0     21    13      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             82 BANK0     10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                               _powf (ARG)
 ---------------------------------------------------------------------------------
 (3) _SPI1_WriteWord                                       4     2      2     546
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManagerLow                       7     7      0    1030
                                              4 COMRAM     7     7      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _INT0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0     480
                    _TMR3_StartTimer
                     _TMR3_StopTimer
                    _TMR3_WriteTimer
                  i1_TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (12) _TMR3_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR3_StartTimer                                     0     0      0     240
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR3_WriteTimer                                     2     0      2     240
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0      70
                       i1_SPI1_Close
                      i1_TMR0_Reload
                  i1_TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (12) i1_TMR0_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_TMR0_Reload                                       0     0      0      70
                  i1_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i1_TMR0_WriteTimer                                   2     0      2      70
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i1_SPI1_Close                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0     240
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
                    _TMR1_StartTimer
                    _TMR1_WriteTimer
                   i1_TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (12) i1_TMR1_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     240
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManagerHigh                      0     0      0     184
                     _TMR0_StopTimer
                       i2_SPI1_Start
                      i2_TMR0_Reload
                  i2_TMR0_StartTimer
                  i2_TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (15) i2_TMR3_StartTimer                                   0     0      0     114
                  i2_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) i2_TMR3_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) i2_TMR0_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_TMR0_Reload                                       0     0      0      70
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (16) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) i2_SPI1_Start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD9833_Init
     _AD9833_SetFrequency
       _SPI1_WriteWord
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _powf (ARG)
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl
           _fabsf
           _scalbnf
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
           _sqrtf
             ___fladd
             ___flge
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
             _nanf
       ___xxtofl
       _powf
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flneg
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl
         _fabsf
         _scalbnf
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
         _sqrtf
           ___fladd
           ___flge
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           _nanf
     _SPI1_WriteWord
   _Parse_Data
     _AD9833_SetFrequency
       _SPI1_WriteWord
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _powf (ARG)
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl
           _fabsf
           _scalbnf
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
           _sqrtf
             ___fladd
             ___flge
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
             _nanf
       ___xxtofl
       _powf
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flneg
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl
         _fabsf
         _scalbnf
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
         _sqrtf
           ___fladd
           ___flge
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           _nanf
     _EUSART_Write_String
       _EUSART_Write
     _SPI1_Close
     _TMR0_Reload
       _TMR0_WriteTimer
     _TMR0_StartTimer
     _atoi
       ___wmul
       _isdigit
       _isspace
     _atol
       ___lmul
       _isdigit
       _isspace
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
   _SPI1_Start
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR3_Initialize
   _TMR1_StopTimer

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
     _TMR1_StartTimer *
     _TMR1_WriteTimer *
     i1_TMR1_StopTimer *
   _EUSART_Transmit_ISR *
   _INT0_ISR *
     i1_SPI1_Close
     i1_TMR0_Reload
       i1_TMR0_WriteTimer
     i1_TMR0_StartTimer
   _TMR1_ISR *
     _TMR1_WriteTimer
   _TMR3_ISR *
     _TMR3_StartTimer
       _TMR3_WriteTimer
     _TMR3_StopTimer
     _TMR3_WriteTimer
     i1_TMR0_StartTimer

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _TMR0_StopTimer
   i2_SPI1_Start
   i2_TMR0_Reload
     i2_TMR0_WriteTimer
   i2_TMR0_StartTimer
   i2_TMR3_StartTimer
     i2_TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      34       9       20.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BC     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     75      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      53       1       88.3%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     223      18        0.0%
DATA                 0      0     223       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 18 10:39:33 2021

                ?_EUSART_SetRxInterruptHandler 000C                          __end_ofi1_TMR0_Reload 58DE  
                                 ___fldiv@aexp 007C                                   ___fldiv@bexp 007B  
                                 ___fldiv@sign 0074                                    __CFG_CP$OFF 000000  
                                           _L1 7DD9                                             _L2 7DD5  
                                           _L3 7DD1                                             _L4 7DCD  
                                           _L5 7DC9                                             _L6 7DC5  
                                           _P1 7DC1                                             _P2 7DBD  
                                           _P3 7DB9                                             _P4 7DB5  
                                           _P5 7DB1                                             l89 55B6  
                                           _bp 7DED                                             _cp 7D9D  
                                           bsr 000FE0                            ___wmul@multiplicand 000E  
                                  __CFG_LVP$ON 000000                                            l652 2AC0  
                                          l644 29C8                                            l719 5142  
                                          l737 3EEE                                            l762 42C8  
                                          l666 2C10                                            l658 2B5A  
                                          l578 535C                     __size_ofi2_TMR3_StartTimer 0010  
                                          l739 3EF6                                            l764 42D0  
                                 __CFG_CPD$OFF 000000                                            _lg2 7DAD  
                              _timer1ReloadVal 00F1                                            _abs 5762  
                       ??_EUSART_RxDataHandler 0003                                            _pad 5114  
                                          _sec 0047                                            _ovt 7DA1  
               ?_EUSART_SetFramingErrorHandler 000C                        __size_of_PMD_Initialize 001C  
                                          tosl 000FFD                                            wreg 000FE8  
                                 ___flmul@aexp 002D                                   ___flmul@bexp 002E  
                                 ___flmul@sign 0028                                   ___flmul@temp 0033  
                                 ___flmul@prod 002F                                   __CFG_ZCD$OFF 000000  
                                 ___fltol@exp1 00BB                                           ?_abs 001E  
                                         l1060 4CA4                                           l1233 4D8C  
                                         l1243 4FA8                                           l1340 3AF8  
                                         l1324 3A26                                           l1325 3A04  
                                         l1501 4AE0                                           l1350 3B5A  
                                         l1409 3612                                           l1450 48AE  
                                         l1426 38B0                                           l1418 382A  
                                         l1419 3826                                _timer3ReloadVal 00EF  
                                         l1532 45D6                                           l1349 3B5E  
                                         l1390 3DD2                                           l1470 578A  
                                         l1391 3DCE                                           l1457 492C  
                                         l1379 3D64                                           l4301 5164  
                                         l1649 0346                                           l4305 5190  
                                         l4321 4614                                           l4401 4D1A  
                                         l1659 03AE                                           l4411 4D76  
                                         l1756 2804                                           l1669 044C  
                                         l4261 508C                                           l4333 4662  
                                         l4421 4F4A                                           l1790 2F86  
                                         l4271 5698                                           l4335 4676  
                                         l4327 463C                                           l4503 4098  
                                         l1793 303E                                           l4281 5948  
                                         l4353 470E                                           l4345 46D2  
                                         l1786 2F32                                           l5147 5870  
                                         l5163 48DC                                           l5315 4232  
                                         l1795 3118                                           l4275 56AE  
                                         l4291 512C                                           l4435 54DE  
                                         l4451 3ED2                                           l4427 4F92  
                                         l4419 4F36                                           l5165 48E2  
                                         l5157 48BE                                           l5333 55A2  
                                         l4437 54EA                                           l4349 46E8  
                                         l4381 4BB0                                           l4373 4B54  
                                         l4365 4B16                                           ?_pad 001C  
                                         l5175 4952                                           l5167 48EE  
                                         l4279 5944                                           l4295 513A  
                                         l4375 4B68                                           l4551 5002  
                                         l4519 430A                                           l5193 499E  
                                         l5177 495E                                           l5169 4914  
                                         l6153 4A18                                           l6137 49C2  
                                         l6073 447A                                           l4297 514C  
                                         l4385 4BC6                                           l4369 4B3A  
                                         l4465 3F10                                           l4529 43F8  
                                         l5347 55D4                                           l6163 4A82  
                                         l6155 4A20                                           l6147 4A08  
                                         l6139 49C6                                           l6091 44D8  
                                         l6083 44C0                                           l6075 447E  
                                         l4805 3630                                           l5349 55D8  
                                         l6157 4A26                                           l6093 44DE  
                                         l4389 4BEC                                           l4469 3F20  
                                         l4549 4FF4                                           l6159 4A4C  
                                         l6095 4504                                           l4479 401A  
                                         l4399 4D06                                           l6089 44D0  
                                         l5299 4182                                           l6099 455E  
                                         l4499 4080                                           l5901 4E30  
                                         l4853 37F0                                           l4781 35D2  
                                         l5903 4E3C                                           l4847 37D2  
                                         l9031 1CD4                                           l4873 386E  
                                         l4777 35BE                                           l5921 5598  
                                         l4945 32CC                                           l9201 298E  
                                         l8315 39B8                                           l4795 35FE  
                                         l4779 35C2                                           l4939 3250  
                                         l5851 53B4                                           l5909 4E58  
                                         l8253 3914                                           l4877 388C  
                                         l4797 3602                                           l9125 2824  
                                         l5861 53E0                                           l4981 3538  
                                         l4949 3302                                           l9301 2BE2  
                                         l9221 2A20                                           l8511 3CAC  
                                         l8423 3BCA                                           l8415 3BA4  
                                         l8351 3A6C                                           l8343 3A4A  
                                         l8327 3A12                                           l9047 1E64  
                                         l9055 1F30                                           l9039 1DBE  
                                         l4975 34FC                                           l4967 347C  
                                         l4959 33E0                                           l4991 355E  
                                         l8505 3C96                                           l8353 3A70  
                                         l8361 3A82                                           l8329 3A16  
                                         l8273 3958                                           l8249 3910  
                                         l4889 38CE                                           l5865 53F4  
                                         l4985 3544                                           l5849 538E  
                                         l9161 2872                                           l5891 4E18  
                                         l5875 4DCE                                           l8427 3BD2  
                                         l8371 3AE8                                           l8451 4C8E  
                                         l8443 4C44                                           l9067 2174  
                                         l5963 56E0                                           l8429 3BD4  
                                         l8285 397C                                           l8277 395C  
                                         l9069 21A8                                           l8701 01D0  
                                         l9173 28FC                                           l9181 290E  
                                         l5895 4E28                                           l8543 3D62  
                                         l8519 3CC4                                           l8447 4C78  
                                         l8623 2E6E                                           l8631 2E98  
                                         l5959 56CC                                           l9319 2C44  
                                         l9239 2A88                                           l8537 3D3C  
                                         l8529 3D14                                           l8473 3C1E  
                                         l8457 4CDC                                           l8617 2E26  
                                         l9257 2B04                                           l8555 3D98  
                                         l8379 3B1C                                           l8395 3B3C  
                                         l8651 2FD2                                           l8635 2EF0  
                                         l8811 085A                                           l8731 03C0  
                                         l8723 0380                                           l9339 2D0E  
                                         l9283 2B8E                                           l9179 290A  
                                         l8549 3D7A                                           l8493 3C5E  
                                         l8477 3C22                                           l8389 3B32  
                                         l8821 0958                                           l8709 0204  
                                         l8591 3E72                                           l8583 3E64  
                                         l8575 3E16                                           l8671 30F0  
                                         l8639 2F06                                           l8807 07F0  
                                         l8751 04A2                                           l8735 03EA  
                                         l9359 2D56                                           l8497 3C62  
                                         l8657 3058                                           l8817 08EE  
                                         l8745 045E                                           l9385 534A  
                                         l8579 3E3A                                           l8771 0578  
                                         l8739 03FE                                           l8589 3E70  
                                         l8781 0688                                           l8693 016E  
                                         l8847 0C32                                           l8759 04D8  
                                         l8687 0148                                           l8873 0D90  
                                         l8777 0656                                           l8785 069A  
                                         l8859 0CB8                                           l8795 0738  
                                         l8869 0D66                                           l8879 0DBC  
                                         l8799 0754                                           STR_1 7E2B  
                                         STR_2 7E77                                           STR_3 7E9B  
                                         STR_4 7F7B                                           STR_5 7F42  
                                         STR_6 7EE1                                           STR_7 7F5F  
                                         STR_8 7E52                                           STR_9 7F22  
                                         _LATA 000F83                                           _LATB 000F84  
                                         _LATC 000F85                                           u3400 50CC  
                                         u3501 4642                                           u3520 467A  
                                         u6010 5AF4                                           u3611 4CE6  
                                         u4420 361E                                           u3380 5084  
                                         u3700 3EA6                                           u4510 387C  
                                         u4430 3794                                           u3470 5770  
                                         u3630 4D1E                                           u4520 389A  
                                         u5160 40E2                                           u6120 4A04  
                                         u6040 44BC                                           u3800 405E  
                                         u5225 4246                                           u5170 412E  
                                         u3730 3EE4                                           u4435 378A  
                                         u5180 417A                                           u6140 4AB0  
                                         u6060 458C                                           u3580 4B6C  
                                         u3820 406A                                           u3660 4F4E  
                                         u3900 4436                                           u4620 3284  
                                         _PMD0 000EE1                                           _PMD1 000EE2  
                                         u4470 3820                                           u6150 4AB2  
                                         u6070 458E                                           u3750 3F0A  
                                         _PMD2 000EE3                                           _PMD3 000EE4  
                                         u3760 402A                                           u4640 335A  
                                         _PMD4 000EE5                                           _PMD5 000EE6  
                                         u3690 3EA4                                           u3850 42BC  
                                         u3780 404C                                           u3781 404A  
                                         u3790 405A                                           u3950 504E  
                                         u3880 4424                                           u3881 4422  
                                         u3890 4432                                           u5930 4E42  
                                         u9220 3DC8                                           u4980 4968  
                                         u9300 2E38                                           u5880 4DBC  
                                         u5960 5594                                           u5890 4DEC  
                                         u5970 581E                                           u9260 3E24  
                                         u5980 5820                                           u9270 3E48  
                                         u8710 39DA                                           u5895 4DE2  
                                         u9335 2EAC                                           u8720 39EA  
                                         u9336 2EB2                                           u9520 02CA  
                                         u9425 315C                                           u9337 2EC0  
                                         u9505 022A                                           u8730 39EC  
                                         u9506 0230                                           u9450 0184  
                                         u9515 027E                                           u9507 023E  
                                         u9516 0284                                           u9460 019A  
                                         u9525 02C0                                           u9517 0292  
                                         u8910 3B54                                           u8760 3A2E  
                                         u9640 0510                                           u9810 0D62  
                                         u9820 0D7E                                           u9660 052E  
                                         u9805 0CCE                                           u9661 052C  
                                         u9806 0CD4                                           u9750 0782  
                                         u9807 0CE2                                           u9905 1F60  
                                         u8970 3BB0                                           u8890 3B40  
                                         u9906 1F66                                           u9907 1F74  
                                         u9835 0FB6                                           u9780 0884  
                                         u9925 1FDC                                           u9926 1FE2  
                                         u9790 0C52                                           u9935 2040  
                                         u9927 1FF0                                           u9936 2046  
                                         u9945 2092                                           u9937 2054  
                                         u9946 2098                                           u9955 213A  
                                         u9947 20A6                                           u9956 2140  
                                         u9957 214E                                           u9990 27D6  
                                         u9975 276A                                           u9985 27AE  
                                         u9986 27B4                                           u9987 27C2  
                                         _WPUA 000F10                                           _WPUB 000F18  
                                         _WPUC 000F20                                           _WPUE 000F2D  
                                __CFG_FCMEN$ON 000000                                           abs@a 001E  
                                         _dbuf 01C4                                           _cp_h 7DFD  
                                         _cp_l 7DF9                                           _dp_h 7D89  
                                         _dp_l 7D81                                           _atoi 49B0  
                                         _atol 4460                                           _ctoa 54CA  
                                         _main 5318                                           _dtoa 3E7A  
                                         _nanf 59FE                                           _huge 7DE1  
                                         _prec 003C                                _TMR0_StartTimer 5AF0  
                                         _nout 00E7                                           _powf 00B6  
                                         pad@i 0023                                           pad@p 0020  
                                         _tiny 7DDD                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           indf2 000FDF  
                                         fsr1l 000FE1                                           pad@w 0025  
                                         fsr2l 000FD9                                           btemp 0054  
                                         _utoa 42AA                     __size_ofi2_TMR3_WriteTimer 001C  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00B2                                ___fldiv@new_exp 0075  
                              _TMR3_Initialize 561A                                  __CFG_CSWEN$ON 000000  
                                 ___param_bank 000000                             SPI1_WriteWord@word 000C  
                        __end_ofi2_TMR0_Reload 593A                                  __CFG_SCANE$ON 000000  
                                        ??_abs 0020                                          ??_pad 0022  
                      __end_of_TMR0_Initialize 57F6                               __end_of_INT0_ISR 57C6  
                                ?_EUSART_Write 0001                 __size_of_OSCILLATOR_Initialize 0018  
                     __end_ofi1_TMR1_StopTimer 5BAC                  __end_of_OSCILLATOR_Initialize 5AA8  
                                  ?_SPI1_Close 0001                                  ___fltol@sign1 00BA  
                              __end_of___aodiv 4730                                          ?_atoi 0013  
                                        ?_atol 0018                                          ?_ctoa 0027  
                              __end_of___fladd 3BF0                                          ?_main 0001  
                                        ?_dtoa 0027                                          ?_nanf 000C  
                              __end_of___aomod 4C0E                                __end_of___fldiv 3E7A  
                              __end_of___flneg 5882                                          STR_10 7F02  
                                        STR_11 7EBF                                          STR_20 7FF6  
                                        STR_12 7E01                                          STR_13 7FD9  
                                        STR_22 7FF9                                          STR_14 7FEC  
                                        STR_15 7FAF                                          STR_32 7F01  
                                        STR_24 7FF9                                          STR_16 7F97  
                                        STR_17 7FC6                                  __CFG_WDTE$OFF 000000  
                                        STR_27 7FFC                                          STR_29 7FFC  
                              __end_of___flmul 38E4                                          ?_powf 00A1  
                              __end_of___flsub 5562                                __end_of___fltol 4E6A  
                              _TMR1_StartTimer 5BAC                                          u10020 2896  
                                        u10005 4800                                          u10006 4806  
                                        u10110 2A30                                          u10007 4814  
                                        ?_utoa 0027                                          u10120 2A64  
                                        u10040 28BA                                          u10130 2A9C  
                                        u10220 2C54                                          u10150 2B14  
                                        u10070 2932                                          u10240 2D1E  
                                        u10080 296C                                          u10090 29A6  
                                        u10307 5986                                          u10180 2B9E  
                                        _T1CLK 000FD2                                __end_of___lodiv 4DAE  
                                        u10267 532E                                          u10277 55F6  
                                        u10287 5970                                          _T1CON 000FCF  
                                        u10297 597C                                          _T3CLK 000FCC  
                                        _T3CON 000FC9                                __end_of___lomod 4FCA  
                                  ?_SPI1_Start 0001                                 __CFG_DEBUG$OFF 000000  
                                        i1l101 5906                                          i1l211 0068  
                                        i1l212 0092                                          i1l213 0088  
                                        i1l207 0044                                          i1l209 0050  
                                        i2l202 54C6                                _TMR0_WriteTimer 5B58  
                                        i2l198 54AC                                          _OSCEN 000EDC  
                                 vfpfcnvrt@fmt 0074                                          _TMR0H 000FD4  
                                 vfpfcnvrt@llu 008F                                          _TMR1H 000FCE  
                                        _TMR0L 000FD3                                          _TMR1L 000FCD  
                                        _TMR3H 000FC8                                          _TMR3L 000FC7  
                                        _TRISA 000F88                                          _TRISB 000F89  
                                        _TRISC 000F8A                                          _RXPPS 000EB5  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                            ___lmul@multiplicand 0010  
                                __CFG_WRT3$OFF 000000                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                               __end_of_TMR1_ISR 5ABE  
                                __CFG_WRTB$OFF 000000                               __end_of_TMR3_ISR 58B0  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                                        _lg2_h 7DA9                                          _lg2_l 7DA5  
                                        _fabsf 56FA                                 __CFG_EBTRB$OFF 000000  
                                        _flags 003E                                          _cycle 0048  
                                        _errno 00E5                                          _ivln2 7D99  
                                        _fputc 5074                                          _fputs 568E  
                              __end_of_isdigit 5826                                __end_of_ivln2_h 7DF9  
                              __end_of_ivln2_l 7D99                                          _two24 7DE5  
                           __CFG_MCLRE$EXTMCLR 000000                                __end_of_scalbnf 42AA  
                                        atoi@n 0020                                          pad@fp 001C  
                                        atoi@s 0013                                          atol@n 0028  
                                        _width 00E9                                          atol@s 0018  
                                        ctoa@c 0029                                          _state 00FA  
                                        _putch 5BB4                                          ctoa@w 002A  
                                        dtoa@d 0029                                          dtoa@i 0070  
                                        dtoa@n 0068                                          dtoa@p 0062  
                                        _sqrtf 2D80                                          dtoa@s 0066  
                                        dtoa@w 0064                                          nanf@s 000C  
                                        nanf@u 0010                                __end_of_isspace 55A0  
                      __end_of_TMR1_Initialize 568E                                          pclath 000FFA  
                                        tablat 000FF5                                          powf@i 012C  
                                        powf@j 01AC                                          powf@k 01A0  
                                        powf@n 0188                                          powf@r 014C  
                                        powf@s 0154                                          powf@t 01B0  
                                        powf@u 0174                                          powf@v 0178  
                                        powf@w 0144                                          powf@x 00A1  
                                        powf@y 00A5                                          powf@z 01B4  
                                        ttemp5 0055                                          ttemp6 0058  
                                        ttemp7 005C                                          utoa@d 0029  
                                        utoa@i 006C                                          utoa@n 0064  
                                        utoa@p 0060                                          utoa@w 0062  
                                        status 000FD8                                          wtemp8 0055  
                              __end_of_sprintf 5478                                __end_of_strncmp 5074  
                 __size_of_EUSART_Write_String 0034                               ___lodiv@dividend 000C  
                              _TMR1_WriteTimer 5A58                 ?_INTERRUPT_InterruptManagerLow 0001  
                     __size_of_SPI1_Initialize 0024                        __size_of_SPI1_WriteWord 002A  
                              __initialization 51AA                                   __end_of_cp_h 7E01  
                                 __end_of_cp_l 7DFD                                   __end_of_dp_h 7D91  
                                 __end_of_dp_l 7D89                                   __end_of_atoi 4AEA  
                                 __end_of_atol 45E8                                   __end_of_ctoa 551A  
                                 __end_of_main 537A                                   __end_of_dtoa 40C2  
                          SPI1_WriteWord@byteh 000F                                   __end_of_nanf 5A20  
                          SPI1_WriteWord@bytel 000E                                   __end_of_huge 7DE5  
                                 __end_of_powf 285A                                   __end_of_tiny 7DE1  
                                 __end_of_utoa 4460                                 ??_EUSART_Write 000C  
               ??_EUSART_SetRxInterruptHandler 000E                                         ??_atoi 0015  
                                       ??_atol 001C                                         ??_ctoa 002A  
                                       ??_main 00D3                                         ??_dtoa 0031  
                                       ??_nanf 0010                                         ??_powf 00A9  
                                       ??_utoa 0031                                _TMR3_StartTimer 5AD0  
                                __activetblptr 000002                                     _Parse_Data 285A  
                             ___lodiv@quotient 001C                                         ?_fabsf 000C  
    __end_of_EUSART_DefaultFramingErrorHandler 5BB8     __size_of_EUSART_DefaultFramingErrorHandler 0002  
          ??_EUSART_DefaultFramingErrorHandler 0003             ?_EUSART_DefaultFramingErrorHandler 0001  
            _EUSART_DefaultFramingErrorHandler 5BB6                        __end_of_TMR0_StartTimer 5AFE  
                   _EUSART_OverrunErrorHandler 01FA                                         ?_fputc 000C  
                          _temp_break_duration 0042                                         ?_fputs 0015  
                                       _ANSELA 000F11                                         ?_putch 0001  
                                       _ANSELB 000F19                                         _ANSELC 000F21  
                                       _T0CON0 000FD5                                         _T0CON1 000FD6  
                                       ?_sqrtf 0070                                         _T1GATE 000FD1  
                                       _T1GCON 000FD0                                         _T3GATE 000FCB  
                                       _T3GCON 000FCA                                         _RC1REG 000F99  
                                       _RB0PPS 000EEF                                         _RC1PPS 000EF8  
                                ??_AD9833_Init 00D1                                         _RC1STA 000F9D  
                                       _RC2PPS 000EF9                        TMR1_WriteTimer@timerVal 0003  
                                       _ODCONA 000F0F                                         _ODCONB 000F17  
                                       _ODCONC 000F1F                        __end_of_TMR3_Initialize 5654  
                                       i1l6215 5902                                 __CFG_WDTCCS$SC 000000  
                                       i1l5355 573C                                         i1l6239 4F12  
                                       i1l6263 58AA                                         i1l5393 5A4E  
                                       i2l6201 5A86                                         i1l5977 5A6A  
                                       _INLVLA 000F0D                                         _INLVLB 000F15  
                                       _INLVLC 000F1D                                         _INLVLE 000F2A  
                                       i2l6555 54C2                                         _OSCFRQ 000EDE  
                                       _TX1REG 000F9A                                         _TX1STA 000F9E  
                             __end_of___xxtofl 49B0                            __size_of_SPI1_Close 0004  
                              _TMR3_WriteTimer 5A3C                            __size_of_SPI1_Start 0008  
                               __CFG_PWRTE$OFF 000000                                 __CFG_XINST$OFF 000000  
                                 vfprintf@cfmt 0039                                   ?_TMR0_Reload 0001  
                                       ___flge 4C0E                                         ___lmul 53D0  
                      __end_of_TMR1_StartTimer 5BB0                                    Parse_Data@i 00D1  
                                    ??___aodiv 001C                                      ??___fladd 0014  
                                    ??___aomod 001C                                         ___wmul 59B4  
                                    ??___fldiv 0035                                      ??___flneg 0010  
                               __CFG_STVREN$ON 000000                                      ??___flmul 0024  
                                    ??___flsub 0035                                      ??___fltol 00B6  
                      __end_of_TMR0_WriteTimer 5B62                                      ??___lodiv 001C  
                                    ??___lomod 001C                      i2TMR0_WriteTimer@timerVal 0001  
                          _EUSART_Transmit_ISR 58DE                                         fabsf@u 0010  
                                       fabsf@x 000C                      i2TMR3_WriteTimer@timerVal 0001  
                             ?_TMR0_Initialize 0001                                         clear_0 51F0  
                                       clear_1 51FC                                         clear_2 5208  
                                       clear_3 5214                                         pad@buf 001E  
                                       ctoa@fp 0027                                         _output 0200  
                                       dtoa@fp 0027                                         _strlen 593A  
                       AD9833_SetFrequency@LSB 00CB                         AD9833_SetFrequency@MSB 00C9  
                                       fputc@c 000C                                 _PMD_Initialize 5A20  
                                       fputs@c 0019                                         fputs@i 001A  
                                 __pdataCOMRAM 0048                                         fputs@s 0015  
                                    ??_isdigit 000E                                      ??_scalbnf 0060  
                                 __mediumconst 7D80                                      ??_isspace 000E  
                                       powf@s2 018C                                         powf@t1 0180  
                                       powf@t2 011C                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         powf@y1 0128  
                                       tblptru 000FF8                                         powf@ax 0170  
                                       powf@is 0194                                         powf@hx 0160  
                                       powf@hy 017C                                         powf@ix 01A8  
                                       powf@iy 0190                                         powf@sn 0184  
                                       putch@c 0001                               __end_of_vfprintf 53D0  
                                       utoa@fp 0027                                         sqrtf@i 0081  
                                       sqrtf@m 0095                                         sqrtf@q 0089  
                                       sqrtf@r 0099                                         sqrtf@s 007D  
                                       sqrtf@t 008D                                         sqrtf@x 0070  
                                       sqrtf@z 0091                                      ??_sprintf 003B  
                      __end_of_TMR1_WriteTimer 5A74                                      ??_strncmp 0012  
                         ?_EUSART_Transmit_ISR 0001                  __size_of_INTERRUPT_Initialize 0012  
                                   ___flge@ff1 0068                                     ___flge@ff2 006C  
                             ?_TMR1_Initialize 0001                                   ___xxtofl@arg 0016  
                                 ___xxtofl@exp 0015               ??_INTERRUPT_InterruptManagerHigh 0003  
              ?_INTERRUPT_InterruptManagerHigh 0001                              _SYSTEM_Initialize 598E  
                                 ___xxtofl@val 000C                                     __accesstop 0060  
                      __end_of__initialization 521A                                  ?i1_SPI1_Close 0001  
                                    ?_INT0_ISR 0001                                     ___flneg@f1 000C  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                                   ___fltol@f1 00B2           __end_of_EUSART_SetTxInterruptHandler 5B30  
        __size_of_EUSART_SetTxInterruptHandler 000A                   _EUSART_SetTxInterruptHandler 5B26  
                          __end_of_AD9833_Init 561A                                 __pcstackCOMRAM 0001  
                                 __pidataBANK0 5B86                                  __end_of_lg2_h 7DAD  
                                __end_of_lg2_l 7DA9                            ??_SYSTEM_Initialize 000E  
                      __end_of_TMR3_StartTimer 5AE0                                  __end_of_fabsf 572E  
                                    ?_TMR1_ISR 0001                                      ?_TMR3_ISR 0001  
                                __end_of_ivln2 7D9D                                  __end_of_fputc 5114  
                                __end_of_fputs 56C6                              ??_SPI1_Initialize 000C  
                                __end_of_two24 7DE9                                  __end_of_putch 5BB6  
                                __end_of_sqrtf 31AC                                     __end_of_L1 7DDD  
                                   __end_of_L2 7DD9                                     __end_of_L3 7DD5  
                                   __end_of_L4 7DD1                                     __end_of_L5 7DCD  
                                   __end_of_L6 7DC9                                     __end_of_P1 7DC5  
                                   __end_of_P2 7DC1                                     __end_of_P3 7DBD  
                                   __end_of_P4 7DB9                                     __end_of_P5 7DB5  
                       __end_of_PMD_Initialize 5A3C                                     __end_of_bp 7DF5  
                                   __end_of_cp 7DA1                    __end_of_AD9833_SetFrequency 4870  
                           _spi1_configuration 7DE9                                  ?i2_SPI1_Start 0001  
                                  ?_Parse_Data 0001                           _eusartRxStatusBuffer 00D5  
              ??_EUSART_SetOverrunErrorHandler 000E                                        ??_fabsf 0010  
                             ?_TMR0_StartTimer 0001                                        ??_fputc 0010  
                    __end_of_SYSTEM_Initialize 59B4                                        ??_fputs 0019  
                        ??_EUSART_Transmit_ISR 0003                        __end_of_TMR3_WriteTimer 5A58  
                                      ??_putch 000C                                        ??_sqrtf 0074  
                                   __pbssBANK0 00D5                                     __pbssBANK1 01BC  
                                   __pbssBANK2 0200                           __end_of_EUSART_Write 55DE  
                             ?_TMR3_Initialize 0001                                 ??i1_SPI1_Close 0003  
                                   ??_INT0_ISR 0005                    __size_of_EUSART_Receive_ISR 00B2  
                               _SPI1_WriteWord 5964                                        ?___flge 0068  
                ?_EUSART_SetTxInterruptHandler 000C               _EUSART_TxDefaultInterruptHandler 00F3  
                      __size_of_TMR0_StopTimer 0004                                        ?___lmul 000C  
                                      ?___wmul 000C                               ?_TMR1_StartTimer 0001  
                                   ??_TMR1_ISR 0005                                __CFG_PPS1WAY$ON 000000  
                                   ??_TMR3_ISR 0005                               ?_TMR0_WriteTimer 000C  
                               ___lmul@product 0014                   ??_EUSART_DefaultErrorHandler 0003  
                                 ??_SPI1_Close 000C                                ?_PMD_Initialize 0001  
                            ?i1_TMR1_StopTimer 0001                                 ??i2_SPI1_Start 0001  
                                      ?_strlen 000C                        __size_of_TMR1_StopTimer 0004  
                                 ??_SPI1_Start 000C                            _EUSART_Write_String 56C6  
                                _eusartRxCount 00EC                                        _INT0PPS 000EA1  
                           ??i1_TMR1_StopTimer 0003                                      ?___xxtofl 000C  
                                      _SP1BRGH 000F9C                                        _SP1BRGL 000F9B  
                                      _OSCCON1 000ED8                                        _OSCCON3 000EDA  
                           __size_of_vfpfcnvrt 03E6                  __size_of_EUSART_RxDataHandler 0034  
                                      _OSCTUNE 000EDD                                        _SSP1ADD 000F93  
                                      _SLRCONA 000F0E                                        _SLRCONB 000F16  
                                      _SLRCONC 000F1E                                        _SSP1BUF 000F92  
                     ??_EUSART_SetErrorHandler 000E                         __size_ofi1_TMR0_Reload 002E  
                             ?_TMR1_WriteTimer 0003                               ___lomod@dividend 000C  
                                  _AD9833_Init 55DE                         __end_of_SPI1_WriteWord 598E  
                         ?_EUSART_Write_String 000D                        __size_of_TMR3_StopTimer 0004  
                           __end_of_SPI1_Close 5BA0                                        __Hparam 0000  
          __size_of_EUSART_DefaultErrorHandler 0006                            __size_of_Parse_Data 0526  
                           __end_of_SPI1_Start 5B7E                                        __Lparam 0000  
                   __CFG_RSTOSC$HFINTOSC_64MHZ 000000                                __size_of___flge 00D2  
                                      ___aodiv 45E8                                        ___fladd 38E4  
                                      ___aomod 4AEA                                        ___fldiv 3BF0  
                                      ___flneg 5854                                __size_of___lmul 0056  
                                      ___flmul 3592                               ?_TMR3_StartTimer 0001  
                                      ___flsub 551A                                        ___fltol 4DAE  
                              __size_of___wmul 0026                                        ___lodiv 4CE0  
                                      ___lomod 4F1C                                      ?_vfprintf 0097  
                         __size_of_TMR0_Reload 002E                                        __pcinit 51AA  
                                      __ramtop 0800                                        __ptext0 5318  
                                      __ptext1 5B98                                        __ptext2 598E  
                                      __ptext3 561A                                        __ptext4 5654  
                                      __ptext5 57C6                                        __ptext6 59DA  
                                      __ptext7 5A20                                        __ptext8 52A4  
                                      __ptext9 5A90                                __size_of_strlen 002A  
                                    _T1CONbits 000FCF                          _OSCILLATOR_Initialize 5A90  
                                 __size_of_abs 0032                                   __size_of_pad 0096  
                                      _isdigit 57F6                                        _ivln2_h 7DF5  
                                      _ivln2_l 7D95                                     ??___xxtofl 0010  
                                    _T3CONbits 000FC9                                        _scalbnf 40C2  
                     ??_PIN_MANAGER_Initialize 000C                                        _isspace 5562  
                                      atoi@neg 0019                                        _rx_data 01E4  
                                      atol@neg 0021                     __size_of_SYSTEM_Initialize 0026  
                                      _sprintf 5426                                        _strncmp 4FCA  
                               __pintcode_body 5478                         __size_ofi2_TMR0_Reload 002E  
                         end_of_initialization 521A                               ?_TMR3_WriteTimer 0003  
        __end_of_EUSART_SetOverrunErrorHandler 5B44         __size_of_EUSART_SetOverrunErrorHandler 000A  
                _EUSART_SetOverrunErrorHandler 5B3A                                        fputc@fp 000E  
                        ??_EUSART_Write_String 000F                                ?_SPI1_WriteWord 000C  
                                __Lmediumconst 7D80                                        int_func 5478  
                                      fputs@fp 0017                        AD9833_SetFrequency@freq 00CD  
                            _EUSART_Initialize 5228                                        powf@p_h 019C  
                                      powf@p_l 0164                                        powf@s_h 016C  
                           ?_EUSART_Initialize 0001                                        powf@t_h 0168  
                                      powf@s_l 0130                                        powf@t_l 0134  
                                      powf@z_h 0120                                        powf@z_l 0124  
                            __end_of_vfpfcnvrt 3592                                        postdec1 000FE5  
                                      postdec2 000FDD                                     _temp_cycle 004C  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                                  i1_TMR0_Reload 58B0  
                                   ??_vfprintf 0039                                        sqrtf@ix 009D  
                        __CFG_WDTCPS$WDTCPS_31 000000                                        strlen@a 000E  
                                      strlen@s 000C                            ??_EUSART_Initialize 000E  
               ??_EUSART_SetTxInterruptHandler 000E                           __end_ofi1_SPI1_Close 5BA8  
                                    _PORTAbits 000F8D                                      _PORTBbits 000F8E  
                                    _PORTCbits 000F8F                                    ___fladd@grs 001B  
                                ___xxtofl@sign 0014                                      _TRISCbits 000F8A  
                        __size_of_EUSART_Write 003E                                    ___fldiv@grs 0077  
                                  ___fldiv@rem 0070                               __CFG_FEXTOSC$OFF 000000  
              __size_of_EUSART_SetErrorHandler 000A                                    ___flmul@grs 0029  
                    __end_of_EUSART_Initialize 52A4                                _SPI1_Initialize 59DA  
                         __end_ofi2_SPI1_Start 5B86                              __size_of_INT0_ISR 0032  
                         _timer0ReloadVal16bit 0232                                 _TMR0_StopTimer 5BB0  
                               ?i1_TMR0_Reload 0001                                 _break_duration 0040  
                 __end_of_INTERRUPT_Initialize 5AD0                                  i2_TMR0_Reload 590C  
                               __end_of___flge 4CE0                                 __end_of___lmul 5426  
           __end_of_EUSART_DefaultErrorHandler 5B98                     _EUSART_DefaultErrorHandler 5B92  
                                  vfpfcnvrt@ap 0076                                    vfpfcnvrt@fp 0072  
                                  vfpfcnvrt@ll 0087                                 __end_of___wmul 59DA  
                                __pidataCOMRAM 5B1A                                   _EUSART_Write 55A0  
                            __size_of_TMR1_ISR 0016                              __size_of_TMR3_ISR 002E  
                               _TMR1_StopTimer 5B98                         ?_OSCILLATOR_Initialize 0001  
                                 ??_Parse_Data 003B                                 __end_of_strlen 5964  
                          start_initialization 51AA                                ___lodiv@divisor 0014  
                              ___lodiv@counter 0024                                 _temp_frequency 00E1  
                     __size_of_TMR0_Initialize 0030                __size_of_PIN_MANAGER_Initialize 0074  
                                  __end_of_lg2 7DB1                                    __end_of_abs 5794  
                                  __end_of_pad 51AA                                    __end_of_ovt 7DA5  
 EUSART_SetRxInterruptHandler@interruptHandler 000C   EUSART_SetTxInterruptHandler@interruptHandler 000C  
                               _TMR3_StopTimer 5BA0                         __end_of_TMR0_StopTimer 5BB4  
               ?_EUSART_SetOverrunErrorHandler 000C                               __CFG_LPBOREN$OFF 000000  
                     __size_of_TMR1_Initialize 003A                             __end_of_Parse_Data 2D80  
                                  vfprintf@fmt 0099                     _EUSART_FramingErrorHandler 01FC  
                                     ??___flge 0035                               ??_PMD_Initialize 000C  
                                     ??___lmul 0014                                 ?i2_TMR0_Reload 0001  
                                     ??___wmul 0010                         _EUSART_SetErrorHandler 5B4E  
                       __end_of_TMR1_StopTimer 5B9C                                    __pdataBANK0 00F6  
                                     ??_strlen 000E                                      ___fladd@a 0010  
                                    ___fladd@b 000C                                      ___fldiv@a 006C  
                                    ___fldiv@b 0068                    __end_of_EUSART_Transmit_ISR 590C  
                                    ___flmul@a 0020                                      ___flmul@b 001C  
                                  __pbssCOMRAM 003C                                      ___flsub@a 0064  
                                    ___flsub@b 0060                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                               ___aodiv@dividend 000C  
                            __end_ofsqrtf@tiny 7D95                              __size_of___xxtofl 0140  
                      __end_of_SPI1_Initialize 59FE                   __size_of_AD9833_SetFrequency 0140  
                       __end_of_TMR3_StopTimer 5BA4                              i1_TMR0_StartTimer 5AFE  
                                 ?_AD9833_Init 0001                     __end_of_EUSART_Receive_ISR 4F1C  
                    __size_ofi1_TMR1_StopTimer 0004                     __size_of_EUSART_Initialize 007C  
                           ?i1_TMR0_StartTimer 0001               _EUSART_RxDefaultInterruptHandler 01FE  
                                    _atoi$2070 001F                                      _atoi$2071 001D  
                                    _atoi$2069 001B                                      __pnvBANK0 00EF  
                                    __pnvBANK1 01F8                                      __pnvBANK2 0232  
                                    _atol$2080 0025                                      _atol$2078 0023  
                                    _atol$2079 0027                       __size_of_TMR0_StartTimer 000E  
                              ?_TMR0_StopTimer 0001                   __end_of_EUSART_RxDataHandler 5762  
                              ??i1_TMR0_Reload 0005                         _PIN_MANAGER_Initialize 52A4  
                                    _dtoa$1572 0060                       __size_of_TMR3_Initialize 003A  
                          ??i1_TMR0_StartTimer 0003                                      __pintcode 0008  
                        __size_ofi1_SPI1_Close 0004                                  __pmediumconst 7D80  
                                     ?___aodiv 000C                                       ?___fladd 000C  
                                     ?___aomod 000C                                       ?___fldiv 0068  
                             ___aodiv@quotient 001E                                       ?___flneg 000C  
                                     ?___flmul 001C                                       ?___flsub 0060  
                                     ?___fltol 00B2                                       ?___lodiv 000C  
                                     ?___lomod 000C                                   _eusartRxHead 0044  
                              ?_TMR1_StopTimer 0001                                   _eusartTxHead 0046  
                                 _eusartRxTail 00ED                                   _eusartTxTail 0045  
                                  __pintcodelo 0018                   AD9833_SetFrequency@frequency 00BC  
                            i1_TMR0_WriteTimer 5B62                              __size_of_vfprintf 0056  
                      _eusartTxBufferRemaining 00F5                                ___lomod@divisor 0014  
                                     _BAUD1CON 000F9F                             ?i1_TMR0_WriteTimer 0003  
                                    fabsf@F463 00DD                                ___lomod@counter 001C  
                     __size_of_TMR1_StartTimer 0004                                       ?_isdigit 000C  
                                     ?_scalbnf 0035                       __size_of_TMR0_WriteTimer 000A  
                                     ?_isspace 000C                                      _frequency 00F6  
                             ??_SPI1_WriteWord 000E                      __end_ofi1_TMR0_StartTimer 5B0C  
                               __size_of_fabsf 0034                            ??i1_TMR0_WriteTimer 0005  
                                     _T0CKIPPS 000EA4                                       ?_sprintf 009D  
                               __size_of_fputc 00A0                                 __size_of_fputs 0038  
                                     ?_strncmp 000C                          __size_ofi2_SPI1_Start 0008  
                               __size_of_putch 0002                                 __size_of_sqrtf 042C  
                         _INTERRUPT_Initialize 5ABE                                ?_TMR3_StopTimer 0001  
                                    _powf$2520 0158                                      _powf$2521 0148  
                                    _powf$2522 0198                                      _powf$2530 010C  
                                    _powf$2523 0138                                      _powf$2531 0110  
                                    _powf$2532 0114                                      _powf$2524 0100  
                                    _powf$2533 0118                                      _powf$2525 0104  
                                    _powf$2526 015C                                      _powf$2519 01A4  
                                    _powf$2527 013C                                      _powf$2528 0140  
                                    _powf$2529 0108                              ??_TMR0_Initialize 000C  
                               _eusartTxBuffer 01BC                                       _INT0_ISR 5794  
                               ___wmul@product 0010                                   i1_SPI1_Close 5BA4  
       EUSART_SetErrorHandler@interruptHandler 000C                                       _IPR0bits 000EBA  
                                     _PIE0bits 000EC2                                       _IPR3bits 000EBD  
                                     _IPR4bits 000EBE                                       _PIE3bits 000EC5  
                                     _PIE4bits 000EC6                              _eusartRxLastError 00EB  
                          __CFG_BORV$VBOR_2P45 000000                              i2_TMR0_StartTimer 5B0C  
                     __size_of_TMR1_WriteTimer 001C                                ??i2_TMR0_Reload 0003  
                                     i1u624_28 4EA2                                       i1u624_29 4EB8  
                                     i1u618_20 5B02                                       i1u626_28 4ED0  
                                     i1u626_29 4EE6                                       i1u628_28 4EFC  
                                     _PIR0bits 000ECA                                       i1u666_28 005A  
              ??_EUSART_SetFramingErrorHandler 000E                                       _PIR3bits 000ECD  
                                     i1u669_28 0072                                       _PIR4bits 000ECE  
                                     i2u655_40 5B10                                  ??_TMR0_Reload 000E  
                           ?i2_TMR0_StartTimer 0001                                       _SSP1CON1 000F96  
    __end_of_EUSART_DefaultOverrunErrorHandler 5B92     __size_of_EUSART_DefaultOverrunErrorHandler 0006  
          ??_EUSART_DefaultOverrunErrorHandler 0003             ?_EUSART_DefaultOverrunErrorHandler 0001  
            _EUSART_DefaultOverrunErrorHandler 5B8C                      __end_ofi1_TMR0_WriteTimer 5B6C  
                                     _TMR1_ISR 5AA8                                       _TMR3_ISR 5882  
                                     _SSP1STAT 000F95                                     powf@yisint 0150  
                                    _vfpfcnvrt 31AC                              ??_TMR1_Initialize 000C  
                          ??i2_TMR0_StartTimer 0001                              ___wmul@multiplier 000C  
                                 i2_SPI1_Start 5B7E                       __size_of_TMR3_StartTimer 0010  
                            i2_TMR0_WriteTimer 5B6C                                   _isspace$2096 0012  
                  __end_of_EUSART_Write_String 56FA                                     vfpfcnvrt@c 0086  
                             ?_SPI1_Initialize 0001                             ?i2_TMR0_WriteTimer 0001  
                            ___lmul@multiplier 000C                                      copy_data0 51BE  
                                    copy_data1 51DE                          ?_INTERRUPT_Initialize 0001  
                                _temp_packages 0052                      __end_ofi2_TMR0_StartTimer 5B1A  
                          ??i2_TMR0_WriteTimer 0003                                       __Hrparam 0000  
                     __size_of_TMR3_WriteTimer 001C                                     vfprintf@ap 009B  
                                     __Lrparam 0000                                     vfprintf@fp 0097  
                           __CFG_BOREN$SBORDIS 000000                        ??_OSCILLATOR_Initialize 000C  
                          _EUSART_ErrorHandler 01F8                              ??_TMR0_StartTimer 000C  
                             __size_of___aodiv 0148                               __size_of___fladd 030C  
                             __size_of___aomod 0124                               __size_of___fldiv 028A  
                             __size_of___flneg 002E                               __size_of___flmul 0352  
                             __size_of___flsub 0048                               __size_of___fltol 00BC  
                  ?_EUSART_DefaultErrorHandler 0001                               __size_of___lodiv 00CE  
                             __size_of___lomod 00AE                                     ?_vfpfcnvrt 0072  
                              ___aodiv@divisor 0014                              ??_TMR3_Initialize 000C  
                          __end_of_TMR0_Reload 5854                                ___aodiv@counter 001C  
                    __end_ofi2_TMR0_WriteTimer 5B76                                     sprintf@fmt 009F  
                                     ___xxtofl 4870                                     _T0CON0bits 000FD5  
              ??_INTERRUPT_InterruptManagerLow 0005                              i2_TMR3_StartTimer 5AE0  
                             __size_of_isdigit 0030                               __size_of_scalbnf 01E8  
                         _EUSART_RxDataHandler 572E                               __size_of_isspace 003E  
                                     __ptext10 5ABE                                       __ptext11 5228  
                                     __ptext20 537A                                       __ptext12 5B26  
                   __size_ofi1_TMR0_StartTimer 000E                                       __ptext21 31AC  
                                     __ptext13 5B30                                       __ptext30 54CA  
                                     __ptext22 42AA                                       __ptext14 5B3A  
                                     __ptext31 5114                                       __ptext23 4F1C  
                                     __ptext15 5B44                                       __ptext40 57F6  
                                     __ptext32 593A                                       __ptext24 4CE0  
                                     __ptext16 5B4E                                       __ptext41 59B4  
                                     __ptext33 568E                                       __ptext25 4FCA  
                                     __ptext17 5B76                                       __ptext50 00B6  
                                     __ptext42 5AF0                                       __ptext34 5074  
                                     __ptext26 3E7A                                       __ptext18 285A  
                                     __ptext51 2D80                                       __ptext43 5826  
                                     __ptext35 5BB4                                       __ptext27 5762  
                                     __ptext19 5426                                       __ptext60 5854  
                                     __ptext52 59FE                                       __ptext44 5B58  
                                     __ptext36 4460                                       __ptext28 4AEA  
                                     __ptext61 3BF0                                       __ptext53 4C0E  
                                     __ptext45 5B9C                                       __ptext37 53D0  
                                     __ptext29 45E8                                       __ptext70 5794  
                                     __ptext62 4DAE                                       __ptext54 40C2  
                                     __ptext46 56C6                                       __ptext38 49B0  
                                     __ptext71 5AFE                                       __ptext63 5964  
                                     __ptext55 3592                                       __ptext47 55A0  
                                     __ptext39 5562                                       __ptext80 5B8C  
                                     __ptext72 58B0                                       __ptext56 56FA  
                                     __ptext48 55DE                                       __ptext81 5BB6  
                                     __ptext73 5B62                                       __ptext65 5882  
                                     __ptext57 4870                                       __ptext49 4730  
                                     __ptext90 5B7E                                       __ptext82 5B92  
                                     __ptext74 5BA4                                       __ptext66 5BA0  
                                     __ptext58 551A                                       __ptext91 5BB0  
                                     __ptext83 572E                                       __ptext75 58DE  
                                     __ptext67 5AD0                                       __ptext59 38E4  
                                     __ptext92 0000                                       __ptext76 4E6A  
                                     __ptext68 5A3C                                       __ptext85 5AE0  
                                     __ptext77 5BA8                                       __ptext69 5AA8  
                                     __ptext86 5A74                                       __ptext78 5A58  
                                     __ptext87 5B0C                                       __ptext79 5BAC  
                                     __ptext88 590C                                       __ptext89 5B6C  
                           ?i2_TMR3_StartTimer 0001                                   _SSP1CON1bits 000F96  
                            ??_TMR1_StartTimer 0003                               __size_of_sprintf 0052  
                      TMR0_WriteTimer@timerVal 000C                              ??_TMR0_WriteTimer 000E  
                             __size_of_strncmp 00AA                        TMR3_WriteTimer@timerVal 0003  
                             i1_TMR1_StopTimer 5BA8                                       _packages 0050  
                                __size_of_atoi 013A                                  __size_of_atol 0188  
                                __size_of_ctoa 0050                                  __size_of_main 0062  
                                __size_of_dtoa 0248                                  __size_of_nanf 0022  
                          ??i2_TMR3_StartTimer 0003                                  __size_of_powf 27A4  
                                __size_of_utoa 01B6                           __size_of_AD9833_Init 003C  
                         __CFG_WDTCWS$WDTCWS_7 000000                        ?_EUSART_SetErrorHandler 000C  
                         powf@__xc8_float_word 01B8                                     _RC1STAbits 000F9D  
                            i2_TMR3_WriteTimer 5A74  EUSART_SetOverrunErrorHandler@interruptHandler 000C  
                    i1TMR0_WriteTimer@timerVal 0003                       _AD9833_SetFrequency$2518 00C5  
                          _AD9833_SetFrequency 4730                                       int$flags 0054  
                   __size_ofi1_TMR0_WriteTimer 000A                             ?i2_TMR3_WriteTimer 0001  
                                     _vfprintf 537A          __end_of_EUSART_SetFramingErrorHandler 5B4E  
       __size_of_EUSART_SetFramingErrorHandler 000A                  _EUSART_SetFramingErrorHandler 5B44  
                            ??_TMR1_WriteTimer 0005                               ___aomod@dividend 000C  
                    __end_ofi2_TMR3_StartTimer 5AF0                            ??i2_TMR3_WriteTimer 0003  
                                   _INTCONbits 000FF2                          ?_EUSART_RxDataHandler 0001  
                                     isdigit@c 000C                         ??_INTERRUPT_Initialize 000C  
                         ?_AD9833_SetFrequency 00BC                                       scalbnf@n 0039  
                                     scalbnf@u 0064                                       scalbnf@x 0035  
                                     scalbnf@y 0068                              ??_TMR3_StartTimer 0005  
                                     intlevel1 0000                                       intlevel2 0000  
                                    sprintf@ap 00A7                               ??_TMR0_StopTimer 0001  
                                    sqrtf@tiny 7D91                                       isspace@c 000C  
                      ?_PIN_MANAGER_Initialize 0001                     __size_ofi2_TMR0_StartTimer 000E  
               __end_of_EUSART_SetErrorHandler 5B58                              __CFG_CLKOUTEN$OFF 000000  
                    __end_ofi2_TMR3_WriteTimer 5A90                                      strncmp@_l 000C  
                                    strncmp@_r 000E           __end_of_EUSART_SetRxInterruptHandler 5B3A  
        __size_of_EUSART_SetRxInterruptHandler 000A                   _EUSART_SetRxInterruptHandler 5B30  
                             ??_TMR1_StopTimer 000C                                    _TMR0_Reload 5826  
                           _EUSART_Receive_ISR 4E6A  EUSART_SetFramingErrorHandler@interruptHandler 000C  
                              ___aomod@divisor 0014                                    ??_vfpfcnvrt 0078  
                              ___aomod@counter 001C                              ??_TMR3_WriteTimer 0005  
                                   _SPI1_Close 5B9C                        EUSART_Write_String@data 000D  
       __end_of_INTERRUPT_InterruptManagerHigh 54CA        __size_of_INTERRUPT_InterruptManagerHigh 54C2  
               _INTERRUPT_InterruptManagerHigh 0008                                       sprintf@f 00A9  
                                     sprintf@s 009D                            ?_EUSART_Receive_ISR 0001  
                                   _SPI1_Start 5B76                     __size_ofi2_TMR0_WriteTimer 000A  
                                   _SSP1DATPPS 000EB8                                     _SSP1CLKPPS 000EB7  
                              _TMR0_Initialize 57C6                               ??_TMR3_StopTimer 0003  
                                     strncmp@l 0013                                       strncmp@n 0010  
                                     strncmp@r 0015                          ??_AD9833_SetFrequency 00C0  
                                ___fladd@signs 0018          __end_of_INTERRUPT_InterruptManagerLow 00B2  
       __size_of_INTERRUPT_InterruptManagerLow 009A                  _INTERRUPT_InterruptManagerLow 0018  
                           EUSART_Write@txData 000C                   __size_of_EUSART_Transmit_ISR 002E  
                                 ___aodiv@sign 001D                 __end_of_PIN_MANAGER_Initialize 5318  
                        sqrtf@__xc8_float_word 0085                                   ___fladd@aexp 0019  
                                 ___fladd@bexp 001A                           ??_EUSART_Receive_ISR 0005  
                                  _rx_data_end 00EE                           EUSART_Write_String@i 000F  
                                 ___aomod@sign 001D                                _TMR1_Initialize 5654  
                   __end_of_spi1_configuration 7DED  
